AMD HSA Code Object
  Version 1.0
HSAIL 
  Version: 1.0
  Profile: FULL  Machine model: LARGE  Default float rounding: ZERO
ISA
  Vendor AMD  Arch AMDGPU  Version 7:0:0
Producer 'AMD HSA Runtime Finalizer' Version 1:0
Producer options
  '-hsa_call_convention=0 -dump-all'

Segments (total 2):
  Segment (0)
    Type: GLOBAL_PROGRAM     Flags: 0x00000006
    Image Size: 72     Memory Size: 72     Align: 8     VAddr: 0
  Segment (1)
    Type: CODE_AGENT     Flags: 0x00000005
    Image Size: 73700     Memory Size: 73700     Align: 256     VAddr: 256

Data Sections (total 2):
  Section .hsadata_global_program (Index 4)
    Type: 1     Flags: 0x00100003
    Size:  72     Address: 0     Align: 8
    Data:
      0000000: 0000 0000 0000 0000 0000 0000 0000 0000  ................
      0000010: 0000 0000 0000 0000 0000 0000 0000 0000  ................
      0000020: 0000 0000 0000 0000 0000 0000 0000 0000  ................
      0000030: 0000 0000 0000 0000 0000 0000 0000 0000  ................
      0000040: 0000 0000 0000 0000 0000 0000 0000 0000  ........
  Section .hsatext (Index 5)
    Type: 1     Flags: 0x00c00007
    Size:  73700     Address: 256     Align: 256

Relocation Sections (total 0):

Symbols (total 19):
  Symbol &ZZ17Stencil_Hcc_Shfl8RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__819__cxxamp_trampolineEPfiiS4_iiS4_iiiii (Index 1):
    Section: .hsatext     Section Offset: 0
    VAddr: 256     Size: 19300     Alignment: 256
    Kind: KERNEL     Linkage: PROGRAM     Definition: TRUE
  Symbol &ZZ19Stencil_Hcc_Shfl4_2RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__719__cxxamp_trampolineEPfiiS4_iiS4_iiiii (Index 2):
    Section: .hsatext     Section Offset: 19456
    VAddr: 19712     Size: 14752     Alignment: 256
    Kind: KERNEL     Linkage: PROGRAM     Definition: TRUE
  Symbol &ZZ17Stencil_Hcc_Shfl4RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__619__cxxamp_trampolineEPfiiS4_iiS4_iiiii (Index 3):
    Section: .hsatext     Section Offset: 34304
    VAddr: 34560     Size: 10280     Alignment: 256
    Kind: KERNEL     Linkage: PROGRAM     Definition: TRUE
  Symbol &ZZ18Stencil_Hcc_Shfl4xRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__519__cxxamp_trampolineEPfiiS4_iiS4_iiiii (Index 4):
    Section: .hsatext     Section Offset: 44800
    VAddr: 45056     Size: 11700     Alignment: 256
    Kind: KERNEL     Linkage: PROGRAM     Definition: TRUE
  Symbol &ZZ18Stencil_Hcc_Shfl2xRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__419__cxxamp_trampolineEPfiiS4_iiS4_iiiii (Index 5):
    Section: .hsatext     Section Offset: 56576
    VAddr: 56832     Size: 5508     Alignment: 256
    Kind: KERNEL     Linkage: PROGRAM     Definition: TRUE
  Symbol &ZZ17Stencil_Hcc_Shfl2RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__319__cxxamp_trampolineEPfiiS4_iiS4_iiiii (Index 6):
    Section: .hsatext     Section Offset: 62208
    VAddr: 62464     Size: 5408     Alignment: 256
    Kind: KERNEL     Linkage: PROGRAM     Definition: TRUE
  Symbol &ZZ16Stencil_Hcc_ShflRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__219__cxxamp_trampolineEPfiiS4_iiS4_iiiii (Index 7):
    Section: .hsatext     Section Offset: 67840
    VAddr: 68096     Size: 2980     Alignment: 256
    Kind: KERNEL     Linkage: PROGRAM     Definition: TRUE
  Symbol &ZZ14Stencil_Hcc_SmRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__119__cxxamp_trampolineEPfiiS4_iiS4_iiiii (Index 8):
    Section: .hsatext     Section Offset: 70912
    VAddr: 71168     Size: 1628     Alignment: 256
    Kind: KERNEL     Linkage: PROGRAM     Definition: TRUE
  Symbol &ZZ11Stencil_HccRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__019__cxxamp_trampolineEPfiiS4_iiS4_iiiii (Index 9):
    Section: .hsatext     Section Offset: 72704
    VAddr: 72960     Size: 996     Alignment: 256
    Kind: KERNEL     Linkage: PROGRAM     Definition: TRUE
  Symbol &hcc_static_group_segment_size (Index 10):
    Section: .hsadata_global_program     Section Offset: 0
    VAddr: 0     Size: 4     Alignment: 8
    Kind: VARIABLE     Linkage: PROGRAM     Definition: TRUE
    Allocation: PROGRAM     Segment: GLOBAL     Constant: TRUE
  Symbol &hcc_dynamic_group_segment_size (Index 11):
    Section: .hsadata_global_program     Section Offset: 4
    VAddr: 4     Size: 4     Alignment: 8
    Kind: VARIABLE     Linkage: PROGRAM     Definition: TRUE
    Allocation: PROGRAM     Segment: GLOBAL     Constant: TRUE
  Symbol &signal_Xmalloc (Index 12):
    Section: .hsadata_global_program     Section Offset: 8
    VAddr: 8     Size: 8     Alignment: 8
    Kind: VARIABLE     Linkage: PROGRAM     Definition: TRUE
    Allocation: PROGRAM     Segment: GLOBAL     Constant: TRUE
  Symbol &signal_malloc (Index 13):
    Section: .hsadata_global_program     Section Offset: 16
    VAddr: 16     Size: 8     Alignment: 8
    Kind: VARIABLE     Linkage: PROGRAM     Definition: TRUE
    Allocation: PROGRAM     Segment: GLOBAL     Constant: TRUE
  Symbol &ptr_a_address (Index 14):
    Section: .hsadata_global_program     Section Offset: 24
    VAddr: 24     Size: 8     Alignment: 8
    Kind: VARIABLE     Linkage: PROGRAM     Definition: TRUE
    Allocation: PROGRAM     Segment: GLOBAL     Constant: TRUE
  Symbol &ptr_b_address (Index 15):
    Section: .hsadata_global_program     Section Offset: 32
    VAddr: 32     Size: 8     Alignment: 8
    Kind: VARIABLE     Linkage: PROGRAM     Definition: TRUE
    Allocation: PROGRAM     Segment: GLOBAL     Constant: TRUE
  Symbol &ptr_c_address (Index 16):
    Section: .hsadata_global_program     Section Offset: 40
    VAddr: 40     Size: 8     Alignment: 8
    Kind: VARIABLE     Linkage: PROGRAM     Definition: TRUE
    Allocation: PROGRAM     Segment: GLOBAL     Constant: TRUE
  Symbol &ptr_x_address (Index 17):
    Section: .hsadata_global_program     Section Offset: 48
    VAddr: 48     Size: 8     Alignment: 8
    Kind: VARIABLE     Linkage: PROGRAM     Definition: TRUE
    Allocation: PROGRAM     Segment: GLOBAL     Constant: TRUE
  Symbol &ptr_y_address (Index 18):
    Section: .hsadata_global_program     Section Offset: 56
    VAddr: 56     Size: 8     Alignment: 8
    Kind: VARIABLE     Linkage: PROGRAM     Definition: TRUE
    Allocation: PROGRAM     Segment: GLOBAL     Constant: TRUE
  Symbol &ptr_z_address (Index 19):
    Section: .hsadata_global_program     Section Offset: 64
    VAddr: 64     Size: 8     Alignment: 8
    Kind: VARIABLE     Linkage: PROGRAM     Definition: TRUE
    Allocation: PROGRAM     Segment: GLOBAL     Constant: TRUE

AMD Kernel Code for &ZZ17Stencil_Hcc_Shfl8RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__819__cxxamp_trampolineEPfiiS4_iiS4_iiiii: 
  amd_kernel_code_version_major                                = 1
  amd_kernel_code_version_minor                                = 1
  amd_machine_kind                                             = AMDGPU
  amd_machine_version_major                                    = 0
  amd_machine_version_minor                                    = 0
  amd_machine_version_stepping                                 = 0
  kernel_code_entry_byte_offset                                = 256
  max_scratch_backing_memory_byte_size                         = 0
  COMPUTE_PGM_RSRC1 (0xac022800):
    granulated_workitem_vgpr_count                             = 40
    granulated_wavefront_sgpr_count                            = 8
    priority                                                   = 0
    float_round_mode_32                                        = NEAREST_EVEN
    float_round_mode_16_64                                     = NEAREST_EVEN
    float_denorm_mode_32                                       = FLUSH_SOURCE_OUTPUT
    float_denorm_mode_16_64                                    = FLUSH_NONE
    enable_dx10_clamp                                          = TRUE
    enable_ieee_mode                                           = TRUE
  COMPUTE_PGM_RSRC2 (0x99000000):
    user_sgpr_count                                            = 8
    enable_sgpr_workgroup_id_x                                 = TRUE
    enable_sgpr_workgroup_id_y                                 = TRUE
    enable_vgpr_workitem_id                                    = X, Y
    granulated_lds_size                                        = 0
  KERNEL_CODE_PROPERTIES (0xa000b000):
    enable_sgpr_private_segment_buffer                         = TRUE
    enable_sgpr_dispatch_ptr                                   = TRUE
    enable_sgpr_kernarg_segment_ptr                            = TRUE
    private_element_size                                       = DWORD (4 bytes)
    is_ptr64                                                   = TRUE
  kernarg_segment_byte_size                                    = 64
  wavefront_sgpr_count                                         = 66
  workitem_vgpr_count                                          = 161
  kernarg_segment_alignment                                    = 16 (4)
  group_segment_alignment                                      = 16 (4)
  private_segment_alignment                                    = 16 (4)
  wavefront_size                                               = 64 (6)

AMD Kernel Code for &ZZ19Stencil_Hcc_Shfl4_2RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__719__cxxamp_trampolineEPfiiS4_iiS4_iiiii: 
  amd_kernel_code_version_major                                = 1
  amd_kernel_code_version_minor                                = 1
  amd_machine_kind                                             = AMDGPU
  amd_machine_version_major                                    = 0
  amd_machine_version_minor                                    = 0
  amd_machine_version_stepping                                 = 0
  kernel_code_entry_byte_offset                                = 256
  max_scratch_backing_memory_byte_size                         = 0
  COMPUTE_PGM_RSRC1 (0xac011c00):
    granulated_workitem_vgpr_count                             = 28
    granulated_wavefront_sgpr_count                            = 4
    priority                                                   = 0
    float_round_mode_32                                        = NEAREST_EVEN
    float_round_mode_16_64                                     = NEAREST_EVEN
    float_denorm_mode_32                                       = FLUSH_SOURCE_OUTPUT
    float_denorm_mode_16_64                                    = FLUSH_NONE
    enable_dx10_clamp                                          = TRUE
    enable_ieee_mode                                           = TRUE
  COMPUTE_PGM_RSRC2 (0x99000000):
    user_sgpr_count                                            = 8
    enable_sgpr_workgroup_id_x                                 = TRUE
    enable_sgpr_workgroup_id_y                                 = TRUE
    enable_vgpr_workitem_id                                    = X, Y
    granulated_lds_size                                        = 0
  KERNEL_CODE_PROPERTIES (0xa000b000):
    enable_sgpr_private_segment_buffer                         = TRUE
    enable_sgpr_dispatch_ptr                                   = TRUE
    enable_sgpr_kernarg_segment_ptr                            = TRUE
    private_element_size                                       = DWORD (4 bytes)
    is_ptr64                                                   = TRUE
  kernarg_segment_byte_size                                    = 64
  wavefront_sgpr_count                                         = 40
  workitem_vgpr_count                                          = 116
  kernarg_segment_alignment                                    = 16 (4)
  group_segment_alignment                                      = 16 (4)
  private_segment_alignment                                    = 16 (4)
  wavefront_size                                               = 64 (6)

AMD Kernel Code for &ZZ17Stencil_Hcc_Shfl4RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__619__cxxamp_trampolineEPfiiS4_iiS4_iiiii: 
  amd_kernel_code_version_major                                = 1
  amd_kernel_code_version_minor                                = 1
  amd_machine_kind                                             = AMDGPU
  amd_machine_version_major                                    = 0
  amd_machine_version_minor                                    = 0
  amd_machine_version_stepping                                 = 0
  kernel_code_entry_byte_offset                                = 256
  max_scratch_backing_memory_byte_size                         = 0
  COMPUTE_PGM_RSRC1 (0xac009400):
    granulated_workitem_vgpr_count                             = 20
    granulated_wavefront_sgpr_count                            = 2
    priority                                                   = 0
    float_round_mode_32                                        = NEAREST_EVEN
    float_round_mode_16_64                                     = NEAREST_EVEN
    float_denorm_mode_32                                       = FLUSH_SOURCE_OUTPUT
    float_denorm_mode_16_64                                    = FLUSH_NONE
    enable_dx10_clamp                                          = TRUE
    enable_ieee_mode                                           = TRUE
  COMPUTE_PGM_RSRC2 (0x99000000):
    user_sgpr_count                                            = 8
    enable_sgpr_workgroup_id_x                                 = TRUE
    enable_sgpr_workgroup_id_y                                 = TRUE
    enable_vgpr_workitem_id                                    = X, Y
    granulated_lds_size                                        = 0
  KERNEL_CODE_PROPERTIES (0xa000b000):
    enable_sgpr_private_segment_buffer                         = TRUE
    enable_sgpr_dispatch_ptr                                   = TRUE
    enable_sgpr_kernarg_segment_ptr                            = TRUE
    private_element_size                                       = DWORD (4 bytes)
    is_ptr64                                                   = TRUE
  kernarg_segment_byte_size                                    = 64
  wavefront_sgpr_count                                         = 20
  workitem_vgpr_count                                          = 83
  kernarg_segment_alignment                                    = 16 (4)
  group_segment_alignment                                      = 16 (4)
  private_segment_alignment                                    = 16 (4)
  wavefront_size                                               = 64 (6)

AMD Kernel Code for &ZZ18Stencil_Hcc_Shfl4xRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__519__cxxamp_trampolineEPfiiS4_iiS4_iiiii: 
  amd_kernel_code_version_major                                = 1
  amd_kernel_code_version_minor                                = 1
  amd_machine_kind                                             = AMDGPU
  amd_machine_version_major                                    = 0
  amd_machine_version_minor                                    = 0
  amd_machine_version_stepping                                 = 0
  kernel_code_entry_byte_offset                                = 256
  max_scratch_backing_memory_byte_size                         = 0
  COMPUTE_PGM_RSRC1 (0xac00cd00):
    granulated_workitem_vgpr_count                             = 13
    granulated_wavefront_sgpr_count                            = 3
    priority                                                   = 0
    float_round_mode_32                                        = NEAREST_EVEN
    float_round_mode_16_64                                     = NEAREST_EVEN
    float_denorm_mode_32                                       = FLUSH_SOURCE_OUTPUT
    float_denorm_mode_16_64                                    = FLUSH_NONE
    enable_dx10_clamp                                          = TRUE
    enable_ieee_mode                                           = TRUE
  COMPUTE_PGM_RSRC2 (0x99000000):
    user_sgpr_count                                            = 8
    enable_sgpr_workgroup_id_x                                 = TRUE
    enable_sgpr_workgroup_id_y                                 = TRUE
    enable_vgpr_workitem_id                                    = X, Y
    granulated_lds_size                                        = 0
  KERNEL_CODE_PROPERTIES (0xa000b000):
    enable_sgpr_private_segment_buffer                         = TRUE
    enable_sgpr_dispatch_ptr                                   = TRUE
    enable_sgpr_kernarg_segment_ptr                            = TRUE
    private_element_size                                       = DWORD (4 bytes)
    is_ptr64                                                   = TRUE
  kernarg_segment_byte_size                                    = 64
  wavefront_sgpr_count                                         = 32
  workitem_vgpr_count                                          = 53
  kernarg_segment_alignment                                    = 16 (4)
  group_segment_alignment                                      = 16 (4)
  private_segment_alignment                                    = 16 (4)
  wavefront_size                                               = 64 (6)

AMD Kernel Code for &ZZ18Stencil_Hcc_Shfl2xRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__419__cxxamp_trampolineEPfiiS4_iiS4_iiiii: 
  amd_kernel_code_version_major                                = 1
  amd_kernel_code_version_minor                                = 1
  amd_machine_kind                                             = AMDGPU
  amd_machine_version_major                                    = 0
  amd_machine_version_minor                                    = 0
  amd_machine_version_stepping                                 = 0
  kernel_code_entry_byte_offset                                = 256
  max_scratch_backing_memory_byte_size                         = 0
  COMPUTE_PGM_RSRC1 (0xac008b00):
    granulated_workitem_vgpr_count                             = 11
    granulated_wavefront_sgpr_count                            = 2
    priority                                                   = 0
    float_round_mode_32                                        = NEAREST_EVEN
    float_round_mode_16_64                                     = NEAREST_EVEN
    float_denorm_mode_32                                       = FLUSH_SOURCE_OUTPUT
    float_denorm_mode_16_64                                    = FLUSH_NONE
    enable_dx10_clamp                                          = TRUE
    enable_ieee_mode                                           = TRUE
  COMPUTE_PGM_RSRC2 (0x99000000):
    user_sgpr_count                                            = 8
    enable_sgpr_workgroup_id_x                                 = TRUE
    enable_sgpr_workgroup_id_y                                 = TRUE
    enable_vgpr_workitem_id                                    = X, Y
    granulated_lds_size                                        = 0
  KERNEL_CODE_PROPERTIES (0xa000b000):
    enable_sgpr_private_segment_buffer                         = TRUE
    enable_sgpr_dispatch_ptr                                   = TRUE
    enable_sgpr_kernarg_segment_ptr                            = TRUE
    private_element_size                                       = DWORD (4 bytes)
    is_ptr64                                                   = TRUE
  kernarg_segment_byte_size                                    = 64
  wavefront_sgpr_count                                         = 20
  workitem_vgpr_count                                          = 46
  kernarg_segment_alignment                                    = 16 (4)
  group_segment_alignment                                      = 16 (4)
  private_segment_alignment                                    = 16 (4)
  wavefront_size                                               = 64 (6)

AMD Kernel Code for &ZZ17Stencil_Hcc_Shfl2RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__319__cxxamp_trampolineEPfiiS4_iiS4_iiiii: 
  amd_kernel_code_version_major                                = 1
  amd_kernel_code_version_minor                                = 1
  amd_machine_kind                                             = AMDGPU
  amd_machine_version_major                                    = 0
  amd_machine_version_minor                                    = 0
  amd_machine_version_stepping                                 = 0
  kernel_code_entry_byte_offset                                = 256
  max_scratch_backing_memory_byte_size                         = 0
  COMPUTE_PGM_RSRC1 (0xac008c00):
    granulated_workitem_vgpr_count                             = 12
    granulated_wavefront_sgpr_count                            = 2
    priority                                                   = 0
    float_round_mode_32                                        = NEAREST_EVEN
    float_round_mode_16_64                                     = NEAREST_EVEN
    float_denorm_mode_32                                       = FLUSH_SOURCE_OUTPUT
    float_denorm_mode_16_64                                    = FLUSH_NONE
    enable_dx10_clamp                                          = TRUE
    enable_ieee_mode                                           = TRUE
  COMPUTE_PGM_RSRC2 (0x99000000):
    user_sgpr_count                                            = 8
    enable_sgpr_workgroup_id_x                                 = TRUE
    enable_sgpr_workgroup_id_y                                 = TRUE
    enable_vgpr_workitem_id                                    = X, Y
    granulated_lds_size                                        = 0
  KERNEL_CODE_PROPERTIES (0xa000b000):
    enable_sgpr_private_segment_buffer                         = TRUE
    enable_sgpr_dispatch_ptr                                   = TRUE
    enable_sgpr_kernarg_segment_ptr                            = TRUE
    private_element_size                                       = DWORD (4 bytes)
    is_ptr64                                                   = TRUE
  kernarg_segment_byte_size                                    = 64
  wavefront_sgpr_count                                         = 20
  workitem_vgpr_count                                          = 51
  kernarg_segment_alignment                                    = 16 (4)
  group_segment_alignment                                      = 16 (4)
  private_segment_alignment                                    = 16 (4)
  wavefront_size                                               = 64 (6)

AMD Kernel Code for &ZZ16Stencil_Hcc_ShflRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__219__cxxamp_trampolineEPfiiS4_iiS4_iiiii: 
  amd_kernel_code_version_major                                = 1
  amd_kernel_code_version_minor                                = 1
  amd_machine_kind                                             = AMDGPU
  amd_machine_version_major                                    = 0
  amd_machine_version_minor                                    = 0
  amd_machine_version_stepping                                 = 0
  kernel_code_entry_byte_offset                                = 256
  max_scratch_backing_memory_byte_size                         = 0
  COMPUTE_PGM_RSRC1 (0xac004900):
    granulated_workitem_vgpr_count                             = 9
    granulated_wavefront_sgpr_count                            = 1
    priority                                                   = 0
    float_round_mode_32                                        = NEAREST_EVEN
    float_round_mode_16_64                                     = NEAREST_EVEN
    float_denorm_mode_32                                       = FLUSH_SOURCE_OUTPUT
    float_denorm_mode_16_64                                    = FLUSH_NONE
    enable_dx10_clamp                                          = TRUE
    enable_ieee_mode                                           = TRUE
  COMPUTE_PGM_RSRC2 (0x99000000):
    user_sgpr_count                                            = 8
    enable_sgpr_workgroup_id_x                                 = TRUE
    enable_sgpr_workgroup_id_y                                 = TRUE
    enable_vgpr_workitem_id                                    = X, Y
    granulated_lds_size                                        = 0
  KERNEL_CODE_PROPERTIES (0xa000b000):
    enable_sgpr_private_segment_buffer                         = TRUE
    enable_sgpr_dispatch_ptr                                   = TRUE
    enable_sgpr_kernarg_segment_ptr                            = TRUE
    private_element_size                                       = DWORD (4 bytes)
    is_ptr64                                                   = TRUE
  kernarg_segment_byte_size                                    = 64
  wavefront_sgpr_count                                         = 16
  workitem_vgpr_count                                          = 38
  kernarg_segment_alignment                                    = 16 (4)
  group_segment_alignment                                      = 16 (4)
  private_segment_alignment                                    = 16 (4)
  wavefront_size                                               = 64 (6)

AMD Kernel Code for &ZZ14Stencil_Hcc_SmRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__119__cxxamp_trampolineEPfiiS4_iiS4_iiiii: 
  amd_kernel_code_version_major                                = 1
  amd_kernel_code_version_minor                                = 1
  amd_machine_kind                                             = AMDGPU
  amd_machine_version_major                                    = 0
  amd_machine_version_minor                                    = 0
  amd_machine_version_stepping                                 = 0
  kernel_code_entry_byte_offset                                = 256
  max_scratch_backing_memory_byte_size                         = 0
  COMPUTE_PGM_RSRC1 (0xac008500):
    granulated_workitem_vgpr_count                             = 5
    granulated_wavefront_sgpr_count                            = 2
    priority                                                   = 0
    float_round_mode_32                                        = NEAREST_EVEN
    float_round_mode_16_64                                     = NEAREST_EVEN
    float_denorm_mode_32                                       = FLUSH_SOURCE_OUTPUT
    float_denorm_mode_16_64                                    = FLUSH_NONE
    enable_dx10_clamp                                          = TRUE
    enable_ieee_mode                                           = TRUE
  COMPUTE_PGM_RSRC2 (0x99000000):
    user_sgpr_count                                            = 8
    enable_sgpr_workgroup_id_x                                 = TRUE
    enable_sgpr_workgroup_id_y                                 = TRUE
    enable_vgpr_workitem_id                                    = X, Y
    granulated_lds_size                                        = 0
  KERNEL_CODE_PROPERTIES (0xa000b000):
    enable_sgpr_private_segment_buffer                         = TRUE
    enable_sgpr_dispatch_ptr                                   = TRUE
    enable_sgpr_kernarg_segment_ptr                            = TRUE
    private_element_size                                       = DWORD (4 bytes)
    is_ptr64                                                   = TRUE
  workgroup_group_segment_byte_size                            = 1296
  kernarg_segment_byte_size                                    = 64
  wavefront_sgpr_count                                         = 19
  workitem_vgpr_count                                          = 23
  kernarg_segment_alignment                                    = 16 (4)
  group_segment_alignment                                      = 16 (4)
  private_segment_alignment                                    = 16 (4)
  wavefront_size                                               = 64 (6)

AMD Kernel Code for &ZZ11Stencil_HccRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__019__cxxamp_trampolineEPfiiS4_iiS4_iiiii: 
  amd_kernel_code_version_major                                = 1
  amd_kernel_code_version_minor                                = 1
  amd_machine_kind                                             = AMDGPU
  amd_machine_version_major                                    = 0
  amd_machine_version_minor                                    = 0
  amd_machine_version_stepping                                 = 0
  kernel_code_entry_byte_offset                                = 256
  max_scratch_backing_memory_byte_size                         = 0
  COMPUTE_PGM_RSRC1 (0xac004900):
    granulated_workitem_vgpr_count                             = 9
    granulated_wavefront_sgpr_count                            = 1
    priority                                                   = 0
    float_round_mode_32                                        = NEAREST_EVEN
    float_round_mode_16_64                                     = NEAREST_EVEN
    float_denorm_mode_32                                       = FLUSH_SOURCE_OUTPUT
    float_denorm_mode_16_64                                    = FLUSH_NONE
    enable_dx10_clamp                                          = TRUE
    enable_ieee_mode                                           = TRUE
  COMPUTE_PGM_RSRC2 (0x99000000):
    user_sgpr_count                                            = 8
    enable_sgpr_workgroup_id_x                                 = TRUE
    enable_sgpr_workgroup_id_y                                 = TRUE
    enable_vgpr_workitem_id                                    = X, Y
    granulated_lds_size                                        = 0
  KERNEL_CODE_PROPERTIES (0xa000b000):
    enable_sgpr_private_segment_buffer                         = TRUE
    enable_sgpr_dispatch_ptr                                   = TRUE
    enable_sgpr_kernarg_segment_ptr                            = TRUE
    private_element_size                                       = DWORD (4 bytes)
    is_ptr64                                                   = TRUE
  kernarg_segment_byte_size                                    = 64
  wavefront_sgpr_count                                         = 14
  workitem_vgpr_count                                          = 40
  kernarg_segment_alignment                                    = 16 (4)
  group_segment_alignment                                      = 16 (4)
  private_segment_alignment                                    = 16 (4)
  wavefront_size                                               = 64 (6)

Disassembly:
  asic(CI)
  type(CS)
  
  //
  // amd_kernel_code_t for &ZZ17Stencil_Hcc_Shfl8RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__819__cxxamp_trampolineEPfiiS4_iiS4_iiiii (000000000000 - 000000000100)
  //
  //
  // &ZZ17Stencil_Hcc_Shfl8RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__819__cxxamp_trampolineEPfiiS4_iiS4_iiiii:
  //
  s_load_dword  s0, s[4:5], 0x01                        // 000000000100: C0000501
  v_mbcnt_lo_u32_b32  v2, -1, 0                         // 000000000104: D2460002 000100C1
  v_mbcnt_hi_u32_b32  v2, -1, v2                        // 00000000010C: 480404C1
  s_waitcnt     lgkmcnt(0)                              // 000000000110: BF8C007F
  s_and_b32     s1, s0, 0x0000ffff                      // 000000000114: 8701FF00 0000FFFF
  s_bfe_u32     s0, s0, 0x00100010                      // 00000000011C: 9380FF00 00100010
  s_mul_i32     s1, s1, s8                              // 000000000124: 93010801
  v_add_i32     v0, vcc, s1, v0                         // 000000000128: 4A000001
  s_mul_i32     s0, s0, s9                              // 00000000012C: 93000900
  v_add_i32     v1, vcc, s0, v1                         // 000000000130: 4A020200
  v_add_i32     v3, vcc, 2, v2                          // 000000000134: 4A060482
  v_add_i32     v4, vcc, 6, v2                          // 000000000138: 4A080486
  v_add_i32     v5, vcc, 8, v2                          // 00000000013C: 4A0A0488
  v_add_i32     v6, vcc, 4, v2                          // 000000000140: 4A0C0484
  s_load_dwordx2  s[0:1], s[6:7], 0x0c                  // 000000000144: C040070C
  v_ashrrev_i32  v7, 31, v2                             // 000000000148: 300E049F
  s_mov_b32     s2, 0x66666667                          // 00000000014C: BE8203FF 66666667
  v_ashrrev_i32  v8, 31, v3                             // 000000000154: 3010069F
  v_ashrrev_i32  v9, 31, v4                             // 000000000158: 3012089F
  v_ashrrev_i32  v10, 31, v5                            // 00000000015C: 30140A9F
  v_ashrrev_i32  v11, 31, v6                            // 000000000160: 30160C9F
  v_mul_hi_u32  v12, v2, s2                             // 000000000164: D2D4000C 00000502
  v_mul_lo_u32  v7, v7, s2                              // 00000000016C: D2D20007 00000507
  v_lshlrev_b32  v1, 3, v1                              // 000000000174: 34020283
  v_mul_hi_u32  v13, v3, s2                             // 000000000178: D2D4000D 00000503
  v_mul_lo_u32  v8, v8, s2                              // 000000000180: D2D20008 00000508
  v_mul_hi_u32  v14, v4, s2                             // 000000000188: D2D4000E 00000504
  v_mul_lo_u32  v9, v9, s2                              // 000000000190: D2D20009 00000509
  v_mul_hi_u32  v15, v6, s2                             // 000000000198: D2D4000F 00000506
  v_mul_lo_u32  v11, v11, s2                            // 0000000001A0: D2D2000B 0000050B
  v_mul_hi_u32  v16, v5, s2                             // 0000000001A8: D2D40010 00000505
  v_mul_lo_u32  v10, v10, s2                            // 0000000001B0: D2D2000A 0000050A
  v_add_i32     v7, vcc, v7, v12                        // 0000000001B8: 4A0E1907
  v_ashrrev_i32  v12, 3, v2                             // 0000000001BC: 30180483
  v_and_b32     v1, 0xffffffc0, v1                      // 0000000001C0: 360202FF FFFFFFC0
  v_add_i32     v8, vcc, v8, v13                        // 0000000001C8: 4A101B08
  v_add_i32     v9, vcc, v9, v14                        // 0000000001CC: 4A121D09
  v_add_i32     v11, vcc, v11, v15                      // 0000000001D0: 4A161F0B
  v_add_i32     v10, vcc, v10, v16                      // 0000000001D4: 4A14210A
  v_lshrrev_b32  v13, 31, v7                            // 0000000001D8: 2C1A0E9F
  v_ashrrev_i32  v7, 2, v7                              // 0000000001DC: 300E0E82
  v_add_i32     v1, vcc, v12, v1                        // 0000000001E0: 4A02030C
  v_lshrrev_b32  v14, 31, v8                            // 0000000001E4: 2C1C109F
  v_ashrrev_i32  v8, 2, v8                              // 0000000001E8: 30101082
  v_lshrrev_b32  v15, 31, v9                            // 0000000001EC: 2C1E129F
  v_ashrrev_i32  v9, 2, v9                              // 0000000001F0: 30121282
  v_lshrrev_b32  v16, 31, v10                           // 0000000001F4: 2C20149F
  v_ashrrev_i32  v10, 2, v10                            // 0000000001F8: 30141482
  v_lshrrev_b32  v17, 31, v11                           // 0000000001FC: 2C22169F
  v_ashrrev_i32  v11, 2, v11                            // 000000000200: 30161682
  v_add_i32     v7, vcc, v7, v13                        // 000000000204: 4A0E1B07
  v_and_b32     v13, -8, v1                             // 000000000208: 361A02C8
  v_add_i32     v8, vcc, v8, v14                        // 00000000020C: 4A101D08
  v_add_i32     v10, vcc, v10, v16                      // 000000000210: 4A14210A
  v_add_i32     v9, vcc, v9, v15                        // 000000000214: 4A121F09
  v_add_i32     v11, vcc, v11, v17                      // 000000000218: 4A16230B
  s_load_dword  s2, s[6:7], 0x0e                        // 00000000021C: C001070E
  s_waitcnt     lgkmcnt(0)                              // 000000000220: BF8C007F
  s_lshl_b32    s3, s0, 1                               // 000000000224: 8F038100
  v_add_i32     v14, vcc, v7, v13                       // 000000000228: 4A1C1B07
  v_mul_lo_u32  v7, v7, 10                              // 00000000022C: D2D20007 00011507
  v_add_i32     v15, vcc, v13, v8                       // 000000000234: 4A1E110D
  v_or_b32      v16, 6, v13                             // 000000000238: 38201A86
  v_add_i32     v17, vcc, v13, v9                       // 00000000023C: 4A22130D
  v_add_i32     v18, vcc, v13, v10                      // 000000000240: 4A24150D
  v_mul_lo_u32  v8, v8, 10                              // 000000000244: D2D20008 00011508
  v_mul_lo_u32  v9, v9, 10                              // 00000000024C: D2D20009 00011509
  v_mul_lo_u32  v19, v11, 10                            // 000000000254: D2D20013 0001150B
  v_mul_lo_u32  v10, v10, 10                            // 00000000025C: D2D2000A 0001150A
  v_add_i32     v13, vcc, v13, v11                      // 000000000264: 4A1A170D
  s_add_u32     s4, s3, s1                              // 000000000268: 80040103
  v_and_b32     v20, -8, v0                             // 00000000026C: 362800C8
  v_sub_i32     v7, vcc, v2, v7                         // 000000000270: 4C0E0F02
  v_add_i32     v21, vcc, 51, v15                       // 000000000274: 4A2A1EB3
  v_add_i32     v22, vcc, 12, v18                       // 000000000278: 4A2C248C
  v_add_i32     v11, vcc, v11, v16                      // 00000000027C: 4A16210B
  v_add_i32     v16, vcc, 57, v17                       // 000000000280: 4A2022B9
  v_sub_i32     v3, vcc, v3, v8                         // 000000000284: 4C061103
  v_add_i32     v8, vcc, 19, v15                        // 000000000288: 4A101E93
  v_add_i32     v15, vcc, 44, v18                       // 00000000028C: 4A1E24AC
  v_sub_i32     v4, vcc, v4, v9                         // 000000000290: 4C081304
  v_sub_i32     v6, vcc, v6, v19                        // 000000000294: 4C0C2706
  v_sub_i32     v5, vcc, v5, v10                        // 000000000298: 4C0A1505
  v_add_i32     v9, vcc, 32, v14                        // 00000000029C: 4A121CA0
  v_add_i32     v10, vcc, 25, v17                       // 0000000002A0: 4A142299
  v_add_i32     v13, vcc, 38, v13                       // 0000000002A4: 4A1A1AA6
  s_load_dwordx2  s[8:9], s[6:7], 0x00                  // 0000000002A8: C0440700
  v_add_i32     v7, vcc, v7, v20                        // 0000000002AC: 4A0E2907
  v_mul_lo_u32  v17, v14, s4                            // 0000000002B0: D2D20011 0000090E
  v_mul_lo_u32  v18, v21, s4                            // 0000000002B8: D2D20012 00000915
  v_add_i32     v3, vcc, v3, v20                        // 0000000002C0: 4A062903
  v_mul_lo_u32  v16, v16, s4                            // 0000000002C4: D2D20010 00000910
  v_add_i32     v4, vcc, v4, v20                        // 0000000002CC: 4A082904
  v_mul_lo_u32  v11, v11, s4                            // 0000000002D0: D2D2000B 0000090B
  v_mul_lo_u32  v19, v22, s4                            // 0000000002D8: D2D20013 00000916
  v_mul_lo_u32  v8, v8, s4                              // 0000000002E0: D2D20008 00000908
  v_add_i32     v6, vcc, v6, v20                        // 0000000002E8: 4A0C2906
  v_add_i32     v5, vcc, v5, v20                        // 0000000002EC: 4A0A2905
  v_mul_lo_u32  v9, v9, s4                              // 0000000002F0: D2D20009 00000909
  v_mul_lo_u32  v10, v10, s4                            // 0000000002F8: D2D2000A 0000090A
  v_mul_lo_u32  v13, v13, s4                            // 000000000300: D2D2000D 0000090D
  v_mul_lo_u32  v15, v15, s4                            // 000000000308: D2D2000F 0000090F
  v_add_i32     v28, vcc, v17, v7                       // 000000000310: 4A380F11
  v_add_i32     v18, vcc, v18, v3                       // 000000000314: 4A240712
  v_add_i32     v16, vcc, v16, v4                       // 000000000318: 4A200910
  v_add_i32     v3, vcc, v8, v3                         // 00000000031C: 4A060708
  v_add_i32     v21, vcc, v19, v5                       // 000000000320: 4A2A0B13
  v_add_i32     v32, vcc, v11, v6                       // 000000000324: 4A400D0B
  v_add_i32     v26, vcc, v9, v7                        // 000000000328: 4A340F09
  v_add_i32     v30, vcc, v10, v4                       // 00000000032C: 4A3C090A
  v_add_i32     v23, vcc, v13, v6                       // 000000000330: 4A2E0D0D
  v_add_i32     v5, vcc, v15, v5                        // 000000000334: 4A0A0B0F
  v_ashrrev_i32  v29, 31, v28                           // 000000000338: 303A389F
  v_ashrrev_i32  v19, 31, v18                           // 00000000033C: 3026249F
  v_ashrrev_i32  v17, 31, v16                           // 000000000340: 3022209F
  v_ashrrev_i32  v27, 31, v26                           // 000000000344: 3036349F
  v_ashrrev_i32  v33, 31, v32                           // 000000000348: 3042409F
  v_ashrrev_i32  v22, 31, v21                           // 00000000034C: 302C2A9F
  v_ashrrev_i32  v4, 31, v3                             // 000000000350: 3008069F
  v_ashrrev_i32  v31, 31, v30                           // 000000000354: 303E3C9F
  v_ashrrev_i32  v24, 31, v23                           // 000000000358: 30302E9F
  v_ashrrev_i32  v6, 31, v5                             // 00000000035C: 300C0A9F
  v_add_i32     v14, vcc, 64, v14                       // 000000000360: 4A1C1CC0
  s_add_u32     s3, s3, s2                              // 000000000364: 80030203
  v_cmp_lt_i32  s[10:11], v14, s3                       // 000000000368: D102000A 0000070E
  v_cmp_lt_i32  s[12:13], v7, s4                        // 000000000370: D102000C 00000907
  v_lshl_b64    v[26:27], v[26:27], 2                   // 000000000378: D2C2001A 0001051A
  v_lshl_b64    v[9:10], v[28:29], 2                    // 000000000380: D2C20009 0001051C
  v_lshl_b64    v[15:16], v[16:17], 2                   // 000000000388: D2C2000F 00010510
  v_lshl_b64    v[17:18], v[18:19], 2                   // 000000000390: D2C20011 00010512
  v_lshl_b64    v[28:29], v[30:31], 2                   // 000000000398: D2C2001C 0001051E
  v_lshl_b64    v[3:4], v[3:4], 2                       // 0000000003A0: D2C20003 00010503
  v_lshl_b64    v[21:22], v[21:22], 2                   // 0000000003A8: D2C20015 00010515
  v_lshl_b64    v[19:20], v[32:33], 2                   // 0000000003B0: D2C20013 00010520
  v_lshl_b64    v[23:24], v[23:24], 2                   // 0000000003B8: D2C20017 00010517
  v_lshl_b64    v[5:6], v[5:6], 2                       // 0000000003C0: D2C20005 00010505
  s_waitcnt     lgkmcnt(0)                              // 0000000003C8: BF8C007F
  v_add_i32     v30, vcc, s8, v17                       // 0000000003CC: 4A3C2208
  v_mov_b32     v11, s9                                 // 0000000003D0: 7E160209
  v_addc_u32    v31, vcc, v11, v18, vcc                 // 0000000003D4: 503E250B
  v_add_i32     v15, vcc, s8, v15                       // 0000000003D8: 4A1E1E08
  v_addc_u32    v16, vcc, v11, v16, vcc                 // 0000000003DC: 5020210B
  v_add_i32     v9, vcc, s8, v9                         // 0000000003E0: 4A121208
  v_addc_u32    v10, vcc, v11, v10, vcc                 // 0000000003E4: 5014150B
  v_add_i32     v17, vcc, s8, v26                       // 0000000003E8: 4A223408
  v_addc_u32    v18, vcc, v11, v27, vcc                 // 0000000003EC: 5024370B
  v_add_i32     v23, vcc, s8, v23                       // 0000000003F0: 4A2E2E08
  v_addc_u32    v24, vcc, v11, v24, vcc                 // 0000000003F4: 5030310B
  v_add_i32     v19, vcc, s8, v19                       // 0000000003F8: 4A262608
  v_addc_u32    v20, vcc, v11, v20, vcc                 // 0000000003FC: 5028290B
  v_add_i32     v21, vcc, s8, v21                       // 000000000400: 4A2A2A08
  v_addc_u32    v22, vcc, v11, v22, vcc                 // 000000000404: 502C2D0B
  v_add_i32     v3, vcc, s8, v3                         // 000000000408: 4A060608
  v_addc_u32    v4, vcc, v11, v4, vcc                   // 00000000040C: 5008090B
  v_add_i32     v25, vcc, s8, v28                       // 000000000410: 4A323808
  v_addc_u32    v26, vcc, v11, v29, vcc                 // 000000000414: 50343B0B
  v_add_i32     v5, vcc, s8, v5                         // 000000000418: 4A0A0A08
  v_addc_u32    v6, vcc, v11, v6, vcc                   // 00000000041C: 500C0D0B
  s_and_b64     s[10:11], s[12:13], s[10:11]            // 000000000420: 878A0A0C
  s_nop         0x0000                                  // 000000000424: BF800000
  flat_load_dword  v11, v[17:18]                        // 000000000428: DC300000 0B000011
  flat_load_dword  v9, v[9:10]                          // 000000000430: DC300000 09000009
  flat_load_dword  v10, v[15:16]                        // 000000000438: DC300000 0A00000F
  flat_load_dword  v8, v[30:31]                         // 000000000440: DC300000 0800001E
  flat_load_dword  v5, v[5:6]                           // 000000000448: DC300000 05000005
  flat_load_dword  v6, v[23:24]                         // 000000000450: DC300000 06000017
  flat_load_dword  v13, v[25:26]                        // 000000000458: DC300000 0D000019
  flat_load_dword  v3, v[3:4]                           // 000000000460: DC300000 03000003
  flat_load_dword  v4, v[21:22]                         // 000000000468: DC300000 04000015
  flat_load_dword  v15, v[19:20]                        // 000000000470: DC300000 0F000013
  s_and_saveexec_b64  s[10:11], s[10:11]                // 000000000478: BE8A240A
  v_mul_lo_u32  v14, v14, s4                            // 00000000047C: D2D2000E 0000090E
  s_cbranch_execz  label_012B                           // 000000000484: BF880009
  v_add_i32     v16, vcc, v14, v7                       // 000000000488: 4A200F0E
  v_ashrrev_i32  v17, 31, v16                           // 00000000048C: 3022209F
  v_lshl_b64    v[16:17], v[16:17], 2                   // 000000000490: D2C20010 00010510
  v_add_i32     v16, vcc, s8, v16                       // 000000000498: 4A202008
  v_mov_b32     v14, s9                                 // 00000000049C: 7E1C0209
  v_addc_u32    v17, vcc, v14, v17, vcc                 // 0000000004A0: 5022230E
  flat_load_dword  v7, v[16:17]                         // 0000000004A4: DC300000 07000010
  label_012B:
  s_andn2_b64   exec, s[10:11], exec                    // 0000000004AC: 8AFE7E0A
  s_cbranch_execz  label_012D                           // 0000000004B0: BF880000
  label_012D:
  s_mov_b64     exec, s[10:11]                          // 0000000004B4: BEFE040A
  s_load_dwordx2  s[8:9], s[6:7], 0x08                  // 0000000004B8: C0440708
  v_lshlrev_b32  v12, 1, v12                            // 0000000004BC: 34181881
  v_add_i32     v12, vcc, v12, v2                       // 0000000004C0: 4A18050C
  v_and_b32     v14, 63, v12                            // 0000000004C4: 361C18BF
  s_waitcnt     lgkmcnt(0)                              // 0000000004C8: BF8C007F
  v_mov_b32     v16, s8                                 // 0000000004CC: 7E200208
  v_mov_b32     v17, s9                                 // 0000000004D0: 7E220209
  flat_load_dword  v16, v[16:17]                        // 0000000004D4: DC300000 10000010
  v_lshl_b64    v[17:18], 1, v14                        // 0000000004DC: D2C20011 00021C81
  v_and_b32     v17, exec_lo, v17                       // 0000000004E4: 3622227E
  v_and_b32     v18, exec_hi, v18                       // 0000000004E8: 3624247F
  v_cmp_ne_u64  s[10:11], 0, v[17:18]                   // 0000000004EC: D1CA000A 00022280
  s_mov_b64     s[12:13], exec                          // 0000000004F4: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000004F8: BE8E047E
  s_nop         0x0000                                  // 0000000004FC: BF800000
  label_0140:
  v_readfirstlane_b32  s3, v14                          // 000000000500: 7E06050E
  v_cmp_eq_u32  vcc, s3, v14                            // 000000000504: 7D841C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000508: BE90246A
  s_cbranch_execz  label_0149                           // 00000000050C: BF880005
  s_waitcnt     vmcnt(9)                                // 000000000510: BF8C0F79
  v_readlane_b32  s3, v9, s3                            // 000000000514: 02060709
  v_mov_b32     v17, s3                                 // 000000000518: 7E220203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000051C: 8A8E7E0E
  s_cbranch_scc0  label_014B                            // 000000000520: BF840002
  label_0149:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000524: 87FE0E10
  s_branch      label_0140                              // 000000000528: BF82FFF5
  label_014B:
  s_mov_b64     exec, s[12:13]                          // 00000000052C: BEFE040C
  v_cndmask_b32  v17, 0, v17, s[10:11]                  // 000000000530: D2000011 002A2280
  v_add_i32     v18, vcc, 16, v12                       // 000000000538: 4A241890
  v_lshl_b64    v[19:20], 1, v14                        // 00000000053C: D2C20013 00021C81
  v_and_b32     v19, exec_lo, v19                       // 000000000544: 3626267E
  v_and_b32     v20, exec_hi, v20                       // 000000000548: 3628287F
  v_cmp_ne_u64  s[10:11], 0, v[19:20]                   // 00000000054C: D1CA000A 00022680
  s_mov_b64     s[12:13], exec                          // 000000000554: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000558: BE8E047E
  s_nop         0x0000                                  // 00000000055C: BF800000
  label_0158:
  v_readfirstlane_b32  s3, v14                          // 000000000560: 7E06050E
  v_cmp_eq_u32  vcc, s3, v14                            // 000000000564: 7D841C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000568: BE90246A
  s_cbranch_execz  label_0161                           // 00000000056C: BF880005
  s_waitcnt     vmcnt(1)                                // 000000000570: BF8C0F71
  v_readlane_b32  s3, v15, s3                           // 000000000574: 0206070F
  v_mov_b32     v19, s3                                 // 000000000578: 7E260203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000057C: 8A8E7E0E
  s_cbranch_scc0  label_0163                            // 000000000580: BF840002
  label_0161:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000584: 87FE0E10
  s_branch      label_0158                              // 000000000588: BF82FFF5
  label_0163:
  s_mov_b64     exec, s[12:13]                          // 00000000058C: BEFE040C
  v_cndmask_b32  v19, 0, v19, s[10:11]                  // 000000000590: D2000013 002A2680
  v_and_b32     v18, 63, v18                            // 000000000598: 362424BF
  v_add_i32     v20, vcc, 32, v12                       // 00000000059C: 4A2818A0
  v_add_i32     v21, vcc, 48, v12                       // 0000000005A0: 4A2A18B0
  v_lshl_b64    v[22:23], 1, v18                        // 0000000005A4: D2C20016 00022481
  v_and_b32     v22, exec_lo, v22                       // 0000000005AC: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 0000000005B0: 362E2E7F
  v_cmp_ne_u64  s[10:11], 0, v[22:23]                   // 0000000005B4: D1CA000A 00022C80
  s_mov_b64     s[12:13], exec                          // 0000000005BC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000005C0: BE8E047E
  s_nop         0x0000                                  // 0000000005C4: BF800000
  s_nop         0x0000                                  // 0000000005C8: BF800000
  s_nop         0x0000                                  // 0000000005CC: BF800000
  s_nop         0x0000                                  // 0000000005D0: BF800000
  s_nop         0x0000                                  // 0000000005D4: BF800000
  s_nop         0x0000                                  // 0000000005D8: BF800000
  s_nop         0x0000                                  // 0000000005DC: BF800000
  label_0178:
  v_readfirstlane_b32  s3, v18                          // 0000000005E0: 7E060512
  v_cmp_eq_u32  vcc, s3, v18                            // 0000000005E4: 7D842403
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000005E8: BE90246A
  s_cbranch_execz  label_0180                           // 0000000005EC: BF880004
  v_readlane_b32  s3, v15, s3                           // 0000000005F0: 0206070F
  v_mov_b32     v22, s3                                 // 0000000005F4: 7E2C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000005F8: 8A8E7E0E
  s_cbranch_scc0  label_0182                            // 0000000005FC: BF840002
  label_0180:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000600: 87FE0E10
  s_branch      label_0178                              // 000000000604: BF82FFF6
  label_0182:
  s_mov_b64     exec, s[12:13]                          // 000000000608: BEFE040C
  v_cndmask_b32  v22, 0, v22, s[10:11]                  // 00000000060C: D2000016 002A2C80
  v_lshl_b64    v[23:24], 1, v18                        // 000000000614: D2C20017 00022481
  v_and_b32     v23, exec_lo, v23                       // 00000000061C: 362E2E7E
  v_and_b32     v24, exec_hi, v24                       // 000000000620: 3630307F
  v_cmp_ne_u64  s[10:11], 0, v[23:24]                   // 000000000624: D1CA000A 00022E80
  s_mov_b64     s[12:13], exec                          // 00000000062C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000630: BE8E047E
  s_nop         0x0000                                  // 000000000634: BF800000
  s_nop         0x0000                                  // 000000000638: BF800000
  s_nop         0x0000                                  // 00000000063C: BF800000
  label_0190:
  v_readfirstlane_b32  s3, v18                          // 000000000640: 7E060512
  v_cmp_eq_u32  vcc, s3, v18                            // 000000000644: 7D842403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000648: BE90246A
  s_cbranch_execz  label_0198                           // 00000000064C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000000650: 02060704
  v_mov_b32     v23, s3                                 // 000000000654: 7E2E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000658: 8A8E7E0E
  s_cbranch_scc0  label_019A                            // 00000000065C: BF840002
  label_0198:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000660: 87FE0E10
  s_branch      label_0190                              // 000000000664: BF82FFF6
  label_019A:
  s_mov_b64     exec, s[12:13]                          // 000000000668: BEFE040C
  v_cndmask_b32  v23, 0, v23, s[10:11]                  // 00000000066C: D2000017 002A2E80
  v_and_b32     v21, 63, v21                            // 000000000674: 362A2ABF
  v_and_b32     v20, 63, v20                            // 000000000678: 362828BF
  v_lshl_b64    v[24:25], 1, v20                        // 00000000067C: D2C20018 00022881
  v_and_b32     v24, exec_lo, v24                       // 000000000684: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 000000000688: 3632327F
  v_cmp_ne_u64  s[10:11], 0, v[24:25]                   // 00000000068C: D1CA000A 00023080
  s_mov_b64     s[12:13], exec                          // 000000000694: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000698: BE8E047E
  s_nop         0x0000                                  // 00000000069C: BF800000
  label_01A8:
  v_readfirstlane_b32  s3, v20                          // 0000000006A0: 7E060514
  v_cmp_eq_u32  vcc, s3, v20                            // 0000000006A4: 7D842803
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000006A8: BE90246A
  s_cbranch_execz  label_01B0                           // 0000000006AC: BF880004
  v_readlane_b32  s3, v4, s3                            // 0000000006B0: 02060704
  v_mov_b32     v24, s3                                 // 0000000006B4: 7E300203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000006B8: 8A8E7E0E
  s_cbranch_scc0  label_01B2                            // 0000000006BC: BF840002
  label_01B0:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000006C0: 87FE0E10
  s_branch      label_01A8                              // 0000000006C4: BF82FFF6
  label_01B2:
  s_mov_b64     exec, s[12:13]                          // 0000000006C8: BEFE040C
  v_cndmask_b32  v24, 0, v24, s[10:11]                  // 0000000006CC: D2000018 002A3080
  v_lshl_b64    v[25:26], 1, v20                        // 0000000006D4: D2C20019 00022881
  v_and_b32     v25, exec_lo, v25                       // 0000000006DC: 3632327E
  v_and_b32     v26, exec_hi, v26                       // 0000000006E0: 3634347F
  v_cmp_ne_u64  s[10:11], 0, v[25:26]                   // 0000000006E4: D1CA000A 00023280
  s_mov_b64     s[12:13], exec                          // 0000000006EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000006F0: BE8E047E
  s_nop         0x0000                                  // 0000000006F4: BF800000
  s_nop         0x0000                                  // 0000000006F8: BF800000
  s_nop         0x0000                                  // 0000000006FC: BF800000
  label_01C0:
  v_readfirstlane_b32  s3, v20                          // 000000000700: 7E060514
  v_cmp_eq_u32  vcc, s3, v20                            // 000000000704: 7D842803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000708: BE90246A
  s_cbranch_execz  label_01C8                           // 00000000070C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000000710: 02060703
  v_mov_b32     v25, s3                                 // 000000000714: 7E320203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000718: 8A8E7E0E
  s_cbranch_scc0  label_01CA                            // 00000000071C: BF840002
  label_01C8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000720: 87FE0E10
  s_branch      label_01C0                              // 000000000724: BF82FFF6
  label_01CA:
  s_mov_b64     exec, s[12:13]                          // 000000000728: BEFE040C
  v_cndmask_b32  v25, 0, v25, s[10:11]                  // 00000000072C: D2000019 002A3280
  v_lshl_b64    v[26:27], 1, v21                        // 000000000734: D2C2001A 00022A81
  v_and_b32     v26, exec_lo, v26                       // 00000000073C: 3634347E
  v_and_b32     v27, exec_hi, v27                       // 000000000740: 3636367F
  v_cmp_ne_u64  s[10:11], 0, v[26:27]                   // 000000000744: D1CA000A 00023480
  s_mov_b64     s[12:13], exec                          // 00000000074C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000750: BE8E047E
  s_nop         0x0000                                  // 000000000754: BF800000
  s_nop         0x0000                                  // 000000000758: BF800000
  s_nop         0x0000                                  // 00000000075C: BF800000
  label_01D8:
  v_readfirstlane_b32  s3, v21                          // 000000000760: 7E060515
  v_cmp_eq_u32  vcc, s3, v21                            // 000000000764: 7D842A03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000768: BE90246A
  s_cbranch_execz  label_01E0                           // 00000000076C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000000770: 02060703
  v_mov_b32     v26, s3                                 // 000000000774: 7E340203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000778: 8A8E7E0E
  s_cbranch_scc0  label_01E2                            // 00000000077C: BF840002
  label_01E0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000780: 87FE0E10
  s_branch      label_01D8                              // 000000000784: BF82FFF6
  label_01E2:
  s_mov_b64     exec, s[12:13]                          // 000000000788: BEFE040C
  v_cndmask_b32  v26, 0, v26, s[10:11]                  // 00000000078C: D200001A 002A3480
  v_lshl_b64    v[27:28], 1, v21                        // 000000000794: D2C2001B 00022A81
  v_and_b32     v27, exec_lo, v27                       // 00000000079C: 3636367E
  v_and_b32     v28, exec_hi, v28                       // 0000000007A0: 3638387F
  v_cmp_ne_u64  s[10:11], 0, v[27:28]                   // 0000000007A4: D1CA000A 00023680
  s_mov_b64     s[12:13], exec                          // 0000000007AC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000007B0: BE8E047E
  s_nop         0x0000                                  // 0000000007B4: BF800000
  s_nop         0x0000                                  // 0000000007B8: BF800000
  s_nop         0x0000                                  // 0000000007BC: BF800000
  label_01F0:
  v_readfirstlane_b32  s3, v21                          // 0000000007C0: 7E060515
  v_cmp_eq_u32  vcc, s3, v21                            // 0000000007C4: 7D842A03
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000007C8: BE90246A
  s_cbranch_execz  label_01F8                           // 0000000007CC: BF880004
  v_readlane_b32  s3, v13, s3                           // 0000000007D0: 0206070D
  v_mov_b32     v27, s3                                 // 0000000007D4: 7E360203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000007D8: 8A8E7E0E
  s_cbranch_scc0  label_01FA                            // 0000000007DC: BF840002
  label_01F8:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000007E0: 87FE0E10
  s_branch      label_01F0                              // 0000000007E4: BF82FFF6
  label_01FA:
  s_mov_b64     exec, s[12:13]                          // 0000000007E8: BEFE040C
  v_cndmask_b32  v27, 0, v27, s[10:11]                  // 0000000007EC: D200001B 002A3680
  v_lshl_b64    v[28:29], 1, v14                        // 0000000007F4: D2C2001C 00021C81
  v_and_b32     v28, exec_lo, v28                       // 0000000007FC: 3638387E
  v_and_b32     v29, exec_hi, v29                       // 000000000800: 363A3A7F
  v_cmp_ne_u64  s[10:11], 0, v[28:29]                   // 000000000804: D1CA000A 00023880
  s_mov_b64     s[12:13], exec                          // 00000000080C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000810: BE8E047E
  s_nop         0x0000                                  // 000000000814: BF800000
  s_nop         0x0000                                  // 000000000818: BF800000
  s_nop         0x0000                                  // 00000000081C: BF800000
  label_0208:
  v_readfirstlane_b32  s3, v14                          // 000000000820: 7E06050E
  v_cmp_eq_u32  vcc, s3, v14                            // 000000000824: 7D841C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000828: BE90246A
  s_cbranch_execz  label_0210                           // 00000000082C: BF880004
  v_readlane_b32  s3, v11, s3                           // 000000000830: 0206070B
  v_mov_b32     v28, s3                                 // 000000000834: 7E380203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000838: 8A8E7E0E
  s_cbranch_scc0  label_0212                            // 00000000083C: BF840002
  label_0210:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000840: 87FE0E10
  s_branch      label_0208                              // 000000000844: BF82FFF6
  label_0212:
  s_mov_b64     exec, s[12:13]                          // 000000000848: BEFE040C
  v_cndmask_b32  v28, 0, v28, s[10:11]                  // 00000000084C: D200001C 002A3880
  v_lshl_b64    v[29:30], 1, v14                        // 000000000854: D2C2001D 00021C81
  v_and_b32     v29, exec_lo, v29                       // 00000000085C: 363A3A7E
  v_and_b32     v30, exec_hi, v30                       // 000000000860: 363C3C7F
  v_cmp_ne_u64  s[10:11], 0, v[29:30]                   // 000000000864: D1CA000A 00023A80
  s_mov_b64     s[12:13], exec                          // 00000000086C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000870: BE8E047E
  s_nop         0x0000                                  // 000000000874: BF800000
  s_nop         0x0000                                  // 000000000878: BF800000
  s_nop         0x0000                                  // 00000000087C: BF800000
  label_0220:
  v_readfirstlane_b32  s3, v14                          // 000000000880: 7E06050E
  v_cmp_eq_u32  vcc, s3, v14                            // 000000000884: 7D841C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000888: BE90246A
  s_cbranch_execz  label_0228                           // 00000000088C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000000890: 02060706
  v_mov_b32     v14, s3                                 // 000000000894: 7E1C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000898: 8A8E7E0E
  s_cbranch_scc0  label_022A                            // 00000000089C: BF840002
  label_0228:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000008A0: 87FE0E10
  s_branch      label_0220                              // 0000000008A4: BF82FFF6
  label_022A:
  s_mov_b64     exec, s[12:13]                          // 0000000008A8: BEFE040C
  v_cndmask_b32  v14, 0, v14, s[10:11]                  // 0000000008AC: D200000E 002A1C80
  v_lshl_b64    v[29:30], 1, v18                        // 0000000008B4: D2C2001D 00022481
  v_and_b32     v29, exec_lo, v29                       // 0000000008BC: 363A3A7E
  v_and_b32     v30, exec_hi, v30                       // 0000000008C0: 363C3C7F
  v_cmp_ne_u64  s[10:11], 0, v[29:30]                   // 0000000008C4: D1CA000A 00023A80
  s_mov_b64     s[12:13], exec                          // 0000000008CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000008D0: BE8E047E
  s_nop         0x0000                                  // 0000000008D4: BF800000
  s_nop         0x0000                                  // 0000000008D8: BF800000
  s_nop         0x0000                                  // 0000000008DC: BF800000
  label_0238:
  v_readfirstlane_b32  s3, v18                          // 0000000008E0: 7E060512
  v_cmp_eq_u32  vcc, s3, v18                            // 0000000008E4: 7D842403
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000008E8: BE90246A
  s_cbranch_execz  label_0240                           // 0000000008EC: BF880004
  v_readlane_b32  s3, v6, s3                            // 0000000008F0: 02060706
  v_mov_b32     v29, s3                                 // 0000000008F4: 7E3A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000008F8: 8A8E7E0E
  s_cbranch_scc0  label_0242                            // 0000000008FC: BF840002
  label_0240:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000900: 87FE0E10
  s_branch      label_0238                              // 000000000904: BF82FFF6
  label_0242:
  s_mov_b64     exec, s[12:13]                          // 000000000908: BEFE040C
  v_cndmask_b32  v29, 0, v29, s[10:11]                  // 00000000090C: D200001D 002A3A80
  v_lshl_b64    v[30:31], 1, v18                        // 000000000914: D2C2001E 00022481
  v_and_b32     v30, exec_lo, v30                       // 00000000091C: 363C3C7E
  v_and_b32     v31, exec_hi, v31                       // 000000000920: 363E3E7F
  v_cmp_ne_u64  s[10:11], 0, v[30:31]                   // 000000000924: D1CA000A 00023C80
  s_mov_b64     s[12:13], exec                          // 00000000092C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000930: BE8E047E
  s_nop         0x0000                                  // 000000000934: BF800000
  s_nop         0x0000                                  // 000000000938: BF800000
  s_nop         0x0000                                  // 00000000093C: BF800000
  label_0250:
  v_readfirstlane_b32  s3, v18                          // 000000000940: 7E060512
  v_cmp_eq_u32  vcc, s3, v18                            // 000000000944: 7D842403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000948: BE90246A
  s_cbranch_execz  label_0258                           // 00000000094C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000000950: 02060705
  v_mov_b32     v18, s3                                 // 000000000954: 7E240203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000958: 8A8E7E0E
  s_cbranch_scc0  label_025A                            // 00000000095C: BF840002
  label_0258:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000960: 87FE0E10
  s_branch      label_0250                              // 000000000964: BF82FFF6
  label_025A:
  s_mov_b64     exec, s[12:13]                          // 000000000968: BEFE040C
  v_cndmask_b32  v18, 0, v18, s[10:11]                  // 00000000096C: D2000012 002A2480
  v_lshl_b64    v[30:31], 1, v20                        // 000000000974: D2C2001E 00022881
  v_and_b32     v30, exec_lo, v30                       // 00000000097C: 363C3C7E
  v_and_b32     v31, exec_hi, v31                       // 000000000980: 363E3E7F
  v_cmp_ne_u64  s[10:11], 0, v[30:31]                   // 000000000984: D1CA000A 00023C80
  s_mov_b64     s[12:13], exec                          // 00000000098C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000990: BE8E047E
  s_nop         0x0000                                  // 000000000994: BF800000
  s_nop         0x0000                                  // 000000000998: BF800000
  s_nop         0x0000                                  // 00000000099C: BF800000
  label_0268:
  v_readfirstlane_b32  s3, v20                          // 0000000009A0: 7E060514
  v_cmp_eq_u32  vcc, s3, v20                            // 0000000009A4: 7D842803
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000009A8: BE90246A
  s_cbranch_execz  label_0270                           // 0000000009AC: BF880004
  v_readlane_b32  s3, v5, s3                            // 0000000009B0: 02060705
  v_mov_b32     v30, s3                                 // 0000000009B4: 7E3C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000009B8: 8A8E7E0E
  s_cbranch_scc0  label_0272                            // 0000000009BC: BF840002
  label_0270:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000009C0: 87FE0E10
  s_branch      label_0268                              // 0000000009C4: BF82FFF6
  label_0272:
  s_mov_b64     exec, s[12:13]                          // 0000000009C8: BEFE040C
  v_cndmask_b32  v30, 0, v30, s[10:11]                  // 0000000009CC: D200001E 002A3C80
  v_lshl_b64    v[31:32], 1, v20                        // 0000000009D4: D2C2001F 00022881
  v_and_b32     v31, exec_lo, v31                       // 0000000009DC: 363E3E7E
  v_and_b32     v32, exec_hi, v32                       // 0000000009E0: 3640407F
  v_cmp_ne_u64  s[10:11], 0, v[31:32]                   // 0000000009E4: D1CA000A 00023E80
  s_mov_b64     s[12:13], exec                          // 0000000009EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000009F0: BE8E047E
  s_nop         0x0000                                  // 0000000009F4: BF800000
  s_nop         0x0000                                  // 0000000009F8: BF800000
  s_nop         0x0000                                  // 0000000009FC: BF800000
  label_0280:
  v_readfirstlane_b32  s3, v20                          // 000000000A00: 7E060514
  v_cmp_eq_u32  vcc, s3, v20                            // 000000000A04: 7D842803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000A08: BE90246A
  s_cbranch_execz  label_0288                           // 000000000A0C: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000000A10: 02060708
  v_mov_b32     v20, s3                                 // 000000000A14: 7E280203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000A18: 8A8E7E0E
  s_cbranch_scc0  label_028A                            // 000000000A1C: BF840002
  label_0288:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000A20: 87FE0E10
  s_branch      label_0280                              // 000000000A24: BF82FFF6
  label_028A:
  s_mov_b64     exec, s[12:13]                          // 000000000A28: BEFE040C
  v_cndmask_b32  v20, 0, v20, s[10:11]                  // 000000000A2C: D2000014 002A2880
  v_lshl_b64    v[31:32], 1, v21                        // 000000000A34: D2C2001F 00022A81
  v_and_b32     v31, exec_lo, v31                       // 000000000A3C: 363E3E7E
  v_and_b32     v32, exec_hi, v32                       // 000000000A40: 3640407F
  v_cmp_ne_u64  s[10:11], 0, v[31:32]                   // 000000000A44: D1CA000A 00023E80
  s_mov_b64     s[12:13], exec                          // 000000000A4C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000A50: BE8E047E
  s_nop         0x0000                                  // 000000000A54: BF800000
  s_nop         0x0000                                  // 000000000A58: BF800000
  s_nop         0x0000                                  // 000000000A5C: BF800000
  label_0298:
  v_readfirstlane_b32  s3, v21                          // 000000000A60: 7E060515
  v_cmp_eq_u32  vcc, s3, v21                            // 000000000A64: 7D842A03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000A68: BE90246A
  s_cbranch_execz  label_02A0                           // 000000000A6C: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000000A70: 02060708
  v_mov_b32     v31, s3                                 // 000000000A74: 7E3E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000A78: 8A8E7E0E
  s_cbranch_scc0  label_02A2                            // 000000000A7C: BF840002
  label_02A0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000A80: 87FE0E10
  s_branch      label_0298                              // 000000000A84: BF82FFF6
  label_02A2:
  s_mov_b64     exec, s[12:13]                          // 000000000A88: BEFE040C
  v_cndmask_b32  v31, 0, v31, s[10:11]                  // 000000000A8C: D200001F 002A3E80
  v_lshl_b64    v[32:33], 1, v21                        // 000000000A94: D2C20020 00022A81
  v_and_b32     v32, exec_lo, v32                       // 000000000A9C: 3640407E
  v_and_b32     v33, exec_hi, v33                       // 000000000AA0: 3642427F
  v_cmp_ne_u64  s[10:11], 0, v[32:33]                   // 000000000AA4: D1CA000A 00024080
  s_mov_b64     s[12:13], exec                          // 000000000AAC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000AB0: BE8E047E
  s_nop         0x0000                                  // 000000000AB4: BF800000
  s_nop         0x0000                                  // 000000000AB8: BF800000
  s_nop         0x0000                                  // 000000000ABC: BF800000
  label_02B0:
  v_readfirstlane_b32  s3, v21                          // 000000000AC0: 7E060515
  v_cmp_eq_u32  vcc, s3, v21                            // 000000000AC4: 7D842A03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000AC8: BE90246A
  s_cbranch_execz  label_02B8                           // 000000000ACC: BF880004
  v_readlane_b32  s3, v10, s3                           // 000000000AD0: 0206070A
  v_mov_b32     v21, s3                                 // 000000000AD4: 7E2A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000AD8: 8A8E7E0E
  s_cbranch_scc0  label_02BA                            // 000000000ADC: BF840002
  label_02B8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000AE0: 87FE0E10
  s_branch      label_02B0                              // 000000000AE4: BF82FFF6
  label_02BA:
  s_mov_b64     exec, s[12:13]                          // 000000000AE8: BEFE040C
  s_add_u32     s12, s8, 4                              // 000000000AEC: 800C8408
  s_addc_u32    s13, s9, 0                              // 000000000AF0: 820D8009
  v_mov_b32     v32, s12                                // 000000000AF4: 7E40020C
  v_mov_b32     v33, s13                                // 000000000AF8: 7E42020D
  v_add_i32     v34, vcc, 1, v12                        // 000000000AFC: 4A441881
  v_add_i32     v35, vcc, 17, v12                       // 000000000B00: 4A461891
  v_and_b32     v34, 63, v34                            // 000000000B04: 364444BF
  flat_load_dword  v32, v[32:33]                        // 000000000B08: DC300000 20000020
  v_cndmask_b32  v21, 0, v21, s[10:11]                  // 000000000B10: D2000015 002A2A80
  v_and_b32     v33, 63, v35                            // 000000000B18: 364246BF
  v_lshl_b64    v[35:36], 1, v34                        // 000000000B1C: D2C20023 00024481
  v_and_b32     v35, exec_lo, v35                       // 000000000B24: 3646467E
  v_and_b32     v36, exec_hi, v36                       // 000000000B28: 3648487F
  v_cmp_ne_u64  s[10:11], 0, v[35:36]                   // 000000000B2C: D1CA000A 00024680
  s_mov_b64     s[12:13], exec                          // 000000000B34: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000B38: BE8E047E
  s_nop         0x0000                                  // 000000000B3C: BF800000
  label_02D0:
  v_readfirstlane_b32  s3, v34                          // 000000000B40: 7E060522
  v_cmp_eq_u32  vcc, s3, v34                            // 000000000B44: 7D844403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000B48: BE90246A
  s_cbranch_execz  label_02D8                           // 000000000B4C: BF880004
  v_readlane_b32  s3, v9, s3                            // 000000000B50: 02060709
  v_mov_b32     v35, s3                                 // 000000000B54: 7E460203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000B58: 8A8E7E0E
  s_cbranch_scc0  label_02DA                            // 000000000B5C: BF840002
  label_02D8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000B60: 87FE0E10
  s_branch      label_02D0                              // 000000000B64: BF82FFF6
  label_02DA:
  s_mov_b64     exec, s[12:13]                          // 000000000B68: BEFE040C
  v_cndmask_b32  v35, 0, v35, s[10:11]                  // 000000000B6C: D2000023 002A4680
  v_lshl_b64    v[36:37], 1, v34                        // 000000000B74: D2C20024 00024481
  v_and_b32     v36, exec_lo, v36                       // 000000000B7C: 3648487E
  v_and_b32     v37, exec_hi, v37                       // 000000000B80: 364A4A7F
  v_cmp_ne_u64  s[10:11], 0, v[36:37]                   // 000000000B84: D1CA000A 00024880
  s_mov_b64     s[12:13], exec                          // 000000000B8C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000B90: BE8E047E
  s_nop         0x0000                                  // 000000000B94: BF800000
  s_nop         0x0000                                  // 000000000B98: BF800000
  s_nop         0x0000                                  // 000000000B9C: BF800000
  label_02E8:
  v_readfirstlane_b32  s3, v34                          // 000000000BA0: 7E060522
  v_cmp_eq_u32  vcc, s3, v34                            // 000000000BA4: 7D844403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000BA8: BE90246A
  s_cbranch_execz  label_02F0                           // 000000000BAC: BF880004
  v_readlane_b32  s3, v15, s3                           // 000000000BB0: 0206070F
  v_mov_b32     v36, s3                                 // 000000000BB4: 7E480203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000BB8: 8A8E7E0E
  s_cbranch_scc0  label_02F2                            // 000000000BBC: BF840002
  label_02F0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000BC0: 87FE0E10
  s_branch      label_02E8                              // 000000000BC4: BF82FFF6
  label_02F2:
  s_mov_b64     exec, s[12:13]                          // 000000000BC8: BEFE040C
  v_cndmask_b32  v36, 0, v36, s[10:11]                  // 000000000BCC: D2000024 002A4880
  v_lshl_b64    v[37:38], 1, v33                        // 000000000BD4: D2C20025 00024281
  v_and_b32     v37, exec_lo, v37                       // 000000000BDC: 364A4A7E
  v_and_b32     v38, exec_hi, v38                       // 000000000BE0: 364C4C7F
  v_cmp_ne_u64  s[10:11], 0, v[37:38]                   // 000000000BE4: D1CA000A 00024A80
  s_mov_b64     s[12:13], exec                          // 000000000BEC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000BF0: BE8E047E
  s_nop         0x0000                                  // 000000000BF4: BF800000
  s_nop         0x0000                                  // 000000000BF8: BF800000
  s_nop         0x0000                                  // 000000000BFC: BF800000
  label_0300:
  v_readfirstlane_b32  s3, v33                          // 000000000C00: 7E060521
  v_cmp_eq_u32  vcc, s3, v33                            // 000000000C04: 7D844203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000C08: BE90246A
  s_cbranch_execz  label_0308                           // 000000000C0C: BF880004
  v_readlane_b32  s3, v15, s3                           // 000000000C10: 0206070F
  v_mov_b32     v37, s3                                 // 000000000C14: 7E4A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000C18: 8A8E7E0E
  s_cbranch_scc0  label_030A                            // 000000000C1C: BF840002
  label_0308:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000C20: 87FE0E10
  s_branch      label_0300                              // 000000000C24: BF82FFF6
  label_030A:
  s_mov_b64     exec, s[12:13]                          // 000000000C28: BEFE040C
  v_cndmask_b32  v37, 0, v37, s[10:11]                  // 000000000C2C: D2000025 002A4A80
  v_lshl_b64    v[38:39], 1, v33                        // 000000000C34: D2C20026 00024281
  v_and_b32     v38, exec_lo, v38                       // 000000000C3C: 364C4C7E
  v_and_b32     v39, exec_hi, v39                       // 000000000C40: 364E4E7F
  v_cmp_ne_u64  s[10:11], 0, v[38:39]                   // 000000000C44: D1CA000A 00024C80
  s_mov_b64     s[12:13], exec                          // 000000000C4C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000C50: BE8E047E
  s_nop         0x0000                                  // 000000000C54: BF800000
  s_nop         0x0000                                  // 000000000C58: BF800000
  s_nop         0x0000                                  // 000000000C5C: BF800000
  label_0318:
  v_readfirstlane_b32  s3, v33                          // 000000000C60: 7E060521
  v_cmp_eq_u32  vcc, s3, v33                            // 000000000C64: 7D844203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000C68: BE90246A
  s_cbranch_execz  label_0320                           // 000000000C6C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000000C70: 02060704
  v_mov_b32     v38, s3                                 // 000000000C74: 7E4C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000C78: 8A8E7E0E
  s_cbranch_scc0  label_0322                            // 000000000C7C: BF840002
  label_0320:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000C80: 87FE0E10
  s_branch      label_0318                              // 000000000C84: BF82FFF6
  label_0322:
  s_mov_b64     exec, s[12:13]                          // 000000000C88: BEFE040C
  v_cndmask_b32  v38, 0, v38, s[10:11]                  // 000000000C8C: D2000026 002A4C80
  v_add_i32     v39, vcc, 49, v12                       // 000000000C94: 4A4E18B1
  v_and_b32     v39, 63, v39                            // 000000000C98: 364E4EBF
  v_add_i32     v40, vcc, 33, v12                       // 000000000C9C: 4A5018A1
  v_and_b32     v40, 63, v40                            // 000000000CA0: 365050BF
  v_lshl_b64    v[41:42], 1, v40                        // 000000000CA4: D2C20029 00025081
  v_and_b32     v41, exec_lo, v41                       // 000000000CAC: 3652527E
  v_and_b32     v42, exec_hi, v42                       // 000000000CB0: 3654547F
  v_cmp_ne_u64  s[10:11], 0, v[41:42]                   // 000000000CB4: D1CA000A 00025280
  s_mov_b64     s[12:13], exec                          // 000000000CBC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000CC0: BE8E047E
  s_nop         0x0000                                  // 000000000CC4: BF800000
  s_nop         0x0000                                  // 000000000CC8: BF800000
  s_nop         0x0000                                  // 000000000CCC: BF800000
  s_nop         0x0000                                  // 000000000CD0: BF800000
  s_nop         0x0000                                  // 000000000CD4: BF800000
  s_nop         0x0000                                  // 000000000CD8: BF800000
  s_nop         0x0000                                  // 000000000CDC: BF800000
  label_0338:
  v_readfirstlane_b32  s3, v40                          // 000000000CE0: 7E060528
  v_cmp_eq_u32  vcc, s3, v40                            // 000000000CE4: 7D845003
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000CE8: BE90246A
  s_cbranch_execz  label_0340                           // 000000000CEC: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000000CF0: 02060704
  v_mov_b32     v41, s3                                 // 000000000CF4: 7E520203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000CF8: 8A8E7E0E
  s_cbranch_scc0  label_0342                            // 000000000CFC: BF840002
  label_0340:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000D00: 87FE0E10
  s_branch      label_0338                              // 000000000D04: BF82FFF6
  label_0342:
  s_mov_b64     exec, s[12:13]                          // 000000000D08: BEFE040C
  v_cndmask_b32  v41, 0, v41, s[10:11]                  // 000000000D0C: D2000029 002A5280
  v_lshl_b64    v[42:43], 1, v40                        // 000000000D14: D2C2002A 00025081
  v_and_b32     v42, exec_lo, v42                       // 000000000D1C: 3654547E
  v_and_b32     v43, exec_hi, v43                       // 000000000D20: 3656567F
  v_cmp_ne_u64  s[10:11], 0, v[42:43]                   // 000000000D24: D1CA000A 00025480
  s_mov_b64     s[12:13], exec                          // 000000000D2C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000D30: BE8E047E
  s_nop         0x0000                                  // 000000000D34: BF800000
  s_nop         0x0000                                  // 000000000D38: BF800000
  s_nop         0x0000                                  // 000000000D3C: BF800000
  label_0350:
  v_readfirstlane_b32  s3, v40                          // 000000000D40: 7E060528
  v_cmp_eq_u32  vcc, s3, v40                            // 000000000D44: 7D845003
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000D48: BE90246A
  s_cbranch_execz  label_0358                           // 000000000D4C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000000D50: 02060703
  v_mov_b32     v42, s3                                 // 000000000D54: 7E540203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000D58: 8A8E7E0E
  s_cbranch_scc0  label_035A                            // 000000000D5C: BF840002
  label_0358:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000D60: 87FE0E10
  s_branch      label_0350                              // 000000000D64: BF82FFF6
  label_035A:
  s_mov_b64     exec, s[12:13]                          // 000000000D68: BEFE040C
  v_cndmask_b32  v42, 0, v42, s[10:11]                  // 000000000D6C: D200002A 002A5480
  v_lshl_b64    v[43:44], 1, v39                        // 000000000D74: D2C2002B 00024E81
  v_and_b32     v43, exec_lo, v43                       // 000000000D7C: 3656567E
  v_and_b32     v44, exec_hi, v44                       // 000000000D80: 3658587F
  v_cmp_ne_u64  s[10:11], 0, v[43:44]                   // 000000000D84: D1CA000A 00025680
  s_mov_b64     s[12:13], exec                          // 000000000D8C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000D90: BE8E047E
  s_nop         0x0000                                  // 000000000D94: BF800000
  s_nop         0x0000                                  // 000000000D98: BF800000
  s_nop         0x0000                                  // 000000000D9C: BF800000
  label_0368:
  v_readfirstlane_b32  s3, v39                          // 000000000DA0: 7E060527
  v_cmp_eq_u32  vcc, s3, v39                            // 000000000DA4: 7D844E03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000DA8: BE90246A
  s_cbranch_execz  label_0370                           // 000000000DAC: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000000DB0: 02060703
  v_mov_b32     v43, s3                                 // 000000000DB4: 7E560203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000DB8: 8A8E7E0E
  s_cbranch_scc0  label_0372                            // 000000000DBC: BF840002
  label_0370:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000DC0: 87FE0E10
  s_branch      label_0368                              // 000000000DC4: BF82FFF6
  label_0372:
  s_mov_b64     exec, s[12:13]                          // 000000000DC8: BEFE040C
  v_cndmask_b32  v43, 0, v43, s[10:11]                  // 000000000DCC: D200002B 002A5680
  v_lshl_b64    v[44:45], 1, v39                        // 000000000DD4: D2C2002C 00024E81
  v_and_b32     v44, exec_lo, v44                       // 000000000DDC: 3658587E
  v_and_b32     v45, exec_hi, v45                       // 000000000DE0: 365A5A7F
  v_cmp_ne_u64  s[10:11], 0, v[44:45]                   // 000000000DE4: D1CA000A 00025880
  s_mov_b64     s[12:13], exec                          // 000000000DEC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000DF0: BE8E047E
  s_nop         0x0000                                  // 000000000DF4: BF800000
  s_nop         0x0000                                  // 000000000DF8: BF800000
  s_nop         0x0000                                  // 000000000DFC: BF800000
  label_0380:
  v_readfirstlane_b32  s3, v39                          // 000000000E00: 7E060527
  v_cmp_eq_u32  vcc, s3, v39                            // 000000000E04: 7D844E03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000E08: BE90246A
  s_cbranch_execz  label_0388                           // 000000000E0C: BF880004
  v_readlane_b32  s3, v13, s3                           // 000000000E10: 0206070D
  v_mov_b32     v44, s3                                 // 000000000E14: 7E580203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000E18: 8A8E7E0E
  s_cbranch_scc0  label_038A                            // 000000000E1C: BF840002
  label_0388:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000E20: 87FE0E10
  s_branch      label_0380                              // 000000000E24: BF82FFF6
  label_038A:
  s_mov_b64     exec, s[12:13]                          // 000000000E28: BEFE040C
  v_cndmask_b32  v44, 0, v44, s[10:11]                  // 000000000E2C: D200002C 002A5880
  v_lshl_b64    v[45:46], 1, v34                        // 000000000E34: D2C2002D 00024481
  v_and_b32     v45, exec_lo, v45                       // 000000000E3C: 365A5A7E
  v_and_b32     v46, exec_hi, v46                       // 000000000E40: 365C5C7F
  v_cmp_ne_u64  s[10:11], 0, v[45:46]                   // 000000000E44: D1CA000A 00025A80
  s_mov_b64     s[12:13], exec                          // 000000000E4C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000E50: BE8E047E
  s_nop         0x0000                                  // 000000000E54: BF800000
  s_nop         0x0000                                  // 000000000E58: BF800000
  s_nop         0x0000                                  // 000000000E5C: BF800000
  label_0398:
  v_readfirstlane_b32  s3, v34                          // 000000000E60: 7E060522
  v_cmp_eq_u32  vcc, s3, v34                            // 000000000E64: 7D844403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000E68: BE90246A
  s_cbranch_execz  label_03A0                           // 000000000E6C: BF880004
  v_readlane_b32  s3, v11, s3                           // 000000000E70: 0206070B
  v_mov_b32     v45, s3                                 // 000000000E74: 7E5A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000E78: 8A8E7E0E
  s_cbranch_scc0  label_03A2                            // 000000000E7C: BF840002
  label_03A0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000E80: 87FE0E10
  s_branch      label_0398                              // 000000000E84: BF82FFF6
  label_03A2:
  s_mov_b64     exec, s[12:13]                          // 000000000E88: BEFE040C
  v_cndmask_b32  v45, 0, v45, s[10:11]                  // 000000000E8C: D200002D 002A5A80
  v_lshl_b64    v[46:47], 1, v34                        // 000000000E94: D2C2002E 00024481
  v_and_b32     v46, exec_lo, v46                       // 000000000E9C: 365C5C7E
  v_and_b32     v47, exec_hi, v47                       // 000000000EA0: 365E5E7F
  v_cmp_ne_u64  s[10:11], 0, v[46:47]                   // 000000000EA4: D1CA000A 00025C80
  s_mov_b64     s[12:13], exec                          // 000000000EAC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000EB0: BE8E047E
  s_nop         0x0000                                  // 000000000EB4: BF800000
  s_nop         0x0000                                  // 000000000EB8: BF800000
  s_nop         0x0000                                  // 000000000EBC: BF800000
  label_03B0:
  v_readfirstlane_b32  s3, v34                          // 000000000EC0: 7E060522
  v_cmp_eq_u32  vcc, s3, v34                            // 000000000EC4: 7D844403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000EC8: BE90246A
  s_cbranch_execz  label_03B8                           // 000000000ECC: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000000ED0: 02060706
  v_mov_b32     v34, s3                                 // 000000000ED4: 7E440203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000ED8: 8A8E7E0E
  s_cbranch_scc0  label_03BA                            // 000000000EDC: BF840002
  label_03B8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000EE0: 87FE0E10
  s_branch      label_03B0                              // 000000000EE4: BF82FFF6
  label_03BA:
  s_mov_b64     exec, s[12:13]                          // 000000000EE8: BEFE040C
  v_cndmask_b32  v34, 0, v34, s[10:11]                  // 000000000EEC: D2000022 002A4480
  v_lshl_b64    v[46:47], 1, v33                        // 000000000EF4: D2C2002E 00024281
  v_and_b32     v46, exec_lo, v46                       // 000000000EFC: 365C5C7E
  v_and_b32     v47, exec_hi, v47                       // 000000000F00: 365E5E7F
  v_cmp_ne_u64  s[10:11], 0, v[46:47]                   // 000000000F04: D1CA000A 00025C80
  s_mov_b64     s[12:13], exec                          // 000000000F0C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000F10: BE8E047E
  s_nop         0x0000                                  // 000000000F14: BF800000
  s_nop         0x0000                                  // 000000000F18: BF800000
  s_nop         0x0000                                  // 000000000F1C: BF800000
  label_03C8:
  v_readfirstlane_b32  s3, v33                          // 000000000F20: 7E060521
  v_cmp_eq_u32  vcc, s3, v33                            // 000000000F24: 7D844203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000F28: BE90246A
  s_cbranch_execz  label_03D0                           // 000000000F2C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000000F30: 02060706
  v_mov_b32     v46, s3                                 // 000000000F34: 7E5C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000F38: 8A8E7E0E
  s_cbranch_scc0  label_03D2                            // 000000000F3C: BF840002
  label_03D0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000F40: 87FE0E10
  s_branch      label_03C8                              // 000000000F44: BF82FFF6
  label_03D2:
  s_mov_b64     exec, s[12:13]                          // 000000000F48: BEFE040C
  v_cndmask_b32  v46, 0, v46, s[10:11]                  // 000000000F4C: D200002E 002A5C80
  v_lshl_b64    v[47:48], 1, v33                        // 000000000F54: D2C2002F 00024281
  v_and_b32     v47, exec_lo, v47                       // 000000000F5C: 365E5E7E
  v_and_b32     v48, exec_hi, v48                       // 000000000F60: 3660607F
  v_cmp_ne_u64  s[10:11], 0, v[47:48]                   // 000000000F64: D1CA000A 00025E80
  s_mov_b64     s[12:13], exec                          // 000000000F6C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000F70: BE8E047E
  s_nop         0x0000                                  // 000000000F74: BF800000
  s_nop         0x0000                                  // 000000000F78: BF800000
  s_nop         0x0000                                  // 000000000F7C: BF800000
  label_03E0:
  v_readfirstlane_b32  s3, v33                          // 000000000F80: 7E060521
  v_cmp_eq_u32  vcc, s3, v33                            // 000000000F84: 7D844203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000F88: BE90246A
  s_cbranch_execz  label_03E8                           // 000000000F8C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000000F90: 02060705
  v_mov_b32     v33, s3                                 // 000000000F94: 7E420203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000F98: 8A8E7E0E
  s_cbranch_scc0  label_03EA                            // 000000000F9C: BF840002
  label_03E8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000000FA0: 87FE0E10
  s_branch      label_03E0                              // 000000000FA4: BF82FFF6
  label_03EA:
  s_mov_b64     exec, s[12:13]                          // 000000000FA8: BEFE040C
  v_cndmask_b32  v33, 0, v33, s[10:11]                  // 000000000FAC: D2000021 002A4280
  v_lshl_b64    v[47:48], 1, v40                        // 000000000FB4: D2C2002F 00025081
  v_and_b32     v47, exec_lo, v47                       // 000000000FBC: 365E5E7E
  v_and_b32     v48, exec_hi, v48                       // 000000000FC0: 3660607F
  v_cmp_ne_u64  s[10:11], 0, v[47:48]                   // 000000000FC4: D1CA000A 00025E80
  s_mov_b64     s[12:13], exec                          // 000000000FCC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000000FD0: BE8E047E
  s_nop         0x0000                                  // 000000000FD4: BF800000
  s_nop         0x0000                                  // 000000000FD8: BF800000
  s_nop         0x0000                                  // 000000000FDC: BF800000
  label_03F8:
  v_readfirstlane_b32  s3, v40                          // 000000000FE0: 7E060528
  v_cmp_eq_u32  vcc, s3, v40                            // 000000000FE4: 7D845003
  s_and_saveexec_b64  s[16:17], vcc                     // 000000000FE8: BE90246A
  s_cbranch_execz  label_0400                           // 000000000FEC: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000000FF0: 02060705
  v_mov_b32     v47, s3                                 // 000000000FF4: 7E5E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000FF8: 8A8E7E0E
  s_cbranch_scc0  label_0402                            // 000000000FFC: BF840002
  label_0400:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001000: 87FE0E10
  s_branch      label_03F8                              // 000000001004: BF82FFF6
  label_0402:
  s_mov_b64     exec, s[12:13]                          // 000000001008: BEFE040C
  v_cndmask_b32  v47, 0, v47, s[10:11]                  // 00000000100C: D200002F 002A5E80
  v_lshl_b64    v[48:49], 1, v40                        // 000000001014: D2C20030 00025081
  v_and_b32     v48, exec_lo, v48                       // 00000000101C: 3660607E
  v_and_b32     v49, exec_hi, v49                       // 000000001020: 3662627F
  v_cmp_ne_u64  s[10:11], 0, v[48:49]                   // 000000001024: D1CA000A 00026080
  s_mov_b64     s[12:13], exec                          // 00000000102C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001030: BE8E047E
  s_nop         0x0000                                  // 000000001034: BF800000
  s_nop         0x0000                                  // 000000001038: BF800000
  s_nop         0x0000                                  // 00000000103C: BF800000
  label_0410:
  v_readfirstlane_b32  s3, v40                          // 000000001040: 7E060528
  v_cmp_eq_u32  vcc, s3, v40                            // 000000001044: 7D845003
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001048: BE90246A
  s_cbranch_execz  label_0418                           // 00000000104C: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000001050: 02060708
  v_mov_b32     v40, s3                                 // 000000001054: 7E500203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001058: 8A8E7E0E
  s_cbranch_scc0  label_041A                            // 00000000105C: BF840002
  label_0418:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001060: 87FE0E10
  s_branch      label_0410                              // 000000001064: BF82FFF6
  label_041A:
  s_mov_b64     exec, s[12:13]                          // 000000001068: BEFE040C
  v_cndmask_b32  v40, 0, v40, s[10:11]                  // 00000000106C: D2000028 002A5080
  v_lshl_b64    v[48:49], 1, v39                        // 000000001074: D2C20030 00024E81
  v_and_b32     v48, exec_lo, v48                       // 00000000107C: 3660607E
  v_and_b32     v49, exec_hi, v49                       // 000000001080: 3662627F
  v_cmp_ne_u64  s[10:11], 0, v[48:49]                   // 000000001084: D1CA000A 00026080
  s_mov_b64     s[12:13], exec                          // 00000000108C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001090: BE8E047E
  s_nop         0x0000                                  // 000000001094: BF800000
  s_nop         0x0000                                  // 000000001098: BF800000
  s_nop         0x0000                                  // 00000000109C: BF800000
  label_0428:
  v_readfirstlane_b32  s3, v39                          // 0000000010A0: 7E060527
  v_cmp_eq_u32  vcc, s3, v39                            // 0000000010A4: 7D844E03
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000010A8: BE90246A
  s_cbranch_execz  label_0430                           // 0000000010AC: BF880004
  v_readlane_b32  s3, v8, s3                            // 0000000010B0: 02060708
  v_mov_b32     v48, s3                                 // 0000000010B4: 7E600203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000010B8: 8A8E7E0E
  s_cbranch_scc0  label_0432                            // 0000000010BC: BF840002
  label_0430:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000010C0: 87FE0E10
  s_branch      label_0428                              // 0000000010C4: BF82FFF6
  label_0432:
  s_mov_b64     exec, s[12:13]                          // 0000000010C8: BEFE040C
  v_cndmask_b32  v48, 0, v48, s[10:11]                  // 0000000010CC: D2000030 002A6080
  v_lshl_b64    v[49:50], 1, v39                        // 0000000010D4: D2C20031 00024E81
  v_and_b32     v49, exec_lo, v49                       // 0000000010DC: 3662627E
  v_and_b32     v50, exec_hi, v50                       // 0000000010E0: 3664647F
  v_cmp_ne_u64  s[10:11], 0, v[49:50]                   // 0000000010E4: D1CA000A 00026280
  s_mov_b64     s[12:13], exec                          // 0000000010EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000010F0: BE8E047E
  s_nop         0x0000                                  // 0000000010F4: BF800000
  s_nop         0x0000                                  // 0000000010F8: BF800000
  s_nop         0x0000                                  // 0000000010FC: BF800000
  label_0440:
  v_readfirstlane_b32  s3, v39                          // 000000001100: 7E060527
  v_cmp_eq_u32  vcc, s3, v39                            // 000000001104: 7D844E03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001108: BE90246A
  s_cbranch_execz  label_0448                           // 00000000110C: BF880004
  v_readlane_b32  s3, v10, s3                           // 000000001110: 0206070A
  v_mov_b32     v39, s3                                 // 000000001114: 7E4E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001118: 8A8E7E0E
  s_cbranch_scc0  label_044A                            // 00000000111C: BF840002
  label_0448:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001120: 87FE0E10
  s_branch      label_0440                              // 000000001124: BF82FFF6
  label_044A:
  s_mov_b64     exec, s[12:13]                          // 000000001128: BEFE040C
  s_add_u32     s12, s8, 8                              // 00000000112C: 800C8808
  s_addc_u32    s13, s9, 0                              // 000000001130: 820D8009
  v_mov_b32     v49, s12                                // 000000001134: 7E62020C
  v_mov_b32     v50, s13                                // 000000001138: 7E64020D
  v_add_i32     v51, vcc, 2, v12                        // 00000000113C: 4A661882
  v_and_b32     v51, 63, v51                            // 000000001140: 366666BF
  flat_load_dword  v49, v[49:50]                        // 000000001144: DC300000 31000031
  v_cndmask_b32  v39, 0, v39, s[10:11]                  // 00000000114C: D2000027 002A4E80
  v_lshl_b64    v[52:53], 1, v51                        // 000000001154: D2C20034 00026681
  v_and_b32     v52, exec_lo, v52                       // 00000000115C: 3668687E
  v_and_b32     v53, exec_hi, v53                       // 000000001160: 366A6A7F
  v_cmp_ne_u64  s[10:11], 0, v[52:53]                   // 000000001164: D1CA000A 00026880
  s_mov_b64     s[12:13], exec                          // 00000000116C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001170: BE8E047E
  s_nop         0x0000                                  // 000000001174: BF800000
  s_nop         0x0000                                  // 000000001178: BF800000
  s_nop         0x0000                                  // 00000000117C: BF800000
  label_0460:
  v_readfirstlane_b32  s3, v51                          // 000000001180: 7E060533
  v_cmp_eq_u32  vcc, s3, v51                            // 000000001184: 7D846603
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001188: BE90246A
  s_cbranch_execz  label_0468                           // 00000000118C: BF880004
  v_readlane_b32  s3, v9, s3                            // 000000001190: 02060709
  v_mov_b32     v50, s3                                 // 000000001194: 7E640203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001198: 8A8E7E0E
  s_cbranch_scc0  label_046A                            // 00000000119C: BF840002
  label_0468:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000011A0: 87FE0E10
  s_branch      label_0460                              // 0000000011A4: BF82FFF6
  label_046A:
  s_mov_b64     exec, s[12:13]                          // 0000000011A8: BEFE040C
  v_cndmask_b32  v50, 0, v50, s[10:11]                  // 0000000011AC: D2000032 002A6480
  v_lshl_b64    v[52:53], 1, v51                        // 0000000011B4: D2C20034 00026681
  v_and_b32     v52, exec_lo, v52                       // 0000000011BC: 3668687E
  v_and_b32     v53, exec_hi, v53                       // 0000000011C0: 366A6A7F
  v_cmp_ne_u64  s[10:11], 0, v[52:53]                   // 0000000011C4: D1CA000A 00026880
  s_mov_b64     s[12:13], exec                          // 0000000011CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000011D0: BE8E047E
  s_nop         0x0000                                  // 0000000011D4: BF800000
  s_nop         0x0000                                  // 0000000011D8: BF800000
  s_nop         0x0000                                  // 0000000011DC: BF800000
  label_0478:
  v_readfirstlane_b32  s3, v51                          // 0000000011E0: 7E060533
  v_cmp_eq_u32  vcc, s3, v51                            // 0000000011E4: 7D846603
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000011E8: BE90246A
  s_cbranch_execz  label_0480                           // 0000000011EC: BF880004
  v_readlane_b32  s3, v15, s3                           // 0000000011F0: 0206070F
  v_mov_b32     v52, s3                                 // 0000000011F4: 7E680203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000011F8: 8A8E7E0E
  s_cbranch_scc0  label_0482                            // 0000000011FC: BF840002
  label_0480:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001200: 87FE0E10
  s_branch      label_0478                              // 000000001204: BF82FFF6
  label_0482:
  s_mov_b64     exec, s[12:13]                          // 000000001208: BEFE040C
  v_cndmask_b32  v52, 0, v52, s[10:11]                  // 00000000120C: D2000034 002A6880
  v_add_i32     v53, vcc, 50, v12                       // 000000001214: 4A6A18B2
  v_and_b32     v53, 63, v53                            // 000000001218: 366A6ABF
  v_add_i32     v54, vcc, 34, v12                       // 00000000121C: 4A6C18A2
  v_and_b32     v54, 63, v54                            // 000000001220: 366C6CBF
  v_add_i32     v55, vcc, 18, v12                       // 000000001224: 4A6E1892
  v_and_b32     v55, 63, v55                            // 000000001228: 366E6EBF
  v_lshl_b64    v[56:57], 1, v55                        // 00000000122C: D2C20038 00026E81
  v_and_b32     v56, exec_lo, v56                       // 000000001234: 3670707E
  v_and_b32     v57, exec_hi, v57                       // 000000001238: 3672727F
  v_cmp_ne_u64  s[10:11], 0, v[56:57]                   // 00000000123C: D1CA000A 00027080
  s_mov_b64     s[12:13], exec                          // 000000001244: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001248: BE8E047E
  s_nop         0x0000                                  // 00000000124C: BF800000
  s_nop         0x0000                                  // 000000001250: BF800000
  s_nop         0x0000                                  // 000000001254: BF800000
  s_nop         0x0000                                  // 000000001258: BF800000
  s_nop         0x0000                                  // 00000000125C: BF800000
  label_0498:
  v_readfirstlane_b32  s3, v55                          // 000000001260: 7E060537
  v_cmp_eq_u32  vcc, s3, v55                            // 000000001264: 7D846E03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001268: BE90246A
  s_cbranch_execz  label_04A0                           // 00000000126C: BF880004
  v_readlane_b32  s3, v15, s3                           // 000000001270: 0206070F
  v_mov_b32     v56, s3                                 // 000000001274: 7E700203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001278: 8A8E7E0E
  s_cbranch_scc0  label_04A2                            // 00000000127C: BF840002
  label_04A0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001280: 87FE0E10
  s_branch      label_0498                              // 000000001284: BF82FFF6
  label_04A2:
  s_mov_b64     exec, s[12:13]                          // 000000001288: BEFE040C
  v_cndmask_b32  v56, 0, v56, s[10:11]                  // 00000000128C: D2000038 002A7080
  v_lshl_b64    v[57:58], 1, v55                        // 000000001294: D2C20039 00026E81
  v_and_b32     v57, exec_lo, v57                       // 00000000129C: 3672727E
  v_and_b32     v58, exec_hi, v58                       // 0000000012A0: 3674747F
  v_cmp_ne_u64  s[10:11], 0, v[57:58]                   // 0000000012A4: D1CA000A 00027280
  s_mov_b64     s[12:13], exec                          // 0000000012AC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000012B0: BE8E047E
  s_nop         0x0000                                  // 0000000012B4: BF800000
  s_nop         0x0000                                  // 0000000012B8: BF800000
  s_nop         0x0000                                  // 0000000012BC: BF800000
  label_04B0:
  v_readfirstlane_b32  s3, v55                          // 0000000012C0: 7E060537
  v_cmp_eq_u32  vcc, s3, v55                            // 0000000012C4: 7D846E03
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000012C8: BE90246A
  s_cbranch_execz  label_04B8                           // 0000000012CC: BF880004
  v_readlane_b32  s3, v4, s3                            // 0000000012D0: 02060704
  v_mov_b32     v57, s3                                 // 0000000012D4: 7E720203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000012D8: 8A8E7E0E
  s_cbranch_scc0  label_04BA                            // 0000000012DC: BF840002
  label_04B8:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000012E0: 87FE0E10
  s_branch      label_04B0                              // 0000000012E4: BF82FFF6
  label_04BA:
  s_mov_b64     exec, s[12:13]                          // 0000000012E8: BEFE040C
  v_cndmask_b32  v57, 0, v57, s[10:11]                  // 0000000012EC: D2000039 002A7280
  v_lshl_b64    v[58:59], 1, v54                        // 0000000012F4: D2C2003A 00026C81
  v_and_b32     v58, exec_lo, v58                       // 0000000012FC: 3674747E
  v_and_b32     v59, exec_hi, v59                       // 000000001300: 3676767F
  v_cmp_ne_u64  s[10:11], 0, v[58:59]                   // 000000001304: D1CA000A 00027480
  s_mov_b64     s[12:13], exec                          // 00000000130C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001310: BE8E047E
  s_nop         0x0000                                  // 000000001314: BF800000
  s_nop         0x0000                                  // 000000001318: BF800000
  s_nop         0x0000                                  // 00000000131C: BF800000
  label_04C8:
  v_readfirstlane_b32  s3, v54                          // 000000001320: 7E060536
  v_cmp_eq_u32  vcc, s3, v54                            // 000000001324: 7D846C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001328: BE90246A
  s_cbranch_execz  label_04D0                           // 00000000132C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000001330: 02060704
  v_mov_b32     v58, s3                                 // 000000001334: 7E740203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001338: 8A8E7E0E
  s_cbranch_scc0  label_04D2                            // 00000000133C: BF840002
  label_04D0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001340: 87FE0E10
  s_branch      label_04C8                              // 000000001344: BF82FFF6
  label_04D2:
  s_mov_b64     exec, s[12:13]                          // 000000001348: BEFE040C
  v_cndmask_b32  v58, 0, v58, s[10:11]                  // 00000000134C: D200003A 002A7480
  v_lshl_b64    v[59:60], 1, v54                        // 000000001354: D2C2003B 00026C81
  v_and_b32     v59, exec_lo, v59                       // 00000000135C: 3676767E
  v_and_b32     v60, exec_hi, v60                       // 000000001360: 3678787F
  v_cmp_ne_u64  s[10:11], 0, v[59:60]                   // 000000001364: D1CA000A 00027680
  s_mov_b64     s[12:13], exec                          // 00000000136C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001370: BE8E047E
  s_nop         0x0000                                  // 000000001374: BF800000
  s_nop         0x0000                                  // 000000001378: BF800000
  s_nop         0x0000                                  // 00000000137C: BF800000
  label_04E0:
  v_readfirstlane_b32  s3, v54                          // 000000001380: 7E060536
  v_cmp_eq_u32  vcc, s3, v54                            // 000000001384: 7D846C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001388: BE90246A
  s_cbranch_execz  label_04E8                           // 00000000138C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000001390: 02060703
  v_mov_b32     v59, s3                                 // 000000001394: 7E760203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001398: 8A8E7E0E
  s_cbranch_scc0  label_04EA                            // 00000000139C: BF840002
  label_04E8:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000013A0: 87FE0E10
  s_branch      label_04E0                              // 0000000013A4: BF82FFF6
  label_04EA:
  s_mov_b64     exec, s[12:13]                          // 0000000013A8: BEFE040C
  v_cndmask_b32  v59, 0, v59, s[10:11]                  // 0000000013AC: D200003B 002A7680
  v_lshl_b64    v[60:61], 1, v53                        // 0000000013B4: D2C2003C 00026A81
  v_and_b32     v60, exec_lo, v60                       // 0000000013BC: 3678787E
  v_and_b32     v61, exec_hi, v61                       // 0000000013C0: 367A7A7F
  v_cmp_ne_u64  s[10:11], 0, v[60:61]                   // 0000000013C4: D1CA000A 00027880
  s_mov_b64     s[12:13], exec                          // 0000000013CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000013D0: BE8E047E
  s_nop         0x0000                                  // 0000000013D4: BF800000
  s_nop         0x0000                                  // 0000000013D8: BF800000
  s_nop         0x0000                                  // 0000000013DC: BF800000
  label_04F8:
  v_readfirstlane_b32  s3, v53                          // 0000000013E0: 7E060535
  v_cmp_eq_u32  vcc, s3, v53                            // 0000000013E4: 7D846A03
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000013E8: BE90246A
  s_cbranch_execz  label_0500                           // 0000000013EC: BF880004
  v_readlane_b32  s3, v3, s3                            // 0000000013F0: 02060703
  v_mov_b32     v60, s3                                 // 0000000013F4: 7E780203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000013F8: 8A8E7E0E
  s_cbranch_scc0  label_0502                            // 0000000013FC: BF840002
  label_0500:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001400: 87FE0E10
  s_branch      label_04F8                              // 000000001404: BF82FFF6
  label_0502:
  s_mov_b64     exec, s[12:13]                          // 000000001408: BEFE040C
  v_cndmask_b32  v60, 0, v60, s[10:11]                  // 00000000140C: D200003C 002A7880
  v_lshl_b64    v[61:62], 1, v53                        // 000000001414: D2C2003D 00026A81
  v_and_b32     v61, exec_lo, v61                       // 00000000141C: 367A7A7E
  v_and_b32     v62, exec_hi, v62                       // 000000001420: 367C7C7F
  v_cmp_ne_u64  s[10:11], 0, v[61:62]                   // 000000001424: D1CA000A 00027A80
  s_mov_b64     s[12:13], exec                          // 00000000142C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001430: BE8E047E
  s_nop         0x0000                                  // 000000001434: BF800000
  s_nop         0x0000                                  // 000000001438: BF800000
  s_nop         0x0000                                  // 00000000143C: BF800000
  label_0510:
  v_readfirstlane_b32  s3, v53                          // 000000001440: 7E060535
  v_cmp_eq_u32  vcc, s3, v53                            // 000000001444: 7D846A03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001448: BE90246A
  s_cbranch_execz  label_0518                           // 00000000144C: BF880004
  v_readlane_b32  s3, v13, s3                           // 000000001450: 0206070D
  v_mov_b32     v61, s3                                 // 000000001454: 7E7A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001458: 8A8E7E0E
  s_cbranch_scc0  label_051A                            // 00000000145C: BF840002
  label_0518:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001460: 87FE0E10
  s_branch      label_0510                              // 000000001464: BF82FFF6
  label_051A:
  s_mov_b64     exec, s[12:13]                          // 000000001468: BEFE040C
  v_cndmask_b32  v61, 0, v61, s[10:11]                  // 00000000146C: D200003D 002A7A80
  v_lshl_b64    v[62:63], 1, v51                        // 000000001474: D2C2003E 00026681
  v_and_b32     v62, exec_lo, v62                       // 00000000147C: 367C7C7E
  v_and_b32     v63, exec_hi, v63                       // 000000001480: 367E7E7F
  v_cmp_ne_u64  s[10:11], 0, v[62:63]                   // 000000001484: D1CA000A 00027C80
  s_mov_b64     s[12:13], exec                          // 00000000148C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001490: BE8E047E
  s_nop         0x0000                                  // 000000001494: BF800000
  s_nop         0x0000                                  // 000000001498: BF800000
  s_nop         0x0000                                  // 00000000149C: BF800000
  label_0528:
  v_readfirstlane_b32  s3, v51                          // 0000000014A0: 7E060533
  v_cmp_eq_u32  vcc, s3, v51                            // 0000000014A4: 7D846603
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000014A8: BE90246A
  s_cbranch_execz  label_0530                           // 0000000014AC: BF880004
  v_readlane_b32  s3, v11, s3                           // 0000000014B0: 0206070B
  v_mov_b32     v62, s3                                 // 0000000014B4: 7E7C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000014B8: 8A8E7E0E
  s_cbranch_scc0  label_0532                            // 0000000014BC: BF840002
  label_0530:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000014C0: 87FE0E10
  s_branch      label_0528                              // 0000000014C4: BF82FFF6
  label_0532:
  s_mov_b64     exec, s[12:13]                          // 0000000014C8: BEFE040C
  v_cndmask_b32  v62, 0, v62, s[10:11]                  // 0000000014CC: D200003E 002A7C80
  v_lshl_b64    v[63:64], 1, v51                        // 0000000014D4: D2C2003F 00026681
  v_and_b32     v63, exec_lo, v63                       // 0000000014DC: 367E7E7E
  v_and_b32     v64, exec_hi, v64                       // 0000000014E0: 3680807F
  v_cmp_ne_u64  s[10:11], 0, v[63:64]                   // 0000000014E4: D1CA000A 00027E80
  s_mov_b64     s[12:13], exec                          // 0000000014EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000014F0: BE8E047E
  s_nop         0x0000                                  // 0000000014F4: BF800000
  s_nop         0x0000                                  // 0000000014F8: BF800000
  s_nop         0x0000                                  // 0000000014FC: BF800000
  label_0540:
  v_readfirstlane_b32  s3, v51                          // 000000001500: 7E060533
  v_cmp_eq_u32  vcc, s3, v51                            // 000000001504: 7D846603
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001508: BE90246A
  s_cbranch_execz  label_0548                           // 00000000150C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000001510: 02060706
  v_mov_b32     v51, s3                                 // 000000001514: 7E660203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001518: 8A8E7E0E
  s_cbranch_scc0  label_054A                            // 00000000151C: BF840002
  label_0548:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001520: 87FE0E10
  s_branch      label_0540                              // 000000001524: BF82FFF6
  label_054A:
  s_mov_b64     exec, s[12:13]                          // 000000001528: BEFE040C
  v_cndmask_b32  v51, 0, v51, s[10:11]                  // 00000000152C: D2000033 002A6680
  v_lshl_b64    v[63:64], 1, v55                        // 000000001534: D2C2003F 00026E81
  v_and_b32     v63, exec_lo, v63                       // 00000000153C: 367E7E7E
  v_and_b32     v64, exec_hi, v64                       // 000000001540: 3680807F
  v_cmp_ne_u64  s[10:11], 0, v[63:64]                   // 000000001544: D1CA000A 00027E80
  s_mov_b64     s[12:13], exec                          // 00000000154C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001550: BE8E047E
  s_nop         0x0000                                  // 000000001554: BF800000
  s_nop         0x0000                                  // 000000001558: BF800000
  s_nop         0x0000                                  // 00000000155C: BF800000
  label_0558:
  v_readfirstlane_b32  s3, v55                          // 000000001560: 7E060537
  v_cmp_eq_u32  vcc, s3, v55                            // 000000001564: 7D846E03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001568: BE90246A
  s_cbranch_execz  label_0560                           // 00000000156C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000001570: 02060706
  v_mov_b32     v63, s3                                 // 000000001574: 7E7E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001578: 8A8E7E0E
  s_cbranch_scc0  label_0562                            // 00000000157C: BF840002
  label_0560:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001580: 87FE0E10
  s_branch      label_0558                              // 000000001584: BF82FFF6
  label_0562:
  s_mov_b64     exec, s[12:13]                          // 000000001588: BEFE040C
  v_cndmask_b32  v63, 0, v63, s[10:11]                  // 00000000158C: D200003F 002A7E80
  v_lshl_b64    v[64:65], 1, v55                        // 000000001594: D2C20040 00026E81
  v_and_b32     v64, exec_lo, v64                       // 00000000159C: 3680807E
  v_and_b32     v65, exec_hi, v65                       // 0000000015A0: 3682827F
  v_cmp_ne_u64  s[10:11], 0, v[64:65]                   // 0000000015A4: D1CA000A 00028080
  s_mov_b64     s[12:13], exec                          // 0000000015AC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000015B0: BE8E047E
  s_nop         0x0000                                  // 0000000015B4: BF800000
  s_nop         0x0000                                  // 0000000015B8: BF800000
  s_nop         0x0000                                  // 0000000015BC: BF800000
  label_0570:
  v_readfirstlane_b32  s3, v55                          // 0000000015C0: 7E060537
  v_cmp_eq_u32  vcc, s3, v55                            // 0000000015C4: 7D846E03
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000015C8: BE90246A
  s_cbranch_execz  label_0578                           // 0000000015CC: BF880004
  v_readlane_b32  s3, v5, s3                            // 0000000015D0: 02060705
  v_mov_b32     v55, s3                                 // 0000000015D4: 7E6E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000015D8: 8A8E7E0E
  s_cbranch_scc0  label_057A                            // 0000000015DC: BF840002
  label_0578:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000015E0: 87FE0E10
  s_branch      label_0570                              // 0000000015E4: BF82FFF6
  label_057A:
  s_mov_b64     exec, s[12:13]                          // 0000000015E8: BEFE040C
  v_cndmask_b32  v55, 0, v55, s[10:11]                  // 0000000015EC: D2000037 002A6E80
  v_lshl_b64    v[64:65], 1, v54                        // 0000000015F4: D2C20040 00026C81
  v_and_b32     v64, exec_lo, v64                       // 0000000015FC: 3680807E
  v_and_b32     v65, exec_hi, v65                       // 000000001600: 3682827F
  v_cmp_ne_u64  s[10:11], 0, v[64:65]                   // 000000001604: D1CA000A 00028080
  s_mov_b64     s[12:13], exec                          // 00000000160C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001610: BE8E047E
  s_nop         0x0000                                  // 000000001614: BF800000
  s_nop         0x0000                                  // 000000001618: BF800000
  s_nop         0x0000                                  // 00000000161C: BF800000
  label_0588:
  v_readfirstlane_b32  s3, v54                          // 000000001620: 7E060536
  v_cmp_eq_u32  vcc, s3, v54                            // 000000001624: 7D846C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001628: BE90246A
  s_cbranch_execz  label_0590                           // 00000000162C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000001630: 02060705
  v_mov_b32     v64, s3                                 // 000000001634: 7E800203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001638: 8A8E7E0E
  s_cbranch_scc0  label_0592                            // 00000000163C: BF840002
  label_0590:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001640: 87FE0E10
  s_branch      label_0588                              // 000000001644: BF82FFF6
  label_0592:
  s_mov_b64     exec, s[12:13]                          // 000000001648: BEFE040C
  v_cndmask_b32  v64, 0, v64, s[10:11]                  // 00000000164C: D2000040 002A8080
  v_lshl_b64    v[65:66], 1, v54                        // 000000001654: D2C20041 00026C81
  v_and_b32     v65, exec_lo, v65                       // 00000000165C: 3682827E
  v_and_b32     v66, exec_hi, v66                       // 000000001660: 3684847F
  v_cmp_ne_u64  s[10:11], 0, v[65:66]                   // 000000001664: D1CA000A 00028280
  s_mov_b64     s[12:13], exec                          // 00000000166C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001670: BE8E047E
  s_nop         0x0000                                  // 000000001674: BF800000
  s_nop         0x0000                                  // 000000001678: BF800000
  s_nop         0x0000                                  // 00000000167C: BF800000
  label_05A0:
  v_readfirstlane_b32  s3, v54                          // 000000001680: 7E060536
  v_cmp_eq_u32  vcc, s3, v54                            // 000000001684: 7D846C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001688: BE90246A
  s_cbranch_execz  label_05A8                           // 00000000168C: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000001690: 02060708
  v_mov_b32     v54, s3                                 // 000000001694: 7E6C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001698: 8A8E7E0E
  s_cbranch_scc0  label_05AA                            // 00000000169C: BF840002
  label_05A8:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000016A0: 87FE0E10
  s_branch      label_05A0                              // 0000000016A4: BF82FFF6
  label_05AA:
  s_mov_b64     exec, s[12:13]                          // 0000000016A8: BEFE040C
  v_cndmask_b32  v54, 0, v54, s[10:11]                  // 0000000016AC: D2000036 002A6C80
  v_lshl_b64    v[65:66], 1, v53                        // 0000000016B4: D2C20041 00026A81
  v_and_b32     v65, exec_lo, v65                       // 0000000016BC: 3682827E
  v_and_b32     v66, exec_hi, v66                       // 0000000016C0: 3684847F
  v_cmp_ne_u64  s[10:11], 0, v[65:66]                   // 0000000016C4: D1CA000A 00028280
  s_mov_b64     s[12:13], exec                          // 0000000016CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000016D0: BE8E047E
  s_nop         0x0000                                  // 0000000016D4: BF800000
  s_nop         0x0000                                  // 0000000016D8: BF800000
  s_nop         0x0000                                  // 0000000016DC: BF800000
  label_05B8:
  v_readfirstlane_b32  s3, v53                          // 0000000016E0: 7E060535
  v_cmp_eq_u32  vcc, s3, v53                            // 0000000016E4: 7D846A03
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000016E8: BE90246A
  s_cbranch_execz  label_05C0                           // 0000000016EC: BF880004
  v_readlane_b32  s3, v8, s3                            // 0000000016F0: 02060708
  v_mov_b32     v65, s3                                 // 0000000016F4: 7E820203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000016F8: 8A8E7E0E
  s_cbranch_scc0  label_05C2                            // 0000000016FC: BF840002
  label_05C0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001700: 87FE0E10
  s_branch      label_05B8                              // 000000001704: BF82FFF6
  label_05C2:
  s_mov_b64     exec, s[12:13]                          // 000000001708: BEFE040C
  v_cndmask_b32  v65, 0, v65, s[10:11]                  // 00000000170C: D2000041 002A8280
  v_lshl_b64    v[66:67], 1, v53                        // 000000001714: D2C20042 00026A81
  v_and_b32     v66, exec_lo, v66                       // 00000000171C: 3684847E
  v_and_b32     v67, exec_hi, v67                       // 000000001720: 3686867F
  v_cmp_ne_u64  s[10:11], 0, v[66:67]                   // 000000001724: D1CA000A 00028480
  s_mov_b64     s[12:13], exec                          // 00000000172C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001730: BE8E047E
  s_nop         0x0000                                  // 000000001734: BF800000
  s_nop         0x0000                                  // 000000001738: BF800000
  s_nop         0x0000                                  // 00000000173C: BF800000
  label_05D0:
  v_readfirstlane_b32  s3, v53                          // 000000001740: 7E060535
  v_cmp_eq_u32  vcc, s3, v53                            // 000000001744: 7D846A03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001748: BE90246A
  s_cbranch_execz  label_05D8                           // 00000000174C: BF880004
  v_readlane_b32  s3, v10, s3                           // 000000001750: 0206070A
  v_mov_b32     v53, s3                                 // 000000001754: 7E6A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001758: 8A8E7E0E
  s_cbranch_scc0  label_05DA                            // 00000000175C: BF840002
  label_05D8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001760: 87FE0E10
  s_branch      label_05D0                              // 000000001764: BF82FFF6
  label_05DA:
  s_mov_b64     exec, s[12:13]                          // 000000001768: BEFE040C
  s_add_u32     s12, s8, 12                             // 00000000176C: 800C8C08
  s_addc_u32    s13, s9, 0                              // 000000001770: 820D8009
  v_mov_b32     v66, s12                                // 000000001774: 7E84020C
  v_mov_b32     v67, s13                                // 000000001778: 7E86020D
  v_add_i32     v68, vcc, 10, v12                       // 00000000177C: 4A88188A
  v_and_b32     v68, 63, v68                            // 000000001780: 368888BF
  flat_load_dword  v66, v[66:67]                        // 000000001784: DC300000 42000042
  v_cndmask_b32  v53, 0, v53, s[10:11]                  // 00000000178C: D2000035 002A6A80
  v_lshl_b64    v[69:70], 1, v68                        // 000000001794: D2C20045 00028881
  v_and_b32     v69, exec_lo, v69                       // 00000000179C: 368A8A7E
  v_and_b32     v70, exec_hi, v70                       // 0000000017A0: 368C8C7F
  v_cmp_ne_u64  s[10:11], 0, v[69:70]                   // 0000000017A4: D1CA000A 00028A80
  s_mov_b64     s[12:13], exec                          // 0000000017AC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000017B0: BE8E047E
  s_nop         0x0000                                  // 0000000017B4: BF800000
  s_nop         0x0000                                  // 0000000017B8: BF800000
  s_nop         0x0000                                  // 0000000017BC: BF800000
  label_05F0:
  v_readfirstlane_b32  s3, v68                          // 0000000017C0: 7E060544
  v_cmp_eq_u32  vcc, s3, v68                            // 0000000017C4: 7D848803
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000017C8: BE90246A
  s_cbranch_execz  label_05F8                           // 0000000017CC: BF880004
  v_readlane_b32  s3, v9, s3                            // 0000000017D0: 02060709
  v_mov_b32     v67, s3                                 // 0000000017D4: 7E860203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000017D8: 8A8E7E0E
  s_cbranch_scc0  label_05FA                            // 0000000017DC: BF840002
  label_05F8:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000017E0: 87FE0E10
  s_branch      label_05F0                              // 0000000017E4: BF82FFF6
  label_05FA:
  s_mov_b64     exec, s[12:13]                          // 0000000017E8: BEFE040C
  v_cndmask_b32  v67, 0, v67, s[10:11]                  // 0000000017EC: D2000043 002A8680
  v_add_i32     v69, vcc, 42, v12                       // 0000000017F4: 4A8A18AA
  v_and_b32     v69, 63, v69                            // 0000000017F8: 368A8ABF
  v_add_i32     v70, vcc, 26, v12                       // 0000000017FC: 4A8C189A
  v_and_b32     v70, 63, v70                            // 000000001800: 368C8CBF
  v_lshl_b64    v[71:72], 1, v68                        // 000000001804: D2C20047 00028881
  v_and_b32     v71, exec_lo, v71                       // 00000000180C: 368E8E7E
  v_and_b32     v72, exec_hi, v72                       // 000000001810: 3690907F
  v_cmp_ne_u64  s[10:11], 0, v[71:72]                   // 000000001814: D1CA000A 00028E80
  s_mov_b64     s[12:13], exec                          // 00000000181C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001820: BE8E047E
  s_nop         0x0000                                  // 000000001824: BF800000
  s_nop         0x0000                                  // 000000001828: BF800000
  s_nop         0x0000                                  // 00000000182C: BF800000
  s_nop         0x0000                                  // 000000001830: BF800000
  s_nop         0x0000                                  // 000000001834: BF800000
  s_nop         0x0000                                  // 000000001838: BF800000
  s_nop         0x0000                                  // 00000000183C: BF800000
  label_0610:
  v_readfirstlane_b32  s3, v68                          // 000000001840: 7E060544
  v_cmp_eq_u32  vcc, s3, v68                            // 000000001844: 7D848803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001848: BE90246A
  s_cbranch_execz  label_0618                           // 00000000184C: BF880004
  v_readlane_b32  s3, v15, s3                           // 000000001850: 0206070F
  v_mov_b32     v71, s3                                 // 000000001854: 7E8E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001858: 8A8E7E0E
  s_cbranch_scc0  label_061A                            // 00000000185C: BF840002
  label_0618:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001860: 87FE0E10
  s_branch      label_0610                              // 000000001864: BF82FFF6
  label_061A:
  s_mov_b64     exec, s[12:13]                          // 000000001868: BEFE040C
  v_cndmask_b32  v71, 0, v71, s[10:11]                  // 00000000186C: D2000047 002A8E80
  v_lshl_b64    v[72:73], 1, v70                        // 000000001874: D2C20048 00028C81
  v_and_b32     v72, exec_lo, v72                       // 00000000187C: 3690907E
  v_and_b32     v73, exec_hi, v73                       // 000000001880: 3692927F
  v_cmp_ne_u64  s[10:11], 0, v[72:73]                   // 000000001884: D1CA000A 00029080
  s_mov_b64     s[12:13], exec                          // 00000000188C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001890: BE8E047E
  s_nop         0x0000                                  // 000000001894: BF800000
  s_nop         0x0000                                  // 000000001898: BF800000
  s_nop         0x0000                                  // 00000000189C: BF800000
  label_0628:
  v_readfirstlane_b32  s3, v70                          // 0000000018A0: 7E060546
  v_cmp_eq_u32  vcc, s3, v70                            // 0000000018A4: 7D848C03
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000018A8: BE90246A
  s_cbranch_execz  label_0630                           // 0000000018AC: BF880004
  v_readlane_b32  s3, v15, s3                           // 0000000018B0: 0206070F
  v_mov_b32     v72, s3                                 // 0000000018B4: 7E900203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000018B8: 8A8E7E0E
  s_cbranch_scc0  label_0632                            // 0000000018BC: BF840002
  label_0630:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000018C0: 87FE0E10
  s_branch      label_0628                              // 0000000018C4: BF82FFF6
  label_0632:
  s_mov_b64     exec, s[12:13]                          // 0000000018C8: BEFE040C
  v_cndmask_b32  v72, 0, v72, s[10:11]                  // 0000000018CC: D2000048 002A9080
  v_lshl_b64    v[73:74], 1, v70                        // 0000000018D4: D2C20049 00028C81
  v_and_b32     v73, exec_lo, v73                       // 0000000018DC: 3692927E
  v_and_b32     v74, exec_hi, v74                       // 0000000018E0: 3694947F
  v_cmp_ne_u64  s[10:11], 0, v[73:74]                   // 0000000018E4: D1CA000A 00029280
  s_mov_b64     s[12:13], exec                          // 0000000018EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000018F0: BE8E047E
  s_nop         0x0000                                  // 0000000018F4: BF800000
  s_nop         0x0000                                  // 0000000018F8: BF800000
  s_nop         0x0000                                  // 0000000018FC: BF800000
  label_0640:
  v_readfirstlane_b32  s3, v70                          // 000000001900: 7E060546
  v_cmp_eq_u32  vcc, s3, v70                            // 000000001904: 7D848C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001908: BE90246A
  s_cbranch_execz  label_0648                           // 00000000190C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000001910: 02060704
  v_mov_b32     v73, s3                                 // 000000001914: 7E920203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001918: 8A8E7E0E
  s_cbranch_scc0  label_064A                            // 00000000191C: BF840002
  label_0648:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001920: 87FE0E10
  s_branch      label_0640                              // 000000001924: BF82FFF6
  label_064A:
  s_mov_b64     exec, s[12:13]                          // 000000001928: BEFE040C
  v_cndmask_b32  v73, 0, v73, s[10:11]                  // 00000000192C: D2000049 002A9280
  v_lshl_b64    v[74:75], 1, v69                        // 000000001934: D2C2004A 00028A81
  v_and_b32     v74, exec_lo, v74                       // 00000000193C: 3694947E
  v_and_b32     v75, exec_hi, v75                       // 000000001940: 3696967F
  v_cmp_ne_u64  s[10:11], 0, v[74:75]                   // 000000001944: D1CA000A 00029480
  s_mov_b64     s[12:13], exec                          // 00000000194C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001950: BE8E047E
  s_nop         0x0000                                  // 000000001954: BF800000
  s_nop         0x0000                                  // 000000001958: BF800000
  s_nop         0x0000                                  // 00000000195C: BF800000
  label_0658:
  v_readfirstlane_b32  s3, v69                          // 000000001960: 7E060545
  v_cmp_eq_u32  vcc, s3, v69                            // 000000001964: 7D848A03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001968: BE90246A
  s_cbranch_execz  label_0660                           // 00000000196C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000001970: 02060704
  v_mov_b32     v74, s3                                 // 000000001974: 7E940203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001978: 8A8E7E0E
  s_cbranch_scc0  label_0662                            // 00000000197C: BF840002
  label_0660:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001980: 87FE0E10
  s_branch      label_0658                              // 000000001984: BF82FFF6
  label_0662:
  s_mov_b64     exec, s[12:13]                          // 000000001988: BEFE040C
  v_cndmask_b32  v74, 0, v74, s[10:11]                  // 00000000198C: D200004A 002A9480
  v_lshl_b64    v[75:76], 1, v69                        // 000000001994: D2C2004B 00028A81
  v_and_b32     v75, exec_lo, v75                       // 00000000199C: 3696967E
  v_and_b32     v76, exec_hi, v76                       // 0000000019A0: 3698987F
  v_cmp_ne_u64  s[10:11], 0, v[75:76]                   // 0000000019A4: D1CA000A 00029680
  s_mov_b64     s[12:13], exec                          // 0000000019AC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000019B0: BE8E047E
  s_nop         0x0000                                  // 0000000019B4: BF800000
  s_nop         0x0000                                  // 0000000019B8: BF800000
  s_nop         0x0000                                  // 0000000019BC: BF800000
  label_0670:
  v_readfirstlane_b32  s3, v69                          // 0000000019C0: 7E060545
  v_cmp_eq_u32  vcc, s3, v69                            // 0000000019C4: 7D848A03
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000019C8: BE90246A
  s_cbranch_execz  label_0678                           // 0000000019CC: BF880004
  v_readlane_b32  s3, v3, s3                            // 0000000019D0: 02060703
  v_mov_b32     v75, s3                                 // 0000000019D4: 7E960203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000019D8: 8A8E7E0E
  s_cbranch_scc0  label_067A                            // 0000000019DC: BF840002
  label_0678:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000019E0: 87FE0E10
  s_branch      label_0670                              // 0000000019E4: BF82FFF6
  label_067A:
  s_mov_b64     exec, s[12:13]                          // 0000000019E8: BEFE040C
  v_cndmask_b32  v75, 0, v75, s[10:11]                  // 0000000019EC: D200004B 002A9680
  v_add_i32     v76, vcc, 58, v12                       // 0000000019F4: 4A9818BA
  v_and_b32     v76, 63, v76                            // 0000000019F8: 369898BF
  v_lshl_b64    v[77:78], 1, v76                        // 0000000019FC: D2C2004D 00029881
  v_and_b32     v77, exec_lo, v77                       // 000000001A04: 369A9A7E
  v_and_b32     v78, exec_hi, v78                       // 000000001A08: 369C9C7F
  v_cmp_ne_u64  s[10:11], 0, v[77:78]                   // 000000001A0C: D1CA000A 00029A80
  s_mov_b64     s[12:13], exec                          // 000000001A14: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001A18: BE8E047E
  s_nop         0x0000                                  // 000000001A1C: BF800000
  label_0688:
  v_readfirstlane_b32  s3, v76                          // 000000001A20: 7E06054C
  v_cmp_eq_u32  vcc, s3, v76                            // 000000001A24: 7D849803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001A28: BE90246A
  s_cbranch_execz  label_0690                           // 000000001A2C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000001A30: 02060703
  v_mov_b32     v77, s3                                 // 000000001A34: 7E9A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001A38: 8A8E7E0E
  s_cbranch_scc0  label_0692                            // 000000001A3C: BF840002
  label_0690:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001A40: 87FE0E10
  s_branch      label_0688                              // 000000001A44: BF82FFF6
  label_0692:
  s_mov_b64     exec, s[12:13]                          // 000000001A48: BEFE040C
  v_cndmask_b32  v77, 0, v77, s[10:11]                  // 000000001A4C: D200004D 002A9A80
  v_lshl_b64    v[78:79], 1, v76                        // 000000001A54: D2C2004E 00029881
  v_and_b32     v78, exec_lo, v78                       // 000000001A5C: 369C9C7E
  v_and_b32     v79, exec_hi, v79                       // 000000001A60: 369E9E7F
  v_cmp_ne_u64  s[10:11], 0, v[78:79]                   // 000000001A64: D1CA000A 00029C80
  s_mov_b64     s[12:13], exec                          // 000000001A6C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001A70: BE8E047E
  s_nop         0x0000                                  // 000000001A74: BF800000
  s_nop         0x0000                                  // 000000001A78: BF800000
  s_nop         0x0000                                  // 000000001A7C: BF800000
  label_06A0:
  v_readfirstlane_b32  s3, v76                          // 000000001A80: 7E06054C
  v_cmp_eq_u32  vcc, s3, v76                            // 000000001A84: 7D849803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001A88: BE90246A
  s_cbranch_execz  label_06A8                           // 000000001A8C: BF880004
  v_readlane_b32  s3, v13, s3                           // 000000001A90: 0206070D
  v_mov_b32     v78, s3                                 // 000000001A94: 7E9C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001A98: 8A8E7E0E
  s_cbranch_scc0  label_06AA                            // 000000001A9C: BF840002
  label_06A8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001AA0: 87FE0E10
  s_branch      label_06A0                              // 000000001AA4: BF82FFF6
  label_06AA:
  s_mov_b64     exec, s[12:13]                          // 000000001AA8: BEFE040C
  v_cndmask_b32  v78, 0, v78, s[10:11]                  // 000000001AAC: D200004E 002A9C80
  v_lshl_b64    v[79:80], 1, v76                        // 000000001AB4: D2C2004F 00029881
  v_and_b32     v79, exec_lo, v79                       // 000000001ABC: 369E9E7E
  v_and_b32     v80, exec_hi, v80                       // 000000001AC0: 36A0A07F
  v_cmp_ne_u64  s[10:11], 0, v[79:80]                   // 000000001AC4: D1CA000A 00029E80
  s_mov_b64     s[12:13], exec                          // 000000001ACC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001AD0: BE8E047E
  s_nop         0x0000                                  // 000000001AD4: BF800000
  s_nop         0x0000                                  // 000000001AD8: BF800000
  s_nop         0x0000                                  // 000000001ADC: BF800000
  label_06B8:
  v_readfirstlane_b32  s3, v76                          // 000000001AE0: 7E06054C
  v_cmp_eq_u32  vcc, s3, v76                            // 000000001AE4: 7D849803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001AE8: BE90246A
  s_cbranch_execz  label_06C0                           // 000000001AEC: BF880004
  v_readlane_b32  s3, v11, s3                           // 000000001AF0: 0206070B
  v_mov_b32     v79, s3                                 // 000000001AF4: 7E9E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001AF8: 8A8E7E0E
  s_cbranch_scc0  label_06C2                            // 000000001AFC: BF840002
  label_06C0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001B00: 87FE0E10
  s_branch      label_06B8                              // 000000001B04: BF82FFF6
  label_06C2:
  s_mov_b64     exec, s[12:13]                          // 000000001B08: BEFE040C
  v_cndmask_b32  v79, 0, v79, s[10:11]                  // 000000001B0C: D200004F 002A9E80
  v_lshl_b64    v[80:81], 1, v68                        // 000000001B14: D2C20050 00028881
  v_and_b32     v80, exec_lo, v80                       // 000000001B1C: 36A0A07E
  v_and_b32     v81, exec_hi, v81                       // 000000001B20: 36A2A27F
  v_cmp_ne_u64  s[10:11], 0, v[80:81]                   // 000000001B24: D1CA000A 0002A080
  s_mov_b64     s[12:13], exec                          // 000000001B2C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001B30: BE8E047E
  s_nop         0x0000                                  // 000000001B34: BF800000
  s_nop         0x0000                                  // 000000001B38: BF800000
  s_nop         0x0000                                  // 000000001B3C: BF800000
  label_06D0:
  v_readfirstlane_b32  s3, v68                          // 000000001B40: 7E060544
  v_cmp_eq_u32  vcc, s3, v68                            // 000000001B44: 7D848803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001B48: BE90246A
  s_cbranch_execz  label_06D8                           // 000000001B4C: BF880004
  v_readlane_b32  s3, v11, s3                           // 000000001B50: 0206070B
  v_mov_b32     v80, s3                                 // 000000001B54: 7EA00203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001B58: 8A8E7E0E
  s_cbranch_scc0  label_06DA                            // 000000001B5C: BF840002
  label_06D8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001B60: 87FE0E10
  s_branch      label_06D0                              // 000000001B64: BF82FFF6
  label_06DA:
  s_mov_b64     exec, s[12:13]                          // 000000001B68: BEFE040C
  v_cndmask_b32  v80, 0, v80, s[10:11]                  // 000000001B6C: D2000050 002AA080
  v_lshl_b64    v[81:82], 1, v68                        // 000000001B74: D2C20051 00028881
  v_and_b32     v81, exec_lo, v81                       // 000000001B7C: 36A2A27E
  v_and_b32     v82, exec_hi, v82                       // 000000001B80: 36A4A47F
  v_cmp_ne_u64  s[10:11], 0, v[81:82]                   // 000000001B84: D1CA000A 0002A280
  s_mov_b64     s[12:13], exec                          // 000000001B8C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001B90: BE8E047E
  s_nop         0x0000                                  // 000000001B94: BF800000
  s_nop         0x0000                                  // 000000001B98: BF800000
  s_nop         0x0000                                  // 000000001B9C: BF800000
  label_06E8:
  v_readfirstlane_b32  s3, v68                          // 000000001BA0: 7E060544
  v_cmp_eq_u32  vcc, s3, v68                            // 000000001BA4: 7D848803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001BA8: BE90246A
  s_cbranch_execz  label_06F0                           // 000000001BAC: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000001BB0: 02060706
  v_mov_b32     v68, s3                                 // 000000001BB4: 7E880203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001BB8: 8A8E7E0E
  s_cbranch_scc0  label_06F2                            // 000000001BBC: BF840002
  label_06F0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001BC0: 87FE0E10
  s_branch      label_06E8                              // 000000001BC4: BF82FFF6
  label_06F2:
  s_mov_b64     exec, s[12:13]                          // 000000001BC8: BEFE040C
  v_cndmask_b32  v68, 0, v68, s[10:11]                  // 000000001BCC: D2000044 002A8880
  v_lshl_b64    v[81:82], 1, v70                        // 000000001BD4: D2C20051 00028C81
  v_and_b32     v81, exec_lo, v81                       // 000000001BDC: 36A2A27E
  v_and_b32     v82, exec_hi, v82                       // 000000001BE0: 36A4A47F
  v_cmp_ne_u64  s[10:11], 0, v[81:82]                   // 000000001BE4: D1CA000A 0002A280
  s_mov_b64     s[12:13], exec                          // 000000001BEC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001BF0: BE8E047E
  s_nop         0x0000                                  // 000000001BF4: BF800000
  s_nop         0x0000                                  // 000000001BF8: BF800000
  s_nop         0x0000                                  // 000000001BFC: BF800000
  label_0700:
  v_readfirstlane_b32  s3, v70                          // 000000001C00: 7E060546
  v_cmp_eq_u32  vcc, s3, v70                            // 000000001C04: 7D848C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001C08: BE90246A
  s_cbranch_execz  label_0708                           // 000000001C0C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000001C10: 02060706
  v_mov_b32     v81, s3                                 // 000000001C14: 7EA20203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001C18: 8A8E7E0E
  s_cbranch_scc0  label_070A                            // 000000001C1C: BF840002
  label_0708:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001C20: 87FE0E10
  s_branch      label_0700                              // 000000001C24: BF82FFF6
  label_070A:
  s_mov_b64     exec, s[12:13]                          // 000000001C28: BEFE040C
  v_cndmask_b32  v81, 0, v81, s[10:11]                  // 000000001C2C: D2000051 002AA280
  v_lshl_b64    v[82:83], 1, v70                        // 000000001C34: D2C20052 00028C81
  v_and_b32     v82, exec_lo, v82                       // 000000001C3C: 36A4A47E
  v_and_b32     v83, exec_hi, v83                       // 000000001C40: 36A6A67F
  v_cmp_ne_u64  s[10:11], 0, v[82:83]                   // 000000001C44: D1CA000A 0002A480
  s_mov_b64     s[12:13], exec                          // 000000001C4C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001C50: BE8E047E
  s_nop         0x0000                                  // 000000001C54: BF800000
  s_nop         0x0000                                  // 000000001C58: BF800000
  s_nop         0x0000                                  // 000000001C5C: BF800000
  label_0718:
  v_readfirstlane_b32  s3, v70                          // 000000001C60: 7E060546
  v_cmp_eq_u32  vcc, s3, v70                            // 000000001C64: 7D848C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001C68: BE90246A
  s_cbranch_execz  label_0720                           // 000000001C6C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000001C70: 02060705
  v_mov_b32     v70, s3                                 // 000000001C74: 7E8C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001C78: 8A8E7E0E
  s_cbranch_scc0  label_0722                            // 000000001C7C: BF840002
  label_0720:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001C80: 87FE0E10
  s_branch      label_0718                              // 000000001C84: BF82FFF6
  label_0722:
  s_mov_b64     exec, s[12:13]                          // 000000001C88: BEFE040C
  v_cndmask_b32  v70, 0, v70, s[10:11]                  // 000000001C8C: D2000046 002A8C80
  v_lshl_b64    v[82:83], 1, v69                        // 000000001C94: D2C20052 00028A81
  v_and_b32     v82, exec_lo, v82                       // 000000001C9C: 36A4A47E
  v_and_b32     v83, exec_hi, v83                       // 000000001CA0: 36A6A67F
  v_cmp_ne_u64  s[10:11], 0, v[82:83]                   // 000000001CA4: D1CA000A 0002A480
  s_mov_b64     s[12:13], exec                          // 000000001CAC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001CB0: BE8E047E
  s_nop         0x0000                                  // 000000001CB4: BF800000
  s_nop         0x0000                                  // 000000001CB8: BF800000
  s_nop         0x0000                                  // 000000001CBC: BF800000
  label_0730:
  v_readfirstlane_b32  s3, v69                          // 000000001CC0: 7E060545
  v_cmp_eq_u32  vcc, s3, v69                            // 000000001CC4: 7D848A03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001CC8: BE90246A
  s_cbranch_execz  label_0738                           // 000000001CCC: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000001CD0: 02060705
  v_mov_b32     v82, s3                                 // 000000001CD4: 7EA40203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001CD8: 8A8E7E0E
  s_cbranch_scc0  label_073A                            // 000000001CDC: BF840002
  label_0738:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001CE0: 87FE0E10
  s_branch      label_0730                              // 000000001CE4: BF82FFF6
  label_073A:
  s_mov_b64     exec, s[12:13]                          // 000000001CE8: BEFE040C
  v_cndmask_b32  v82, 0, v82, s[10:11]                  // 000000001CEC: D2000052 002AA480
  v_lshl_b64    v[83:84], 1, v69                        // 000000001CF4: D2C20053 00028A81
  v_and_b32     v83, exec_lo, v83                       // 000000001CFC: 36A6A67E
  v_and_b32     v84, exec_hi, v84                       // 000000001D00: 36A8A87F
  v_cmp_ne_u64  s[10:11], 0, v[83:84]                   // 000000001D04: D1CA000A 0002A680
  s_mov_b64     s[12:13], exec                          // 000000001D0C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001D10: BE8E047E
  s_nop         0x0000                                  // 000000001D14: BF800000
  s_nop         0x0000                                  // 000000001D18: BF800000
  s_nop         0x0000                                  // 000000001D1C: BF800000
  label_0748:
  v_readfirstlane_b32  s3, v69                          // 000000001D20: 7E060545
  v_cmp_eq_u32  vcc, s3, v69                            // 000000001D24: 7D848A03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001D28: BE90246A
  s_cbranch_execz  label_0750                           // 000000001D2C: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000001D30: 02060708
  v_mov_b32     v69, s3                                 // 000000001D34: 7E8A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001D38: 8A8E7E0E
  s_cbranch_scc0  label_0752                            // 000000001D3C: BF840002
  label_0750:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001D40: 87FE0E10
  s_branch      label_0748                              // 000000001D44: BF82FFF6
  label_0752:
  s_mov_b64     exec, s[12:13]                          // 000000001D48: BEFE040C
  v_cndmask_b32  v69, 0, v69, s[10:11]                  // 000000001D4C: D2000045 002A8A80
  v_lshl_b64    v[83:84], 1, v76                        // 000000001D54: D2C20053 00029881
  v_and_b32     v83, exec_lo, v83                       // 000000001D5C: 36A6A67E
  v_and_b32     v84, exec_hi, v84                       // 000000001D60: 36A8A87F
  v_cmp_ne_u64  s[10:11], 0, v[83:84]                   // 000000001D64: D1CA000A 0002A680
  s_mov_b64     s[12:13], exec                          // 000000001D6C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001D70: BE8E047E
  s_nop         0x0000                                  // 000000001D74: BF800000
  s_nop         0x0000                                  // 000000001D78: BF800000
  s_nop         0x0000                                  // 000000001D7C: BF800000
  label_0760:
  v_readfirstlane_b32  s3, v76                          // 000000001D80: 7E06054C
  v_cmp_eq_u32  vcc, s3, v76                            // 000000001D84: 7D849803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001D88: BE90246A
  s_cbranch_execz  label_0768                           // 000000001D8C: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000001D90: 02060708
  v_mov_b32     v83, s3                                 // 000000001D94: 7EA60203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001D98: 8A8E7E0E
  s_cbranch_scc0  label_076A                            // 000000001D9C: BF840002
  label_0768:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001DA0: 87FE0E10
  s_branch      label_0760                              // 000000001DA4: BF82FFF6
  label_076A:
  s_mov_b64     exec, s[12:13]                          // 000000001DA8: BEFE040C
  v_cndmask_b32  v83, 0, v83, s[10:11]                  // 000000001DAC: D2000053 002AA680
  v_lshl_b64    v[84:85], 1, v76                        // 000000001DB4: D2C20054 00029881
  v_and_b32     v84, exec_lo, v84                       // 000000001DBC: 36A8A87E
  v_and_b32     v85, exec_hi, v85                       // 000000001DC0: 36AAAA7F
  v_cmp_ne_u64  s[10:11], 0, v[84:85]                   // 000000001DC4: D1CA000A 0002A880
  s_mov_b64     s[12:13], exec                          // 000000001DCC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001DD0: BE8E047E
  s_nop         0x0000                                  // 000000001DD4: BF800000
  s_nop         0x0000                                  // 000000001DD8: BF800000
  s_nop         0x0000                                  // 000000001DDC: BF800000
  label_0778:
  v_readfirstlane_b32  s3, v76                          // 000000001DE0: 7E06054C
  v_cmp_eq_u32  vcc, s3, v76                            // 000000001DE4: 7D849803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001DE8: BE90246A
  s_cbranch_execz  label_0780                           // 000000001DEC: BF880004
  v_readlane_b32  s3, v10, s3                           // 000000001DF0: 0206070A
  v_mov_b32     v84, s3                                 // 000000001DF4: 7EA80203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001DF8: 8A8E7E0E
  s_cbranch_scc0  label_0782                            // 000000001DFC: BF840002
  label_0780:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001E00: 87FE0E10
  s_branch      label_0778                              // 000000001E04: BF82FFF6
  label_0782:
  s_mov_b64     exec, s[12:13]                          // 000000001E08: BEFE040C
  v_cndmask_b32  v84, 0, v84, s[10:11]                  // 000000001E0C: D2000054 002AA880
  v_lshl_b64    v[85:86], 1, v76                        // 000000001E14: D2C20055 00029881
  v_and_b32     v85, exec_lo, v85                       // 000000001E1C: 36AAAA7E
  v_and_b32     v86, exec_hi, v86                       // 000000001E20: 36ACAC7F
  v_cmp_ne_u64  s[10:11], 0, v[85:86]                   // 000000001E24: D1CA000A 0002AA80
  s_mov_b64     s[12:13], exec                          // 000000001E2C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000001E30: BE8E047E
  s_nop         0x0000                                  // 000000001E34: BF800000
  s_nop         0x0000                                  // 000000001E38: BF800000
  s_nop         0x0000                                  // 000000001E3C: BF800000
  label_0790:
  v_readfirstlane_b32  s3, v76                          // 000000001E40: 7E06054C
  v_cmp_eq_u32  vcc, s3, v76                            // 000000001E44: 7D849803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000001E48: BE90246A
  s_cbranch_execz  label_0798                           // 000000001E4C: BF880004
  v_readlane_b32  s3, v7, s3                            // 000000001E50: 02060707
  v_mov_b32     v76, s3                                 // 000000001E54: 7E980203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000001E58: 8A8E7E0E
  s_cbranch_scc0  label_079A                            // 000000001E5C: BF840002
  label_0798:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000001E60: 87FE0E10
  s_branch      label_0790                              // 000000001E64: BF82FFF6
  label_079A:
  s_mov_b64     exec, s[12:13]                          // 000000001E68: BEFE040C
  s_add_u32     s12, s8, 16                             // 000000001E6C: 800C9008
  s_addc_u32    s13, s9, 0                              // 000000001E70: 820D8009
  v_mov_b32     v85, s12                                // 000000001E74: 7EAA020C
  v_mov_b32     v86, s13                                // 000000001E78: 7EAC020D
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000001E7C: BF8C0070
  v_mul_f32     v79, v66, v79                           // 000000001E80: 109E9F42
  v_mul_f32     v78, v66, v78                           // 000000001E84: 109C9D42
  v_cmp_lt_i32  s[12:13], v2, 56                        // 000000001E88: D102000C 00017102
  v_add_i32     v87, vcc, 11, v12                       // 000000001E90: 4AAE188B
  v_cmp_lt_i32  vcc, 5, v2                              // 000000001E94: 7D020485
  v_mul_f32     v77, v66, v77                           // 000000001E98: 109A9B42
  v_cndmask_b32  v78, v79, v78, s[12:13]                // 000000001E9C: D200004E 00329D4F
  v_and_b32     v79, 63, v87                            // 000000001EA4: 369EAEBF
  flat_load_dword  v85, v[85:86]                        // 000000001EA8: DC300000 55000055
  v_cndmask_b32  v76, 0, v76, s[10:11]                  // 000000001EB0: D200004C 002A9880
  v_cndmask_b32  v77, v77, v78, vcc                     // 000000001EB8: 009A9D4D
  v_lshl_b64    v[86:87], 1, v79                        // 000000001EBC: D2C20056 00029E81
  v_and_b32     v86, exec_lo, v86                       // 000000001EC4: 36ACAC7E
  v_and_b32     v87, exec_hi, v87                       // 000000001EC8: 36AEAE7F
  v_cmp_ne_u64  s[10:11], 0, v[86:87]                   // 000000001ECC: D1CA000A 0002AC80
  s_mov_b64     s[14:15], exec                          // 000000001ED4: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000001ED8: BE90047E
  s_nop         0x0000                                  // 000000001EDC: BF800000
  label_07B8:
  v_readfirstlane_b32  s3, v79                          // 000000001EE0: 7E06054F
  v_cmp_eq_u32  vcc, s3, v79                            // 000000001EE4: 7D849E03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000001EE8: BE92246A
  s_cbranch_execz  label_07C0                           // 000000001EEC: BF880004
  v_readlane_b32  s3, v9, s3                            // 000000001EF0: 02060709
  v_mov_b32     v78, s3                                 // 000000001EF4: 7E9C0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000001EF8: 8A907E10
  s_cbranch_scc0  label_07C2                            // 000000001EFC: BF840002
  label_07C0:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000001F00: 87FE1012
  s_branch      label_07B8                              // 000000001F04: BF82FFF6
  label_07C2:
  s_mov_b64     exec, s[14:15]                          // 000000001F08: BEFE040E
  v_cndmask_b32  v78, 0, v78, s[10:11]                  // 000000001F0C: D200004E 002A9C80
  v_lshl_b64    v[86:87], 1, v79                        // 000000001F14: D2C20056 00029E81
  v_and_b32     v86, exec_lo, v86                       // 000000001F1C: 36ACAC7E
  v_and_b32     v87, exec_hi, v87                       // 000000001F20: 36AEAE7F
  v_cmp_ne_u64  s[10:11], 0, v[86:87]                   // 000000001F24: D1CA000A 0002AC80
  s_mov_b64     s[14:15], exec                          // 000000001F2C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000001F30: BE90047E
  s_nop         0x0000                                  // 000000001F34: BF800000
  s_nop         0x0000                                  // 000000001F38: BF800000
  s_nop         0x0000                                  // 000000001F3C: BF800000
  label_07D0:
  v_readfirstlane_b32  s3, v79                          // 000000001F40: 7E06054F
  v_cmp_eq_u32  vcc, s3, v79                            // 000000001F44: 7D849E03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000001F48: BE92246A
  s_cbranch_execz  label_07D8                           // 000000001F4C: BF880004
  v_readlane_b32  s3, v15, s3                           // 000000001F50: 0206070F
  v_mov_b32     v86, s3                                 // 000000001F54: 7EAC0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000001F58: 8A907E10
  s_cbranch_scc0  label_07DA                            // 000000001F5C: BF840002
  label_07D8:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000001F60: 87FE1012
  s_branch      label_07D0                              // 000000001F64: BF82FFF6
  label_07DA:
  s_mov_b64     exec, s[14:15]                          // 000000001F68: BEFE040E
  v_cndmask_b32  v86, 0, v86, s[10:11]                  // 000000001F6C: D2000056 002AAC80
  v_add_i32     v87, vcc, 27, v12                       // 000000001F74: 4AAE189B
  v_add_i32     v88, vcc, 43, v12                       // 000000001F78: 4AB018AB
  v_and_b32     v88, 63, v88                            // 000000001F7C: 36B0B0BF
  v_and_b32     v87, 63, v87                            // 000000001F80: 36AEAEBF
  v_lshl_b64    v[89:90], 1, v87                        // 000000001F84: D2C20059 0002AE81
  v_and_b32     v89, exec_lo, v89                       // 000000001F8C: 36B2B27E
  v_and_b32     v90, exec_hi, v90                       // 000000001F90: 36B4B47F
  v_cmp_ne_u64  s[10:11], 0, v[89:90]                   // 000000001F94: D1CA000A 0002B280
  s_mov_b64     s[14:15], exec                          // 000000001F9C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000001FA0: BE90047E
  s_nop         0x0000                                  // 000000001FA4: BF800000
  s_nop         0x0000                                  // 000000001FA8: BF800000
  s_nop         0x0000                                  // 000000001FAC: BF800000
  s_nop         0x0000                                  // 000000001FB0: BF800000
  s_nop         0x0000                                  // 000000001FB4: BF800000
  s_nop         0x0000                                  // 000000001FB8: BF800000
  s_nop         0x0000                                  // 000000001FBC: BF800000
  label_07F0:
  v_readfirstlane_b32  s3, v87                          // 000000001FC0: 7E060557
  v_cmp_eq_u32  vcc, s3, v87                            // 000000001FC4: 7D84AE03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000001FC8: BE92246A
  s_cbranch_execz  label_07F8                           // 000000001FCC: BF880004
  v_readlane_b32  s3, v15, s3                           // 000000001FD0: 0206070F
  v_mov_b32     v89, s3                                 // 000000001FD4: 7EB20203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000001FD8: 8A907E10
  s_cbranch_scc0  label_07FA                            // 000000001FDC: BF840002
  label_07F8:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000001FE0: 87FE1012
  s_branch      label_07F0                              // 000000001FE4: BF82FFF6
  label_07FA:
  s_mov_b64     exec, s[14:15]                          // 000000001FE8: BEFE040E
  v_cndmask_b32  v89, 0, v89, s[10:11]                  // 000000001FEC: D2000059 002AB280
  v_lshl_b64    v[90:91], 1, v87                        // 000000001FF4: D2C2005A 0002AE81
  v_and_b32     v90, exec_lo, v90                       // 000000001FFC: 36B4B47E
  v_and_b32     v91, exec_hi, v91                       // 000000002000: 36B6B67F
  v_cmp_ne_u64  s[10:11], 0, v[90:91]                   // 000000002004: D1CA000A 0002B480
  s_mov_b64     s[14:15], exec                          // 00000000200C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002010: BE90047E
  s_nop         0x0000                                  // 000000002014: BF800000
  s_nop         0x0000                                  // 000000002018: BF800000
  s_nop         0x0000                                  // 00000000201C: BF800000
  label_0808:
  v_readfirstlane_b32  s3, v87                          // 000000002020: 7E060557
  v_cmp_eq_u32  vcc, s3, v87                            // 000000002024: 7D84AE03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002028: BE92246A
  s_cbranch_execz  label_0810                           // 00000000202C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000002030: 02060704
  v_mov_b32     v90, s3                                 // 000000002034: 7EB40203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002038: 8A907E10
  s_cbranch_scc0  label_0812                            // 00000000203C: BF840002
  label_0810:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002040: 87FE1012
  s_branch      label_0808                              // 000000002044: BF82FFF6
  label_0812:
  s_mov_b64     exec, s[14:15]                          // 000000002048: BEFE040E
  v_cndmask_b32  v90, 0, v90, s[10:11]                  // 00000000204C: D200005A 002AB480
  v_lshl_b64    v[91:92], 1, v88                        // 000000002054: D2C2005B 0002B081
  v_and_b32     v91, exec_lo, v91                       // 00000000205C: 36B6B67E
  v_and_b32     v92, exec_hi, v92                       // 000000002060: 36B8B87F
  v_cmp_ne_u64  s[10:11], 0, v[91:92]                   // 000000002064: D1CA000A 0002B680
  s_mov_b64     s[14:15], exec                          // 00000000206C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002070: BE90047E
  s_nop         0x0000                                  // 000000002074: BF800000
  s_nop         0x0000                                  // 000000002078: BF800000
  s_nop         0x0000                                  // 00000000207C: BF800000
  label_0820:
  v_readfirstlane_b32  s3, v88                          // 000000002080: 7E060558
  v_cmp_eq_u32  vcc, s3, v88                            // 000000002084: 7D84B003
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002088: BE92246A
  s_cbranch_execz  label_0828                           // 00000000208C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000002090: 02060704
  v_mov_b32     v91, s3                                 // 000000002094: 7EB60203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002098: 8A907E10
  s_cbranch_scc0  label_082A                            // 00000000209C: BF840002
  label_0828:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000020A0: 87FE1012
  s_branch      label_0820                              // 0000000020A4: BF82FFF6
  label_082A:
  s_mov_b64     exec, s[14:15]                          // 0000000020A8: BEFE040E
  v_cndmask_b32  v91, 0, v91, s[10:11]                  // 0000000020AC: D200005B 002AB680
  v_lshl_b64    v[92:93], 1, v88                        // 0000000020B4: D2C2005C 0002B081
  v_and_b32     v92, exec_lo, v92                       // 0000000020BC: 36B8B87E
  v_and_b32     v93, exec_hi, v93                       // 0000000020C0: 36BABA7F
  v_cmp_ne_u64  s[10:11], 0, v[92:93]                   // 0000000020C4: D1CA000A 0002B880
  s_mov_b64     s[14:15], exec                          // 0000000020CC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000020D0: BE90047E
  s_nop         0x0000                                  // 0000000020D4: BF800000
  s_nop         0x0000                                  // 0000000020D8: BF800000
  s_nop         0x0000                                  // 0000000020DC: BF800000
  label_0838:
  v_readfirstlane_b32  s3, v88                          // 0000000020E0: 7E060558
  v_cmp_eq_u32  vcc, s3, v88                            // 0000000020E4: 7D84B003
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000020E8: BE92246A
  s_cbranch_execz  label_0840                           // 0000000020EC: BF880004
  v_readlane_b32  s3, v3, s3                            // 0000000020F0: 02060703
  v_mov_b32     v92, s3                                 // 0000000020F4: 7EB80203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000020F8: 8A907E10
  s_cbranch_scc0  label_0842                            // 0000000020FC: BF840002
  label_0840:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002100: 87FE1012
  s_branch      label_0838                              // 000000002104: BF82FFF6
  label_0842:
  s_mov_b64     exec, s[14:15]                          // 000000002108: BEFE040E
  v_cndmask_b32  v92, 0, v92, s[10:11]                  // 00000000210C: D200005C 002AB880
  v_add_i32     v93, vcc, 59, v12                       // 000000002114: 4ABA18BB
  v_and_b32     v93, 63, v93                            // 000000002118: 36BABABF
  v_lshl_b64    v[94:95], 1, v93                        // 00000000211C: D2C2005E 0002BA81
  v_and_b32     v94, exec_lo, v94                       // 000000002124: 36BCBC7E
  v_and_b32     v95, exec_hi, v95                       // 000000002128: 36BEBE7F
  v_cmp_ne_u64  s[10:11], 0, v[94:95]                   // 00000000212C: D1CA000A 0002BC80
  s_mov_b64     s[14:15], exec                          // 000000002134: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002138: BE90047E
  s_nop         0x0000                                  // 00000000213C: BF800000
  label_0850:
  v_readfirstlane_b32  s3, v93                          // 000000002140: 7E06055D
  v_cmp_eq_u32  vcc, s3, v93                            // 000000002144: 7D84BA03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002148: BE92246A
  s_cbranch_execz  label_0858                           // 00000000214C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000002150: 02060703
  v_mov_b32     v94, s3                                 // 000000002154: 7EBC0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002158: 8A907E10
  s_cbranch_scc0  label_085A                            // 00000000215C: BF840002
  label_0858:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002160: 87FE1012
  s_branch      label_0850                              // 000000002164: BF82FFF6
  label_085A:
  s_mov_b64     exec, s[14:15]                          // 000000002168: BEFE040E
  v_cndmask_b32  v94, 0, v94, s[10:11]                  // 00000000216C: D200005E 002ABC80
  v_lshl_b64    v[95:96], 1, v93                        // 000000002174: D2C2005F 0002BA81
  v_and_b32     v95, exec_lo, v95                       // 00000000217C: 36BEBE7E
  v_and_b32     v96, exec_hi, v96                       // 000000002180: 36C0C07F
  v_cmp_ne_u64  s[10:11], 0, v[95:96]                   // 000000002184: D1CA000A 0002BE80
  s_mov_b64     s[14:15], exec                          // 00000000218C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002190: BE90047E
  s_nop         0x0000                                  // 000000002194: BF800000
  s_nop         0x0000                                  // 000000002198: BF800000
  s_nop         0x0000                                  // 00000000219C: BF800000
  label_0868:
  v_readfirstlane_b32  s3, v93                          // 0000000021A0: 7E06055D
  v_cmp_eq_u32  vcc, s3, v93                            // 0000000021A4: 7D84BA03
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000021A8: BE92246A
  s_cbranch_execz  label_0870                           // 0000000021AC: BF880004
  v_readlane_b32  s3, v13, s3                           // 0000000021B0: 0206070D
  v_mov_b32     v95, s3                                 // 0000000021B4: 7EBE0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000021B8: 8A907E10
  s_cbranch_scc0  label_0872                            // 0000000021BC: BF840002
  label_0870:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000021C0: 87FE1012
  s_branch      label_0868                              // 0000000021C4: BF82FFF6
  label_0872:
  s_mov_b64     exec, s[14:15]                          // 0000000021C8: BEFE040E
  v_cndmask_b32  v95, 0, v95, s[10:11]                  // 0000000021CC: D200005F 002ABE80
  v_lshl_b64    v[96:97], 1, v93                        // 0000000021D4: D2C20060 0002BA81
  v_and_b32     v96, exec_lo, v96                       // 0000000021DC: 36C0C07E
  v_and_b32     v97, exec_hi, v97                       // 0000000021E0: 36C2C27F
  v_cmp_ne_u64  s[10:11], 0, v[96:97]                   // 0000000021E4: D1CA000A 0002C080
  s_mov_b64     s[14:15], exec                          // 0000000021EC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000021F0: BE90047E
  s_nop         0x0000                                  // 0000000021F4: BF800000
  s_nop         0x0000                                  // 0000000021F8: BF800000
  s_nop         0x0000                                  // 0000000021FC: BF800000
  label_0880:
  v_readfirstlane_b32  s3, v93                          // 000000002200: 7E06055D
  v_cmp_eq_u32  vcc, s3, v93                            // 000000002204: 7D84BA03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002208: BE92246A
  s_cbranch_execz  label_0888                           // 00000000220C: BF880004
  v_readlane_b32  s3, v11, s3                           // 000000002210: 0206070B
  v_mov_b32     v96, s3                                 // 000000002214: 7EC00203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002218: 8A907E10
  s_cbranch_scc0  label_088A                            // 00000000221C: BF840002
  label_0888:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002220: 87FE1012
  s_branch      label_0880                              // 000000002224: BF82FFF6
  label_088A:
  s_mov_b64     exec, s[14:15]                          // 000000002228: BEFE040E
  v_cndmask_b32  v96, 0, v96, s[10:11]                  // 00000000222C: D2000060 002AC080
  v_lshl_b64    v[97:98], 1, v79                        // 000000002234: D2C20061 00029E81
  v_and_b32     v97, exec_lo, v97                       // 00000000223C: 36C2C27E
  v_and_b32     v98, exec_hi, v98                       // 000000002240: 36C4C47F
  v_cmp_ne_u64  s[10:11], 0, v[97:98]                   // 000000002244: D1CA000A 0002C280
  s_mov_b64     s[14:15], exec                          // 00000000224C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002250: BE90047E
  s_nop         0x0000                                  // 000000002254: BF800000
  s_nop         0x0000                                  // 000000002258: BF800000
  s_nop         0x0000                                  // 00000000225C: BF800000
  label_0898:
  v_readfirstlane_b32  s3, v79                          // 000000002260: 7E06054F
  v_cmp_eq_u32  vcc, s3, v79                            // 000000002264: 7D849E03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002268: BE92246A
  s_cbranch_execz  label_08A0                           // 00000000226C: BF880004
  v_readlane_b32  s3, v11, s3                           // 000000002270: 0206070B
  v_mov_b32     v97, s3                                 // 000000002274: 7EC20203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002278: 8A907E10
  s_cbranch_scc0  label_08A2                            // 00000000227C: BF840002
  label_08A0:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002280: 87FE1012
  s_branch      label_0898                              // 000000002284: BF82FFF6
  label_08A2:
  s_mov_b64     exec, s[14:15]                          // 000000002288: BEFE040E
  v_cndmask_b32  v97, 0, v97, s[10:11]                  // 00000000228C: D2000061 002AC280
  v_lshl_b64    v[98:99], 1, v79                        // 000000002294: D2C20062 00029E81
  v_and_b32     v98, exec_lo, v98                       // 00000000229C: 36C4C47E
  v_and_b32     v99, exec_hi, v99                       // 0000000022A0: 36C6C67F
  v_cmp_ne_u64  s[10:11], 0, v[98:99]                   // 0000000022A4: D1CA000A 0002C480
  s_mov_b64     s[14:15], exec                          // 0000000022AC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000022B0: BE90047E
  s_nop         0x0000                                  // 0000000022B4: BF800000
  s_nop         0x0000                                  // 0000000022B8: BF800000
  s_nop         0x0000                                  // 0000000022BC: BF800000
  label_08B0:
  v_readfirstlane_b32  s3, v79                          // 0000000022C0: 7E06054F
  v_cmp_eq_u32  vcc, s3, v79                            // 0000000022C4: 7D849E03
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000022C8: BE92246A
  s_cbranch_execz  label_08B8                           // 0000000022CC: BF880004
  v_readlane_b32  s3, v6, s3                            // 0000000022D0: 02060706
  v_mov_b32     v79, s3                                 // 0000000022D4: 7E9E0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000022D8: 8A907E10
  s_cbranch_scc0  label_08BA                            // 0000000022DC: BF840002
  label_08B8:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000022E0: 87FE1012
  s_branch      label_08B0                              // 0000000022E4: BF82FFF6
  label_08BA:
  s_mov_b64     exec, s[14:15]                          // 0000000022E8: BEFE040E
  v_cndmask_b32  v79, 0, v79, s[10:11]                  // 0000000022EC: D200004F 002A9E80
  v_lshl_b64    v[98:99], 1, v87                        // 0000000022F4: D2C20062 0002AE81
  v_and_b32     v98, exec_lo, v98                       // 0000000022FC: 36C4C47E
  v_and_b32     v99, exec_hi, v99                       // 000000002300: 36C6C67F
  v_cmp_ne_u64  s[10:11], 0, v[98:99]                   // 000000002304: D1CA000A 0002C480
  s_mov_b64     s[14:15], exec                          // 00000000230C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002310: BE90047E
  s_nop         0x0000                                  // 000000002314: BF800000
  s_nop         0x0000                                  // 000000002318: BF800000
  s_nop         0x0000                                  // 00000000231C: BF800000
  label_08C8:
  v_readfirstlane_b32  s3, v87                          // 000000002320: 7E060557
  v_cmp_eq_u32  vcc, s3, v87                            // 000000002324: 7D84AE03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002328: BE92246A
  s_cbranch_execz  label_08D0                           // 00000000232C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000002330: 02060706
  v_mov_b32     v98, s3                                 // 000000002334: 7EC40203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002338: 8A907E10
  s_cbranch_scc0  label_08D2                            // 00000000233C: BF840002
  label_08D0:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002340: 87FE1012
  s_branch      label_08C8                              // 000000002344: BF82FFF6
  label_08D2:
  s_mov_b64     exec, s[14:15]                          // 000000002348: BEFE040E
  v_cndmask_b32  v98, 0, v98, s[10:11]                  // 00000000234C: D2000062 002AC480
  v_lshl_b64    v[99:100], 1, v87                       // 000000002354: D2C20063 0002AE81
  v_and_b32     v99, exec_lo, v99                       // 00000000235C: 36C6C67E
  v_and_b32     v100, exec_hi, v100                     // 000000002360: 36C8C87F
  v_cmp_ne_u64  s[10:11], 0, v[99:100]                  // 000000002364: D1CA000A 0002C680
  s_mov_b64     s[14:15], exec                          // 00000000236C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002370: BE90047E
  s_nop         0x0000                                  // 000000002374: BF800000
  s_nop         0x0000                                  // 000000002378: BF800000
  s_nop         0x0000                                  // 00000000237C: BF800000
  label_08E0:
  v_readfirstlane_b32  s3, v87                          // 000000002380: 7E060557
  v_cmp_eq_u32  vcc, s3, v87                            // 000000002384: 7D84AE03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002388: BE92246A
  s_cbranch_execz  label_08E8                           // 00000000238C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000002390: 02060705
  v_mov_b32     v87, s3                                 // 000000002394: 7EAE0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002398: 8A907E10
  s_cbranch_scc0  label_08EA                            // 00000000239C: BF840002
  label_08E8:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000023A0: 87FE1012
  s_branch      label_08E0                              // 0000000023A4: BF82FFF6
  label_08EA:
  s_mov_b64     exec, s[14:15]                          // 0000000023A8: BEFE040E
  v_cndmask_b32  v87, 0, v87, s[10:11]                  // 0000000023AC: D2000057 002AAE80
  v_lshl_b64    v[99:100], 1, v88                       // 0000000023B4: D2C20063 0002B081
  v_and_b32     v99, exec_lo, v99                       // 0000000023BC: 36C6C67E
  v_and_b32     v100, exec_hi, v100                     // 0000000023C0: 36C8C87F
  v_cmp_ne_u64  s[10:11], 0, v[99:100]                  // 0000000023C4: D1CA000A 0002C680
  s_mov_b64     s[14:15], exec                          // 0000000023CC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000023D0: BE90047E
  s_nop         0x0000                                  // 0000000023D4: BF800000
  s_nop         0x0000                                  // 0000000023D8: BF800000
  s_nop         0x0000                                  // 0000000023DC: BF800000
  label_08F8:
  v_readfirstlane_b32  s3, v88                          // 0000000023E0: 7E060558
  v_cmp_eq_u32  vcc, s3, v88                            // 0000000023E4: 7D84B003
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000023E8: BE92246A
  s_cbranch_execz  label_0900                           // 0000000023EC: BF880004
  v_readlane_b32  s3, v5, s3                            // 0000000023F0: 02060705
  v_mov_b32     v99, s3                                 // 0000000023F4: 7EC60203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000023F8: 8A907E10
  s_cbranch_scc0  label_0902                            // 0000000023FC: BF840002
  label_0900:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002400: 87FE1012
  s_branch      label_08F8                              // 000000002404: BF82FFF6
  label_0902:
  s_mov_b64     exec, s[14:15]                          // 000000002408: BEFE040E
  v_cndmask_b32  v99, 0, v99, s[10:11]                  // 00000000240C: D2000063 002AC680
  v_lshl_b64    v[100:101], 1, v88                      // 000000002414: D2C20064 0002B081
  v_and_b32     v100, exec_lo, v100                     // 00000000241C: 36C8C87E
  v_and_b32     v101, exec_hi, v101                     // 000000002420: 36CACA7F
  v_cmp_ne_u64  s[10:11], 0, v[100:101]                 // 000000002424: D1CA000A 0002C880
  s_mov_b64     s[14:15], exec                          // 00000000242C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002430: BE90047E
  s_nop         0x0000                                  // 000000002434: BF800000
  s_nop         0x0000                                  // 000000002438: BF800000
  s_nop         0x0000                                  // 00000000243C: BF800000
  label_0910:
  v_readfirstlane_b32  s3, v88                          // 000000002440: 7E060558
  v_cmp_eq_u32  vcc, s3, v88                            // 000000002444: 7D84B003
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002448: BE92246A
  s_cbranch_execz  label_0918                           // 00000000244C: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000002450: 02060708
  v_mov_b32     v88, s3                                 // 000000002454: 7EB00203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002458: 8A907E10
  s_cbranch_scc0  label_091A                            // 00000000245C: BF840002
  label_0918:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002460: 87FE1012
  s_branch      label_0910                              // 000000002464: BF82FFF6
  label_091A:
  s_mov_b64     exec, s[14:15]                          // 000000002468: BEFE040E
  v_cndmask_b32  v88, 0, v88, s[10:11]                  // 00000000246C: D2000058 002AB080
  v_lshl_b64    v[100:101], 1, v93                      // 000000002474: D2C20064 0002BA81
  v_and_b32     v100, exec_lo, v100                     // 00000000247C: 36C8C87E
  v_and_b32     v101, exec_hi, v101                     // 000000002480: 36CACA7F
  v_cmp_ne_u64  s[10:11], 0, v[100:101]                 // 000000002484: D1CA000A 0002C880
  s_mov_b64     s[14:15], exec                          // 00000000248C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002490: BE90047E
  s_nop         0x0000                                  // 000000002494: BF800000
  s_nop         0x0000                                  // 000000002498: BF800000
  s_nop         0x0000                                  // 00000000249C: BF800000
  label_0928:
  v_readfirstlane_b32  s3, v93                          // 0000000024A0: 7E06055D
  v_cmp_eq_u32  vcc, s3, v93                            // 0000000024A4: 7D84BA03
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000024A8: BE92246A
  s_cbranch_execz  label_0930                           // 0000000024AC: BF880004
  v_readlane_b32  s3, v8, s3                            // 0000000024B0: 02060708
  v_mov_b32     v100, s3                                // 0000000024B4: 7EC80203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000024B8: 8A907E10
  s_cbranch_scc0  label_0932                            // 0000000024BC: BF840002
  label_0930:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000024C0: 87FE1012
  s_branch      label_0928                              // 0000000024C4: BF82FFF6
  label_0932:
  s_mov_b64     exec, s[14:15]                          // 0000000024C8: BEFE040E
  v_cndmask_b32  v100, 0, v100, s[10:11]                // 0000000024CC: D2000064 002AC880
  v_lshl_b64    v[101:102], 1, v93                      // 0000000024D4: D2C20065 0002BA81
  v_and_b32     v101, exec_lo, v101                     // 0000000024DC: 36CACA7E
  v_and_b32     v102, exec_hi, v102                     // 0000000024E0: 36CCCC7F
  v_cmp_ne_u64  s[10:11], 0, v[101:102]                 // 0000000024E4: D1CA000A 0002CA80
  s_mov_b64     s[14:15], exec                          // 0000000024EC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000024F0: BE90047E
  s_nop         0x0000                                  // 0000000024F4: BF800000
  s_nop         0x0000                                  // 0000000024F8: BF800000
  s_nop         0x0000                                  // 0000000024FC: BF800000
  label_0940:
  v_readfirstlane_b32  s3, v93                          // 000000002500: 7E06055D
  v_cmp_eq_u32  vcc, s3, v93                            // 000000002504: 7D84BA03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002508: BE92246A
  s_cbranch_execz  label_0948                           // 00000000250C: BF880004
  v_readlane_b32  s3, v10, s3                           // 000000002510: 0206070A
  v_mov_b32     v101, s3                                // 000000002514: 7ECA0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002518: 8A907E10
  s_cbranch_scc0  label_094A                            // 00000000251C: BF840002
  label_0948:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002520: 87FE1012
  s_branch      label_0940                              // 000000002524: BF82FFF6
  label_094A:
  s_mov_b64     exec, s[14:15]                          // 000000002528: BEFE040E
  v_cndmask_b32  v101, 0, v101, s[10:11]                // 00000000252C: D2000065 002ACA80
  v_lshl_b64    v[102:103], 1, v93                      // 000000002534: D2C20066 0002BA81
  v_and_b32     v102, exec_lo, v102                     // 00000000253C: 36CCCC7E
  v_and_b32     v103, exec_hi, v103                     // 000000002540: 36CECE7F
  v_cmp_ne_u64  s[10:11], 0, v[102:103]                 // 000000002544: D1CA000A 0002CC80
  s_mov_b64     s[14:15], exec                          // 00000000254C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002550: BE90047E
  s_nop         0x0000                                  // 000000002554: BF800000
  s_nop         0x0000                                  // 000000002558: BF800000
  s_nop         0x0000                                  // 00000000255C: BF800000
  label_0958:
  v_readfirstlane_b32  s3, v93                          // 000000002560: 7E06055D
  v_cmp_eq_u32  vcc, s3, v93                            // 000000002564: 7D84BA03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002568: BE92246A
  s_cbranch_execz  label_0960                           // 00000000256C: BF880004
  v_readlane_b32  s3, v7, s3                            // 000000002570: 02060707
  v_mov_b32     v93, s3                                 // 000000002574: 7EBA0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002578: 8A907E10
  s_cbranch_scc0  label_0962                            // 00000000257C: BF840002
  label_0960:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002580: 87FE1012
  s_branch      label_0958                              // 000000002584: BF82FFF6
  label_0962:
  s_mov_b64     exec, s[14:15]                          // 000000002588: BEFE040E
  s_add_u32     s14, s8, 20                             // 00000000258C: 800E9408
  s_addc_u32    s15, s9, 0                              // 000000002590: 820F8009
  v_mov_b32     v102, s14                               // 000000002594: 7ECC020E
  v_mov_b32     v103, s15                               // 000000002598: 7ECE020F
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000259C: BF8C0070
  v_mul_f32     v96, v85, v96                           // 0000000025A0: 10C0C155
  v_mul_f32     v95, v85, v95                           // 0000000025A4: 10BEBF55
  v_add_i32     v104, vcc, 12, v12                      // 0000000025A8: 4AD0188C
  v_cmp_lt_i32  vcc, 4, v2                              // 0000000025AC: 7D020484
  v_mul_f32     v94, v85, v94                           // 0000000025B0: 10BCBD55
  v_cndmask_b32  v95, v96, v95, s[12:13]                // 0000000025B4: D200005F 0032BF60
  v_and_b32     v96, 63, v104                           // 0000000025BC: 36C0D0BF
  flat_load_dword  v102, v[102:103]                     // 0000000025C0: DC300000 66000066
  v_cndmask_b32  v93, 0, v93, s[10:11]                  // 0000000025C8: D200005D 002ABA80
  v_cndmask_b32  v94, v94, v95, vcc                     // 0000000025D0: 00BCBF5E
  v_lshl_b64    v[103:104], 1, v96                      // 0000000025D4: D2C20067 0002C081
  v_and_b32     v103, exec_lo, v103                     // 0000000025DC: 36CECE7E
  v_and_b32     v104, exec_hi, v104                     // 0000000025E0: 36D0D07F
  v_cmp_ne_u64  s[10:11], 0, v[103:104]                 // 0000000025E4: D1CA000A 0002CE80
  s_mov_b64     s[14:15], exec                          // 0000000025EC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000025F0: BE90047E
  s_nop         0x0000                                  // 0000000025F4: BF800000
  s_nop         0x0000                                  // 0000000025F8: BF800000
  s_nop         0x0000                                  // 0000000025FC: BF800000
  label_0980:
  v_readfirstlane_b32  s3, v96                          // 000000002600: 7E060560
  v_cmp_eq_u32  vcc, s3, v96                            // 000000002604: 7D84C003
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002608: BE92246A
  s_cbranch_execz  label_0988                           // 00000000260C: BF880004
  v_readlane_b32  s3, v9, s3                            // 000000002610: 02060709
  v_mov_b32     v95, s3                                 // 000000002614: 7EBE0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002618: 8A907E10
  s_cbranch_scc0  label_098A                            // 00000000261C: BF840002
  label_0988:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002620: 87FE1012
  s_branch      label_0980                              // 000000002624: BF82FFF6
  label_098A:
  s_mov_b64     exec, s[14:15]                          // 000000002628: BEFE040E
  v_cndmask_b32  v95, 0, v95, s[10:11]                  // 00000000262C: D200005F 002ABE80
  v_lshl_b64    v[103:104], 1, v96                      // 000000002634: D2C20067 0002C081
  v_and_b32     v103, exec_lo, v103                     // 00000000263C: 36CECE7E
  v_and_b32     v104, exec_hi, v104                     // 000000002640: 36D0D07F
  v_cmp_ne_u64  s[10:11], 0, v[103:104]                 // 000000002644: D1CA000A 0002CE80
  s_mov_b64     s[14:15], exec                          // 00000000264C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002650: BE90047E
  s_nop         0x0000                                  // 000000002654: BF800000
  s_nop         0x0000                                  // 000000002658: BF800000
  s_nop         0x0000                                  // 00000000265C: BF800000
  label_0998:
  v_readfirstlane_b32  s3, v96                          // 000000002660: 7E060560
  v_cmp_eq_u32  vcc, s3, v96                            // 000000002664: 7D84C003
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002668: BE92246A
  s_cbranch_execz  label_09A0                           // 00000000266C: BF880004
  v_readlane_b32  s3, v15, s3                           // 000000002670: 0206070F
  v_mov_b32     v103, s3                                // 000000002674: 7ECE0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002678: 8A907E10
  s_cbranch_scc0  label_09A2                            // 00000000267C: BF840002
  label_09A0:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002680: 87FE1012
  s_branch      label_0998                              // 000000002684: BF82FFF6
  label_09A2:
  s_mov_b64     exec, s[14:15]                          // 000000002688: BEFE040E
  v_cndmask_b32  v103, 0, v103, s[10:11]                // 00000000268C: D2000067 002ACE80
  v_add_i32     v104, vcc, 28, v12                      // 000000002694: 4AD0189C
  v_add_i32     v105, vcc, 44, v12                      // 000000002698: 4AD218AC
  v_and_b32     v105, 63, v105                          // 00000000269C: 36D2D2BF
  v_and_b32     v104, 63, v104                          // 0000000026A0: 36D0D0BF
  v_lshl_b64    v[106:107], 1, v104                     // 0000000026A4: D2C2006A 0002D081
  v_and_b32     v106, exec_lo, v106                     // 0000000026AC: 36D4D47E
  v_and_b32     v107, exec_hi, v107                     // 0000000026B0: 36D6D67F
  v_cmp_ne_u64  s[10:11], 0, v[106:107]                 // 0000000026B4: D1CA000A 0002D480
  s_mov_b64     s[14:15], exec                          // 0000000026BC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000026C0: BE90047E
  s_nop         0x0000                                  // 0000000026C4: BF800000
  s_nop         0x0000                                  // 0000000026C8: BF800000
  s_nop         0x0000                                  // 0000000026CC: BF800000
  s_nop         0x0000                                  // 0000000026D0: BF800000
  s_nop         0x0000                                  // 0000000026D4: BF800000
  s_nop         0x0000                                  // 0000000026D8: BF800000
  s_nop         0x0000                                  // 0000000026DC: BF800000
  label_09B8:
  v_readfirstlane_b32  s3, v104                         // 0000000026E0: 7E060568
  v_cmp_eq_u32  vcc, s3, v104                           // 0000000026E4: 7D84D003
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000026E8: BE92246A
  s_cbranch_execz  label_09C0                           // 0000000026EC: BF880004
  v_readlane_b32  s3, v15, s3                           // 0000000026F0: 0206070F
  v_mov_b32     v106, s3                                // 0000000026F4: 7ED40203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000026F8: 8A907E10
  s_cbranch_scc0  label_09C2                            // 0000000026FC: BF840002
  label_09C0:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002700: 87FE1012
  s_branch      label_09B8                              // 000000002704: BF82FFF6
  label_09C2:
  s_mov_b64     exec, s[14:15]                          // 000000002708: BEFE040E
  v_cndmask_b32  v106, 0, v106, s[10:11]                // 00000000270C: D200006A 002AD480
  v_lshl_b64    v[107:108], 1, v104                     // 000000002714: D2C2006B 0002D081
  v_and_b32     v107, exec_lo, v107                     // 00000000271C: 36D6D67E
  v_and_b32     v108, exec_hi, v108                     // 000000002720: 36D8D87F
  v_cmp_ne_u64  s[10:11], 0, v[107:108]                 // 000000002724: D1CA000A 0002D680
  s_mov_b64     s[14:15], exec                          // 00000000272C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002730: BE90047E
  s_nop         0x0000                                  // 000000002734: BF800000
  s_nop         0x0000                                  // 000000002738: BF800000
  s_nop         0x0000                                  // 00000000273C: BF800000
  label_09D0:
  v_readfirstlane_b32  s3, v104                         // 000000002740: 7E060568
  v_cmp_eq_u32  vcc, s3, v104                           // 000000002744: 7D84D003
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002748: BE92246A
  s_cbranch_execz  label_09D8                           // 00000000274C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000002750: 02060704
  v_mov_b32     v107, s3                                // 000000002754: 7ED60203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002758: 8A907E10
  s_cbranch_scc0  label_09DA                            // 00000000275C: BF840002
  label_09D8:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002760: 87FE1012
  s_branch      label_09D0                              // 000000002764: BF82FFF6
  label_09DA:
  s_mov_b64     exec, s[14:15]                          // 000000002768: BEFE040E
  v_cndmask_b32  v107, 0, v107, s[10:11]                // 00000000276C: D200006B 002AD680
  v_lshl_b64    v[108:109], 1, v105                     // 000000002774: D2C2006C 0002D281
  v_and_b32     v108, exec_lo, v108                     // 00000000277C: 36D8D87E
  v_and_b32     v109, exec_hi, v109                     // 000000002780: 36DADA7F
  v_cmp_ne_u64  s[10:11], 0, v[108:109]                 // 000000002784: D1CA000A 0002D880
  s_mov_b64     s[14:15], exec                          // 00000000278C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002790: BE90047E
  s_nop         0x0000                                  // 000000002794: BF800000
  s_nop         0x0000                                  // 000000002798: BF800000
  s_nop         0x0000                                  // 00000000279C: BF800000
  label_09E8:
  v_readfirstlane_b32  s3, v105                         // 0000000027A0: 7E060569
  v_cmp_eq_u32  vcc, s3, v105                           // 0000000027A4: 7D84D203
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000027A8: BE92246A
  s_cbranch_execz  label_09F0                           // 0000000027AC: BF880004
  v_readlane_b32  s3, v4, s3                            // 0000000027B0: 02060704
  v_mov_b32     v108, s3                                // 0000000027B4: 7ED80203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000027B8: 8A907E10
  s_cbranch_scc0  label_09F2                            // 0000000027BC: BF840002
  label_09F0:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000027C0: 87FE1012
  s_branch      label_09E8                              // 0000000027C4: BF82FFF6
  label_09F2:
  s_mov_b64     exec, s[14:15]                          // 0000000027C8: BEFE040E
  v_cndmask_b32  v108, 0, v108, s[10:11]                // 0000000027CC: D200006C 002AD880
  v_lshl_b64    v[109:110], 1, v105                     // 0000000027D4: D2C2006D 0002D281
  v_and_b32     v109, exec_lo, v109                     // 0000000027DC: 36DADA7E
  v_and_b32     v110, exec_hi, v110                     // 0000000027E0: 36DCDC7F
  v_cmp_ne_u64  s[10:11], 0, v[109:110]                 // 0000000027E4: D1CA000A 0002DA80
  s_mov_b64     s[14:15], exec                          // 0000000027EC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000027F0: BE90047E
  s_nop         0x0000                                  // 0000000027F4: BF800000
  s_nop         0x0000                                  // 0000000027F8: BF800000
  s_nop         0x0000                                  // 0000000027FC: BF800000
  label_0A00:
  v_readfirstlane_b32  s3, v105                         // 000000002800: 7E060569
  v_cmp_eq_u32  vcc, s3, v105                           // 000000002804: 7D84D203
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002808: BE92246A
  s_cbranch_execz  label_0A08                           // 00000000280C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000002810: 02060703
  v_mov_b32     v109, s3                                // 000000002814: 7EDA0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002818: 8A907E10
  s_cbranch_scc0  label_0A0A                            // 00000000281C: BF840002
  label_0A08:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002820: 87FE1012
  s_branch      label_0A00                              // 000000002824: BF82FFF6
  label_0A0A:
  s_mov_b64     exec, s[14:15]                          // 000000002828: BEFE040E
  v_cndmask_b32  v109, 0, v109, s[10:11]                // 00000000282C: D200006D 002ADA80
  v_add_i32     v110, vcc, 60, v12                      // 000000002834: 4ADC18BC
  v_and_b32     v110, 63, v110                          // 000000002838: 36DCDCBF
  v_lshl_b64    v[111:112], 1, v110                     // 00000000283C: D2C2006F 0002DC81
  v_and_b32     v111, exec_lo, v111                     // 000000002844: 36DEDE7E
  v_and_b32     v112, exec_hi, v112                     // 000000002848: 36E0E07F
  v_cmp_ne_u64  s[10:11], 0, v[111:112]                 // 00000000284C: D1CA000A 0002DE80
  s_mov_b64     s[14:15], exec                          // 000000002854: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002858: BE90047E
  s_nop         0x0000                                  // 00000000285C: BF800000
  label_0A18:
  v_readfirstlane_b32  s3, v110                         // 000000002860: 7E06056E
  v_cmp_eq_u32  vcc, s3, v110                           // 000000002864: 7D84DC03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002868: BE92246A
  s_cbranch_execz  label_0A20                           // 00000000286C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000002870: 02060703
  v_mov_b32     v111, s3                                // 000000002874: 7EDE0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002878: 8A907E10
  s_cbranch_scc0  label_0A22                            // 00000000287C: BF840002
  label_0A20:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002880: 87FE1012
  s_branch      label_0A18                              // 000000002884: BF82FFF6
  label_0A22:
  s_mov_b64     exec, s[14:15]                          // 000000002888: BEFE040E
  v_cndmask_b32  v111, 0, v111, s[10:11]                // 00000000288C: D200006F 002ADE80
  v_lshl_b64    v[112:113], 1, v110                     // 000000002894: D2C20070 0002DC81
  v_and_b32     v112, exec_lo, v112                     // 00000000289C: 36E0E07E
  v_and_b32     v113, exec_hi, v113                     // 0000000028A0: 36E2E27F
  v_cmp_ne_u64  s[10:11], 0, v[112:113]                 // 0000000028A4: D1CA000A 0002E080
  s_mov_b64     s[14:15], exec                          // 0000000028AC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000028B0: BE90047E
  s_nop         0x0000                                  // 0000000028B4: BF800000
  s_nop         0x0000                                  // 0000000028B8: BF800000
  s_nop         0x0000                                  // 0000000028BC: BF800000
  label_0A30:
  v_readfirstlane_b32  s3, v110                         // 0000000028C0: 7E06056E
  v_cmp_eq_u32  vcc, s3, v110                           // 0000000028C4: 7D84DC03
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000028C8: BE92246A
  s_cbranch_execz  label_0A38                           // 0000000028CC: BF880004
  v_readlane_b32  s3, v13, s3                           // 0000000028D0: 0206070D
  v_mov_b32     v112, s3                                // 0000000028D4: 7EE00203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000028D8: 8A907E10
  s_cbranch_scc0  label_0A3A                            // 0000000028DC: BF840002
  label_0A38:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000028E0: 87FE1012
  s_branch      label_0A30                              // 0000000028E4: BF82FFF6
  label_0A3A:
  s_mov_b64     exec, s[14:15]                          // 0000000028E8: BEFE040E
  v_cndmask_b32  v112, 0, v112, s[10:11]                // 0000000028EC: D2000070 002AE080
  v_lshl_b64    v[113:114], 1, v110                     // 0000000028F4: D2C20071 0002DC81
  v_and_b32     v113, exec_lo, v113                     // 0000000028FC: 36E2E27E
  v_and_b32     v114, exec_hi, v114                     // 000000002900: 36E4E47F
  v_cmp_ne_u64  s[10:11], 0, v[113:114]                 // 000000002904: D1CA000A 0002E280
  s_mov_b64     s[14:15], exec                          // 00000000290C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002910: BE90047E
  s_nop         0x0000                                  // 000000002914: BF800000
  s_nop         0x0000                                  // 000000002918: BF800000
  s_nop         0x0000                                  // 00000000291C: BF800000
  label_0A48:
  v_readfirstlane_b32  s3, v110                         // 000000002920: 7E06056E
  v_cmp_eq_u32  vcc, s3, v110                           // 000000002924: 7D84DC03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002928: BE92246A
  s_cbranch_execz  label_0A50                           // 00000000292C: BF880004
  v_readlane_b32  s3, v11, s3                           // 000000002930: 0206070B
  v_mov_b32     v113, s3                                // 000000002934: 7EE20203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002938: 8A907E10
  s_cbranch_scc0  label_0A52                            // 00000000293C: BF840002
  label_0A50:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002940: 87FE1012
  s_branch      label_0A48                              // 000000002944: BF82FFF6
  label_0A52:
  s_mov_b64     exec, s[14:15]                          // 000000002948: BEFE040E
  v_cndmask_b32  v113, 0, v113, s[10:11]                // 00000000294C: D2000071 002AE280
  v_lshl_b64    v[114:115], 1, v96                      // 000000002954: D2C20072 0002C081
  v_and_b32     v114, exec_lo, v114                     // 00000000295C: 36E4E47E
  v_and_b32     v115, exec_hi, v115                     // 000000002960: 36E6E67F
  v_cmp_ne_u64  s[10:11], 0, v[114:115]                 // 000000002964: D1CA000A 0002E480
  s_mov_b64     s[14:15], exec                          // 00000000296C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002970: BE90047E
  s_nop         0x0000                                  // 000000002974: BF800000
  s_nop         0x0000                                  // 000000002978: BF800000
  s_nop         0x0000                                  // 00000000297C: BF800000
  label_0A60:
  v_readfirstlane_b32  s3, v96                          // 000000002980: 7E060560
  v_cmp_eq_u32  vcc, s3, v96                            // 000000002984: 7D84C003
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002988: BE92246A
  s_cbranch_execz  label_0A68                           // 00000000298C: BF880004
  v_readlane_b32  s3, v11, s3                           // 000000002990: 0206070B
  v_mov_b32     v114, s3                                // 000000002994: 7EE40203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002998: 8A907E10
  s_cbranch_scc0  label_0A6A                            // 00000000299C: BF840002
  label_0A68:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000029A0: 87FE1012
  s_branch      label_0A60                              // 0000000029A4: BF82FFF6
  label_0A6A:
  s_mov_b64     exec, s[14:15]                          // 0000000029A8: BEFE040E
  v_cndmask_b32  v114, 0, v114, s[10:11]                // 0000000029AC: D2000072 002AE480
  v_lshl_b64    v[115:116], 1, v96                      // 0000000029B4: D2C20073 0002C081
  v_and_b32     v115, exec_lo, v115                     // 0000000029BC: 36E6E67E
  v_and_b32     v116, exec_hi, v116                     // 0000000029C0: 36E8E87F
  v_cmp_ne_u64  s[10:11], 0, v[115:116]                 // 0000000029C4: D1CA000A 0002E680
  s_mov_b64     s[14:15], exec                          // 0000000029CC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000029D0: BE90047E
  s_nop         0x0000                                  // 0000000029D4: BF800000
  s_nop         0x0000                                  // 0000000029D8: BF800000
  s_nop         0x0000                                  // 0000000029DC: BF800000
  label_0A78:
  v_readfirstlane_b32  s3, v96                          // 0000000029E0: 7E060560
  v_cmp_eq_u32  vcc, s3, v96                            // 0000000029E4: 7D84C003
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000029E8: BE92246A
  s_cbranch_execz  label_0A80                           // 0000000029EC: BF880004
  v_readlane_b32  s3, v6, s3                            // 0000000029F0: 02060706
  v_mov_b32     v96, s3                                 // 0000000029F4: 7EC00203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000029F8: 8A907E10
  s_cbranch_scc0  label_0A82                            // 0000000029FC: BF840002
  label_0A80:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002A00: 87FE1012
  s_branch      label_0A78                              // 000000002A04: BF82FFF6
  label_0A82:
  s_mov_b64     exec, s[14:15]                          // 000000002A08: BEFE040E
  v_cndmask_b32  v96, 0, v96, s[10:11]                  // 000000002A0C: D2000060 002AC080
  v_lshl_b64    v[115:116], 1, v104                     // 000000002A14: D2C20073 0002D081
  v_and_b32     v115, exec_lo, v115                     // 000000002A1C: 36E6E67E
  v_and_b32     v116, exec_hi, v116                     // 000000002A20: 36E8E87F
  v_cmp_ne_u64  s[10:11], 0, v[115:116]                 // 000000002A24: D1CA000A 0002E680
  s_mov_b64     s[14:15], exec                          // 000000002A2C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002A30: BE90047E
  s_nop         0x0000                                  // 000000002A34: BF800000
  s_nop         0x0000                                  // 000000002A38: BF800000
  s_nop         0x0000                                  // 000000002A3C: BF800000
  label_0A90:
  v_readfirstlane_b32  s3, v104                         // 000000002A40: 7E060568
  v_cmp_eq_u32  vcc, s3, v104                           // 000000002A44: 7D84D003
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002A48: BE92246A
  s_cbranch_execz  label_0A98                           // 000000002A4C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000002A50: 02060706
  v_mov_b32     v115, s3                                // 000000002A54: 7EE60203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002A58: 8A907E10
  s_cbranch_scc0  label_0A9A                            // 000000002A5C: BF840002
  label_0A98:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002A60: 87FE1012
  s_branch      label_0A90                              // 000000002A64: BF82FFF6
  label_0A9A:
  s_mov_b64     exec, s[14:15]                          // 000000002A68: BEFE040E
  v_cndmask_b32  v115, 0, v115, s[10:11]                // 000000002A6C: D2000073 002AE680
  v_lshl_b64    v[116:117], 1, v104                     // 000000002A74: D2C20074 0002D081
  v_and_b32     v116, exec_lo, v116                     // 000000002A7C: 36E8E87E
  v_and_b32     v117, exec_hi, v117                     // 000000002A80: 36EAEA7F
  v_cmp_ne_u64  s[10:11], 0, v[116:117]                 // 000000002A84: D1CA000A 0002E880
  s_mov_b64     s[14:15], exec                          // 000000002A8C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002A90: BE90047E
  s_nop         0x0000                                  // 000000002A94: BF800000
  s_nop         0x0000                                  // 000000002A98: BF800000
  s_nop         0x0000                                  // 000000002A9C: BF800000
  label_0AA8:
  v_readfirstlane_b32  s3, v104                         // 000000002AA0: 7E060568
  v_cmp_eq_u32  vcc, s3, v104                           // 000000002AA4: 7D84D003
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002AA8: BE92246A
  s_cbranch_execz  label_0AB0                           // 000000002AAC: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000002AB0: 02060705
  v_mov_b32     v104, s3                                // 000000002AB4: 7ED00203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002AB8: 8A907E10
  s_cbranch_scc0  label_0AB2                            // 000000002ABC: BF840002
  label_0AB0:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002AC0: 87FE1012
  s_branch      label_0AA8                              // 000000002AC4: BF82FFF6
  label_0AB2:
  s_mov_b64     exec, s[14:15]                          // 000000002AC8: BEFE040E
  v_cndmask_b32  v104, 0, v104, s[10:11]                // 000000002ACC: D2000068 002AD080
  v_lshl_b64    v[116:117], 1, v105                     // 000000002AD4: D2C20074 0002D281
  v_and_b32     v116, exec_lo, v116                     // 000000002ADC: 36E8E87E
  v_and_b32     v117, exec_hi, v117                     // 000000002AE0: 36EAEA7F
  v_cmp_ne_u64  s[10:11], 0, v[116:117]                 // 000000002AE4: D1CA000A 0002E880
  s_mov_b64     s[14:15], exec                          // 000000002AEC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002AF0: BE90047E
  s_nop         0x0000                                  // 000000002AF4: BF800000
  s_nop         0x0000                                  // 000000002AF8: BF800000
  s_nop         0x0000                                  // 000000002AFC: BF800000
  label_0AC0:
  v_readfirstlane_b32  s3, v105                         // 000000002B00: 7E060569
  v_cmp_eq_u32  vcc, s3, v105                           // 000000002B04: 7D84D203
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002B08: BE92246A
  s_cbranch_execz  label_0AC8                           // 000000002B0C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000002B10: 02060705
  v_mov_b32     v116, s3                                // 000000002B14: 7EE80203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002B18: 8A907E10
  s_cbranch_scc0  label_0ACA                            // 000000002B1C: BF840002
  label_0AC8:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002B20: 87FE1012
  s_branch      label_0AC0                              // 000000002B24: BF82FFF6
  label_0ACA:
  s_mov_b64     exec, s[14:15]                          // 000000002B28: BEFE040E
  v_cndmask_b32  v116, 0, v116, s[10:11]                // 000000002B2C: D2000074 002AE880
  v_lshl_b64    v[117:118], 1, v105                     // 000000002B34: D2C20075 0002D281
  v_and_b32     v117, exec_lo, v117                     // 000000002B3C: 36EAEA7E
  v_and_b32     v118, exec_hi, v118                     // 000000002B40: 36ECEC7F
  v_cmp_ne_u64  s[10:11], 0, v[117:118]                 // 000000002B44: D1CA000A 0002EA80
  s_mov_b64     s[14:15], exec                          // 000000002B4C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002B50: BE90047E
  s_nop         0x0000                                  // 000000002B54: BF800000
  s_nop         0x0000                                  // 000000002B58: BF800000
  s_nop         0x0000                                  // 000000002B5C: BF800000
  label_0AD8:
  v_readfirstlane_b32  s3, v105                         // 000000002B60: 7E060569
  v_cmp_eq_u32  vcc, s3, v105                           // 000000002B64: 7D84D203
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002B68: BE92246A
  s_cbranch_execz  label_0AE0                           // 000000002B6C: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000002B70: 02060708
  v_mov_b32     v105, s3                                // 000000002B74: 7ED20203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002B78: 8A907E10
  s_cbranch_scc0  label_0AE2                            // 000000002B7C: BF840002
  label_0AE0:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002B80: 87FE1012
  s_branch      label_0AD8                              // 000000002B84: BF82FFF6
  label_0AE2:
  s_mov_b64     exec, s[14:15]                          // 000000002B88: BEFE040E
  v_cndmask_b32  v105, 0, v105, s[10:11]                // 000000002B8C: D2000069 002AD280
  v_lshl_b64    v[117:118], 1, v110                     // 000000002B94: D2C20075 0002DC81
  v_and_b32     v117, exec_lo, v117                     // 000000002B9C: 36EAEA7E
  v_and_b32     v118, exec_hi, v118                     // 000000002BA0: 36ECEC7F
  v_cmp_ne_u64  s[10:11], 0, v[117:118]                 // 000000002BA4: D1CA000A 0002EA80
  s_mov_b64     s[14:15], exec                          // 000000002BAC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002BB0: BE90047E
  s_nop         0x0000                                  // 000000002BB4: BF800000
  s_nop         0x0000                                  // 000000002BB8: BF800000
  s_nop         0x0000                                  // 000000002BBC: BF800000
  label_0AF0:
  v_readfirstlane_b32  s3, v110                         // 000000002BC0: 7E06056E
  v_cmp_eq_u32  vcc, s3, v110                           // 000000002BC4: 7D84DC03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002BC8: BE92246A
  s_cbranch_execz  label_0AF8                           // 000000002BCC: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000002BD0: 02060708
  v_mov_b32     v117, s3                                // 000000002BD4: 7EEA0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002BD8: 8A907E10
  s_cbranch_scc0  label_0AFA                            // 000000002BDC: BF840002
  label_0AF8:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002BE0: 87FE1012
  s_branch      label_0AF0                              // 000000002BE4: BF82FFF6
  label_0AFA:
  s_mov_b64     exec, s[14:15]                          // 000000002BE8: BEFE040E
  v_cndmask_b32  v117, 0, v117, s[10:11]                // 000000002BEC: D2000075 002AEA80
  v_lshl_b64    v[118:119], 1, v110                     // 000000002BF4: D2C20076 0002DC81
  v_and_b32     v118, exec_lo, v118                     // 000000002BFC: 36ECEC7E
  v_and_b32     v119, exec_hi, v119                     // 000000002C00: 36EEEE7F
  v_cmp_ne_u64  s[10:11], 0, v[118:119]                 // 000000002C04: D1CA000A 0002EC80
  s_mov_b64     s[14:15], exec                          // 000000002C0C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002C10: BE90047E
  s_nop         0x0000                                  // 000000002C14: BF800000
  s_nop         0x0000                                  // 000000002C18: BF800000
  s_nop         0x0000                                  // 000000002C1C: BF800000
  label_0B08:
  v_readfirstlane_b32  s3, v110                         // 000000002C20: 7E06056E
  v_cmp_eq_u32  vcc, s3, v110                           // 000000002C24: 7D84DC03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002C28: BE92246A
  s_cbranch_execz  label_0B10                           // 000000002C2C: BF880004
  v_readlane_b32  s3, v10, s3                           // 000000002C30: 0206070A
  v_mov_b32     v118, s3                                // 000000002C34: 7EEC0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002C38: 8A907E10
  s_cbranch_scc0  label_0B12                            // 000000002C3C: BF840002
  label_0B10:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002C40: 87FE1012
  s_branch      label_0B08                              // 000000002C44: BF82FFF6
  label_0B12:
  s_mov_b64     exec, s[14:15]                          // 000000002C48: BEFE040E
  v_cndmask_b32  v118, 0, v118, s[10:11]                // 000000002C4C: D2000076 002AEC80
  v_lshl_b64    v[119:120], 1, v110                     // 000000002C54: D2C20077 0002DC81
  v_and_b32     v119, exec_lo, v119                     // 000000002C5C: 36EEEE7E
  v_and_b32     v120, exec_hi, v120                     // 000000002C60: 36F0F07F
  v_cmp_ne_u64  s[10:11], 0, v[119:120]                 // 000000002C64: D1CA000A 0002EE80
  s_mov_b64     s[14:15], exec                          // 000000002C6C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002C70: BE90047E
  s_nop         0x0000                                  // 000000002C74: BF800000
  s_nop         0x0000                                  // 000000002C78: BF800000
  s_nop         0x0000                                  // 000000002C7C: BF800000
  label_0B20:
  v_readfirstlane_b32  s3, v110                         // 000000002C80: 7E06056E
  v_cmp_eq_u32  vcc, s3, v110                           // 000000002C84: 7D84DC03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002C88: BE92246A
  s_cbranch_execz  label_0B28                           // 000000002C8C: BF880004
  v_readlane_b32  s3, v7, s3                            // 000000002C90: 02060707
  v_mov_b32     v110, s3                                // 000000002C94: 7EDC0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002C98: 8A907E10
  s_cbranch_scc0  label_0B2A                            // 000000002C9C: BF840002
  label_0B28:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002CA0: 87FE1012
  s_branch      label_0B20                              // 000000002CA4: BF82FFF6
  label_0B2A:
  s_mov_b64     exec, s[14:15]                          // 000000002CA8: BEFE040E
  v_cndmask_b32  v110, 0, v110, s[10:11]                // 000000002CAC: D200006E 002ADC80
  v_cmp_lt_i32  vcc, 3, v2                              // 000000002CB4: 7D020483
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000002CB8: BF8C0070
  v_mul_f32     v111, v102, v111                        // 000000002CBC: 10DEDF66
  v_mul_f32     v113, v102, v113                        // 000000002CC0: 10E2E366
  v_mul_f32     v112, v102, v112                        // 000000002CC4: 10E0E166
  v_cndmask_b32  v112, v113, v112, s[12:13]             // 000000002CC8: D2000070 0032E171
  v_cndmask_b32  v111, v111, v112, vcc                  // 000000002CD0: 00DEE16F
  s_add_u32     s10, s8, 24                             // 000000002CD4: 800A9808
  s_addc_u32    s11, s9, 0                              // 000000002CD8: 820B8009
  v_mov_b32     v112, s10                               // 000000002CDC: 7EE0020A
  v_mov_b32     v113, s11                               // 000000002CE0: 7EE2020B
  flat_load_dword  v112, v[112:113]                     // 000000002CE4: DC300000 70000070
  v_add_i32     v113, vcc, 20, v12                      // 000000002CEC: 4AE21894
  v_and_b32     v113, 63, v113                          // 000000002CF0: 36E2E2BF
  v_lshl_b64    v[119:120], 1, v113                     // 000000002CF4: D2C20077 0002E281
  v_and_b32     v119, exec_lo, v119                     // 000000002CFC: 36EEEE7E
  v_and_b32     v120, exec_hi, v120                     // 000000002D00: 36F0F07F
  v_cmp_ne_u64  s[10:11], 0, v[119:120]                 // 000000002D04: D1CA000A 0002EE80
  s_mov_b64     s[14:15], exec                          // 000000002D0C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002D10: BE90047E
  s_nop         0x0000                                  // 000000002D14: BF800000
  s_nop         0x0000                                  // 000000002D18: BF800000
  s_nop         0x0000                                  // 000000002D1C: BF800000
  label_0B48:
  v_readfirstlane_b32  s3, v113                         // 000000002D20: 7E060571
  v_cmp_eq_u32  vcc, s3, v113                           // 000000002D24: 7D84E203
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002D28: BE92246A
  s_cbranch_execz  label_0B50                           // 000000002D2C: BF880004
  v_readlane_b32  s3, v9, s3                            // 000000002D30: 02060709
  v_mov_b32     v119, s3                                // 000000002D34: 7EEE0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002D38: 8A907E10
  s_cbranch_scc0  label_0B52                            // 000000002D3C: BF840002
  label_0B50:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002D40: 87FE1012
  s_branch      label_0B48                              // 000000002D44: BF82FFF6
  label_0B52:
  s_mov_b64     exec, s[14:15]                          // 000000002D48: BEFE040E
  v_cndmask_b32  v119, 0, v119, s[10:11]                // 000000002D4C: D2000077 002AEE80
  v_lshl_b64    v[120:121], 1, v113                     // 000000002D54: D2C20078 0002E281
  v_and_b32     v120, exec_lo, v120                     // 000000002D5C: 36F0F07E
  v_and_b32     v121, exec_hi, v121                     // 000000002D60: 36F2F27F
  v_cmp_ne_u64  s[10:11], 0, v[120:121]                 // 000000002D64: D1CA000A 0002F080
  s_mov_b64     s[14:15], exec                          // 000000002D6C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002D70: BE90047E
  s_nop         0x0000                                  // 000000002D74: BF800000
  s_nop         0x0000                                  // 000000002D78: BF800000
  s_nop         0x0000                                  // 000000002D7C: BF800000
  label_0B60:
  v_readfirstlane_b32  s3, v113                         // 000000002D80: 7E060571
  v_cmp_eq_u32  vcc, s3, v113                           // 000000002D84: 7D84E203
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002D88: BE92246A
  s_cbranch_execz  label_0B68                           // 000000002D8C: BF880004
  v_readlane_b32  s3, v15, s3                           // 000000002D90: 0206070F
  v_mov_b32     v120, s3                                // 000000002D94: 7EF00203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002D98: 8A907E10
  s_cbranch_scc0  label_0B6A                            // 000000002D9C: BF840002
  label_0B68:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002DA0: 87FE1012
  s_branch      label_0B60                              // 000000002DA4: BF82FFF6
  label_0B6A:
  s_mov_b64     exec, s[14:15]                          // 000000002DA8: BEFE040E
  v_cndmask_b32  v120, 0, v120, s[10:11]                // 000000002DAC: D2000078 002AF080
  v_add_i32     v121, vcc, 36, v12                      // 000000002DB4: 4AF218A4
  v_and_b32     v121, 63, v121                          // 000000002DB8: 36F2F2BF
  v_lshl_b64    v[122:123], 1, v121                     // 000000002DBC: D2C2007A 0002F281
  v_and_b32     v122, exec_lo, v122                     // 000000002DC4: 36F4F47E
  v_and_b32     v123, exec_hi, v123                     // 000000002DC8: 36F6F67F
  v_cmp_ne_u64  s[10:11], 0, v[122:123]                 // 000000002DCC: D1CA000A 0002F480
  s_mov_b64     s[14:15], exec                          // 000000002DD4: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002DD8: BE90047E
  s_nop         0x0000                                  // 000000002DDC: BF800000
  label_0B78:
  v_readfirstlane_b32  s3, v121                         // 000000002DE0: 7E060579
  v_cmp_eq_u32  vcc, s3, v121                           // 000000002DE4: 7D84F203
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002DE8: BE92246A
  s_cbranch_execz  label_0B80                           // 000000002DEC: BF880004
  v_readlane_b32  s3, v15, s3                           // 000000002DF0: 0206070F
  v_mov_b32     v122, s3                                // 000000002DF4: 7EF40203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002DF8: 8A907E10
  s_cbranch_scc0  label_0B82                            // 000000002DFC: BF840002
  label_0B80:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002E00: 87FE1012
  s_branch      label_0B78                              // 000000002E04: BF82FFF6
  label_0B82:
  s_mov_b64     exec, s[14:15]                          // 000000002E08: BEFE040E
  v_cndmask_b32  v122, 0, v122, s[10:11]                // 000000002E0C: D200007A 002AF480
  v_lshl_b64    v[123:124], 1, v121                     // 000000002E14: D2C2007B 0002F281
  v_and_b32     v123, exec_lo, v123                     // 000000002E1C: 36F6F67E
  v_and_b32     v124, exec_hi, v124                     // 000000002E20: 36F8F87F
  v_cmp_ne_u64  s[10:11], 0, v[123:124]                 // 000000002E24: D1CA000A 0002F680
  s_mov_b64     s[14:15], exec                          // 000000002E2C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002E30: BE90047E
  s_nop         0x0000                                  // 000000002E34: BF800000
  s_nop         0x0000                                  // 000000002E38: BF800000
  s_nop         0x0000                                  // 000000002E3C: BF800000
  label_0B90:
  v_readfirstlane_b32  s3, v121                         // 000000002E40: 7E060579
  v_cmp_eq_u32  vcc, s3, v121                           // 000000002E44: 7D84F203
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002E48: BE92246A
  s_cbranch_execz  label_0B98                           // 000000002E4C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000002E50: 02060704
  v_mov_b32     v123, s3                                // 000000002E54: 7EF60203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002E58: 8A907E10
  s_cbranch_scc0  label_0B9A                            // 000000002E5C: BF840002
  label_0B98:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002E60: 87FE1012
  s_branch      label_0B90                              // 000000002E64: BF82FFF6
  label_0B9A:
  s_mov_b64     exec, s[14:15]                          // 000000002E68: BEFE040E
  v_cndmask_b32  v123, 0, v123, s[10:11]                // 000000002E6C: D200007B 002AF680
  v_add_i32     v124, vcc, 0x00000044, v12              // 000000002E74: 4AF818FF 00000044
  v_add_i32     v125, vcc, 52, v12                      // 000000002E7C: 4AFA18B4
  v_and_b32     v125, 63, v125                          // 000000002E80: 36FAFABF
  v_and_b32     v124, 63, v124                          // 000000002E84: 36F8F8BF
  v_lshl_b64    v[126:127], 1, v125                     // 000000002E88: D2C2007E 0002FA81
  v_and_b32     v126, exec_lo, v126                     // 000000002E90: 36FCFC7E
  v_and_b32     v127, exec_hi, v127                     // 000000002E94: 36FEFE7F
  v_cmp_ne_u64  s[10:11], 0, v[126:127]                 // 000000002E98: D1CA000A 0002FC80
  s_mov_b64     s[14:15], exec                          // 000000002EA0: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002EA4: BE90047E
  s_nop         0x0000                                  // 000000002EA8: BF800000
  s_nop         0x0000                                  // 000000002EAC: BF800000
  s_nop         0x0000                                  // 000000002EB0: BF800000
  s_nop         0x0000                                  // 000000002EB4: BF800000
  s_nop         0x0000                                  // 000000002EB8: BF800000
  s_nop         0x0000                                  // 000000002EBC: BF800000
  label_0BB0:
  v_readfirstlane_b32  s3, v125                         // 000000002EC0: 7E06057D
  v_cmp_eq_u32  vcc, s3, v125                           // 000000002EC4: 7D84FA03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002EC8: BE92246A
  s_cbranch_execz  label_0BB8                           // 000000002ECC: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000002ED0: 02060704
  v_mov_b32     v126, s3                                // 000000002ED4: 7EFC0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002ED8: 8A907E10
  s_cbranch_scc0  label_0BBA                            // 000000002EDC: BF840002
  label_0BB8:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002EE0: 87FE1012
  s_branch      label_0BB0                              // 000000002EE4: BF82FFF6
  label_0BBA:
  s_mov_b64     exec, s[14:15]                          // 000000002EE8: BEFE040E
  v_cndmask_b32  v126, 0, v126, s[10:11]                // 000000002EEC: D200007E 002AFC80
  v_lshl_b64    v[127:128], 1, v125                     // 000000002EF4: D2C2007F 0002FA81
  v_and_b32     v127, exec_lo, v127                     // 000000002EFC: 36FEFE7E
  v_and_b32     v128, exec_hi, v128                     // 000000002F00: 3701007F
  v_cmp_ne_u64  s[10:11], 0, v[127:128]                 // 000000002F04: D1CA000A 0002FE80
  s_mov_b64     s[14:15], exec                          // 000000002F0C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002F10: BE90047E
  s_nop         0x0000                                  // 000000002F14: BF800000
  s_nop         0x0000                                  // 000000002F18: BF800000
  s_nop         0x0000                                  // 000000002F1C: BF800000
  label_0BC8:
  v_readfirstlane_b32  s3, v125                         // 000000002F20: 7E06057D
  v_cmp_eq_u32  vcc, s3, v125                           // 000000002F24: 7D84FA03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002F28: BE92246A
  s_cbranch_execz  label_0BD0                           // 000000002F2C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000002F30: 02060703
  v_mov_b32     v127, s3                                // 000000002F34: 7EFE0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002F38: 8A907E10
  s_cbranch_scc0  label_0BD2                            // 000000002F3C: BF840002
  label_0BD0:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002F40: 87FE1012
  s_branch      label_0BC8                              // 000000002F44: BF82FFF6
  label_0BD2:
  s_mov_b64     exec, s[14:15]                          // 000000002F48: BEFE040E
  v_cndmask_b32  v127, 0, v127, s[10:11]                // 000000002F4C: D200007F 002AFE80
  v_lshl_b64    v[128:129], 1, v125                     // 000000002F54: D2C20080 0002FA81
  v_and_b32     v128, exec_lo, v128                     // 000000002F5C: 3701007E
  v_and_b32     v129, exec_hi, v129                     // 000000002F60: 3703027F
  v_cmp_ne_u64  s[10:11], 0, v[128:129]                 // 000000002F64: D1CA000A 00030080
  s_mov_b64     s[14:15], exec                          // 000000002F6C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002F70: BE90047E
  s_nop         0x0000                                  // 000000002F74: BF800000
  s_nop         0x0000                                  // 000000002F78: BF800000
  s_nop         0x0000                                  // 000000002F7C: BF800000
  label_0BE0:
  v_readfirstlane_b32  s3, v125                         // 000000002F80: 7E06057D
  v_cmp_eq_u32  vcc, s3, v125                           // 000000002F84: 7D84FA03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002F88: BE92246A
  s_cbranch_execz  label_0BE8                           // 000000002F8C: BF880004
  v_readlane_b32  s3, v13, s3                           // 000000002F90: 0206070D
  v_mov_b32     v128, s3                                // 000000002F94: 7F000203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002F98: 8A907E10
  s_cbranch_scc0  label_0BEA                            // 000000002F9C: BF840002
  label_0BE8:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000002FA0: 87FE1012
  s_branch      label_0BE0                              // 000000002FA4: BF82FFF6
  label_0BEA:
  s_mov_b64     exec, s[14:15]                          // 000000002FA8: BEFE040E
  v_cndmask_b32  v128, 0, v128, s[10:11]                // 000000002FAC: D2000080 002B0080
  v_lshl_b64    v[129:130], 1, v124                     // 000000002FB4: D2C20081 0002F881
  v_and_b32     v129, exec_lo, v129                     // 000000002FBC: 3703027E
  v_and_b32     v130, exec_hi, v130                     // 000000002FC0: 3705047F
  v_cmp_ne_u64  s[10:11], 0, v[129:130]                 // 000000002FC4: D1CA000A 00030280
  s_mov_b64     s[14:15], exec                          // 000000002FCC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000002FD0: BE90047E
  s_nop         0x0000                                  // 000000002FD4: BF800000
  s_nop         0x0000                                  // 000000002FD8: BF800000
  s_nop         0x0000                                  // 000000002FDC: BF800000
  label_0BF8:
  v_readfirstlane_b32  s3, v124                         // 000000002FE0: 7E06057C
  v_cmp_eq_u32  vcc, s3, v124                           // 000000002FE4: 7D84F803
  s_and_saveexec_b64  s[18:19], vcc                     // 000000002FE8: BE92246A
  s_cbranch_execz  label_0C00                           // 000000002FEC: BF880004
  v_readlane_b32  s3, v13, s3                           // 000000002FF0: 0206070D
  v_mov_b32     v129, s3                                // 000000002FF4: 7F020203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000002FF8: 8A907E10
  s_cbranch_scc0  label_0C02                            // 000000002FFC: BF840002
  label_0C00:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003000: 87FE1012
  s_branch      label_0BF8                              // 000000003004: BF82FFF6
  label_0C02:
  s_mov_b64     exec, s[14:15]                          // 000000003008: BEFE040E
  v_cndmask_b32  v129, 0, v129, s[10:11]                // 00000000300C: D2000081 002B0280
  v_lshl_b64    v[130:131], 1, v124                     // 000000003014: D2C20082 0002F881
  v_and_b32     v130, exec_lo, v130                     // 00000000301C: 3705047E
  v_and_b32     v131, exec_hi, v131                     // 000000003020: 3707067F
  v_cmp_ne_u64  s[10:11], 0, v[130:131]                 // 000000003024: D1CA000A 00030480
  s_mov_b64     s[14:15], exec                          // 00000000302C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003030: BE90047E
  s_nop         0x0000                                  // 000000003034: BF800000
  s_nop         0x0000                                  // 000000003038: BF800000
  s_nop         0x0000                                  // 00000000303C: BF800000
  label_0C10:
  v_readfirstlane_b32  s3, v124                         // 000000003040: 7E06057C
  v_cmp_eq_u32  vcc, s3, v124                           // 000000003044: 7D84F803
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003048: BE92246A
  s_cbranch_execz  label_0C18                           // 00000000304C: BF880004
  v_readlane_b32  s3, v11, s3                           // 000000003050: 0206070B
  v_mov_b32     v130, s3                                // 000000003054: 7F040203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003058: 8A907E10
  s_cbranch_scc0  label_0C1A                            // 00000000305C: BF840002
  label_0C18:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003060: 87FE1012
  s_branch      label_0C10                              // 000000003064: BF82FFF6
  label_0C1A:
  s_mov_b64     exec, s[14:15]                          // 000000003068: BEFE040E
  v_cndmask_b32  v130, 0, v130, s[10:11]                // 00000000306C: D2000082 002B0480
  v_lshl_b64    v[131:132], 1, v113                     // 000000003074: D2C20083 0002E281
  v_and_b32     v131, exec_lo, v131                     // 00000000307C: 3707067E
  v_and_b32     v132, exec_hi, v132                     // 000000003080: 3709087F
  v_cmp_ne_u64  s[10:11], 0, v[131:132]                 // 000000003084: D1CA000A 00030680
  s_mov_b64     s[14:15], exec                          // 00000000308C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003090: BE90047E
  s_nop         0x0000                                  // 000000003094: BF800000
  s_nop         0x0000                                  // 000000003098: BF800000
  s_nop         0x0000                                  // 00000000309C: BF800000
  label_0C28:
  v_readfirstlane_b32  s3, v113                         // 0000000030A0: 7E060571
  v_cmp_eq_u32  vcc, s3, v113                           // 0000000030A4: 7D84E203
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000030A8: BE92246A
  s_cbranch_execz  label_0C30                           // 0000000030AC: BF880004
  v_readlane_b32  s3, v11, s3                           // 0000000030B0: 0206070B
  v_mov_b32     v131, s3                                // 0000000030B4: 7F060203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000030B8: 8A907E10
  s_cbranch_scc0  label_0C32                            // 0000000030BC: BF840002
  label_0C30:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000030C0: 87FE1012
  s_branch      label_0C28                              // 0000000030C4: BF82FFF6
  label_0C32:
  s_mov_b64     exec, s[14:15]                          // 0000000030C8: BEFE040E
  v_cndmask_b32  v131, 0, v131, s[10:11]                // 0000000030CC: D2000083 002B0680
  v_lshl_b64    v[132:133], 1, v113                     // 0000000030D4: D2C20084 0002E281
  v_and_b32     v132, exec_lo, v132                     // 0000000030DC: 3709087E
  v_and_b32     v133, exec_hi, v133                     // 0000000030E0: 370B0A7F
  v_cmp_ne_u64  s[10:11], 0, v[132:133]                 // 0000000030E4: D1CA000A 00030880
  s_mov_b64     s[14:15], exec                          // 0000000030EC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000030F0: BE90047E
  s_nop         0x0000                                  // 0000000030F4: BF800000
  s_nop         0x0000                                  // 0000000030F8: BF800000
  s_nop         0x0000                                  // 0000000030FC: BF800000
  label_0C40:
  v_readfirstlane_b32  s3, v113                         // 000000003100: 7E060571
  v_cmp_eq_u32  vcc, s3, v113                           // 000000003104: 7D84E203
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003108: BE92246A
  s_cbranch_execz  label_0C48                           // 00000000310C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000003110: 02060706
  v_mov_b32     v113, s3                                // 000000003114: 7EE20203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003118: 8A907E10
  s_cbranch_scc0  label_0C4A                            // 00000000311C: BF840002
  label_0C48:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003120: 87FE1012
  s_branch      label_0C40                              // 000000003124: BF82FFF6
  label_0C4A:
  s_mov_b64     exec, s[14:15]                          // 000000003128: BEFE040E
  v_cndmask_b32  v113, 0, v113, s[10:11]                // 00000000312C: D2000071 002AE280
  v_lshl_b64    v[132:133], 1, v121                     // 000000003134: D2C20084 0002F281
  v_and_b32     v132, exec_lo, v132                     // 00000000313C: 3709087E
  v_and_b32     v133, exec_hi, v133                     // 000000003140: 370B0A7F
  v_cmp_ne_u64  s[10:11], 0, v[132:133]                 // 000000003144: D1CA000A 00030880
  s_mov_b64     s[14:15], exec                          // 00000000314C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003150: BE90047E
  s_nop         0x0000                                  // 000000003154: BF800000
  s_nop         0x0000                                  // 000000003158: BF800000
  s_nop         0x0000                                  // 00000000315C: BF800000
  label_0C58:
  v_readfirstlane_b32  s3, v121                         // 000000003160: 7E060579
  v_cmp_eq_u32  vcc, s3, v121                           // 000000003164: 7D84F203
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003168: BE92246A
  s_cbranch_execz  label_0C60                           // 00000000316C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000003170: 02060706
  v_mov_b32     v132, s3                                // 000000003174: 7F080203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003178: 8A907E10
  s_cbranch_scc0  label_0C62                            // 00000000317C: BF840002
  label_0C60:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003180: 87FE1012
  s_branch      label_0C58                              // 000000003184: BF82FFF6
  label_0C62:
  s_mov_b64     exec, s[14:15]                          // 000000003188: BEFE040E
  v_cndmask_b32  v132, 0, v132, s[10:11]                // 00000000318C: D2000084 002B0880
  v_lshl_b64    v[133:134], 1, v121                     // 000000003194: D2C20085 0002F281
  v_and_b32     v133, exec_lo, v133                     // 00000000319C: 370B0A7E
  v_and_b32     v134, exec_hi, v134                     // 0000000031A0: 370D0C7F
  v_cmp_ne_u64  s[10:11], 0, v[133:134]                 // 0000000031A4: D1CA000A 00030A80
  s_mov_b64     s[14:15], exec                          // 0000000031AC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000031B0: BE90047E
  s_nop         0x0000                                  // 0000000031B4: BF800000
  s_nop         0x0000                                  // 0000000031B8: BF800000
  s_nop         0x0000                                  // 0000000031BC: BF800000
  label_0C70:
  v_readfirstlane_b32  s3, v121                         // 0000000031C0: 7E060579
  v_cmp_eq_u32  vcc, s3, v121                           // 0000000031C4: 7D84F203
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000031C8: BE92246A
  s_cbranch_execz  label_0C78                           // 0000000031CC: BF880004
  v_readlane_b32  s3, v5, s3                            // 0000000031D0: 02060705
  v_mov_b32     v121, s3                                // 0000000031D4: 7EF20203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000031D8: 8A907E10
  s_cbranch_scc0  label_0C7A                            // 0000000031DC: BF840002
  label_0C78:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000031E0: 87FE1012
  s_branch      label_0C70                              // 0000000031E4: BF82FFF6
  label_0C7A:
  s_mov_b64     exec, s[14:15]                          // 0000000031E8: BEFE040E
  v_cndmask_b32  v121, 0, v121, s[10:11]                // 0000000031EC: D2000079 002AF280
  v_lshl_b64    v[133:134], 1, v125                     // 0000000031F4: D2C20085 0002FA81
  v_and_b32     v133, exec_lo, v133                     // 0000000031FC: 370B0A7E
  v_and_b32     v134, exec_hi, v134                     // 000000003200: 370D0C7F
  v_cmp_ne_u64  s[10:11], 0, v[133:134]                 // 000000003204: D1CA000A 00030A80
  s_mov_b64     s[14:15], exec                          // 00000000320C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003210: BE90047E
  s_nop         0x0000                                  // 000000003214: BF800000
  s_nop         0x0000                                  // 000000003218: BF800000
  s_nop         0x0000                                  // 00000000321C: BF800000
  label_0C88:
  v_readfirstlane_b32  s3, v125                         // 000000003220: 7E06057D
  v_cmp_eq_u32  vcc, s3, v125                           // 000000003224: 7D84FA03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003228: BE92246A
  s_cbranch_execz  label_0C90                           // 00000000322C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000003230: 02060705
  v_mov_b32     v133, s3                                // 000000003234: 7F0A0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003238: 8A907E10
  s_cbranch_scc0  label_0C92                            // 00000000323C: BF840002
  label_0C90:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003240: 87FE1012
  s_branch      label_0C88                              // 000000003244: BF82FFF6
  label_0C92:
  s_mov_b64     exec, s[14:15]                          // 000000003248: BEFE040E
  v_cndmask_b32  v133, 0, v133, s[10:11]                // 00000000324C: D2000085 002B0A80
  v_lshl_b64    v[134:135], 1, v125                     // 000000003254: D2C20086 0002FA81
  v_and_b32     v134, exec_lo, v134                     // 00000000325C: 370D0C7E
  v_and_b32     v135, exec_hi, v135                     // 000000003260: 370F0E7F
  v_cmp_ne_u64  s[10:11], 0, v[134:135]                 // 000000003264: D1CA000A 00030C80
  s_mov_b64     s[14:15], exec                          // 00000000326C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003270: BE90047E
  s_nop         0x0000                                  // 000000003274: BF800000
  s_nop         0x0000                                  // 000000003278: BF800000
  s_nop         0x0000                                  // 00000000327C: BF800000
  label_0CA0:
  v_readfirstlane_b32  s3, v125                         // 000000003280: 7E06057D
  v_cmp_eq_u32  vcc, s3, v125                           // 000000003284: 7D84FA03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003288: BE92246A
  s_cbranch_execz  label_0CA8                           // 00000000328C: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000003290: 02060708
  v_mov_b32     v134, s3                                // 000000003294: 7F0C0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003298: 8A907E10
  s_cbranch_scc0  label_0CAA                            // 00000000329C: BF840002
  label_0CA8:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000032A0: 87FE1012
  s_branch      label_0CA0                              // 0000000032A4: BF82FFF6
  label_0CAA:
  s_mov_b64     exec, s[14:15]                          // 0000000032A8: BEFE040E
  v_cndmask_b32  v134, 0, v134, s[10:11]                // 0000000032AC: D2000086 002B0C80
  v_lshl_b64    v[135:136], 1, v125                     // 0000000032B4: D2C20087 0002FA81
  v_and_b32     v135, exec_lo, v135                     // 0000000032BC: 370F0E7E
  v_and_b32     v136, exec_hi, v136                     // 0000000032C0: 3711107F
  v_cmp_ne_u64  s[10:11], 0, v[135:136]                 // 0000000032C4: D1CA000A 00030E80
  s_mov_b64     s[14:15], exec                          // 0000000032CC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000032D0: BE90047E
  s_nop         0x0000                                  // 0000000032D4: BF800000
  s_nop         0x0000                                  // 0000000032D8: BF800000
  s_nop         0x0000                                  // 0000000032DC: BF800000
  label_0CB8:
  v_readfirstlane_b32  s3, v125                         // 0000000032E0: 7E06057D
  v_cmp_eq_u32  vcc, s3, v125                           // 0000000032E4: 7D84FA03
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000032E8: BE92246A
  s_cbranch_execz  label_0CC0                           // 0000000032EC: BF880004
  v_readlane_b32  s3, v10, s3                           // 0000000032F0: 0206070A
  v_mov_b32     v125, s3                                // 0000000032F4: 7EFA0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000032F8: 8A907E10
  s_cbranch_scc0  label_0CC2                            // 0000000032FC: BF840002
  label_0CC0:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003300: 87FE1012
  s_branch      label_0CB8                              // 000000003304: BF82FFF6
  label_0CC2:
  s_mov_b64     exec, s[14:15]                          // 000000003308: BEFE040E
  v_cndmask_b32  v125, 0, v125, s[10:11]                // 00000000330C: D200007D 002AFA80
  v_lshl_b64    v[135:136], 1, v124                     // 000000003314: D2C20087 0002F881
  v_and_b32     v135, exec_lo, v135                     // 00000000331C: 370F0E7E
  v_and_b32     v136, exec_hi, v136                     // 000000003320: 3711107F
  v_cmp_ne_u64  s[10:11], 0, v[135:136]                 // 000000003324: D1CA000A 00030E80
  s_mov_b64     s[14:15], exec                          // 00000000332C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003330: BE90047E
  s_nop         0x0000                                  // 000000003334: BF800000
  s_nop         0x0000                                  // 000000003338: BF800000
  s_nop         0x0000                                  // 00000000333C: BF800000
  label_0CD0:
  v_readfirstlane_b32  s3, v124                         // 000000003340: 7E06057C
  v_cmp_eq_u32  vcc, s3, v124                           // 000000003344: 7D84F803
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003348: BE92246A
  s_cbranch_execz  label_0CD8                           // 00000000334C: BF880004
  v_readlane_b32  s3, v10, s3                           // 000000003350: 0206070A
  v_mov_b32     v135, s3                                // 000000003354: 7F0E0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003358: 8A907E10
  s_cbranch_scc0  label_0CDA                            // 00000000335C: BF840002
  label_0CD8:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003360: 87FE1012
  s_branch      label_0CD0                              // 000000003364: BF82FFF6
  label_0CDA:
  s_mov_b64     exec, s[14:15]                          // 000000003368: BEFE040E
  v_cndmask_b32  v135, 0, v135, s[10:11]                // 00000000336C: D2000087 002B0E80
  v_lshl_b64    v[136:137], 1, v124                     // 000000003374: D2C20088 0002F881
  v_and_b32     v136, exec_lo, v136                     // 00000000337C: 3711107E
  v_and_b32     v137, exec_hi, v137                     // 000000003380: 3713127F
  v_cmp_ne_u64  s[10:11], 0, v[136:137]                 // 000000003384: D1CA000A 00031080
  s_mov_b64     s[14:15], exec                          // 00000000338C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003390: BE90047E
  s_nop         0x0000                                  // 000000003394: BF800000
  s_nop         0x0000                                  // 000000003398: BF800000
  s_nop         0x0000                                  // 00000000339C: BF800000
  label_0CE8:
  v_readfirstlane_b32  s3, v124                         // 0000000033A0: 7E06057C
  v_cmp_eq_u32  vcc, s3, v124                           // 0000000033A4: 7D84F803
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000033A8: BE92246A
  s_cbranch_execz  label_0CF0                           // 0000000033AC: BF880004
  v_readlane_b32  s3, v7, s3                            // 0000000033B0: 02060707
  v_mov_b32     v124, s3                                // 0000000033B4: 7EF80203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000033B8: 8A907E10
  s_cbranch_scc0  label_0CF2                            // 0000000033BC: BF840002
  label_0CF0:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000033C0: 87FE1012
  s_branch      label_0CE8                              // 0000000033C4: BF82FFF6
  label_0CF2:
  s_mov_b64     exec, s[14:15]                          // 0000000033C8: BEFE040E
  v_cndmask_b32  v124, 0, v124, s[10:11]                // 0000000033CC: D200007C 002AF880
  v_cmp_gt_i32  s[10:11], v2, 9                         // 0000000033D4: D108000A 00011302
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000033DC: BF8C0070
  v_mul_f32     v126, v112, v126                        // 0000000033E0: 10FCFD70
  v_mul_f32     v128, v112, v128                        // 0000000033E4: 11010170
  v_mul_f32     v127, v112, v127                        // 0000000033E8: 10FEFF70
  v_cmp_gt_i32  vcc, 62, v2                             // 0000000033EC: 7D0804BE
  v_cndmask_b32  v127, v128, v127, vcc                  // 0000000033F0: 00FEFF80
  v_cndmask_b32  v126, v126, v127, s[10:11]             // 0000000033F4: D200007E 002AFF7E
  s_add_u32     s10, s8, 28                             // 0000000033FC: 800A9C08
  s_addc_u32    s11, s9, 0                              // 000000003400: 820B8009
  v_mov_b32     v127, s10                               // 000000003404: 7EFE020A
  v_mov_b32     v128, s11                               // 000000003408: 7F00020B
  flat_load_dword  v127, v[127:128]                     // 00000000340C: DC300000 7F00007F
  v_add_i32     v128, vcc, 21, v12                      // 000000003414: 4B001895
  v_and_b32     v128, 63, v128                          // 000000003418: 370100BF
  v_lshl_b64    v[136:137], 1, v128                     // 00000000341C: D2C20088 00030081
  v_and_b32     v136, exec_lo, v136                     // 000000003424: 3711107E
  v_and_b32     v137, exec_hi, v137                     // 000000003428: 3713127F
  v_cmp_ne_u64  s[10:11], 0, v[136:137]                 // 00000000342C: D1CA000A 00031080
  s_mov_b64     s[14:15], exec                          // 000000003434: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003438: BE90047E
  s_nop         0x0000                                  // 00000000343C: BF800000
  label_0D10:
  v_readfirstlane_b32  s3, v128                         // 000000003440: 7E060580
  v_cmp_eq_u32  vcc, s3, v128                           // 000000003444: 7D850003
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003448: BE92246A
  s_cbranch_execz  label_0D18                           // 00000000344C: BF880004
  v_readlane_b32  s3, v9, s3                            // 000000003450: 02060709
  v_mov_b32     v136, s3                                // 000000003454: 7F100203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003458: 8A907E10
  s_cbranch_scc0  label_0D1A                            // 00000000345C: BF840002
  label_0D18:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003460: 87FE1012
  s_branch      label_0D10                              // 000000003464: BF82FFF6
  label_0D1A:
  s_mov_b64     exec, s[14:15]                          // 000000003468: BEFE040E
  v_cndmask_b32  v136, 0, v136, s[10:11]                // 00000000346C: D2000088 002B1080
  v_lshl_b64    v[137:138], 1, v128                     // 000000003474: D2C20089 00030081
  v_and_b32     v137, exec_lo, v137                     // 00000000347C: 3713127E
  v_and_b32     v138, exec_hi, v138                     // 000000003480: 3715147F
  v_cmp_ne_u64  s[10:11], 0, v[137:138]                 // 000000003484: D1CA000A 00031280
  s_mov_b64     s[14:15], exec                          // 00000000348C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003490: BE90047E
  s_nop         0x0000                                  // 000000003494: BF800000
  s_nop         0x0000                                  // 000000003498: BF800000
  s_nop         0x0000                                  // 00000000349C: BF800000
  label_0D28:
  v_readfirstlane_b32  s3, v128                         // 0000000034A0: 7E060580
  v_cmp_eq_u32  vcc, s3, v128                           // 0000000034A4: 7D850003
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000034A8: BE92246A
  s_cbranch_execz  label_0D30                           // 0000000034AC: BF880004
  v_readlane_b32  s3, v15, s3                           // 0000000034B0: 0206070F
  v_mov_b32     v137, s3                                // 0000000034B4: 7F120203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000034B8: 8A907E10
  s_cbranch_scc0  label_0D32                            // 0000000034BC: BF840002
  label_0D30:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000034C0: 87FE1012
  s_branch      label_0D28                              // 0000000034C4: BF82FFF6
  label_0D32:
  s_mov_b64     exec, s[14:15]                          // 0000000034C8: BEFE040E
  v_cndmask_b32  v137, 0, v137, s[10:11]                // 0000000034CC: D2000089 002B1280
  v_add_i32     v138, vcc, 37, v12                      // 0000000034D4: 4B1418A5
  v_and_b32     v138, 63, v138                          // 0000000034D8: 371514BF
  v_lshl_b64    v[139:140], 1, v138                     // 0000000034DC: D2C2008B 00031481
  v_and_b32     v139, exec_lo, v139                     // 0000000034E4: 3717167E
  v_and_b32     v140, exec_hi, v140                     // 0000000034E8: 3719187F
  v_cmp_ne_u64  s[10:11], 0, v[139:140]                 // 0000000034EC: D1CA000A 00031680
  s_mov_b64     s[14:15], exec                          // 0000000034F4: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000034F8: BE90047E
  s_nop         0x0000                                  // 0000000034FC: BF800000
  label_0D40:
  v_readfirstlane_b32  s3, v138                         // 000000003500: 7E06058A
  v_cmp_eq_u32  vcc, s3, v138                           // 000000003504: 7D851403
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003508: BE92246A
  s_cbranch_execz  label_0D48                           // 00000000350C: BF880004
  v_readlane_b32  s3, v15, s3                           // 000000003510: 0206070F
  v_mov_b32     v139, s3                                // 000000003514: 7F160203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003518: 8A907E10
  s_cbranch_scc0  label_0D4A                            // 00000000351C: BF840002
  label_0D48:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003520: 87FE1012
  s_branch      label_0D40                              // 000000003524: BF82FFF6
  label_0D4A:
  s_mov_b64     exec, s[14:15]                          // 000000003528: BEFE040E
  v_cndmask_b32  v139, 0, v139, s[10:11]                // 00000000352C: D200008B 002B1680
  v_lshl_b64    v[140:141], 1, v138                     // 000000003534: D2C2008C 00031481
  v_and_b32     v140, exec_lo, v140                     // 00000000353C: 3719187E
  v_and_b32     v141, exec_hi, v141                     // 000000003540: 371B1A7F
  v_cmp_ne_u64  s[10:11], 0, v[140:141]                 // 000000003544: D1CA000A 00031880
  s_mov_b64     s[14:15], exec                          // 00000000354C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003550: BE90047E
  s_nop         0x0000                                  // 000000003554: BF800000
  s_nop         0x0000                                  // 000000003558: BF800000
  s_nop         0x0000                                  // 00000000355C: BF800000
  label_0D58:
  v_readfirstlane_b32  s3, v138                         // 000000003560: 7E06058A
  v_cmp_eq_u32  vcc, s3, v138                           // 000000003564: 7D851403
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003568: BE92246A
  s_cbranch_execz  label_0D60                           // 00000000356C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000003570: 02060704
  v_mov_b32     v140, s3                                // 000000003574: 7F180203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003578: 8A907E10
  s_cbranch_scc0  label_0D62                            // 00000000357C: BF840002
  label_0D60:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003580: 87FE1012
  s_branch      label_0D58                              // 000000003584: BF82FFF6
  label_0D62:
  s_mov_b64     exec, s[14:15]                          // 000000003588: BEFE040E
  v_cndmask_b32  v140, 0, v140, s[10:11]                // 00000000358C: D200008C 002B1880
  v_add_i32     v141, vcc, 0x00000045, v12              // 000000003594: 4B1A18FF 00000045
  v_add_i32     v142, vcc, 53, v12                      // 00000000359C: 4B1C18B5
  v_and_b32     v142, 63, v142                          // 0000000035A0: 371D1CBF
  v_and_b32     v141, 63, v141                          // 0000000035A4: 371B1ABF
  v_lshl_b64    v[143:144], 1, v142                     // 0000000035A8: D2C2008F 00031C81
  v_and_b32     v143, exec_lo, v143                     // 0000000035B0: 371F1E7E
  v_and_b32     v144, exec_hi, v144                     // 0000000035B4: 3721207F
  v_cmp_ne_u64  s[10:11], 0, v[143:144]                 // 0000000035B8: D1CA000A 00031E80
  s_mov_b64     s[14:15], exec                          // 0000000035C0: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000035C4: BE90047E
  s_nop         0x0000                                  // 0000000035C8: BF800000
  s_nop         0x0000                                  // 0000000035CC: BF800000
  s_nop         0x0000                                  // 0000000035D0: BF800000
  s_nop         0x0000                                  // 0000000035D4: BF800000
  s_nop         0x0000                                  // 0000000035D8: BF800000
  s_nop         0x0000                                  // 0000000035DC: BF800000
  label_0D78:
  v_readfirstlane_b32  s3, v142                         // 0000000035E0: 7E06058E
  v_cmp_eq_u32  vcc, s3, v142                           // 0000000035E4: 7D851C03
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000035E8: BE92246A
  s_cbranch_execz  label_0D80                           // 0000000035EC: BF880004
  v_readlane_b32  s3, v4, s3                            // 0000000035F0: 02060704
  v_mov_b32     v143, s3                                // 0000000035F4: 7F1E0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000035F8: 8A907E10
  s_cbranch_scc0  label_0D82                            // 0000000035FC: BF840002
  label_0D80:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003600: 87FE1012
  s_branch      label_0D78                              // 000000003604: BF82FFF6
  label_0D82:
  s_mov_b64     exec, s[14:15]                          // 000000003608: BEFE040E
  v_cndmask_b32  v143, 0, v143, s[10:11]                // 00000000360C: D200008F 002B1E80
  v_lshl_b64    v[144:145], 1, v142                     // 000000003614: D2C20090 00031C81
  v_and_b32     v144, exec_lo, v144                     // 00000000361C: 3721207E
  v_and_b32     v145, exec_hi, v145                     // 000000003620: 3723227F
  v_cmp_ne_u64  s[10:11], 0, v[144:145]                 // 000000003624: D1CA000A 00032080
  s_mov_b64     s[14:15], exec                          // 00000000362C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003630: BE90047E
  s_nop         0x0000                                  // 000000003634: BF800000
  s_nop         0x0000                                  // 000000003638: BF800000
  s_nop         0x0000                                  // 00000000363C: BF800000
  label_0D90:
  v_readfirstlane_b32  s3, v142                         // 000000003640: 7E06058E
  v_cmp_eq_u32  vcc, s3, v142                           // 000000003644: 7D851C03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003648: BE92246A
  s_cbranch_execz  label_0D98                           // 00000000364C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000003650: 02060703
  v_mov_b32     v144, s3                                // 000000003654: 7F200203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003658: 8A907E10
  s_cbranch_scc0  label_0D9A                            // 00000000365C: BF840002
  label_0D98:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003660: 87FE1012
  s_branch      label_0D90                              // 000000003664: BF82FFF6
  label_0D9A:
  s_mov_b64     exec, s[14:15]                          // 000000003668: BEFE040E
  v_cndmask_b32  v144, 0, v144, s[10:11]                // 00000000366C: D2000090 002B2080
  v_lshl_b64    v[145:146], 1, v142                     // 000000003674: D2C20091 00031C81
  v_and_b32     v145, exec_lo, v145                     // 00000000367C: 3723227E
  v_and_b32     v146, exec_hi, v146                     // 000000003680: 3725247F
  v_cmp_ne_u64  s[10:11], 0, v[145:146]                 // 000000003684: D1CA000A 00032280
  s_mov_b64     s[14:15], exec                          // 00000000368C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003690: BE90047E
  s_nop         0x0000                                  // 000000003694: BF800000
  s_nop         0x0000                                  // 000000003698: BF800000
  s_nop         0x0000                                  // 00000000369C: BF800000
  label_0DA8:
  v_readfirstlane_b32  s3, v142                         // 0000000036A0: 7E06058E
  v_cmp_eq_u32  vcc, s3, v142                           // 0000000036A4: 7D851C03
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000036A8: BE92246A
  s_cbranch_execz  label_0DB0                           // 0000000036AC: BF880004
  v_readlane_b32  s3, v13, s3                           // 0000000036B0: 0206070D
  v_mov_b32     v145, s3                                // 0000000036B4: 7F220203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000036B8: 8A907E10
  s_cbranch_scc0  label_0DB2                            // 0000000036BC: BF840002
  label_0DB0:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000036C0: 87FE1012
  s_branch      label_0DA8                              // 0000000036C4: BF82FFF6
  label_0DB2:
  s_mov_b64     exec, s[14:15]                          // 0000000036C8: BEFE040E
  v_cndmask_b32  v145, 0, v145, s[10:11]                // 0000000036CC: D2000091 002B2280
  v_lshl_b64    v[146:147], 1, v141                     // 0000000036D4: D2C20092 00031A81
  v_and_b32     v146, exec_lo, v146                     // 0000000036DC: 3725247E
  v_and_b32     v147, exec_hi, v147                     // 0000000036E0: 3727267F
  v_cmp_ne_u64  s[10:11], 0, v[146:147]                 // 0000000036E4: D1CA000A 00032480
  s_mov_b64     s[14:15], exec                          // 0000000036EC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000036F0: BE90047E
  s_nop         0x0000                                  // 0000000036F4: BF800000
  s_nop         0x0000                                  // 0000000036F8: BF800000
  s_nop         0x0000                                  // 0000000036FC: BF800000
  label_0DC0:
  v_readfirstlane_b32  s3, v141                         // 000000003700: 7E06058D
  v_cmp_eq_u32  vcc, s3, v141                           // 000000003704: 7D851A03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003708: BE92246A
  s_cbranch_execz  label_0DC8                           // 00000000370C: BF880004
  v_readlane_b32  s3, v13, s3                           // 000000003710: 0206070D
  v_mov_b32     v146, s3                                // 000000003714: 7F240203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003718: 8A907E10
  s_cbranch_scc0  label_0DCA                            // 00000000371C: BF840002
  label_0DC8:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003720: 87FE1012
  s_branch      label_0DC0                              // 000000003724: BF82FFF6
  label_0DCA:
  s_mov_b64     exec, s[14:15]                          // 000000003728: BEFE040E
  v_cndmask_b32  v146, 0, v146, s[10:11]                // 00000000372C: D2000092 002B2480
  v_lshl_b64    v[147:148], 1, v141                     // 000000003734: D2C20093 00031A81
  v_and_b32     v147, exec_lo, v147                     // 00000000373C: 3727267E
  v_and_b32     v148, exec_hi, v148                     // 000000003740: 3729287F
  v_cmp_ne_u64  s[10:11], 0, v[147:148]                 // 000000003744: D1CA000A 00032680
  s_mov_b64     s[14:15], exec                          // 00000000374C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003750: BE90047E
  s_nop         0x0000                                  // 000000003754: BF800000
  s_nop         0x0000                                  // 000000003758: BF800000
  s_nop         0x0000                                  // 00000000375C: BF800000
  label_0DD8:
  v_readfirstlane_b32  s3, v141                         // 000000003760: 7E06058D
  v_cmp_eq_u32  vcc, s3, v141                           // 000000003764: 7D851A03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003768: BE92246A
  s_cbranch_execz  label_0DE0                           // 00000000376C: BF880004
  v_readlane_b32  s3, v11, s3                           // 000000003770: 0206070B
  v_mov_b32     v147, s3                                // 000000003774: 7F260203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003778: 8A907E10
  s_cbranch_scc0  label_0DE2                            // 00000000377C: BF840002
  label_0DE0:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003780: 87FE1012
  s_branch      label_0DD8                              // 000000003784: BF82FFF6
  label_0DE2:
  s_mov_b64     exec, s[14:15]                          // 000000003788: BEFE040E
  v_cndmask_b32  v147, 0, v147, s[10:11]                // 00000000378C: D2000093 002B2680
  v_lshl_b64    v[148:149], 1, v128                     // 000000003794: D2C20094 00030081
  v_and_b32     v148, exec_lo, v148                     // 00000000379C: 3729287E
  v_and_b32     v149, exec_hi, v149                     // 0000000037A0: 372B2A7F
  v_cmp_ne_u64  s[10:11], 0, v[148:149]                 // 0000000037A4: D1CA000A 00032880
  s_mov_b64     s[14:15], exec                          // 0000000037AC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000037B0: BE90047E
  s_nop         0x0000                                  // 0000000037B4: BF800000
  s_nop         0x0000                                  // 0000000037B8: BF800000
  s_nop         0x0000                                  // 0000000037BC: BF800000
  label_0DF0:
  v_readfirstlane_b32  s3, v128                         // 0000000037C0: 7E060580
  v_cmp_eq_u32  vcc, s3, v128                           // 0000000037C4: 7D850003
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000037C8: BE92246A
  s_cbranch_execz  label_0DF8                           // 0000000037CC: BF880004
  v_readlane_b32  s3, v11, s3                           // 0000000037D0: 0206070B
  v_mov_b32     v148, s3                                // 0000000037D4: 7F280203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000037D8: 8A907E10
  s_cbranch_scc0  label_0DFA                            // 0000000037DC: BF840002
  label_0DF8:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000037E0: 87FE1012
  s_branch      label_0DF0                              // 0000000037E4: BF82FFF6
  label_0DFA:
  s_mov_b64     exec, s[14:15]                          // 0000000037E8: BEFE040E
  v_cndmask_b32  v148, 0, v148, s[10:11]                // 0000000037EC: D2000094 002B2880
  v_lshl_b64    v[149:150], 1, v128                     // 0000000037F4: D2C20095 00030081
  v_and_b32     v149, exec_lo, v149                     // 0000000037FC: 372B2A7E
  v_and_b32     v150, exec_hi, v150                     // 000000003800: 372D2C7F
  v_cmp_ne_u64  s[10:11], 0, v[149:150]                 // 000000003804: D1CA000A 00032A80
  s_mov_b64     s[14:15], exec                          // 00000000380C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003810: BE90047E
  s_nop         0x0000                                  // 000000003814: BF800000
  s_nop         0x0000                                  // 000000003818: BF800000
  s_nop         0x0000                                  // 00000000381C: BF800000
  label_0E08:
  v_readfirstlane_b32  s3, v128                         // 000000003820: 7E060580
  v_cmp_eq_u32  vcc, s3, v128                           // 000000003824: 7D850003
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003828: BE92246A
  s_cbranch_execz  label_0E10                           // 00000000382C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000003830: 02060706
  v_mov_b32     v128, s3                                // 000000003834: 7F000203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003838: 8A907E10
  s_cbranch_scc0  label_0E12                            // 00000000383C: BF840002
  label_0E10:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003840: 87FE1012
  s_branch      label_0E08                              // 000000003844: BF82FFF6
  label_0E12:
  s_mov_b64     exec, s[14:15]                          // 000000003848: BEFE040E
  v_cndmask_b32  v128, 0, v128, s[10:11]                // 00000000384C: D2000080 002B0080
  v_lshl_b64    v[149:150], 1, v138                     // 000000003854: D2C20095 00031481
  v_and_b32     v149, exec_lo, v149                     // 00000000385C: 372B2A7E
  v_and_b32     v150, exec_hi, v150                     // 000000003860: 372D2C7F
  v_cmp_ne_u64  s[10:11], 0, v[149:150]                 // 000000003864: D1CA000A 00032A80
  s_mov_b64     s[14:15], exec                          // 00000000386C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003870: BE90047E
  s_nop         0x0000                                  // 000000003874: BF800000
  s_nop         0x0000                                  // 000000003878: BF800000
  s_nop         0x0000                                  // 00000000387C: BF800000
  label_0E20:
  v_readfirstlane_b32  s3, v138                         // 000000003880: 7E06058A
  v_cmp_eq_u32  vcc, s3, v138                           // 000000003884: 7D851403
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003888: BE92246A
  s_cbranch_execz  label_0E28                           // 00000000388C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000003890: 02060706
  v_mov_b32     v149, s3                                // 000000003894: 7F2A0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003898: 8A907E10
  s_cbranch_scc0  label_0E2A                            // 00000000389C: BF840002
  label_0E28:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000038A0: 87FE1012
  s_branch      label_0E20                              // 0000000038A4: BF82FFF6
  label_0E2A:
  s_mov_b64     exec, s[14:15]                          // 0000000038A8: BEFE040E
  v_cndmask_b32  v149, 0, v149, s[10:11]                // 0000000038AC: D2000095 002B2A80
  v_lshl_b64    v[150:151], 1, v138                     // 0000000038B4: D2C20096 00031481
  v_and_b32     v150, exec_lo, v150                     // 0000000038BC: 372D2C7E
  v_and_b32     v151, exec_hi, v151                     // 0000000038C0: 372F2E7F
  v_cmp_ne_u64  s[10:11], 0, v[150:151]                 // 0000000038C4: D1CA000A 00032C80
  s_mov_b64     s[14:15], exec                          // 0000000038CC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000038D0: BE90047E
  s_nop         0x0000                                  // 0000000038D4: BF800000
  s_nop         0x0000                                  // 0000000038D8: BF800000
  s_nop         0x0000                                  // 0000000038DC: BF800000
  label_0E38:
  v_readfirstlane_b32  s3, v138                         // 0000000038E0: 7E06058A
  v_cmp_eq_u32  vcc, s3, v138                           // 0000000038E4: 7D851403
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000038E8: BE92246A
  s_cbranch_execz  label_0E40                           // 0000000038EC: BF880004
  v_readlane_b32  s3, v5, s3                            // 0000000038F0: 02060705
  v_mov_b32     v138, s3                                // 0000000038F4: 7F140203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000038F8: 8A907E10
  s_cbranch_scc0  label_0E42                            // 0000000038FC: BF840002
  label_0E40:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003900: 87FE1012
  s_branch      label_0E38                              // 000000003904: BF82FFF6
  label_0E42:
  s_mov_b64     exec, s[14:15]                          // 000000003908: BEFE040E
  v_cndmask_b32  v138, 0, v138, s[10:11]                // 00000000390C: D200008A 002B1480
  v_lshl_b64    v[150:151], 1, v142                     // 000000003914: D2C20096 00031C81
  v_and_b32     v150, exec_lo, v150                     // 00000000391C: 372D2C7E
  v_and_b32     v151, exec_hi, v151                     // 000000003920: 372F2E7F
  v_cmp_ne_u64  s[10:11], 0, v[150:151]                 // 000000003924: D1CA000A 00032C80
  s_mov_b64     s[14:15], exec                          // 00000000392C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003930: BE90047E
  s_nop         0x0000                                  // 000000003934: BF800000
  s_nop         0x0000                                  // 000000003938: BF800000
  s_nop         0x0000                                  // 00000000393C: BF800000
  label_0E50:
  v_readfirstlane_b32  s3, v142                         // 000000003940: 7E06058E
  v_cmp_eq_u32  vcc, s3, v142                           // 000000003944: 7D851C03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003948: BE92246A
  s_cbranch_execz  label_0E58                           // 00000000394C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000003950: 02060705
  v_mov_b32     v150, s3                                // 000000003954: 7F2C0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003958: 8A907E10
  s_cbranch_scc0  label_0E5A                            // 00000000395C: BF840002
  label_0E58:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003960: 87FE1012
  s_branch      label_0E50                              // 000000003964: BF82FFF6
  label_0E5A:
  s_mov_b64     exec, s[14:15]                          // 000000003968: BEFE040E
  v_cndmask_b32  v150, 0, v150, s[10:11]                // 00000000396C: D2000096 002B2C80
  v_lshl_b64    v[151:152], 1, v142                     // 000000003974: D2C20097 00031C81
  v_and_b32     v151, exec_lo, v151                     // 00000000397C: 372F2E7E
  v_and_b32     v152, exec_hi, v152                     // 000000003980: 3731307F
  v_cmp_ne_u64  s[10:11], 0, v[151:152]                 // 000000003984: D1CA000A 00032E80
  s_mov_b64     s[14:15], exec                          // 00000000398C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003990: BE90047E
  s_nop         0x0000                                  // 000000003994: BF800000
  s_nop         0x0000                                  // 000000003998: BF800000
  s_nop         0x0000                                  // 00000000399C: BF800000
  label_0E68:
  v_readfirstlane_b32  s3, v142                         // 0000000039A0: 7E06058E
  v_cmp_eq_u32  vcc, s3, v142                           // 0000000039A4: 7D851C03
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000039A8: BE92246A
  s_cbranch_execz  label_0E70                           // 0000000039AC: BF880004
  v_readlane_b32  s3, v8, s3                            // 0000000039B0: 02060708
  v_mov_b32     v151, s3                                // 0000000039B4: 7F2E0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000039B8: 8A907E10
  s_cbranch_scc0  label_0E72                            // 0000000039BC: BF840002
  label_0E70:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000039C0: 87FE1012
  s_branch      label_0E68                              // 0000000039C4: BF82FFF6
  label_0E72:
  s_mov_b64     exec, s[14:15]                          // 0000000039C8: BEFE040E
  v_cndmask_b32  v151, 0, v151, s[10:11]                // 0000000039CC: D2000097 002B2E80
  v_lshl_b64    v[152:153], 1, v142                     // 0000000039D4: D2C20098 00031C81
  v_and_b32     v152, exec_lo, v152                     // 0000000039DC: 3731307E
  v_and_b32     v153, exec_hi, v153                     // 0000000039E0: 3733327F
  v_cmp_ne_u64  s[10:11], 0, v[152:153]                 // 0000000039E4: D1CA000A 00033080
  s_mov_b64     s[14:15], exec                          // 0000000039EC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000039F0: BE90047E
  s_nop         0x0000                                  // 0000000039F4: BF800000
  s_nop         0x0000                                  // 0000000039F8: BF800000
  s_nop         0x0000                                  // 0000000039FC: BF800000
  label_0E80:
  v_readfirstlane_b32  s3, v142                         // 000000003A00: 7E06058E
  v_cmp_eq_u32  vcc, s3, v142                           // 000000003A04: 7D851C03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003A08: BE92246A
  s_cbranch_execz  label_0E88                           // 000000003A0C: BF880004
  v_readlane_b32  s3, v10, s3                           // 000000003A10: 0206070A
  v_mov_b32     v142, s3                                // 000000003A14: 7F1C0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003A18: 8A907E10
  s_cbranch_scc0  label_0E8A                            // 000000003A1C: BF840002
  label_0E88:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003A20: 87FE1012
  s_branch      label_0E80                              // 000000003A24: BF82FFF6
  label_0E8A:
  s_mov_b64     exec, s[14:15]                          // 000000003A28: BEFE040E
  v_cndmask_b32  v142, 0, v142, s[10:11]                // 000000003A2C: D200008E 002B1C80
  v_lshl_b64    v[152:153], 1, v141                     // 000000003A34: D2C20098 00031A81
  v_and_b32     v152, exec_lo, v152                     // 000000003A3C: 3731307E
  v_and_b32     v153, exec_hi, v153                     // 000000003A40: 3733327F
  v_cmp_ne_u64  s[10:11], 0, v[152:153]                 // 000000003A44: D1CA000A 00033080
  s_mov_b64     s[14:15], exec                          // 000000003A4C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003A50: BE90047E
  s_nop         0x0000                                  // 000000003A54: BF800000
  s_nop         0x0000                                  // 000000003A58: BF800000
  s_nop         0x0000                                  // 000000003A5C: BF800000
  label_0E98:
  v_readfirstlane_b32  s3, v141                         // 000000003A60: 7E06058D
  v_cmp_eq_u32  vcc, s3, v141                           // 000000003A64: 7D851A03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003A68: BE92246A
  s_cbranch_execz  label_0EA0                           // 000000003A6C: BF880004
  v_readlane_b32  s3, v10, s3                           // 000000003A70: 0206070A
  v_mov_b32     v152, s3                                // 000000003A74: 7F300203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003A78: 8A907E10
  s_cbranch_scc0  label_0EA2                            // 000000003A7C: BF840002
  label_0EA0:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003A80: 87FE1012
  s_branch      label_0E98                              // 000000003A84: BF82FFF6
  label_0EA2:
  s_mov_b64     exec, s[14:15]                          // 000000003A88: BEFE040E
  v_cndmask_b32  v152, 0, v152, s[10:11]                // 000000003A8C: D2000098 002B3080
  v_lshl_b64    v[153:154], 1, v141                     // 000000003A94: D2C20099 00031A81
  v_and_b32     v153, exec_lo, v153                     // 000000003A9C: 3733327E
  v_and_b32     v154, exec_hi, v154                     // 000000003AA0: 3735347F
  v_cmp_ne_u64  s[10:11], 0, v[153:154]                 // 000000003AA4: D1CA000A 00033280
  s_mov_b64     s[14:15], exec                          // 000000003AAC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000003AB0: BE90047E
  s_nop         0x0000                                  // 000000003AB4: BF800000
  s_nop         0x0000                                  // 000000003AB8: BF800000
  s_nop         0x0000                                  // 000000003ABC: BF800000
  label_0EB0:
  v_readfirstlane_b32  s3, v141                         // 000000003AC0: 7E06058D
  v_cmp_eq_u32  vcc, s3, v141                           // 000000003AC4: 7D851A03
  s_and_saveexec_b64  s[18:19], vcc                     // 000000003AC8: BE92246A
  s_cbranch_execz  label_0EB8                           // 000000003ACC: BF880004
  v_readlane_b32  s3, v7, s3                            // 000000003AD0: 02060707
  v_mov_b32     v141, s3                                // 000000003AD4: 7F1A0203
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000003AD8: 8A907E10
  s_cbranch_scc0  label_0EBA                            // 000000003ADC: BF840002
  label_0EB8:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000003AE0: 87FE1012
  s_branch      label_0EB0                              // 000000003AE4: BF82FFF6
  label_0EBA:
  s_mov_b64     exec, s[14:15]                          // 000000003AE8: BEFE040E
  v_cndmask_b32  v141, 0, v141, s[10:11]                // 000000003AEC: D200008D 002B1A80
  v_cmp_gt_i32  s[10:11], v2, 8                         // 000000003AF4: D108000A 00011102
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000003AFC: BF8C0070
  v_mul_f32     v143, v127, v143                        // 000000003B00: 111F1F7F
  v_mul_f32     v145, v127, v145                        // 000000003B04: 1123237F
  v_mul_f32     v144, v127, v144                        // 000000003B08: 1121217F
  v_cmp_gt_i32  vcc, 61, v2                             // 000000003B0C: 7D0804BD
  v_cndmask_b32  v144, v145, v144, vcc                  // 000000003B10: 01212191
  v_cndmask_b32  v143, v143, v144, s[10:11]             // 000000003B14: D200008F 002B218F
  v_add_i32     v0, vcc, s0, v0                         // 000000003B1C: 4A000000
  v_add_i32     v1, vcc, s0, v1                         // 000000003B20: 4A020200
  s_add_u32     s8, s8, 32                              // 000000003B24: 8008A008
  s_addc_u32    s9, s9, 0                               // 000000003B28: 82098009
  v_mov_b32     v144, s8                                // 000000003B2C: 7F200208
  v_mov_b32     v145, s9                                // 000000003B30: 7F220209
  flat_load_dword  v144, v[144:145]                     // 000000003B34: DC300000 90000090
  v_add_i32     v145, vcc, 22, v12                      // 000000003B3C: 4B221896
  v_and_b32     v145, 63, v145                          // 000000003B40: 372322BF
  v_lshl_b64    v[153:154], 1, v145                     // 000000003B44: D2C20099 00032281
  v_and_b32     v153, exec_lo, v153                     // 000000003B4C: 3733327E
  v_and_b32     v154, exec_hi, v154                     // 000000003B50: 3735347F
  v_cmp_ne_u64  s[8:9], 0, v[153:154]                   // 000000003B54: D1CA0008 00033280
  s_mov_b64     s[10:11], exec                          // 000000003B5C: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000003B60: BE8E047E
  s_nop         0x0000                                  // 000000003B64: BF800000
  s_nop         0x0000                                  // 000000003B68: BF800000
  s_nop         0x0000                                  // 000000003B6C: BF800000
  s_nop         0x0000                                  // 000000003B70: BF800000
  s_nop         0x0000                                  // 000000003B74: BF800000
  s_nop         0x0000                                  // 000000003B78: BF800000
  s_nop         0x0000                                  // 000000003B7C: BF800000
  label_0EE0:
  v_readfirstlane_b32  s3, v145                         // 000000003B80: 7E060591
  v_cmp_eq_u32  vcc, s3, v145                           // 000000003B84: 7D852203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000003B88: BE90246A
  s_cbranch_execz  label_0EE8                           // 000000003B8C: BF880004
  v_readlane_b32  s3, v9, s3                            // 000000003B90: 02060709
  v_mov_b32     v153, s3                                // 000000003B94: 7F320203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000003B98: 8A8E7E0E
  s_cbranch_scc0  label_0EEA                            // 000000003B9C: BF840002
  label_0EE8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000003BA0: 87FE0E10
  s_branch      label_0EE0                              // 000000003BA4: BF82FFF6
  label_0EEA:
  s_mov_b64     exec, s[10:11]                          // 000000003BA8: BEFE040A
  v_cndmask_b32  v9, 0, v153, s[8:9]                    // 000000003BAC: D2000009 00233280
  v_lshl_b64    v[153:154], 1, v145                     // 000000003BB4: D2C20099 00032281
  v_and_b32     v153, exec_lo, v153                     // 000000003BBC: 3733327E
  v_and_b32     v154, exec_hi, v154                     // 000000003BC0: 3735347F
  v_cmp_ne_u64  s[8:9], 0, v[153:154]                   // 000000003BC4: D1CA0008 00033280
  s_mov_b64     s[10:11], exec                          // 000000003BCC: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000003BD0: BE8E047E
  s_nop         0x0000                                  // 000000003BD4: BF800000
  s_nop         0x0000                                  // 000000003BD8: BF800000
  s_nop         0x0000                                  // 000000003BDC: BF800000
  label_0EF8:
  v_readfirstlane_b32  s3, v145                         // 000000003BE0: 7E060591
  v_cmp_eq_u32  vcc, s3, v145                           // 000000003BE4: 7D852203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000003BE8: BE90246A
  s_cbranch_execz  label_0F00                           // 000000003BEC: BF880004
  v_readlane_b32  s3, v15, s3                           // 000000003BF0: 0206070F
  v_mov_b32     v153, s3                                // 000000003BF4: 7F320203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000003BF8: 8A8E7E0E
  s_cbranch_scc0  label_0F02                            // 000000003BFC: BF840002
  label_0F00:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000003C00: 87FE0E10
  s_branch      label_0EF8                              // 000000003C04: BF82FFF6
  label_0F02:
  s_mov_b64     exec, s[10:11]                          // 000000003C08: BEFE040A
  v_cndmask_b32  v153, 0, v153, s[8:9]                  // 000000003C0C: D2000099 00233280
  v_add_i32     v154, vcc, 38, v12                      // 000000003C14: 4B3418A6
  v_and_b32     v154, 63, v154                          // 000000003C18: 373534BF
  v_lshl_b64    v[155:156], 1, v154                     // 000000003C1C: D2C2009B 00033481
  v_and_b32     v155, exec_lo, v155                     // 000000003C24: 3737367E
  v_and_b32     v156, exec_hi, v156                     // 000000003C28: 3739387F
  v_cmp_ne_u64  s[8:9], 0, v[155:156]                   // 000000003C2C: D1CA0008 00033680
  s_mov_b64     s[10:11], exec                          // 000000003C34: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000003C38: BE8E047E
  s_nop         0x0000                                  // 000000003C3C: BF800000
  label_0F10:
  v_readfirstlane_b32  s3, v154                         // 000000003C40: 7E06059A
  v_cmp_eq_u32  vcc, s3, v154                           // 000000003C44: 7D853403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000003C48: BE90246A
  s_cbranch_execz  label_0F18                           // 000000003C4C: BF880004
  v_readlane_b32  s3, v15, s3                           // 000000003C50: 0206070F
  v_mov_b32     v155, s3                                // 000000003C54: 7F360203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000003C58: 8A8E7E0E
  s_cbranch_scc0  label_0F1A                            // 000000003C5C: BF840002
  label_0F18:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000003C60: 87FE0E10
  s_branch      label_0F10                              // 000000003C64: BF82FFF6
  label_0F1A:
  s_mov_b64     exec, s[10:11]                          // 000000003C68: BEFE040A
  v_cndmask_b32  v15, 0, v155, s[8:9]                   // 000000003C6C: D200000F 00233680
  v_lshl_b64    v[155:156], 1, v154                     // 000000003C74: D2C2009B 00033481
  v_and_b32     v155, exec_lo, v155                     // 000000003C7C: 3737367E
  v_and_b32     v156, exec_hi, v156                     // 000000003C80: 3739387F
  v_cmp_ne_u64  s[8:9], 0, v[155:156]                   // 000000003C84: D1CA0008 00033680
  s_mov_b64     s[10:11], exec                          // 000000003C8C: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000003C90: BE8E047E
  s_nop         0x0000                                  // 000000003C94: BF800000
  s_nop         0x0000                                  // 000000003C98: BF800000
  s_nop         0x0000                                  // 000000003C9C: BF800000
  label_0F28:
  v_readfirstlane_b32  s3, v154                         // 000000003CA0: 7E06059A
  v_cmp_eq_u32  vcc, s3, v154                           // 000000003CA4: 7D853403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000003CA8: BE90246A
  s_cbranch_execz  label_0F30                           // 000000003CAC: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000003CB0: 02060704
  v_mov_b32     v155, s3                                // 000000003CB4: 7F360203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000003CB8: 8A8E7E0E
  s_cbranch_scc0  label_0F32                            // 000000003CBC: BF840002
  label_0F30:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000003CC0: 87FE0E10
  s_branch      label_0F28                              // 000000003CC4: BF82FFF6
  label_0F32:
  s_mov_b64     exec, s[10:11]                          // 000000003CC8: BEFE040A
  v_cndmask_b32  v155, 0, v155, s[8:9]                  // 000000003CCC: D200009B 00233680
  v_add_i32     v156, vcc, 0x00000046, v12              // 000000003CD4: 4B3818FF 00000046
  v_add_i32     v12, vcc, 54, v12                       // 000000003CDC: 4A1818B6
  v_and_b32     v12, 63, v12                            // 000000003CE0: 361818BF
  v_and_b32     v156, 63, v156                          // 000000003CE4: 373938BF
  v_lshl_b64    v[157:158], 1, v12                      // 000000003CE8: D2C2009D 00021881
  v_and_b32     v157, exec_lo, v157                     // 000000003CF0: 373B3A7E
  v_and_b32     v158, exec_hi, v158                     // 000000003CF4: 373D3C7F
  v_cmp_ne_u64  s[8:9], 0, v[157:158]                   // 000000003CF8: D1CA0008 00033A80
  s_mov_b64     s[10:11], exec                          // 000000003D00: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000003D04: BE8E047E
  s_nop         0x0000                                  // 000000003D08: BF800000
  s_nop         0x0000                                  // 000000003D0C: BF800000
  s_nop         0x0000                                  // 000000003D10: BF800000
  s_nop         0x0000                                  // 000000003D14: BF800000
  s_nop         0x0000                                  // 000000003D18: BF800000
  s_nop         0x0000                                  // 000000003D1C: BF800000
  label_0F48:
  v_readfirstlane_b32  s3, v12                          // 000000003D20: 7E06050C
  v_cmp_eq_u32  vcc, s3, v12                            // 000000003D24: 7D841803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000003D28: BE90246A
  s_cbranch_execz  label_0F50                           // 000000003D2C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000003D30: 02060704
  v_mov_b32     v157, s3                                // 000000003D34: 7F3A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000003D38: 8A8E7E0E
  s_cbranch_scc0  label_0F52                            // 000000003D3C: BF840002
  label_0F50:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000003D40: 87FE0E10
  s_branch      label_0F48                              // 000000003D44: BF82FFF6
  label_0F52:
  s_mov_b64     exec, s[10:11]                          // 000000003D48: BEFE040A
  v_cndmask_b32  v4, 0, v157, s[8:9]                    // 000000003D4C: D2000004 00233A80
  v_lshl_b64    v[157:158], 1, v12                      // 000000003D54: D2C2009D 00021881
  v_and_b32     v157, exec_lo, v157                     // 000000003D5C: 373B3A7E
  v_and_b32     v158, exec_hi, v158                     // 000000003D60: 373D3C7F
  v_cmp_ne_u64  s[8:9], 0, v[157:158]                   // 000000003D64: D1CA0008 00033A80
  s_mov_b64     s[10:11], exec                          // 000000003D6C: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000003D70: BE8E047E
  s_nop         0x0000                                  // 000000003D74: BF800000
  s_nop         0x0000                                  // 000000003D78: BF800000
  s_nop         0x0000                                  // 000000003D7C: BF800000
  label_0F60:
  v_readfirstlane_b32  s3, v12                          // 000000003D80: 7E06050C
  v_cmp_eq_u32  vcc, s3, v12                            // 000000003D84: 7D841803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000003D88: BE90246A
  s_cbranch_execz  label_0F68                           // 000000003D8C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000003D90: 02060703
  v_mov_b32     v157, s3                                // 000000003D94: 7F3A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000003D98: 8A8E7E0E
  s_cbranch_scc0  label_0F6A                            // 000000003D9C: BF840002
  label_0F68:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000003DA0: 87FE0E10
  s_branch      label_0F60                              // 000000003DA4: BF82FFF6
  label_0F6A:
  s_mov_b64     exec, s[10:11]                          // 000000003DA8: BEFE040A
  v_cndmask_b32  v3, 0, v157, s[8:9]                    // 000000003DAC: D2000003 00233A80
  v_lshl_b64    v[157:158], 1, v12                      // 000000003DB4: D2C2009D 00021881
  v_and_b32     v157, exec_lo, v157                     // 000000003DBC: 373B3A7E
  v_and_b32     v158, exec_hi, v158                     // 000000003DC0: 373D3C7F
  v_cmp_ne_u64  s[8:9], 0, v[157:158]                   // 000000003DC4: D1CA0008 00033A80
  s_mov_b64     s[10:11], exec                          // 000000003DCC: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000003DD0: BE8E047E
  s_nop         0x0000                                  // 000000003DD4: BF800000
  s_nop         0x0000                                  // 000000003DD8: BF800000
  s_nop         0x0000                                  // 000000003DDC: BF800000
  label_0F78:
  v_readfirstlane_b32  s3, v12                          // 000000003DE0: 7E06050C
  v_cmp_eq_u32  vcc, s3, v12                            // 000000003DE4: 7D841803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000003DE8: BE90246A
  s_cbranch_execz  label_0F80                           // 000000003DEC: BF880004
  v_readlane_b32  s3, v13, s3                           // 000000003DF0: 0206070D
  v_mov_b32     v157, s3                                // 000000003DF4: 7F3A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000003DF8: 8A8E7E0E
  s_cbranch_scc0  label_0F82                            // 000000003DFC: BF840002
  label_0F80:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000003E00: 87FE0E10
  s_branch      label_0F78                              // 000000003E04: BF82FFF6
  label_0F82:
  s_mov_b64     exec, s[10:11]                          // 000000003E08: BEFE040A
  v_cndmask_b32  v157, 0, v157, s[8:9]                  // 000000003E0C: D200009D 00233A80
  v_lshl_b64    v[158:159], 1, v156                     // 000000003E14: D2C2009E 00033881
  v_and_b32     v158, exec_lo, v158                     // 000000003E1C: 373D3C7E
  v_and_b32     v159, exec_hi, v159                     // 000000003E20: 373F3E7F
  v_cmp_ne_u64  s[8:9], 0, v[158:159]                   // 000000003E24: D1CA0008 00033C80
  s_mov_b64     s[10:11], exec                          // 000000003E2C: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000003E30: BE8E047E
  s_nop         0x0000                                  // 000000003E34: BF800000
  s_nop         0x0000                                  // 000000003E38: BF800000
  s_nop         0x0000                                  // 000000003E3C: BF800000
  label_0F90:
  v_readfirstlane_b32  s3, v156                         // 000000003E40: 7E06059C
  v_cmp_eq_u32  vcc, s3, v156                           // 000000003E44: 7D853803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000003E48: BE90246A
  s_cbranch_execz  label_0F98                           // 000000003E4C: BF880004
  v_readlane_b32  s3, v13, s3                           // 000000003E50: 0206070D
  v_mov_b32     v158, s3                                // 000000003E54: 7F3C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000003E58: 8A8E7E0E
  s_cbranch_scc0  label_0F9A                            // 000000003E5C: BF840002
  label_0F98:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000003E60: 87FE0E10
  s_branch      label_0F90                              // 000000003E64: BF82FFF6
  label_0F9A:
  s_mov_b64     exec, s[10:11]                          // 000000003E68: BEFE040A
  v_cndmask_b32  v13, 0, v158, s[8:9]                   // 000000003E6C: D200000D 00233C80
  v_lshl_b64    v[158:159], 1, v156                     // 000000003E74: D2C2009E 00033881
  v_and_b32     v158, exec_lo, v158                     // 000000003E7C: 373D3C7E
  v_and_b32     v159, exec_hi, v159                     // 000000003E80: 373F3E7F
  v_cmp_ne_u64  s[8:9], 0, v[158:159]                   // 000000003E84: D1CA0008 00033C80
  s_mov_b64     s[10:11], exec                          // 000000003E8C: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000003E90: BE8E047E
  s_nop         0x0000                                  // 000000003E94: BF800000
  s_nop         0x0000                                  // 000000003E98: BF800000
  s_nop         0x0000                                  // 000000003E9C: BF800000
  label_0FA8:
  v_readfirstlane_b32  s3, v156                         // 000000003EA0: 7E06059C
  v_cmp_eq_u32  vcc, s3, v156                           // 000000003EA4: 7D853803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000003EA8: BE90246A
  s_cbranch_execz  label_0FB0                           // 000000003EAC: BF880004
  v_readlane_b32  s3, v11, s3                           // 000000003EB0: 0206070B
  v_mov_b32     v158, s3                                // 000000003EB4: 7F3C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000003EB8: 8A8E7E0E
  s_cbranch_scc0  label_0FB2                            // 000000003EBC: BF840002
  label_0FB0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000003EC0: 87FE0E10
  s_branch      label_0FA8                              // 000000003EC4: BF82FFF6
  label_0FB2:
  s_mov_b64     exec, s[10:11]                          // 000000003EC8: BEFE040A
  v_cndmask_b32  v158, 0, v158, s[8:9]                  // 000000003ECC: D200009E 00233C80
  v_lshl_b64    v[159:160], 1, v145                     // 000000003ED4: D2C2009F 00032281
  v_and_b32     v159, exec_lo, v159                     // 000000003EDC: 373F3E7E
  v_and_b32     v160, exec_hi, v160                     // 000000003EE0: 3741407F
  v_cmp_ne_u64  s[8:9], 0, v[159:160]                   // 000000003EE4: D1CA0008 00033E80
  s_mov_b64     s[10:11], exec                          // 000000003EEC: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000003EF0: BE8E047E
  s_nop         0x0000                                  // 000000003EF4: BF800000
  s_nop         0x0000                                  // 000000003EF8: BF800000
  s_nop         0x0000                                  // 000000003EFC: BF800000
  label_0FC0:
  v_readfirstlane_b32  s3, v145                         // 000000003F00: 7E060591
  v_cmp_eq_u32  vcc, s3, v145                           // 000000003F04: 7D852203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000003F08: BE90246A
  s_cbranch_execz  label_0FC8                           // 000000003F0C: BF880004
  v_readlane_b32  s3, v11, s3                           // 000000003F10: 0206070B
  v_mov_b32     v159, s3                                // 000000003F14: 7F3E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000003F18: 8A8E7E0E
  s_cbranch_scc0  label_0FCA                            // 000000003F1C: BF840002
  label_0FC8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000003F20: 87FE0E10
  s_branch      label_0FC0                              // 000000003F24: BF82FFF6
  label_0FCA:
  s_mov_b64     exec, s[10:11]                          // 000000003F28: BEFE040A
  v_cndmask_b32  v11, 0, v159, s[8:9]                   // 000000003F2C: D200000B 00233E80
  v_lshl_b64    v[159:160], 1, v145                     // 000000003F34: D2C2009F 00032281
  v_and_b32     v159, exec_lo, v159                     // 000000003F3C: 373F3E7E
  v_and_b32     v160, exec_hi, v160                     // 000000003F40: 3741407F
  v_cmp_ne_u64  s[8:9], 0, v[159:160]                   // 000000003F44: D1CA0008 00033E80
  s_mov_b64     s[10:11], exec                          // 000000003F4C: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000003F50: BE8E047E
  s_nop         0x0000                                  // 000000003F54: BF800000
  s_nop         0x0000                                  // 000000003F58: BF800000
  s_nop         0x0000                                  // 000000003F5C: BF800000
  label_0FD8:
  v_readfirstlane_b32  s3, v145                         // 000000003F60: 7E060591
  v_cmp_eq_u32  vcc, s3, v145                           // 000000003F64: 7D852203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000003F68: BE90246A
  s_cbranch_execz  label_0FE0                           // 000000003F6C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000003F70: 02060706
  v_mov_b32     v145, s3                                // 000000003F74: 7F220203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000003F78: 8A8E7E0E
  s_cbranch_scc0  label_0FE2                            // 000000003F7C: BF840002
  label_0FE0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000003F80: 87FE0E10
  s_branch      label_0FD8                              // 000000003F84: BF82FFF6
  label_0FE2:
  s_mov_b64     exec, s[10:11]                          // 000000003F88: BEFE040A
  v_cndmask_b32  v145, 0, v145, s[8:9]                  // 000000003F8C: D2000091 00232280
  v_lshl_b64    v[159:160], 1, v154                     // 000000003F94: D2C2009F 00033481
  v_and_b32     v159, exec_lo, v159                     // 000000003F9C: 373F3E7E
  v_and_b32     v160, exec_hi, v160                     // 000000003FA0: 3741407F
  v_cmp_ne_u64  s[8:9], 0, v[159:160]                   // 000000003FA4: D1CA0008 00033E80
  s_mov_b64     s[10:11], exec                          // 000000003FAC: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000003FB0: BE8E047E
  s_nop         0x0000                                  // 000000003FB4: BF800000
  s_nop         0x0000                                  // 000000003FB8: BF800000
  s_nop         0x0000                                  // 000000003FBC: BF800000
  label_0FF0:
  v_readfirstlane_b32  s3, v154                         // 000000003FC0: 7E06059A
  v_cmp_eq_u32  vcc, s3, v154                           // 000000003FC4: 7D853403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000003FC8: BE90246A
  s_cbranch_execz  label_0FF8                           // 000000003FCC: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000003FD0: 02060706
  v_mov_b32     v159, s3                                // 000000003FD4: 7F3E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000003FD8: 8A8E7E0E
  s_cbranch_scc0  label_0FFA                            // 000000003FDC: BF840002
  label_0FF8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000003FE0: 87FE0E10
  s_branch      label_0FF0                              // 000000003FE4: BF82FFF6
  label_0FFA:
  s_mov_b64     exec, s[10:11]                          // 000000003FE8: BEFE040A
  v_cndmask_b32  v6, 0, v159, s[8:9]                    // 000000003FEC: D2000006 00233E80
  v_lshl_b64    v[159:160], 1, v154                     // 000000003FF4: D2C2009F 00033481
  v_and_b32     v159, exec_lo, v159                     // 000000003FFC: 373F3E7E
  v_and_b32     v160, exec_hi, v160                     // 000000004000: 3741407F
  v_cmp_ne_u64  s[8:9], 0, v[159:160]                   // 000000004004: D1CA0008 00033E80
  s_mov_b64     s[10:11], exec                          // 00000000400C: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000004010: BE8E047E
  s_nop         0x0000                                  // 000000004014: BF800000
  s_nop         0x0000                                  // 000000004018: BF800000
  s_nop         0x0000                                  // 00000000401C: BF800000
  label_1008:
  v_readfirstlane_b32  s3, v154                         // 000000004020: 7E06059A
  v_cmp_eq_u32  vcc, s3, v154                           // 000000004024: 7D853403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000004028: BE90246A
  s_cbranch_execz  label_1010                           // 00000000402C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000004030: 02060705
  v_mov_b32     v154, s3                                // 000000004034: 7F340203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000004038: 8A8E7E0E
  s_cbranch_scc0  label_1012                            // 00000000403C: BF840002
  label_1010:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000004040: 87FE0E10
  s_branch      label_1008                              // 000000004044: BF82FFF6
  label_1012:
  s_mov_b64     exec, s[10:11]                          // 000000004048: BEFE040A
  v_cndmask_b32  v154, 0, v154, s[8:9]                  // 00000000404C: D200009A 00233480
  v_lshl_b64    v[159:160], 1, v12                      // 000000004054: D2C2009F 00021881
  v_and_b32     v159, exec_lo, v159                     // 00000000405C: 373F3E7E
  v_and_b32     v160, exec_hi, v160                     // 000000004060: 3741407F
  v_cmp_ne_u64  s[8:9], 0, v[159:160]                   // 000000004064: D1CA0008 00033E80
  s_mov_b64     s[10:11], exec                          // 00000000406C: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000004070: BE8E047E
  s_nop         0x0000                                  // 000000004074: BF800000
  s_nop         0x0000                                  // 000000004078: BF800000
  s_nop         0x0000                                  // 00000000407C: BF800000
  label_1020:
  v_readfirstlane_b32  s3, v12                          // 000000004080: 7E06050C
  v_cmp_eq_u32  vcc, s3, v12                            // 000000004084: 7D841803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000004088: BE90246A
  s_cbranch_execz  label_1028                           // 00000000408C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000004090: 02060705
  v_mov_b32     v159, s3                                // 000000004094: 7F3E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000004098: 8A8E7E0E
  s_cbranch_scc0  label_102A                            // 00000000409C: BF840002
  label_1028:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000040A0: 87FE0E10
  s_branch      label_1020                              // 0000000040A4: BF82FFF6
  label_102A:
  s_mov_b64     exec, s[10:11]                          // 0000000040A8: BEFE040A
  v_cndmask_b32  v5, 0, v159, s[8:9]                    // 0000000040AC: D2000005 00233E80
  v_lshl_b64    v[159:160], 1, v12                      // 0000000040B4: D2C2009F 00021881
  v_and_b32     v159, exec_lo, v159                     // 0000000040BC: 373F3E7E
  v_and_b32     v160, exec_hi, v160                     // 0000000040C0: 3741407F
  v_cmp_ne_u64  s[8:9], 0, v[159:160]                   // 0000000040C4: D1CA0008 00033E80
  s_mov_b64     s[10:11], exec                          // 0000000040CC: BE8A047E
  s_mov_b64     s[14:15], exec                          // 0000000040D0: BE8E047E
  s_nop         0x0000                                  // 0000000040D4: BF800000
  s_nop         0x0000                                  // 0000000040D8: BF800000
  s_nop         0x0000                                  // 0000000040DC: BF800000
  label_1038:
  v_readfirstlane_b32  s3, v12                          // 0000000040E0: 7E06050C
  v_cmp_eq_u32  vcc, s3, v12                            // 0000000040E4: 7D841803
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000040E8: BE90246A
  s_cbranch_execz  label_1040                           // 0000000040EC: BF880004
  v_readlane_b32  s3, v8, s3                            // 0000000040F0: 02060708
  v_mov_b32     v159, s3                                // 0000000040F4: 7F3E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000040F8: 8A8E7E0E
  s_cbranch_scc0  label_1042                            // 0000000040FC: BF840002
  label_1040:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000004100: 87FE0E10
  s_branch      label_1038                              // 000000004104: BF82FFF6
  label_1042:
  s_mov_b64     exec, s[10:11]                          // 000000004108: BEFE040A
  v_cndmask_b32  v8, 0, v159, s[8:9]                    // 00000000410C: D2000008 00233E80
  v_lshl_b64    v[159:160], 1, v12                      // 000000004114: D2C2009F 00021881
  v_and_b32     v159, exec_lo, v159                     // 00000000411C: 373F3E7E
  v_and_b32     v160, exec_hi, v160                     // 000000004120: 3741407F
  v_cmp_ne_u64  s[8:9], 0, v[159:160]                   // 000000004124: D1CA0008 00033E80
  s_mov_b64     s[10:11], exec                          // 00000000412C: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000004130: BE8E047E
  s_nop         0x0000                                  // 000000004134: BF800000
  s_nop         0x0000                                  // 000000004138: BF800000
  s_nop         0x0000                                  // 00000000413C: BF800000
  label_1050:
  v_readfirstlane_b32  s3, v12                          // 000000004140: 7E06050C
  v_cmp_eq_u32  vcc, s3, v12                            // 000000004144: 7D841803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000004148: BE90246A
  s_cbranch_execz  label_1058                           // 00000000414C: BF880004
  v_readlane_b32  s3, v10, s3                           // 000000004150: 0206070A
  v_mov_b32     v12, s3                                 // 000000004154: 7E180203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000004158: 8A8E7E0E
  s_cbranch_scc0  label_105A                            // 00000000415C: BF840002
  label_1058:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000004160: 87FE0E10
  s_branch      label_1050                              // 000000004164: BF82FFF6
  label_105A:
  s_mov_b64     exec, s[10:11]                          // 000000004168: BEFE040A
  v_cndmask_b32  v12, 0, v12, s[8:9]                    // 00000000416C: D200000C 00221880
  v_lshl_b64    v[159:160], 1, v156                     // 000000004174: D2C2009F 00033881
  v_and_b32     v159, exec_lo, v159                     // 00000000417C: 373F3E7E
  v_and_b32     v160, exec_hi, v160                     // 000000004180: 3741407F
  v_cmp_ne_u64  s[8:9], 0, v[159:160]                   // 000000004184: D1CA0008 00033E80
  s_mov_b64     s[10:11], exec                          // 00000000418C: BE8A047E
  s_mov_b64     s[14:15], exec                          // 000000004190: BE8E047E
  s_nop         0x0000                                  // 000000004194: BF800000
  s_nop         0x0000                                  // 000000004198: BF800000
  s_nop         0x0000                                  // 00000000419C: BF800000
  label_1068:
  v_readfirstlane_b32  s3, v156                         // 0000000041A0: 7E06059C
  v_cmp_eq_u32  vcc, s3, v156                           // 0000000041A4: 7D853803
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000041A8: BE90246A
  s_cbranch_execz  label_1070                           // 0000000041AC: BF880004
  v_readlane_b32  s3, v10, s3                           // 0000000041B0: 0206070A
  v_mov_b32     v159, s3                                // 0000000041B4: 7F3E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000041B8: 8A8E7E0E
  s_cbranch_scc0  label_1072                            // 0000000041BC: BF840002
  label_1070:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000041C0: 87FE0E10
  s_branch      label_1068                              // 0000000041C4: BF82FFF6
  label_1072:
  s_mov_b64     exec, s[10:11]                          // 0000000041C8: BEFE040A
  v_cndmask_b32  v10, 0, v159, s[8:9]                   // 0000000041CC: D200000A 00233E80
  v_lshl_b64    v[159:160], 1, v156                     // 0000000041D4: D2C2009F 00033881
  v_and_b32     v159, exec_lo, v159                     // 0000000041DC: 373F3E7E
  v_and_b32     v160, exec_hi, v160                     // 0000000041E0: 3741407F
  v_cmp_ne_u64  s[8:9], 0, v[159:160]                   // 0000000041E4: D1CA0008 00033E80
  s_mov_b64     s[10:11], exec                          // 0000000041EC: BE8A047E
  s_mov_b64     s[14:15], exec                          // 0000000041F0: BE8E047E
  s_nop         0x0000                                  // 0000000041F4: BF800000
  s_nop         0x0000                                  // 0000000041F8: BF800000
  s_nop         0x0000                                  // 0000000041FC: BF800000
  label_1080:
  v_readfirstlane_b32  s3, v156                         // 000000004200: 7E06059C
  v_cmp_eq_u32  vcc, s3, v156                           // 000000004204: 7D853803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000004208: BE90246A
  s_cbranch_execz  label_1088                           // 00000000420C: BF880004
  v_readlane_b32  s3, v7, s3                            // 000000004210: 02060707
  v_mov_b32     v156, s3                                // 000000004214: 7F380203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000004218: 8A8E7E0E
  s_cbranch_scc0  label_108A                            // 00000000421C: BF840002
  label_1088:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000004220: 87FE0E10
  s_branch      label_1080                              // 000000004224: BF82FFF6
  label_108A:
  s_mov_b64     exec, s[10:11]                          // 000000004228: BEFE040A
  v_cndmask_b32  v7, 0, v156, s[8:9]                    // 00000000422C: D2000007 00233880
  v_cmp_ge_i32  vcc, 7, v2                              // 000000004234: 7D0C0487
  s_and_saveexec_b64  s[8:9], vcc                       // 000000004238: BE88246A
  v_cndmask_b32  v159, 0, 1, s[12:13]                   // 00000000423C: D200009F 00310280
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000004244: BF8C0070
  v_mul_f32     v156, v144, v4                          // 000000004248: 11380990
  s_andn2_b64   exec, s[8:9], exec                      // 00000000424C: 8AFE7E08
  v_cndmask_b32  v159, 0, 1, s[12:13]                   // 000000004250: D200009F 00310280
  s_cbranch_execz  label_109C                           // 000000004258: BF880005
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000425C: BF8C0070
  v_mul_f32     v156, v144, v157                        // 000000004260: 11393B90
  v_mul_f32     v3, v144, v3                            // 000000004264: 10060790
  v_cmp_gt_i32  vcc, 60, v2                             // 000000004268: 7D0804BC
  v_cndmask_b32  v156, v156, v3, vcc                    // 00000000426C: 0138079C
  label_109C:
  s_mov_b64     exec, s[8:9]                            // 000000004270: BEFE0408
  s_nop         0x0000                                  // 000000004274: BF800000
  v_cmp_lt_i32  s[8:9], v2, 52                          // 000000004278: D1020008 00016902
  v_cmp_lt_i32  s[10:11], v2, 51                        // 000000004280: D102000A 00016702
  v_cmp_lt_i32  s[12:13], v2, 50                        // 000000004288: D102000C 00016502
  v_cmp_lt_i32  s[14:15], v2, 44                        // 000000004290: D102000E 00015902
  v_cmp_lt_i32  s[16:17], v2, 43                        // 000000004298: D1020010 00015702
  v_cmp_lt_i32  s[18:19], v2, 42                        // 0000000042A0: D1020012 00015502
  v_cmp_lt_i32  s[20:21], v2, 36                        // 0000000042A8: D1020014 00014902
  v_cmp_lt_i32  s[22:23], v2, 35                        // 0000000042B0: D1020016 00014702
  v_cmp_lt_i32  s[24:25], v2, 34                        // 0000000042B8: D1020018 00014502
  s_add_u32     s1, s1, s0                              // 0000000042C0: 80010001
  s_add_u32     s0, s2, s0                              // 0000000042C4: 80000002
  v_cmp_gt_i32  vcc, s0, v1                             // 0000000042C8: 7D080200
  v_cmp_lt_i32  s[2:3], v0, s1                          // 0000000042CC: D1020002 00000300
  s_and_b64     vcc, s[2:3], vcc                        // 0000000042D4: 87EA6A02
  s_xor_b64     s[26:27], vcc, -1                       // 0000000042D8: 899AC16A
  s_load_dwordx2  s[6:7], s[6:7], 0x04                  // 0000000042DC: C0430704
  s_mov_b64     s[28:29], exec                          // 0000000042E0: BE9C047E
  s_andn2_b64   exec, s[28:29], s[26:27]                // 0000000042E4: 8AFE1A1C
  v_mul_f32     v19, v16, v19                           // 0000000042E8: 10262710
  s_cbranch_execz  label_10F4                           // 0000000042EC: BF880038
  v_mul_f32     v17, v16, v17                           // 0000000042F0: 10222310
  v_mul_f32     v36, v32, v36                           // 0000000042F4: 10484920
  v_mul_f32     v35, v32, v35                           // 0000000042F8: 10464720
  v_cndmask_b32  v17, v19, v17, s[8:9]                  // 0000000042FC: D2000011 00222313
  v_mul_f32     v19, v49, v52                           // 000000004304: 10266931
  v_mul_f32     v50, v49, v50                           // 000000004308: 10646531
  v_cndmask_b32  v35, v36, v35, s[10:11]                // 00000000430C: D2000023 002A4724
  v_mul_f32     v36, v66, v67                           // 000000004314: 10488742
  v_mul_f32     v52, v66, v71                           // 000000004318: 10688F42
  v_cndmask_b32  v19, v19, v50, s[12:13]                // 00000000431C: D2000013 00326513
  v_add_f32     v17, 0, v17                             // 000000004324: 06222280
  v_mul_f32     v50, v85, v78                           // 000000004328: 10649D55
  v_mul_f32     v67, v85, v86                           // 00000000432C: 1086AD55
  v_add_f32     v17, v17, v35                           // 000000004330: 06224711
  v_cndmask_b32  v35, v52, v36, s[14:15]                // 000000004334: D2000023 003A4934
  v_mul_f32     v36, v102, v95                          // 00000000433C: 1048BF66
  v_mul_f32     v52, v102, v103                         // 000000004340: 1068CF66
  v_add_f32     v17, v17, v19                           // 000000004344: 06222711
  v_cndmask_b32  v19, v67, v50, s[16:17]                // 000000004348: D2000013 00426543
  v_mul_f32     v50, v112, v119                         // 000000004350: 1064EF70
  v_mul_f32     v67, v112, v120                         // 000000004354: 1086F170
  v_add_f32     v17, v17, v35                           // 000000004358: 06224711
  v_cndmask_b32  v35, v52, v36, s[18:19]                // 00000000435C: D2000023 004A4934
  v_mul_f32     v36, v127, v136                         // 000000004364: 1049117F
  v_mul_f32     v52, v127, v137                         // 000000004368: 1069137F
  v_add_f32     v17, v17, v19                           // 00000000436C: 06222711
  v_cndmask_b32  v19, v67, v50, s[20:21]                // 000000004370: D2000013 00526543
  v_mul_f32     v9, v144, v9                            // 000000004378: 10121390
  v_mul_f32     v50, v144, v153                         // 00000000437C: 10653390
  v_add_f32     v17, v17, v35                           // 000000004380: 06224711
  v_cndmask_b32  v35, v52, v36, s[22:23]                // 000000004384: D2000023 005A4934
  v_add_f32     v17, v17, v19                           // 00000000438C: 06222711
  v_cndmask_b32  v9, v50, v9, s[24:25]                  // 000000004390: D2000009 00621332
  v_add_f32     v17, v17, v35                           // 000000004398: 06224711
  v_add_f32     v9, v17, v9                             // 00000000439C: 06121311
  v_mul_lo_u32  v17, v1, s4                             // 0000000043A0: D2D20011 00000901
  v_add_i32     v35, vcc, v17, v0                       // 0000000043A8: 4A460111
  v_ashrrev_i32  v36, 31, v35                           // 0000000043AC: 3048469F
  v_lshl_b64    v[35:36], v[35:36], 2                   // 0000000043B0: D2C20023 00010523
  s_waitcnt     lgkmcnt(0)                              // 0000000043B8: BF8C007F
  v_add_i32     v35, vcc, s6, v35                       // 0000000043BC: 4A464606
  v_mov_b32     v19, s7                                 // 0000000043C0: 7E260207
  v_addc_u32    v36, vcc, v19, v36, vcc                 // 0000000043C4: 50484913
  flat_store_dword  v[35:36], v9                        // 0000000043C8: DC700000 00000923
  label_10F4:
  s_mov_b64     exec, s[28:29]                          // 0000000043D0: BEFE041C
  s_nop         0x0000                                  // 0000000043D4: BF800000
  v_cmp_lt_i32  s[26:27], v2, 40                        // 0000000043D8: D102001A 00015102
  v_cmp_lt_i32  s[28:29], v2, 39                        // 0000000043E0: D102001C 00014F02
  v_cmp_lt_i32  s[30:31], v2, 38                        // 0000000043E8: D102001E 00014D02
  v_cmp_lt_i32  s[32:33], v2, 24                        // 0000000043F0: D1020020 00013102
  v_cmp_lt_i32  s[34:35], v2, 32                        // 0000000043F8: D1020022 00014102
  v_cmp_lt_i32  s[36:37], v2, 31                        // 000000004400: D1020024 00013F02
  v_cmp_lt_i32  s[38:39], v2, 30                        // 000000004408: D1020026 00013D02
  v_cmp_lt_i32  s[40:41], v2, 23                        // 000000004410: D1020028 00012F02
  v_cmp_lt_i32  s[42:43], v2, 22                        // 000000004418: D102002A 00012D02
  v_add_i32     v9, vcc, 8, v1                          // 000000004420: 4A120288
  v_cmp_gt_i32  vcc, s0, v9                             // 000000004424: 7D081200
  s_and_b64     s[44:45], s[2:3], vcc                   // 000000004428: 87AC6A02
  s_and_saveexec_b64  s[44:45], s[44:45]                // 00000000442C: BEAC242C
  v_mul_f32     v17, v16, v22                           // 000000004430: 10222D10
  s_cbranch_execz  label_1146                           // 000000004434: BF880038
  v_mul_f32     v19, v16, v23                           // 000000004438: 10262F10
  v_mul_f32     v22, v32, v38                           // 00000000443C: 102C4D20
  v_mul_f32     v23, v32, v37                           // 000000004440: 102E4B20
  v_cndmask_b32  v17, v19, v17, s[26:27]                // 000000004444: D2000011 006A2313
  v_mul_f32     v19, v49, v57                           // 00000000444C: 10267331
  v_mul_f32     v35, v49, v56                           // 000000004450: 10467131
  v_cndmask_b32  v22, v22, v23, s[28:29]                // 000000004454: D2000016 00722F16
  v_mul_f32     v23, v66, v73                           // 00000000445C: 102E9342
  v_mul_f32     v36, v66, v72                           // 000000004460: 10489142
  v_cndmask_b32  v19, v19, v35, s[30:31]                // 000000004464: D2000013 007A4713
  v_add_f32     v17, 0, v17                             // 00000000446C: 06222280
  v_mul_f32     v35, v85, v89                           // 000000004470: 1046B355
  v_mul_f32     v37, v85, v90                           // 000000004474: 104AB555
  v_add_f32     v17, v17, v22                           // 000000004478: 06222D11
  v_cndmask_b32  v22, v23, v36, s[34:35]                // 00000000447C: D2000016 008A4917
  v_mul_f32     v23, v102, v106                         // 000000004484: 102ED566
  v_mul_f32     v36, v102, v107                         // 000000004488: 1048D766
  v_add_f32     v17, v17, v19                           // 00000000448C: 06222711
  v_cndmask_b32  v19, v37, v35, s[36:37]                // 000000004490: D2000013 00924725
  v_mul_f32     v35, v112, v122                         // 000000004498: 1046F570
  v_mul_f32     v37, v112, v123                         // 00000000449C: 104AF770
  v_add_f32     v17, v17, v22                           // 0000000044A0: 06222D11
  v_cndmask_b32  v22, v36, v23, s[38:39]                // 0000000044A4: D2000016 009A2F24
  v_mul_f32     v23, v127, v139                         // 0000000044AC: 102F177F
  v_mul_f32     v36, v127, v140                         // 0000000044B0: 1049197F
  v_add_f32     v17, v17, v19                           // 0000000044B4: 06222711
  v_cndmask_b32  v19, v37, v35, s[32:33]                // 0000000044B8: D2000013 00824725
  v_mul_f32     v15, v144, v15                          // 0000000044C0: 101E1F90
  v_mul_f32     v35, v144, v155                         // 0000000044C4: 10473790
  v_add_f32     v17, v17, v22                           // 0000000044C8: 06222D11
  v_cndmask_b32  v22, v36, v23, s[40:41]                // 0000000044CC: D2000016 00A22F24
  v_add_f32     v17, v17, v19                           // 0000000044D4: 06222711
  v_cndmask_b32  v15, v35, v15, s[42:43]                // 0000000044D8: D200000F 00AA1F23
  v_add_f32     v17, v17, v22                           // 0000000044E0: 06222D11
  v_add_f32     v15, v17, v15                           // 0000000044E4: 061E1F11
  v_mul_lo_u32  v9, v9, s4                              // 0000000044E8: D2D20009 00000909
  v_add_i32     v22, vcc, v9, v0                        // 0000000044F0: 4A2C0109
  v_ashrrev_i32  v23, 31, v22                           // 0000000044F4: 302E2C9F
  v_lshl_b64    v[22:23], v[22:23], 2                   // 0000000044F8: D2C20016 00010516
  s_waitcnt     lgkmcnt(0)                              // 000000004500: BF8C007F
  v_add_i32     v22, vcc, s6, v22                       // 000000004504: 4A2C2C06
  v_mov_b32     v17, s7                                 // 000000004508: 7E220207
  v_addc_u32    v23, vcc, v17, v23, vcc                 // 00000000450C: 502E2F11
  flat_store_dword  v[22:23], v15                       // 000000004510: DC700000 00000F16
  label_1146:
  s_mov_b64     exec, s[44:45]                          // 000000004518: BEFE042C
  v_cmp_lt_i32  s[44:45], v2, 26                        // 00000000451C: D102002C 00013502
  v_cmp_lt_i32  s[46:47], v2, 25                        // 000000004524: D102002E 00013302
  v_cmp_lt_i32  s[48:49], v2, 18                        // 00000000452C: D1020030 00012502
  v_cmp_lt_i32  s[50:51], v2, 17                        // 000000004534: D1020032 00012302
  v_cmp_lt_i32  s[52:53], v2, 16                        // 00000000453C: D1020034 00012102
  v_add_i32     v9, vcc, 16, v1                         // 000000004544: 4A120290
  v_cmp_gt_i32  vcc, s0, v9                             // 000000004548: 7D081200
  s_and_b64     s[54:55], s[2:3], vcc                   // 00000000454C: 87B66A02
  s_and_saveexec_b64  s[54:55], s[54:55]                // 000000004550: BEB62436
  v_mul_f32     v15, v16, v25                           // 000000004554: 101E3310
  s_cbranch_execz  label_1183                           // 000000004558: BF88002C
  v_mul_f32     v17, v16, v24                           // 00000000455C: 10223110
  v_mul_f32     v19, v32, v42                           // 000000004560: 10265520
  v_mul_f32     v22, v32, v41                           // 000000004564: 102C5320
  v_cndmask_b32  v15, v15, v17, s[44:45]                // 000000004568: D200000F 00B2230F
  v_mul_f32     v17, v49, v59                           // 000000004570: 10227731
  v_mul_f32     v23, v49, v58                           // 000000004574: 102E7531
  v_cndmask_b32  v19, v19, v22, s[46:47]                // 000000004578: D2000013 00BA2D13
  v_mul_f32     v22, v66, v75                           // 000000004580: 102C9742
  v_mul_f32     v24, v66, v74                           // 000000004584: 10309542
  v_add_f32     v15, 0, v15                             // 000000004588: 061E1E80
  v_cndmask_b32  v17, v17, v23, s[32:33]                // 00000000458C: D2000011 00822F11
  v_mul_f32     v23, v85, v91                           // 000000004594: 102EB755
  v_mul_f32     v25, v85, v92                           // 000000004598: 1032B955
  v_add_f32     v15, v15, v19                           // 00000000459C: 061E270F
  v_cndmask_b32  v19, v22, v24, s[48:49]                // 0000000045A0: D2000013 00C23116
  v_mul_f32     v22, v102, v108                         // 0000000045A8: 102CD966
  v_mul_f32     v24, v102, v109                         // 0000000045AC: 1030DB66
  v_add_f32     v15, v15, v17                           // 0000000045B0: 061E230F
  v_cndmask_b32  v17, v25, v23, s[50:51]                // 0000000045B4: D2000011 00CA2F19
  v_add_f32     v15, v15, v19                           // 0000000045BC: 061E270F
  v_cndmask_b32  v19, v24, v22, s[52:53]                // 0000000045C0: D2000013 00D22D18
  v_add_f32     v15, v15, v17                           // 0000000045C8: 061E230F
  v_add_f32     v15, v15, v19                           // 0000000045CC: 061E270F
  v_add_f32     v15, v15, v126                          // 0000000045D0: 061EFD0F
  v_add_f32     v15, v15, v143                          // 0000000045D4: 061F1F0F
  v_add_f32     v3, v15, v156                           // 0000000045D8: 0607390F
  v_mul_lo_u32  v9, v9, s4                              // 0000000045DC: D2D20009 00000909
  v_add_i32     v22, vcc, v9, v0                        // 0000000045E4: 4A2C0109
  v_ashrrev_i32  v23, 31, v22                           // 0000000045E8: 302E2C9F
  v_lshl_b64    v[22:23], v[22:23], 2                   // 0000000045EC: D2C20016 00010516
  s_waitcnt     lgkmcnt(0)                              // 0000000045F4: BF8C007F
  v_add_i32     v22, vcc, s6, v22                       // 0000000045F8: 4A2C2C06
  v_mov_b32     v15, s7                                 // 0000000045FC: 7E1E0207
  v_addc_u32    v23, vcc, v15, v23, vcc                 // 000000004600: 502E2F0F
  flat_store_dword  v[22:23], v3                        // 000000004604: DC700000 00000316
  label_1183:
  s_mov_b64     exec, s[54:55]                          // 00000000460C: BEFE0436
  v_cmp_lt_i32  s[54:55], v2, 14                        // 000000004610: D1020036 00011D02
  v_cmp_lt_i32  s[56:57], v2, 13                        // 000000004618: D1020038 00011B02
  v_cmp_lt_i32  s[58:59], v2, 12                        // 000000004620: D102003A 00011902
  v_cmp_lt_i32  s[60:61], v2, 48                        // 000000004628: D102003C 00016102
  v_add_i32     v3, vcc, 24, v1                         // 000000004630: 4A060298
  v_cmp_gt_i32  vcc, s0, v3                             // 000000004634: 7D080600
  s_and_b64     s[62:63], s[2:3], vcc                   // 000000004638: 87BE6A02
  s_and_saveexec_b64  s[62:63], s[62:63]                // 00000000463C: BEBE243E
  v_mul_f32     v9, v16, v27                            // 000000004640: 10123710
  s_cbranch_execz  label_11BE                           // 000000004644: BF88002C
  v_mul_f32     v15, v16, v26                           // 000000004648: 101E3510
  v_mul_f32     v17, v32, v44                           // 00000000464C: 10225920
  v_mul_f32     v19, v32, v43                           // 000000004650: 10265720
  v_cndmask_b32  v9, v9, v15, s[54:55]                  // 000000004654: D2000009 00DA1F09
  v_mul_f32     v15, v49, v61                           // 00000000465C: 101E7B31
  v_mul_f32     v22, v49, v60                           // 000000004660: 102C7931
  v_cndmask_b32  v17, v17, v19, s[56:57]                // 000000004664: D2000011 00E22711
  v_cndmask_b32  v15, v15, v22, s[58:59]                // 00000000466C: D200000F 00EA2D0F
  v_add_f32     v9, 0, v9                               // 000000004674: 06121280
  v_add_f32     v9, v9, v17                             // 000000004678: 06122309
  v_add_f32     v9, v9, v15                             // 00000000467C: 06121F09
  v_mul_f32     v15, v112, v129                         // 000000004680: 101F0370
  v_mul_f32     v17, v112, v130                         // 000000004684: 10230570
  v_add_f32     v9, v9, v77                             // 000000004688: 06129B09
  v_mul_f32     v19, v127, v146                         // 00000000468C: 1027257F
  v_mul_f32     v22, v127, v147                         // 000000004690: 102D277F
  v_add_f32     v9, v9, v94                             // 000000004694: 0612BD09
  v_cndmask_b32  v15, v17, v15, s[60:61]                // 000000004698: D200000F 00F21F11
  v_mul_f32     v13, v144, v13                          // 0000000046A0: 101A1B90
  v_mul_f32     v17, v144, v158                         // 0000000046A4: 10233D90
  v_add_f32     v9, v9, v111                            // 0000000046A8: 0612DF09
  v_cndmask_b32  v19, v22, v19, s[60:61]                // 0000000046AC: D2000013 00F22716
  v_add_f32     v9, v9, v15                             // 0000000046B4: 06121F09
  v_cndmask_b32  v13, v17, v13, s[60:61]                // 0000000046B8: D200000D 00F21B11
  v_add_f32     v9, v9, v19                             // 0000000046C0: 06122709
  v_add_f32     v9, v9, v13                             // 0000000046C4: 06121B09
  v_mul_lo_u32  v3, v3, s4                              // 0000000046C8: D2D20003 00000903
  v_add_i32     v22, vcc, v3, v0                        // 0000000046D0: 4A2C0103
  v_ashrrev_i32  v23, 31, v22                           // 0000000046D4: 302E2C9F
  v_lshl_b64    v[22:23], v[22:23], 2                   // 0000000046D8: D2C20016 00010516
  s_waitcnt     lgkmcnt(0)                              // 0000000046E0: BF8C007F
  v_add_i32     v22, vcc, s6, v22                       // 0000000046E4: 4A2C2C06
  v_mov_b32     v13, s7                                 // 0000000046E8: 7E1A0207
  v_addc_u32    v23, vcc, v13, v23, vcc                 // 0000000046EC: 502E2F0D
  flat_store_dword  v[22:23], v9                        // 0000000046F0: DC700000 00000916
  label_11BE:
  s_mov_b64     exec, s[62:63]                          // 0000000046F8: BEFE043E
  v_add_i32     v3, vcc, 32, v1                         // 0000000046FC: 4A0602A0
  v_cmp_gt_i32  vcc, s0, v3                             // 000000004700: 7D080600
  s_and_b64     s[62:63], s[2:3], vcc                   // 000000004704: 87BE6A02
  s_and_saveexec_b64  s[62:63], s[62:63]                // 000000004708: BEBE243E
  v_mul_f32     v9, v16, v14                            // 00000000470C: 10121D10
  s_cbranch_execz  label_11FD                           // 000000004710: BF880038
  v_mul_f32     v13, v16, v28                           // 000000004714: 101A3910
  v_mul_f32     v14, v32, v34                           // 000000004718: 101C4520
  v_mul_f32     v15, v32, v45                           // 00000000471C: 101E5B20
  v_cndmask_b32  v9, v9, v13, s[8:9]                    // 000000004720: D2000009 00221B09
  v_mul_f32     v13, v49, v51                           // 000000004728: 101A6731
  v_mul_f32     v17, v49, v62                           // 00000000472C: 10227D31
  v_cndmask_b32  v14, v14, v15, s[10:11]                // 000000004730: D200000E 002A1F0E
  v_mul_f32     v15, v66, v80                           // 000000004738: 101EA142
  v_mul_f32     v19, v66, v68                           // 00000000473C: 10268942
  v_cndmask_b32  v13, v13, v17, s[12:13]                // 000000004740: D200000D 0032230D
  v_add_f32     v9, 0, v9                               // 000000004748: 06121280
  v_mul_f32     v17, v85, v97                           // 00000000474C: 1022C355
  v_mul_f32     v22, v85, v79                           // 000000004750: 102C9F55
  v_add_f32     v9, v9, v14                             // 000000004754: 06121D09
  v_cndmask_b32  v14, v19, v15, s[14:15]                // 000000004758: D200000E 003A1F13
  v_mul_f32     v15, v102, v114                         // 000000004760: 101EE566
  v_mul_f32     v19, v102, v96                          // 000000004764: 1026C166
  v_add_f32     v9, v9, v13                             // 000000004768: 06121B09
  v_cndmask_b32  v13, v22, v17, s[16:17]                // 00000000476C: D200000D 00422316
  v_mul_f32     v17, v112, v131                         // 000000004774: 10230770
  v_mul_f32     v22, v112, v113                         // 000000004778: 102CE370
  v_add_f32     v9, v9, v14                             // 00000000477C: 06121D09
  v_cndmask_b32  v14, v19, v15, s[18:19]                // 000000004780: D200000E 004A1F13
  v_mul_f32     v15, v127, v148                         // 000000004788: 101F297F
  v_mul_f32     v19, v127, v128                         // 00000000478C: 1027017F
  v_add_f32     v9, v9, v13                             // 000000004790: 06121B09
  v_cndmask_b32  v13, v22, v17, s[20:21]                // 000000004794: D200000D 00522316
  v_mul_f32     v11, v144, v11                          // 00000000479C: 10161790
  v_mul_f32     v17, v144, v145                         // 0000000047A0: 10232390
  v_add_f32     v9, v9, v14                             // 0000000047A4: 06121D09
  v_cndmask_b32  v14, v19, v15, s[22:23]                // 0000000047A8: D200000E 005A1F13
  v_add_f32     v9, v9, v13                             // 0000000047B0: 06121B09
  v_cndmask_b32  v11, v17, v11, s[24:25]                // 0000000047B4: D200000B 00621711
  v_add_f32     v9, v9, v14                             // 0000000047BC: 06121D09
  v_add_f32     v9, v9, v11                             // 0000000047C0: 06121709
  v_mul_lo_u32  v3, v3, s4                              // 0000000047C4: D2D20003 00000903
  v_add_i32     v13, vcc, v3, v0                        // 0000000047CC: 4A1A0103
  v_ashrrev_i32  v14, 31, v13                           // 0000000047D0: 301C1A9F
  v_lshl_b64    v[13:14], v[13:14], 2                   // 0000000047D4: D2C2000D 0001050D
  s_waitcnt     lgkmcnt(0)                              // 0000000047DC: BF8C007F
  v_add_i32     v13, vcc, s6, v13                       // 0000000047E0: 4A1A1A06
  v_mov_b32     v11, s7                                 // 0000000047E4: 7E160207
  v_addc_u32    v14, vcc, v11, v14, vcc                 // 0000000047E8: 501C1D0B
  flat_store_dword  v[13:14], v9                        // 0000000047EC: DC700000 0000090D
  label_11FD:
  s_mov_b64     exec, s[62:63]                          // 0000000047F4: BEFE043E
  v_add_i32     v3, vcc, 40, v1                         // 0000000047F8: 4A0602A8
  v_cmp_gt_i32  vcc, s0, v3                             // 0000000047FC: 7D080600
  s_and_b64     s[8:9], s[2:3], vcc                     // 000000004800: 87886A02
  s_and_saveexec_b64  s[8:9], s[8:9]                    // 000000004804: BE882408
  v_mul_f32     v9, v16, v18                            // 000000004808: 10122510
  s_cbranch_execz  label_123C                           // 00000000480C: BF880038
  v_mul_f32     v11, v16, v29                           // 000000004810: 10163B10
  v_mul_f32     v13, v32, v33                           // 000000004814: 101A4320
  v_mul_f32     v14, v32, v46                           // 000000004818: 101C5D20
  v_cndmask_b32  v9, v9, v11, s[26:27]                  // 00000000481C: D2000009 006A1709
  v_mul_f32     v11, v49, v55                           // 000000004824: 10166F31
  v_mul_f32     v15, v49, v63                           // 000000004828: 101E7F31
  v_cndmask_b32  v13, v13, v14, s[28:29]                // 00000000482C: D200000D 00721D0D
  v_mul_f32     v14, v66, v81                           // 000000004834: 101CA342
  v_mul_f32     v17, v66, v70                           // 000000004838: 10228D42
  v_cndmask_b32  v11, v11, v15, s[30:31]                // 00000000483C: D200000B 007A1F0B
  v_add_f32     v9, 0, v9                               // 000000004844: 06121280
  v_mul_f32     v15, v85, v98                           // 000000004848: 101EC555
  v_mul_f32     v18, v85, v87                           // 00000000484C: 1024AF55
  v_add_f32     v9, v9, v13                             // 000000004850: 06121B09
  v_cndmask_b32  v13, v17, v14, s[34:35]                // 000000004854: D200000D 008A1D11
  v_mul_f32     v14, v102, v115                         // 00000000485C: 101CE766
  v_mul_f32     v17, v102, v104                         // 000000004860: 1022D166
  v_add_f32     v9, v9, v11                             // 000000004864: 06121709
  v_cndmask_b32  v11, v18, v15, s[36:37]                // 000000004868: D200000B 00921F12
  v_mul_f32     v15, v112, v132                         // 000000004870: 101F0970
  v_mul_f32     v18, v112, v121                         // 000000004874: 1024F370
  v_add_f32     v9, v9, v13                             // 000000004878: 06121B09
  v_cndmask_b32  v13, v17, v14, s[38:39]                // 00000000487C: D200000D 009A1D11
  v_mul_f32     v14, v127, v149                         // 000000004884: 101D2B7F
  v_mul_f32     v17, v127, v138                         // 000000004888: 1023157F
  v_add_f32     v9, v9, v11                             // 00000000488C: 06121709
  v_cndmask_b32  v11, v18, v15, s[32:33]                // 000000004890: D200000B 00821F12
  v_mul_f32     v6, v144, v6                            // 000000004898: 100C0D90
  v_mul_f32     v15, v144, v154                         // 00000000489C: 101F3590
  v_add_f32     v9, v9, v13                             // 0000000048A0: 06121B09
  v_cndmask_b32  v13, v17, v14, s[40:41]                // 0000000048A4: D200000D 00A21D11
  v_add_f32     v9, v9, v11                             // 0000000048AC: 06121709
  v_cndmask_b32  v6, v15, v6, s[42:43]                  // 0000000048B0: D2000006 00AA0D0F
  v_add_f32     v9, v9, v13                             // 0000000048B8: 06121B09
  v_add_f32     v6, v9, v6                              // 0000000048BC: 060C0D09
  v_mul_lo_u32  v3, v3, s4                              // 0000000048C0: D2D20003 00000903
  v_add_i32     v13, vcc, v3, v0                        // 0000000048C8: 4A1A0103
  v_ashrrev_i32  v14, 31, v13                           // 0000000048CC: 301C1A9F
  v_lshl_b64    v[13:14], v[13:14], 2                   // 0000000048D0: D2C2000D 0001050D
  s_waitcnt     lgkmcnt(0)                              // 0000000048D8: BF8C007F
  v_add_i32     v13, vcc, s6, v13                       // 0000000048DC: 4A1A1A06
  v_mov_b32     v9, s7                                  // 0000000048E0: 7E120207
  v_addc_u32    v14, vcc, v9, v14, vcc                  // 0000000048E4: 501C1D09
  flat_store_dword  v[13:14], v6                        // 0000000048E8: DC700000 0000060D
  label_123C:
  s_mov_b64     exec, s[8:9]                            // 0000000048F0: BEFE0408
  v_add_i32     v3, vcc, 48, v1                         // 0000000048F4: 4A0602B0
  v_cmp_gt_i32  vcc, s0, v3                             // 0000000048F8: 7D080600
  s_and_b64     s[8:9], s[2:3], vcc                     // 0000000048FC: 87886A02
  s_and_saveexec_b64  s[8:9], s[8:9]                    // 000000004900: BE882408
  v_mul_f32     v6, v16, v20                            // 000000004904: 100C2910
  s_cbranch_execz  label_128C                           // 000000004908: BF880049
  v_mul_f32     v9, v16, v30                            // 00000000490C: 10123D10
  v_mul_f32     v11, v32, v40                           // 000000004910: 10165120
  v_mul_f32     v13, v32, v47                           // 000000004914: 101A5F20
  v_cndmask_b32  v6, v6, v9, s[44:45]                   // 000000004918: D2000006 00B21306
  v_mul_f32     v9, v49, v54                            // 000000004920: 10126D31
  v_mul_f32     v14, v49, v64                           // 000000004924: 101C8131
  v_cndmask_b32  v11, v11, v13, s[46:47]                // 000000004928: D200000B 00BA1B0B
  v_mul_f32     v13, v66, v82                           // 000000004930: 101AA542
  v_mul_f32     v15, v66, v69                           // 000000004934: 101E8B42
  v_add_f32     v6, 0, v6                               // 000000004938: 060C0C80
  v_cndmask_b32  v9, v9, v14, s[32:33]                  // 00000000493C: D2000009 00821D09
  v_mul_f32     v14, v85, v99                           // 000000004944: 101CC755
  v_mul_f32     v17, v85, v88                           // 000000004948: 1022B155
  v_add_f32     v6, v6, v11                             // 00000000494C: 060C1706
  v_cndmask_b32  v11, v15, v13, s[48:49]                // 000000004950: D200000B 00C21B0F
  v_mul_f32     v13, v102, v116                         // 000000004958: 101AE966
  v_mul_f32     v15, v102, v105                         // 00000000495C: 101ED366
  v_mul_f32     v18, v112, v134                         // 000000004960: 10250D70
  v_mul_f32     v19, v112, v125                         // 000000004964: 1026FB70
  v_add_f32     v6, v6, v9                              // 000000004968: 060C1306
  v_cndmask_b32  v9, v17, v14, s[50:51]                 // 00000000496C: D2000009 00CA1D11
  v_mul_f32     v14, v112, v133                         // 000000004974: 101D0B70
  v_cmp_gt_i32  vcc, 62, v2                             // 000000004978: 7D0804BE
  v_mul_f32     v17, v127, v151                         // 00000000497C: 10232F7F
  v_mul_f32     v20, v127, v142                         // 000000004980: 10291D7F
  v_add_f32     v6, v6, v11                             // 000000004984: 060C1706
  v_cndmask_b32  v11, v15, v13, s[52:53]                // 000000004988: D200000B 00D21B0F
  v_cmp_lt_i32  s[10:11], v2, 10                        // 000000004990: D102000A 00011502
  v_cndmask_b32  v13, v19, v18, vcc                     // 000000004998: 001A2513
  v_mul_f32     v15, v127, v150                         // 00000000499C: 101F2D7F
  v_cmp_lt_i32  s[12:13], v2, 61                        // 0000000049A0: D102000C 00017B02
  v_mul_f32     v8, v144, v8                            // 0000000049A8: 10101190
  v_mul_f32     v12, v144, v12                          // 0000000049AC: 10181990
  v_add_f32     v6, v6, v9                              // 0000000049B0: 060C1306
  v_cndmask_b32  v9, v13, v14, s[10:11]                 // 0000000049B4: D2000009 002A1D0D
  v_cmp_lt_i32  s[10:11], v2, 9                         // 0000000049BC: D102000A 00011302
  v_cndmask_b32  v13, v20, v17, s[12:13]                // 0000000049C4: D200000D 00322314
  v_mul_f32     v5, v144, v5                            // 0000000049CC: 100A0B90
  v_cmp_lt_i32  s[12:13], v2, 60                        // 0000000049D0: D102000C 00017902
  v_add_f32     v6, v6, v11                             // 0000000049D8: 060C1706
  v_cndmask_b32  v11, v13, v15, s[10:11]                // 0000000049DC: D200000B 002A1F0D
  v_cmp_gt_i32  vcc, 8, v2                              // 0000000049E4: 7D080488
  v_cndmask_b32  v8, v12, v8, s[12:13]                  // 0000000049E8: D2000008 0032110C
  v_add_f32     v6, v6, v9                              // 0000000049F0: 060C1306
  v_cndmask_b32  v5, v8, v5, vcc                        // 0000000049F4: 000A0B08
  v_add_f32     v6, v6, v11                             // 0000000049F8: 060C1706
  v_add_f32     v5, v6, v5                              // 0000000049FC: 060A0B06
  v_mul_lo_u32  v3, v3, s4                              // 000000004A00: D2D20003 00000903
  v_add_i32     v8, vcc, v3, v0                         // 000000004A08: 4A100103
  v_ashrrev_i32  v9, 31, v8                             // 000000004A0C: 3012109F
  v_lshl_b64    v[8:9], v[8:9], 2                       // 000000004A10: D2C20008 00010508
  s_waitcnt     lgkmcnt(0)                              // 000000004A18: BF8C007F
  v_add_i32     v8, vcc, s6, v8                         // 000000004A1C: 4A101006
  v_mov_b32     v6, s7                                  // 000000004A20: 7E0C0207
  v_addc_u32    v9, vcc, v6, v9, vcc                    // 000000004A24: 50121306
  flat_store_dword  v[8:9], v5                          // 000000004A28: DC700000 00000508
  label_128C:
  s_mov_b64     exec, s[8:9]                            // 000000004A30: BEFE0408
  v_add_i32     v1, vcc, 56, v1                         // 000000004A34: 4A0202B8
  v_cmp_gt_i32  vcc, s0, v1                             // 000000004A38: 7D080200
  s_and_b64     s[0:1], s[2:3], vcc                     // 000000004A3C: 87806A02
  s_and_saveexec_b64  s[0:1], s[0:1]                    // 000000004A40: BE802400
  v_mul_f32     v3, v16, v21                            // 000000004A44: 10062B10
  s_cbranch_execz  label_12D8                           // 000000004A48: BF880045
  v_mul_f32     v5, v16, v31                            // 000000004A4C: 100A3F10
  v_mul_f32     v6, v32, v39                            // 000000004A50: 100C4F20
  v_mul_f32     v8, v32, v48                            // 000000004A54: 10106120
  v_cndmask_b32  v3, v3, v5, s[54:55]                   // 000000004A58: D2000003 00DA0B03
  v_mul_f32     v5, v49, v53                            // 000000004A60: 100A6B31
  v_mul_f32     v9, v49, v65                            // 000000004A64: 10128331
  v_mul_f32     v11, v66, v84                           // 000000004A68: 1016A942
  v_mul_f32     v12, v66, v76                           // 000000004A6C: 10189942
  v_cndmask_b32  v6, v6, v8, s[56:57]                   // 000000004A70: D2000006 00E21106
  v_mul_f32     v8, v66, v83                            // 000000004A78: 1010A742
  v_mul_f32     v13, v85, v101                          // 000000004A7C: 101ACB55
  v_mul_f32     v14, v85, v93                           // 000000004A80: 101CBB55
  v_cndmask_b32  v5, v5, v9, s[58:59]                   // 000000004A84: D2000005 00EA1305
  v_add_f32     v3, 0, v3                               // 000000004A8C: 06060680
  v_cmp_lt_i32  s[2:3], v2, 6                           // 000000004A90: D1020002 00010D02
  v_cmp_ne_u32  vcc, 0, v159                            // 000000004A98: 7D8B3E80
  v_cndmask_b32  v4, v12, v11, vcc                      // 000000004A9C: 0008170C
  v_mul_f32     v9, v85, v100                           // 000000004AA0: 1012C955
  v_mul_f32     v11, v102, v118                         // 000000004AA4: 1016ED66
  v_mul_f32     v12, v102, v110                         // 000000004AA8: 1018DD66
  v_add_f32     v3, v3, v6                              // 000000004AAC: 06060D03
  v_cndmask_b32  v4, v4, v8, s[2:3]                     // 000000004AB0: D2000004 000A1104
  v_cmp_lt_i32  s[2:3], v2, 5                           // 000000004AB8: D1020002 00010B02
  v_cndmask_b32  v6, v14, v13, vcc                      // 000000004AC0: 000C1B0E
  v_mul_f32     v8, v102, v117                          // 000000004AC4: 1010EB66
  v_add_f32     v3, v3, v5                              // 000000004AC8: 06060B03
  v_cndmask_b32  v5, v6, v9, s[2:3]                     // 000000004ACC: D2000005 000A1306
  v_cmp_lt_i32  s[2:3], v2, 4                           // 000000004AD4: D1020002 00010902
  v_cndmask_b32  v2, v12, v11, vcc                      // 000000004ADC: 0004170C
  v_mul_f32     v6, v112, v135                          // 000000004AE0: 100D0F70
  v_mul_f32     v9, v112, v124                          // 000000004AE4: 1012F970
  v_add_f32     v3, v3, v4                              // 000000004AE8: 06060903
  v_cndmask_b32  v2, v2, v8, s[2:3]                     // 000000004AEC: D2000002 000A1102
  v_mul_f32     v4, v127, v152                          // 000000004AF4: 1009317F
  v_mul_f32     v8, v127, v141                          // 000000004AF8: 10111B7F
  v_add_f32     v3, v3, v5                              // 000000004AFC: 06060B03
  v_cndmask_b32  v5, v9, v6, s[60:61]                   // 000000004B00: D2000005 00F20D09
  v_mul_f32     v6, v144, v10                           // 000000004B08: 100C1590
  v_mul_f32     v7, v144, v7                            // 000000004B0C: 100E0F90
  v_add_f32     v2, v3, v2                              // 000000004B10: 06040503
  v_cndmask_b32  v3, v8, v4, s[60:61]                   // 000000004B14: D2000003 00F20908
  v_add_f32     v2, v2, v5                              // 000000004B1C: 06040B02
  v_cndmask_b32  v4, v7, v6, s[60:61]                   // 000000004B20: D2000004 00F20D07
  v_add_f32     v2, v2, v3                              // 000000004B28: 06040702
  v_add_f32     v2, v2, v4                              // 000000004B2C: 06040902
  v_mul_lo_u32  v1, v1, s4                              // 000000004B30: D2D20001 00000901
  v_add_i32     v0, vcc, v1, v0                         // 000000004B38: 4A000101
  v_ashrrev_i32  v1, 31, v0                             // 000000004B3C: 3002009F
  v_lshl_b64    v[0:1], v[0:1], 2                       // 000000004B40: D2C20000 00010500
  s_waitcnt     lgkmcnt(0)                              // 000000004B48: BF8C007F
  v_add_i32     v0, vcc, s6, v0                         // 000000004B4C: 4A000006
  v_mov_b32     v3, s7                                  // 000000004B50: 7E060207
  v_addc_u32    v1, vcc, v3, v1, vcc                    // 000000004B54: 50020303
  flat_store_dword  v[0:1], v2                          // 000000004B58: DC700000 00000200
  label_12D8:
  s_endpgm                                              // 000000004B60: BF810000
  //
  // padding (000000004b64 - 000000004c00)
  //
  //
  // amd_kernel_code_t for &ZZ19Stencil_Hcc_Shfl4_2RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__719__cxxamp_trampolineEPfiiS4_iiS4_iiiii (000000004c00 - 000000004d00)
  //
  //
  // &ZZ19Stencil_Hcc_Shfl4_2RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__719__cxxamp_trampolineEPfiiS4_iiS4_iiiii:
  //
  s_load_dword  s4, s[4:5], 0x01                        // 000000004D00: C0020501
  v_mbcnt_lo_u32_b32  v2, -1, 0                         // 000000004D04: D2460002 000100C1
  v_mbcnt_hi_u32_b32  v2, -1, v2                        // 000000004D0C: 480404C1
  s_waitcnt     lgkmcnt(0)                              // 000000004D10: BF8C007F
  s_and_b32     s5, s4, 0x0000ffff                      // 000000004D14: 8705FF04 0000FFFF
  s_bfe_u32     s4, s4, 0x00100010                      // 000000004D1C: 9384FF04 00100010
  s_mul_i32     s5, s5, s8                              // 000000004D24: 93050805
  v_add_i32     v0, vcc, s5, v0                         // 000000004D28: 4A000005
  s_mul_i32     s4, s4, s9                              // 000000004D2C: 93040904
  v_add_i32     v1, vcc, s4, v1                         // 000000004D30: 4A020204
  v_ashrrev_i32  v3, 31, v2                             // 000000004D34: 3006049F
  s_mov_b32     s4, 0x38e38e39                          // 000000004D38: BE8403FF 38E38E39
  v_mul_hi_u32  v4, v2, s4                              // 000000004D40: D2D40004 00000902
  v_mul_lo_u32  v3, v3, s4                              // 000000004D48: D2D20003 00000903
  s_load_dwordx2  s[8:9], s[6:7], 0x0c                  // 000000004D50: C044070C
  v_add_i32     v15, vcc, v3, v4                        // 000000004D54: 4A1E0903
  v_mul_lo_u32  v14, v2, s4                             // 000000004D58: D2D2000E 00000902
  s_load_dword  s4, s[6:7], 0x0e                        // 000000004D60: C002070E
  v_lshrrev_b32  v5, 31, v15                            // 000000004D64: 2C0A1E9F
  v_ashr_i64    v[6:7], v[14:15], 34                    // 000000004D68: D2C60006 0001450E
  v_lshlrev_b32  v1, 1, v1                              // 000000004D70: 34020281
  v_add_i32     v3, vcc, v6, v5                         // 000000004D74: 4A060B06
  v_ashrrev_i32  v5, 3, v2                              // 000000004D78: 300A0483
  v_and_b32     v1, -16, v1                             // 000000004D7C: 360202D0
  v_add_i32     v1, vcc, v5, v1                         // 000000004D80: 4A020305
  v_mul_lo_u32  v6, v3, 18                              // 000000004D84: D2D20006 00012503
  v_lshlrev_b32  v0, 1, v0                              // 000000004D8C: 34000081
  v_and_b32     v7, -8, v1                              // 000000004D90: 360E02C8
  s_waitcnt     lgkmcnt(0)                              // 000000004D94: BF8C007F
  s_lshl_b32    s5, s8, 1                               // 000000004D98: 8F058108
  v_and_b32     v0, -16, v0                             // 000000004D9C: 360000D0
  v_sub_i32     v6, vcc, v2, v6                         // 000000004DA0: 4C0C0D02
  v_add_i32     v3, vcc, v7, v3                         // 000000004DA4: 4A060707
  s_add_u32     s11, s5, s9                             // 000000004DA8: 800B0905
  v_add_i32     v6, vcc, v0, v6                         // 000000004DAC: 4A0C0D00
  s_add_u32     s5, s5, s4                              // 000000004DB0: 80050405
  v_cmp_lt_i32  s[12:13], v3, s5                        // 000000004DB4: D102000C 00000B03
  v_cmp_gt_i32  vcc, s11, v6                            // 000000004DBC: 7D080C0B
  s_and_b64     vcc, vcc, s[12:13]                      // 000000004DC0: 87EA0C6A
  s_xor_b64     s[12:13], vcc, -1                       // 000000004DC4: 898CC16A
  s_load_dwordx2  s[14:15], s[6:7], 0x00                // 000000004DC8: C0470700
  s_mov_b64     s[16:17], exec                          // 000000004DCC: BE90047E
  s_andn2_b64   exec, s[16:17], s[12:13]                // 000000004DD0: 8AFE0C10
  v_mul_lo_u32  v3, v3, s11                             // 000000004DD4: D2D20003 00001703
  s_cbranch_execz  label_1382                           // 000000004DDC: BF88000A
  v_add_i32     v8, vcc, v3, v6                         // 000000004DE0: 4A100D03
  v_ashrrev_i32  v9, 31, v8                             // 000000004DE4: 3012109F
  v_lshl_b64    v[8:9], v[8:9], 2                       // 000000004DE8: D2C20008 00010508
  s_waitcnt     lgkmcnt(0)                              // 000000004DF0: BF8C007F
  v_add_i32     v8, vcc, s14, v8                        // 000000004DF4: 4A10100E
  v_mov_b32     v6, s15                                 // 000000004DF8: 7E0C020F
  v_addc_u32    v9, vcc, v6, v9, vcc                    // 000000004DFC: 50121306
  flat_load_dword  v3, v[8:9]                           // 000000004E00: DC300000 03000008
  label_1382:
  s_andn2_b64   exec, s[16:17], exec                    // 000000004E08: 8AFE7E10
  s_cbranch_execz  label_1384                           // 000000004E0C: BF880000
  label_1384:
  s_mov_b64     exec, s[16:17]                          // 000000004E10: BEFE0410
  v_add_i32     v6, vcc, 10, v2                         // 000000004E14: 4A0C048A
  v_ashrrev_i32  v8, 31, v6                             // 000000004E18: 30100C9F
  s_mov_b32     s12, 0x38e38e39                         // 000000004E1C: BE8C03FF 38E38E39
  v_mul_hi_u32  v9, v6, s12                             // 000000004E24: D2D40009 00001906
  v_mul_lo_u32  v8, v8, s12                             // 000000004E2C: D2D20008 00001908
  v_add_i32     v9, vcc, v8, v9                         // 000000004E34: 4A121308
  v_add_i32     v8, vcc, 0x38e38e3a, v14                // 000000004E38: 4A101CFF 38E38E3A
  v_lshrrev_b32  v10, 31, v9                            // 000000004E40: 2C14129F
  v_ashr_i64    v[8:9], v[8:9], 34                      // 000000004E44: D2C60008 00014508
  v_add_i32     v8, vcc, v8, v10                        // 000000004E4C: 4A101508
  v_or_b32      v9, 3, v7                               // 000000004E50: 38120E83
  v_mul_lo_u32  v79, v8, 18                             // 000000004E54: D2D2004F 00012508
  v_sub_i32     v6, vcc, v6, v79                        // 000000004E5C: 4C0C9F06
  v_add_i32     v6, vcc, v6, v0                         // 000000004E60: 4A0C0106
  v_add_i32     v8, vcc, v8, v9                         // 000000004E64: 4A101308
  v_cmp_lt_i32  s[12:13], v8, s5                        // 000000004E68: D102000C 00000B08
  v_cmp_gt_i32  vcc, s11, v6                            // 000000004E70: 7D080C0B
  s_and_b64     s[12:13], vcc, s[12:13]                 // 000000004E74: 878C0C6A
  s_and_saveexec_b64  s[12:13], s[12:13]                // 000000004E78: BE8C240C
  v_mul_lo_u32  v8, v8, s11                             // 000000004E7C: D2D20008 00001708
  s_cbranch_execz  label_13AC                           // 000000004E84: BF88000A
  v_add_i32     v8, vcc, v8, v6                         // 000000004E88: 4A100D08
  v_ashrrev_i32  v9, 31, v8                             // 000000004E8C: 3012109F
  v_lshl_b64    v[8:9], v[8:9], 2                       // 000000004E90: D2C20008 00010508
  s_waitcnt     lgkmcnt(0)                              // 000000004E98: BF8C007F
  v_add_i32     v10, vcc, s14, v8                       // 000000004E9C: 4A14100E
  v_mov_b32     v8, s15                                 // 000000004EA0: 7E10020F
  v_addc_u32    v11, vcc, v8, v9, vcc                   // 000000004EA4: 50161308
  flat_load_dword  v79, v[10:11]                        // 000000004EA8: DC300000 4F00000A
  label_13AC:
  s_mov_b64     exec, s[12:13]                          // 000000004EB0: BEFE040C
  v_add_i32     v8, vcc, 2, v2                          // 000000004EB4: 4A100482
  v_ashrrev_i32  v9, 31, v8                             // 000000004EB8: 3012109F
  s_mov_b32     s12, 0x38e38e39                         // 000000004EBC: BE8C03FF 38E38E39
  v_mul_hi_u32  v10, v8, s12                            // 000000004EC4: D2D4000A 00001908
  v_mul_lo_u32  v9, v9, s12                             // 000000004ECC: D2D20009 00001909
  v_add_i32     v10, vcc, v9, v10                       // 000000004ED4: 4A141509
  v_add_i32     v9, vcc, 0x71c71c72, v14                // 000000004ED8: 4A121CFF 71C71C72
  v_lshrrev_b32  v11, 31, v10                           // 000000004EE0: 2C16149F
  v_ashr_i64    v[9:10], v[9:10], 34                    // 000000004EE4: D2C60009 00014509
  v_add_i32     v9, vcc, v9, v11                        // 000000004EEC: 4A121709
  v_or_b32      v10, 7, v1                              // 000000004EF0: 38140287
  v_mul_lo_u32  v81, v9, 18                             // 000000004EF4: D2D20051 00012509
  v_sub_i32     v8, vcc, v8, v81                        // 000000004EFC: 4C10A308
  v_add_i32     v8, vcc, v8, v0                         // 000000004F00: 4A100108
  v_add_i32     v9, vcc, v9, v10                        // 000000004F04: 4A121509
  v_cmp_lt_i32  s[12:13], v9, s5                        // 000000004F08: D102000C 00000B09
  v_cmp_gt_i32  vcc, s11, v8                            // 000000004F10: 7D08100B
  s_and_b64     s[12:13], vcc, s[12:13]                 // 000000004F14: 878C0C6A
  s_and_saveexec_b64  s[12:13], s[12:13]                // 000000004F18: BE8C240C
  v_mul_lo_u32  v9, v9, s11                             // 000000004F1C: D2D20009 00001709
  s_cbranch_execz  label_13D4                           // 000000004F24: BF88000A
  v_add_i32     v8, vcc, v9, v8                         // 000000004F28: 4A101109
  v_ashrrev_i32  v9, 31, v8                             // 000000004F2C: 3012109F
  v_lshl_b64    v[8:9], v[8:9], 2                       // 000000004F30: D2C20008 00010508
  s_waitcnt     lgkmcnt(0)                              // 000000004F38: BF8C007F
  v_add_i32     v8, vcc, s14, v8                        // 000000004F3C: 4A10100E
  v_mov_b32     v10, s15                                // 000000004F40: 7E14020F
  v_addc_u32    v9, vcc, v10, v9, vcc                   // 000000004F44: 5012130A
  flat_load_dword  v81, v[8:9]                          // 000000004F48: DC300000 51000008
  label_13D4:
  s_mov_b64     exec, s[12:13]                          // 000000004F50: BEFE040C
  v_add_i32     v9, vcc, 12, v2                         // 000000004F54: 4A12048C
  v_ashrrev_i32  v10, 31, v9                            // 000000004F58: 3014129F
  s_mov_b32     s12, 0x38e38e39                         // 000000004F5C: BE8C03FF 38E38E39
  v_mul_hi_u32  v11, v9, s12                            // 000000004F64: D2D4000B 00001909
  v_mul_lo_u32  v10, v10, s12                           // 000000004F6C: D2D2000A 0000190A
  v_add_i32     v11, vcc, v10, v11                      // 000000004F74: 4A16170A
  v_add_i32     v10, vcc, 0xaaaaaaac, v14               // 000000004F78: 4A141CFF AAAAAAAC
  v_lshrrev_b32  v12, 31, v11                           // 000000004F80: 2C18169F
  v_ashr_i64    v[10:11], v[10:11], 34                  // 000000004F84: D2C6000A 0001450A
  v_add_i32     v10, vcc, v10, v12                      // 000000004F8C: 4A14190A
  v_mul_lo_u32  v11, v10, 18                            // 000000004F90: D2D2000B 0001250A
  v_sub_i32     v9, vcc, v9, v11                        // 000000004F98: 4C121709
  v_add_i32     v9, vcc, v9, v0                         // 000000004F9C: 4A120109
  v_add_i32     v10, vcc, v7, v10                       // 000000004FA0: 4A141507
  v_add_i32     v10, vcc, 10, v10                       // 000000004FA4: 4A14148A
  v_cmp_lt_i32  s[12:13], v10, s5                       // 000000004FA8: D102000C 00000B0A
  v_cmp_gt_i32  vcc, s11, v9                            // 000000004FB0: 7D08120B
  s_and_b64     s[12:13], vcc, s[12:13]                 // 000000004FB4: 878C0C6A
  s_and_saveexec_b64  s[12:13], s[12:13]                // 000000004FB8: BE8C240C
  v_mul_lo_u32  v10, v10, s11                           // 000000004FBC: D2D2000A 0000170A
  s_cbranch_execz  label_13FC                           // 000000004FC4: BF88000A
  v_add_i32     v9, vcc, v10, v9                        // 000000004FC8: 4A12130A
  v_ashrrev_i32  v10, 31, v9                            // 000000004FCC: 3014129F
  v_lshl_b64    v[9:10], v[9:10], 2                     // 000000004FD0: D2C20009 00010509
  s_waitcnt     lgkmcnt(0)                              // 000000004FD8: BF8C007F
  v_add_i32     v9, vcc, s14, v9                        // 000000004FDC: 4A12120E
  v_mov_b32     v11, s15                                // 000000004FE0: 7E16020F
  v_addc_u32    v10, vcc, v11, v10, vcc                 // 000000004FE4: 5014150B
  flat_load_dword  v9, v[9:10]                          // 000000004FE8: DC300000 09000009
  label_13FC:
  s_andn2_b64   exec, s[12:13], exec                    // 000000004FF0: 8AFE7E0C
  s_cbranch_execz  label_13FE                           // 000000004FF4: BF880000
  label_13FE:
  s_mov_b64     exec, s[12:13]                          // 000000004FF8: BEFE040C
  v_add_i32     v10, vcc, 4, v2                         // 000000004FFC: 4A140484
  v_ashrrev_i32  v11, 31, v10                           // 000000005000: 3016149F
  s_mov_b32     s12, 0x38e38e39                         // 000000005004: BE8C03FF 38E38E39
  v_mul_hi_u32  v12, v10, s12                           // 00000000500C: D2D4000C 0000190A
  v_mul_lo_u32  v11, v11, s12                           // 000000005014: D2D2000B 0000190B
  v_add_i32     v12, vcc, v11, v12                      // 00000000501C: 4A18190B
  v_add_i32     v11, vcc, 0xe38e38e4, v14               // 000000005020: 4A161CFF E38E38E4
  v_lshrrev_b32  v13, 31, v12                           // 000000005028: 2C1A189F
  v_ashr_i64    v[11:12], v[11:12], 34                  // 00000000502C: D2C6000B 0001450B
  v_add_i32     v11, vcc, v11, v13                      // 000000005034: 4A161B0B
  v_mul_lo_u32  v12, v11, 18                            // 000000005038: D2D2000C 0001250B
  v_sub_i32     v10, vcc, v10, v12                      // 000000005040: 4C14190A
  v_add_i32     v10, vcc, v10, v0                       // 000000005044: 4A14010A
  v_add_i32     v11, vcc, v7, v11                       // 000000005048: 4A161707
  v_add_i32     v11, vcc, 14, v11                       // 00000000504C: 4A16168E
  v_cmp_lt_i32  s[12:13], v11, s5                       // 000000005050: D102000C 00000B0B
  v_cmp_gt_i32  vcc, s11, v10                           // 000000005058: 7D08140B
  s_and_b64     s[12:13], vcc, s[12:13]                 // 00000000505C: 878C0C6A
  s_and_saveexec_b64  s[12:13], s[12:13]                // 000000005060: BE8C240C
  v_mul_lo_u32  v11, v11, s11                           // 000000005064: D2D2000B 0000170B
  s_cbranch_execz  label_1426                           // 00000000506C: BF88000A
  v_add_i32     v10, vcc, v11, v10                      // 000000005070: 4A14150B
  v_ashrrev_i32  v11, 31, v10                           // 000000005074: 3016149F
  v_lshl_b64    v[10:11], v[10:11], 2                   // 000000005078: D2C2000A 0001050A
  s_waitcnt     lgkmcnt(0)                              // 000000005080: BF8C007F
  v_add_i32     v10, vcc, s14, v10                      // 000000005084: 4A14140E
  v_mov_b32     v12, s15                                // 000000005088: 7E18020F
  v_addc_u32    v11, vcc, v12, v11, vcc                 // 00000000508C: 5016170C
  flat_load_dword  v10, v[10:11]                        // 000000005090: DC300000 0A00000A
  label_1426:
  s_andn2_b64   exec, s[12:13], exec                    // 000000005098: 8AFE7E0C
  s_cbranch_execz  label_1428                           // 00000000509C: BF880000
  label_1428:
  s_mov_b64     exec, s[12:13]                          // 0000000050A0: BEFE040C
  v_add_i32     v11, vcc, 14, v2                        // 0000000050A4: 4A16048E
  v_ashrrev_i32  v12, 31, v11                           // 0000000050A8: 3018169F
  s_mov_b32     s12, 0x38e38e39                         // 0000000050AC: BE8C03FF 38E38E39
  v_mul_hi_u32  v13, v11, s12                           // 0000000050B4: D2D4000D 0000190B
  v_mul_lo_u32  v12, v12, s12                           // 0000000050BC: D2D2000C 0000190C
  v_add_i32     v15, vcc, v12, v13                      // 0000000050C4: 4A1E1B0C
  v_add_i32     v14, vcc, 0x1c71c71e, v14               // 0000000050C8: 4A1C1CFF 1C71C71E
  v_lshrrev_b32  v13, 31, v15                           // 0000000050D0: 2C1A1E9F
  v_ashr_i64    v[14:15], v[14:15], 34                  // 0000000050D4: D2C6000E 0001450E
  v_add_i32     v4, vcc, v14, v13                       // 0000000050DC: 4A081B0E
  v_mul_lo_u32  v12, v4, 18                             // 0000000050E0: D2D2000C 00012504
  v_sub_i32     v11, vcc, v11, v12                      // 0000000050E8: 4C16190B
  v_add_i32     v11, vcc, v11, v0                       // 0000000050EC: 4A16010B
  v_add_i32     v4, vcc, v7, v4                         // 0000000050F0: 4A080907
  v_add_i32     v4, vcc, 17, v4                         // 0000000050F4: 4A080891
  v_cmp_lt_i32  s[12:13], v4, s5                        // 0000000050F8: D102000C 00000B04
  v_cmp_gt_i32  vcc, s11, v11                           // 000000005100: 7D08160B
  s_and_b64     s[12:13], vcc, s[12:13]                 // 000000005104: 878C0C6A
  s_and_saveexec_b64  s[12:13], s[12:13]                // 000000005108: BE8C240C
  v_mul_lo_u32  v4, v4, s11                             // 00000000510C: D2D20004 00001704
  s_cbranch_execz  label_1450                           // 000000005114: BF88000A
  v_add_i32     v11, vcc, v4, v11                       // 000000005118: 4A161704
  v_ashrrev_i32  v12, 31, v11                           // 00000000511C: 3018169F
  v_lshl_b64    v[11:12], v[11:12], 2                   // 000000005120: D2C2000B 0001050B
  s_waitcnt     lgkmcnt(0)                              // 000000005128: BF8C007F
  v_add_i32     v11, vcc, s14, v11                      // 00000000512C: 4A16160E
  v_mov_b32     v7, s15                                 // 000000005130: 7E0E020F
  v_addc_u32    v12, vcc, v7, v12, vcc                  // 000000005134: 50181907
  flat_load_dword  v4, v[11:12]                         // 000000005138: DC300000 0400000B
  label_1450:
  s_andn2_b64   exec, s[12:13], exec                    // 000000005140: 8AFE7E0C
  s_cbranch_execz  label_1452                           // 000000005144: BF880000
  label_1452:
  s_mov_b64     exec, s[12:13]                          // 000000005148: BEFE040C
  v_mul_lo_u32  v5, v5, 10                              // 00000000514C: D2D20005 00011505
  v_add_i32     v5, vcc, v5, v2                         // 000000005154: 4A0A0505
  v_and_b32     v7, 63, v5                              // 000000005158: 360E0ABF
  v_lshl_b64    v[11:12], 1, v7                         // 00000000515C: D2C2000B 00020E81
  v_and_b32     v11, exec_lo, v11                       // 000000005164: 3616167E
  v_and_b32     v12, exec_hi, v12                       // 000000005168: 3618187F
  v_cmp_ne_u64  s[12:13], 0, v[11:12]                   // 00000000516C: D1CA000C 00021680
  s_waitcnt     lgkmcnt(0)                              // 000000005174: BF8C007F
  s_mov_b64     s[14:15], exec                          // 000000005178: BE8E047E
  s_mov_b64     s[16:17], exec                          // 00000000517C: BE90047E
  label_1460:
  v_readfirstlane_b32  s5, v7                           // 000000005180: 7E0A0507
  v_cmp_eq_u32  vcc, s5, v7                             // 000000005184: 7D840E05
  s_and_saveexec_b64  s[18:19], vcc                     // 000000005188: BE92246A
  s_cbranch_execz  label_1469                           // 00000000518C: BF880005
  s_waitcnt     vmcnt(0)                                // 000000005190: BF8C0F70
  v_readlane_b32  s5, v3, s5                            // 000000005194: 020A0B03
  v_mov_b32     v11, s5                                 // 000000005198: 7E160205
  s_andn2_b64   s[16:17], s[16:17], exec                // 00000000519C: 8A907E10
  s_cbranch_scc0  label_146B                            // 0000000051A0: BF840002
  label_1469:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000051A4: 87FE1012
  s_branch      label_1460                              // 0000000051A8: BF82FFF5
  label_146B:
  s_mov_b64     exec, s[14:15]                          // 0000000051AC: BEFE040E
  v_cndmask_b32  v11, 0, v11, s[12:13]                  // 0000000051B0: D200000B 00321680
  v_lshl_b64    v[12:13], 1, v7                         // 0000000051B8: D2C2000C 00020E81
  v_and_b32     v12, exec_lo, v12                       // 0000000051C0: 3618187E
  v_and_b32     v13, exec_hi, v13                       // 0000000051C4: 361A1A7F
  v_cmp_ne_u64  s[12:13], 0, v[12:13]                   // 0000000051C8: D1CA000C 00021880
  s_mov_b64     s[14:15], exec                          // 0000000051D0: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000051D4: BE90047E
  s_nop         0x0000                                  // 0000000051D8: BF800000
  s_nop         0x0000                                  // 0000000051DC: BF800000
  label_1478:
  v_readfirstlane_b32  s5, v7                           // 0000000051E0: 7E0A0507
  v_cmp_eq_u32  vcc, s5, v7                             // 0000000051E4: 7D840E05
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000051E8: BE92246A
  s_cbranch_execz  label_1480                           // 0000000051EC: BF880004
  v_readlane_b32  s5, v79, s5                           // 0000000051F0: 020A0B4F
  v_mov_b32     v12, s5                                 // 0000000051F4: 7E180205
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000051F8: 8A907E10
  s_cbranch_scc0  label_1482                            // 0000000051FC: BF840002
  label_1480:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000005200: 87FE1012
  s_branch      label_1478                              // 000000005204: BF82FFF6
  label_1482:
  s_mov_b64     exec, s[14:15]                          // 000000005208: BEFE040E
  v_cndmask_b32  v12, 0, v12, s[12:13]                  // 00000000520C: D200000C 00321880
  v_add_i32     v13, vcc, 8, v5                         // 000000005214: 4A1A0A88
  v_add_i32     v14, vcc, 24, v5                        // 000000005218: 4A1C0A98
  v_add_i32     v15, vcc, 16, v5                        // 00000000521C: 4A1E0A90
  v_and_b32     v13, 63, v13                            // 000000005220: 361A1ABF
  v_lshl_b64    v[16:17], 1, v7                         // 000000005224: D2C20010 00020E81
  v_and_b32     v16, exec_lo, v16                       // 00000000522C: 3620207E
  v_and_b32     v17, exec_hi, v17                       // 000000005230: 3622227F
  v_cmp_ne_u64  s[12:13], 0, v[16:17]                   // 000000005234: D1CA000C 00022080
  s_mov_b64     s[14:15], exec                          // 00000000523C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 000000005240: BE90047E
  s_nop         0x0000                                  // 000000005244: BF800000
  s_nop         0x0000                                  // 000000005248: BF800000
  s_nop         0x0000                                  // 00000000524C: BF800000
  s_nop         0x0000                                  // 000000005250: BF800000
  s_nop         0x0000                                  // 000000005254: BF800000
  s_nop         0x0000                                  // 000000005258: BF800000
  s_nop         0x0000                                  // 00000000525C: BF800000
  label_1498:
  v_readfirstlane_b32  s5, v7                           // 000000005260: 7E0A0507
  v_cmp_eq_u32  vcc, s5, v7                             // 000000005264: 7D840E05
  s_and_saveexec_b64  s[18:19], vcc                     // 000000005268: BE92246A
  s_cbranch_execz  label_14A0                           // 00000000526C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000005270: 020A0B51
  v_mov_b32     v7, s5                                  // 000000005274: 7E0E0205
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000005278: 8A907E10
  s_cbranch_scc0  label_14A2                            // 00000000527C: BF840002
  label_14A0:
  s_and_b64     exec, s[18:19], s[16:17]                // 000000005280: 87FE1012
  s_branch      label_1498                              // 000000005284: BF82FFF6
  label_14A2:
  s_mov_b64     exec, s[14:15]                          // 000000005288: BEFE040E
  v_cndmask_b32  v7, 0, v7, s[12:13]                    // 00000000528C: D2000007 00320E80
  v_lshl_b64    v[16:17], 1, v13                        // 000000005294: D2C20010 00021A81
  v_and_b32     v16, exec_lo, v16                       // 00000000529C: 3620207E
  v_and_b32     v17, exec_hi, v17                       // 0000000052A0: 3622227F
  v_cmp_ne_u64  s[12:13], 0, v[16:17]                   // 0000000052A4: D1CA000C 00022080
  s_mov_b64     s[14:15], exec                          // 0000000052AC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 0000000052B0: BE90047E
  s_nop         0x0000                                  // 0000000052B4: BF800000
  s_nop         0x0000                                  // 0000000052B8: BF800000
  s_nop         0x0000                                  // 0000000052BC: BF800000
  label_14B0:
  v_readfirstlane_b32  s5, v13                          // 0000000052C0: 7E0A050D
  v_cmp_eq_u32  vcc, s5, v13                            // 0000000052C4: 7D841A05
  s_and_saveexec_b64  s[18:19], vcc                     // 0000000052C8: BE92246A
  s_cbranch_execz  label_14B8                           // 0000000052CC: BF880004
  v_readlane_b32  s5, v3, s5                            // 0000000052D0: 020A0B03
  v_mov_b32     v16, s5                                 // 0000000052D4: 7E200205
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000052D8: 8A907E10
  s_cbranch_scc0  label_14BA                            // 0000000052DC: BF840002
  label_14B8:
  s_and_b64     exec, s[18:19], s[16:17]                // 0000000052E0: 87FE1012
  s_branch      label_14B0                              // 0000000052E4: BF82FFF6
  label_14BA:
  s_mov_b64     exec, s[14:15]                          // 0000000052E8: BEFE040E
  s_load_dwordx2  s[14:15], s[6:7], 0x08                // 0000000052EC: C0470708
  s_waitcnt     lgkmcnt(0)                              // 0000000052F0: BF8C007F
  v_mov_b32     v17, s14                                // 0000000052F4: 7E22020E
  v_mov_b32     v18, s15                                // 0000000052F8: 7E24020F
  flat_load_dword  v17, v[17:18]                        // 0000000052FC: DC300000 11000011
  v_cndmask_b32  v16, 0, v16, s[12:13]                  // 000000005304: D2000010 00322080
  v_and_b32     v15, 63, v15                            // 00000000530C: 361E1EBF
  v_and_b32     v14, 63, v14                            // 000000005310: 361C1CBF
  v_cmp_lt_i32  s[12:13], v2, 32                        // 000000005314: D102000C 00014102
  v_lshl_b64    v[18:19], 1, v13                        // 00000000531C: D2C20012 00021A81
  v_and_b32     v18, exec_lo, v18                       // 000000005324: 3624247E
  v_and_b32     v19, exec_hi, v19                       // 000000005328: 3626267F
  v_cmp_ne_u64  s[16:17], 0, v[18:19]                   // 00000000532C: D1CA0010 00022480
  s_mov_b64     s[18:19], exec                          // 000000005334: BE92047E
  s_mov_b64     s[20:21], exec                          // 000000005338: BE94047E
  s_nop         0x0000                                  // 00000000533C: BF800000
  label_14D0:
  v_readfirstlane_b32  s5, v13                          // 000000005340: 7E0A050D
  v_cmp_eq_u32  vcc, s5, v13                            // 000000005344: 7D841A05
  s_and_saveexec_b64  s[22:23], vcc                     // 000000005348: BE96246A
  s_cbranch_execz  label_14D8                           // 00000000534C: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000005350: 020A0B4F
  v_mov_b32     v18, s5                                 // 000000005354: 7E240205
  s_andn2_b64   s[20:21], s[20:21], exec                // 000000005358: 8A947E14
  s_cbranch_scc0  label_14DA                            // 00000000535C: BF840002
  label_14D8:
  s_and_b64     exec, s[22:23], s[20:21]                // 000000005360: 87FE1416
  s_branch      label_14D0                              // 000000005364: BF82FFF6
  label_14DA:
  s_mov_b64     exec, s[18:19]                          // 000000005368: BEFE0412
  v_cndmask_b32  v18, 0, v18, s[16:17]                  // 00000000536C: D2000012 00422480
  v_lshl_b64    v[19:20], 1, v13                        // 000000005374: D2C20013 00021A81
  v_and_b32     v19, exec_lo, v19                       // 00000000537C: 3626267E
  v_and_b32     v20, exec_hi, v20                       // 000000005380: 3628287F
  v_cmp_ne_u64  s[16:17], 0, v[19:20]                   // 000000005384: D1CA0010 00022680
  s_mov_b64     s[18:19], exec                          // 00000000538C: BE92047E
  s_mov_b64     s[20:21], exec                          // 000000005390: BE94047E
  s_nop         0x0000                                  // 000000005394: BF800000
  s_nop         0x0000                                  // 000000005398: BF800000
  s_nop         0x0000                                  // 00000000539C: BF800000
  label_14E8:
  v_readfirstlane_b32  s5, v13                          // 0000000053A0: 7E0A050D
  v_cmp_eq_u32  vcc, s5, v13                            // 0000000053A4: 7D841A05
  s_and_saveexec_b64  s[22:23], vcc                     // 0000000053A8: BE96246A
  s_cbranch_execz  label_14F0                           // 0000000053AC: BF880004
  v_readlane_b32  s5, v81, s5                           // 0000000053B0: 020A0B51
  v_mov_b32     v13, s5                                 // 0000000053B4: 7E1A0205
  s_andn2_b64   s[20:21], s[20:21], exec                // 0000000053B8: 8A947E14
  s_cbranch_scc0  label_14F2                            // 0000000053BC: BF840002
  label_14F0:
  s_and_b64     exec, s[22:23], s[20:21]                // 0000000053C0: 87FE1416
  s_branch      label_14E8                              // 0000000053C4: BF82FFF6
  label_14F2:
  s_mov_b64     exec, s[18:19]                          // 0000000053C8: BEFE0412
  v_cndmask_b32  v13, 0, v13, s[16:17]                  // 0000000053CC: D200000D 00421A80
  v_lshl_b64    v[19:20], 1, v15                        // 0000000053D4: D2C20013 00021E81
  v_and_b32     v19, exec_lo, v19                       // 0000000053DC: 3626267E
  v_and_b32     v20, exec_hi, v20                       // 0000000053E0: 3628287F
  v_cmp_ne_u64  s[16:17], 0, v[19:20]                   // 0000000053E4: D1CA0010 00022680
  s_mov_b64     s[18:19], exec                          // 0000000053EC: BE92047E
  s_mov_b64     s[20:21], exec                          // 0000000053F0: BE94047E
  s_nop         0x0000                                  // 0000000053F4: BF800000
  s_nop         0x0000                                  // 0000000053F8: BF800000
  s_nop         0x0000                                  // 0000000053FC: BF800000
  label_1500:
  v_readfirstlane_b32  s5, v15                          // 000000005400: 7E0A050F
  v_cmp_eq_u32  vcc, s5, v15                            // 000000005404: 7D841E05
  s_and_saveexec_b64  s[22:23], vcc                     // 000000005408: BE96246A
  s_cbranch_execz  label_1508                           // 00000000540C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000005410: 020A0B51
  v_mov_b32     v19, s5                                 // 000000005414: 7E260205
  s_andn2_b64   s[20:21], s[20:21], exec                // 000000005418: 8A947E14
  s_cbranch_scc0  label_150A                            // 00000000541C: BF840002
  label_1508:
  s_and_b64     exec, s[22:23], s[20:21]                // 000000005420: 87FE1416
  s_branch      label_1500                              // 000000005424: BF82FFF6
  label_150A:
  s_mov_b64     exec, s[18:19]                          // 000000005428: BEFE0412
  v_cndmask_b32  v19, 0, v19, s[16:17]                  // 00000000542C: D2000013 00422680
  v_lshl_b64    v[20:21], 1, v15                        // 000000005434: D2C20014 00021E81
  v_and_b32     v20, exec_lo, v20                       // 00000000543C: 3628287E
  v_and_b32     v21, exec_hi, v21                       // 000000005440: 362A2A7F
  v_cmp_ne_u64  s[16:17], 0, v[20:21]                   // 000000005444: D1CA0010 00022880
  s_mov_b64     s[18:19], exec                          // 00000000544C: BE92047E
  s_mov_b64     s[20:21], exec                          // 000000005450: BE94047E
  s_nop         0x0000                                  // 000000005454: BF800000
  s_nop         0x0000                                  // 000000005458: BF800000
  s_nop         0x0000                                  // 00000000545C: BF800000
  label_1518:
  v_readfirstlane_b32  s5, v15                          // 000000005460: 7E0A050F
  v_cmp_eq_u32  vcc, s5, v15                            // 000000005464: 7D841E05
  s_and_saveexec_b64  s[22:23], vcc                     // 000000005468: BE96246A
  s_cbranch_execz  label_1520                           // 00000000546C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000005470: 020A0B09
  v_mov_b32     v20, s5                                 // 000000005474: 7E280205
  s_andn2_b64   s[20:21], s[20:21], exec                // 000000005478: 8A947E14
  s_cbranch_scc0  label_1522                            // 00000000547C: BF840002
  label_1520:
  s_and_b64     exec, s[22:23], s[20:21]                // 000000005480: 87FE1416
  s_branch      label_1518                              // 000000005484: BF82FFF6
  label_1522:
  s_mov_b64     exec, s[18:19]                          // 000000005488: BEFE0412
  v_cndmask_b32  v20, 0, v20, s[16:17]                  // 00000000548C: D2000014 00422880
  v_lshl_b64    v[21:22], 1, v15                        // 000000005494: D2C20015 00021E81
  v_and_b32     v21, exec_lo, v21                       // 00000000549C: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 0000000054A0: 362C2C7F
  v_cmp_ne_u64  s[16:17], 0, v[21:22]                   // 0000000054A4: D1CA0010 00022A80
  s_mov_b64     s[18:19], exec                          // 0000000054AC: BE92047E
  s_mov_b64     s[20:21], exec                          // 0000000054B0: BE94047E
  s_nop         0x0000                                  // 0000000054B4: BF800000
  s_nop         0x0000                                  // 0000000054B8: BF800000
  s_nop         0x0000                                  // 0000000054BC: BF800000
  label_1530:
  v_readfirstlane_b32  s5, v15                          // 0000000054C0: 7E0A050F
  v_cmp_eq_u32  vcc, s5, v15                            // 0000000054C4: 7D841E05
  s_and_saveexec_b64  s[22:23], vcc                     // 0000000054C8: BE96246A
  s_cbranch_execz  label_1538                           // 0000000054CC: BF880004
  v_readlane_b32  s5, v10, s5                           // 0000000054D0: 020A0B0A
  v_mov_b32     v15, s5                                 // 0000000054D4: 7E1E0205
  s_andn2_b64   s[20:21], s[20:21], exec                // 0000000054D8: 8A947E14
  s_cbranch_scc0  label_153A                            // 0000000054DC: BF840002
  label_1538:
  s_and_b64     exec, s[22:23], s[20:21]                // 0000000054E0: 87FE1416
  s_branch      label_1530                              // 0000000054E4: BF82FFF6
  label_153A:
  s_mov_b64     exec, s[18:19]                          // 0000000054E8: BEFE0412
  v_cndmask_b32  v15, 0, v15, s[16:17]                  // 0000000054EC: D200000F 00421E80
  v_lshl_b64    v[21:22], 1, v14                        // 0000000054F4: D2C20015 00021C81
  v_and_b32     v21, exec_lo, v21                       // 0000000054FC: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 000000005500: 362C2C7F
  v_cmp_ne_u64  s[16:17], 0, v[21:22]                   // 000000005504: D1CA0010 00022A80
  s_mov_b64     s[18:19], exec                          // 00000000550C: BE92047E
  s_mov_b64     s[20:21], exec                          // 000000005510: BE94047E
  s_nop         0x0000                                  // 000000005514: BF800000
  s_nop         0x0000                                  // 000000005518: BF800000
  s_nop         0x0000                                  // 00000000551C: BF800000
  label_1548:
  v_readfirstlane_b32  s5, v14                          // 000000005520: 7E0A050E
  v_cmp_eq_u32  vcc, s5, v14                            // 000000005524: 7D841C05
  s_and_saveexec_b64  s[22:23], vcc                     // 000000005528: BE96246A
  s_cbranch_execz  label_1550                           // 00000000552C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000005530: 020A0B51
  v_mov_b32     v21, s5                                 // 000000005534: 7E2A0205
  s_andn2_b64   s[20:21], s[20:21], exec                // 000000005538: 8A947E14
  s_cbranch_scc0  label_1552                            // 00000000553C: BF840002
  label_1550:
  s_and_b64     exec, s[22:23], s[20:21]                // 000000005540: 87FE1416
  s_branch      label_1548                              // 000000005544: BF82FFF6
  label_1552:
  s_mov_b64     exec, s[18:19]                          // 000000005548: BEFE0412
  v_cndmask_b32  v21, 0, v21, s[16:17]                  // 00000000554C: D2000015 00422A80
  v_lshl_b64    v[22:23], 1, v14                        // 000000005554: D2C20016 00021C81
  v_and_b32     v22, exec_lo, v22                       // 00000000555C: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 000000005560: 362E2E7F
  v_cmp_ne_u64  s[16:17], 0, v[22:23]                   // 000000005564: D1CA0010 00022C80
  s_mov_b64     s[18:19], exec                          // 00000000556C: BE92047E
  s_mov_b64     s[20:21], exec                          // 000000005570: BE94047E
  s_nop         0x0000                                  // 000000005574: BF800000
  s_nop         0x0000                                  // 000000005578: BF800000
  s_nop         0x0000                                  // 00000000557C: BF800000
  label_1560:
  v_readfirstlane_b32  s5, v14                          // 000000005580: 7E0A050E
  v_cmp_eq_u32  vcc, s5, v14                            // 000000005584: 7D841C05
  s_and_saveexec_b64  s[22:23], vcc                     // 000000005588: BE96246A
  s_cbranch_execz  label_1568                           // 00000000558C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000005590: 020A0B09
  v_mov_b32     v22, s5                                 // 000000005594: 7E2C0205
  s_andn2_b64   s[20:21], s[20:21], exec                // 000000005598: 8A947E14
  s_cbranch_scc0  label_156A                            // 00000000559C: BF840002
  label_1568:
  s_and_b64     exec, s[22:23], s[20:21]                // 0000000055A0: 87FE1416
  s_branch      label_1560                              // 0000000055A4: BF82FFF6
  label_156A:
  s_mov_b64     exec, s[18:19]                          // 0000000055A8: BEFE0412
  v_cndmask_b32  v22, 0, v22, s[16:17]                  // 0000000055AC: D2000016 00422C80
  v_lshl_b64    v[23:24], 1, v14                        // 0000000055B4: D2C20017 00021C81
  v_and_b32     v23, exec_lo, v23                       // 0000000055BC: 362E2E7E
  v_and_b32     v24, exec_hi, v24                       // 0000000055C0: 3630307F
  v_cmp_ne_u64  s[16:17], 0, v[23:24]                   // 0000000055C4: D1CA0010 00022E80
  s_mov_b64     s[18:19], exec                          // 0000000055CC: BE92047E
  s_mov_b64     s[20:21], exec                          // 0000000055D0: BE94047E
  s_nop         0x0000                                  // 0000000055D4: BF800000
  s_nop         0x0000                                  // 0000000055D8: BF800000
  s_nop         0x0000                                  // 0000000055DC: BF800000
  label_1578:
  v_readfirstlane_b32  s5, v14                          // 0000000055E0: 7E0A050E
  v_cmp_eq_u32  vcc, s5, v14                            // 0000000055E4: 7D841C05
  s_and_saveexec_b64  s[22:23], vcc                     // 0000000055E8: BE96246A
  s_cbranch_execz  label_1580                           // 0000000055EC: BF880004
  v_readlane_b32  s5, v10, s5                           // 0000000055F0: 020A0B0A
  v_mov_b32     v14, s5                                 // 0000000055F4: 7E1C0205
  s_andn2_b64   s[20:21], s[20:21], exec                // 0000000055F8: 8A947E14
  s_cbranch_scc0  label_1582                            // 0000000055FC: BF840002
  label_1580:
  s_and_b64     exec, s[22:23], s[20:21]                // 000000005600: 87FE1416
  s_branch      label_1578                              // 000000005604: BF82FFF6
  label_1582:
  s_mov_b64     exec, s[18:19]                          // 000000005608: BEFE0412
  v_cndmask_b32  v14, 0, v14, s[16:17]                  // 00000000560C: D200000E 00421C80
  v_cmp_gt_i32  vcc, 32, v2                             // 000000005614: 7D0804A0
  s_and_saveexec_b64  s[16:17], vcc                     // 000000005618: BE90246A
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000561C: BF8C0070
  v_mad_f32     v82, v17, v11, 0                        // 000000005620: D2820052 02021711
  s_cbranch_execz  label_15AE                           // 000000005628: BF880023
  v_cmp_le_i32  vcc, 26, v2                             // 00000000562C: 7D06049A
  v_cndmask_b32  v24, 0, -1, vcc                        // 000000005630: D2000018 01A98280
  s_mov_b64     s[18:19], exec                          // 000000005638: BE92047E
  s_andn2_b64   exec, s[18:19], vcc                     // 00000000563C: 8AFE6A12
  v_mad_f32     v6, v17, v16, 0                         // 000000005640: D2820006 02022111
  s_cbranch_execz  label_15A3                           // 000000005648: BF880010
  v_cmp_le_i32  vcc, 24, v2                             // 00000000564C: 7D060498
  v_cndmask_b32  v24, 0, -1, vcc                        // 000000005650: D2000018 01A98280
  s_mov_b64     s[20:21], exec                          // 000000005658: BE94047E
  s_andn2_b64   exec, s[20:21], vcc                     // 00000000565C: 8AFE6A14
  v_mul_f32     v83, v17, v19                           // 000000005660: 10A62711
  v_mov_b32     v24, -1                                 // 000000005664: 7E3002C1
  v_mov_b32     v8, 2                                   // 000000005668: 7E100282
  s_andn2_b64   exec, s[20:21], exec                    // 00000000566C: 8AFE7E14
  v_mov_b32     v8, 1                                   // 000000005670: 7E100281
  v_mov_b32     v83, v23                                // 000000005674: 7EA60317
  v_mov_b32     v19, v17                                // 000000005678: 7E260311
  s_mov_b64     exec, s[20:21]                          // 00000000567C: BEFE0414
  v_cmp_ne_i32  vcc, 0, v24                             // 000000005680: 7D0A3080
  v_cndmask_b32  v24, 0, -1, vcc                        // 000000005684: D2000018 01A98280
  label_15A3:
  s_andn2_b64   exec, s[18:19], exec                    // 00000000568C: 8AFE7E12
  v_mov_b32     v8, 0                                   // 000000005690: 7E100280
  s_cbranch_execz  label_15AA                           // 000000005694: BF880004
  v_mov_b32     v83, v23                                // 000000005698: 7EA60317
  v_mov_b32     v16, v17                                // 00000000569C: 7E200311
  v_mov_b32     v19, v17                                // 0000000056A0: 7E260311
  v_mov_b32     v6, v17                                 // 0000000056A4: 7E0C0311
  label_15AA:
  s_mov_b64     exec, s[18:19]                          // 0000000056A8: BEFE0412
  v_cmp_ne_i32  vcc, 0, v24                             // 0000000056AC: 7D0A3080
  v_cndmask_b32  v24, 0, -1, vcc                        // 0000000056B0: D2000018 01A98280
  label_15AE:
  s_andn2_b64   exec, s[16:17], exec                    // 0000000056B8: 8AFE7E10
  v_mul_f32     v7, v17, v7                             // 0000000056BC: 100E0F11
  s_cbranch_execz  label_15BC                           // 0000000056C0: BF88000B
  v_mul_f32     v11, v17, v12                           // 0000000056C4: 10161911
  v_cmp_gt_i32  vcc, 58, v2                             // 0000000056C8: 7D0804BA
  v_cndmask_b32  v24, 0, -1, vcc                        // 0000000056CC: D2000018 01A98280
  v_cndmask_b32  v7, v7, v11, vcc                       // 0000000056D4: 000E1707
  v_add_f32     v82, 0, v7                              // 0000000056D8: 06A40E80
  v_mov_b32     v8, 0                                   // 0000000056DC: 7E100280
  v_mov_b32     v83, v23                                // 0000000056E0: 7EA60317
  v_mov_b32     v16, v17                                // 0000000056E4: 7E200311
  v_mov_b32     v19, v17                                // 0000000056E8: 7E260311
  v_mov_b32     v6, v17                                 // 0000000056EC: 7E0C0311
  label_15BC:
  s_mov_b64     exec, s[16:17]                          // 0000000056F0: BEFE0410
  v_cmp_ne_i32  vcc, 0, v24                             // 0000000056F4: 7D0A3080
  v_cndmask_b32  v7, 0, -1, vcc                         // 0000000056F8: D2000007 01A98280
  v_cmp_ne_u32  vcc, 2, v8                              // 000000005700: 7D8A1082
  s_and_saveexec_b64  s[16:17], vcc                     // 000000005704: BE90246A
  s_cbranch_execz  label_15D1                           // 000000005708: BF88000E
  v_cmp_eq_u32  s[18:19], v8, 1                         // 00000000570C: D1840012 00010308
  v_mul_f32     v7, v6, v18                             // 000000005714: 100E2506
  v_mul_f32     v11, v16, v13                           // 000000005718: 10161B10
  v_cmp_gt_i32  vcc, 56, v2                             // 00000000571C: 7D0804B8
  v_cndmask_b32  v7, v11, v7, vcc                       // 000000005720: 000E0F0B
  v_add_f32     v7, 0, v7                               // 000000005724: 060E0E80
  v_cndmask_b32  v6, v7, v6, s[18:19]                   // 000000005728: D2000006 004A0D07
  v_mul_f32     v11, v17, v20                           // 000000005730: 10162911
  v_mul_f32     v13, v19, v15                           // 000000005734: 101A1F13
  v_cmp_gt_i32  vcc, 52, v2                             // 000000005738: 7D0804B4
  v_cndmask_b32  v83, v13, v11, vcc                     // 00000000573C: 00A6170D
  v_mov_b32     v7, 0                                   // 000000005740: 7E0E0280
  label_15D1:
  s_mov_b64     exec, s[16:17]                          // 000000005744: BEFE0410
  v_cmp_ne_i32  s[16:17], v7, 0                         // 000000005748: D10A0010 00010107
  v_add_i32     v13, vcc, 1, v5                         // 000000005750: 4A1A0A81
  v_and_b32     v13, 63, v13                            // 000000005754: 361A1ABF
  v_lshl_b64    v[15:16], 1, v13                        // 000000005758: D2C2000F 00021A81
  v_and_b32     v15, exec_lo, v15                       // 000000005760: 361E1E7E
  v_and_b32     v16, exec_hi, v16                       // 000000005764: 3620207F
  v_cmp_ne_u64  s[18:19], 0, v[15:16]                   // 000000005768: D1CA0012 00021E80
  s_mov_b64     s[20:21], exec                          // 000000005770: BE94047E
  s_mov_b64     s[22:23], exec                          // 000000005774: BE96047E
  s_nop         0x0000                                  // 000000005778: BF800000
  s_nop         0x0000                                  // 00000000577C: BF800000
  label_15E0:
  v_readfirstlane_b32  s5, v13                          // 000000005780: 7E0A050D
  v_cmp_eq_u32  vcc, s5, v13                            // 000000005784: 7D841A05
  s_and_saveexec_b64  s[24:25], vcc                     // 000000005788: BE98246A
  s_cbranch_execz  label_15E8                           // 00000000578C: BF880004
  v_readlane_b32  s5, v3, s5                            // 000000005790: 020A0B03
  v_mov_b32     v15, s5                                 // 000000005794: 7E1E0205
  s_andn2_b64   s[22:23], s[22:23], exec                // 000000005798: 8A967E16
  s_cbranch_scc0  label_15EA                            // 00000000579C: BF840002
  label_15E8:
  s_and_b64     exec, s[24:25], s[22:23]                // 0000000057A0: 87FE1618
  s_branch      label_15E0                              // 0000000057A4: BF82FFF6
  label_15EA:
  s_mov_b64     exec, s[20:21]                          // 0000000057A8: BEFE0414
  v_cndmask_b32  v15, 0, v15, s[18:19]                  // 0000000057AC: D200000F 004A1E80
  v_lshl_b64    v[18:19], 1, v13                        // 0000000057B4: D2C20012 00021A81
  v_and_b32     v18, exec_lo, v18                       // 0000000057BC: 3624247E
  v_and_b32     v19, exec_hi, v19                       // 0000000057C0: 3626267F
  v_cmp_ne_u64  s[18:19], 0, v[18:19]                   // 0000000057C4: D1CA0012 00022480
  s_mov_b64     s[20:21], exec                          // 0000000057CC: BE94047E
  s_mov_b64     s[22:23], exec                          // 0000000057D0: BE96047E
  s_nop         0x0000                                  // 0000000057D4: BF800000
  s_nop         0x0000                                  // 0000000057D8: BF800000
  s_nop         0x0000                                  // 0000000057DC: BF800000
  label_15F8:
  v_readfirstlane_b32  s5, v13                          // 0000000057E0: 7E0A050D
  v_cmp_eq_u32  vcc, s5, v13                            // 0000000057E4: 7D841A05
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000057E8: BE98246A
  s_cbranch_execz  label_1600                           // 0000000057EC: BF880004
  v_readlane_b32  s5, v79, s5                           // 0000000057F0: 020A0B4F
  v_mov_b32     v16, s5                                 // 0000000057F4: 7E200205
  s_andn2_b64   s[22:23], s[22:23], exec                // 0000000057F8: 8A967E16
  s_cbranch_scc0  label_1602                            // 0000000057FC: BF840002
  label_1600:
  s_and_b64     exec, s[24:25], s[22:23]                // 000000005800: 87FE1618
  s_branch      label_15F8                              // 000000005804: BF82FFF6
  label_1602:
  s_mov_b64     exec, s[20:21]                          // 000000005808: BEFE0414
  v_cndmask_b32  v16, 0, v16, s[18:19]                  // 00000000580C: D2000010 004A2080
  v_lshl_b64    v[18:19], 1, v13                        // 000000005814: D2C20012 00021A81
  v_and_b32     v18, exec_lo, v18                       // 00000000581C: 3624247E
  v_and_b32     v19, exec_hi, v19                       // 000000005820: 3626267F
  v_cmp_ne_u64  s[18:19], 0, v[18:19]                   // 000000005824: D1CA0012 00022480
  s_mov_b64     s[20:21], exec                          // 00000000582C: BE94047E
  s_mov_b64     s[22:23], exec                          // 000000005830: BE96047E
  s_nop         0x0000                                  // 000000005834: BF800000
  s_nop         0x0000                                  // 000000005838: BF800000
  s_nop         0x0000                                  // 00000000583C: BF800000
  label_1610:
  v_readfirstlane_b32  s5, v13                          // 000000005840: 7E0A050D
  v_cmp_eq_u32  vcc, s5, v13                            // 000000005844: 7D841A05
  s_and_saveexec_b64  s[24:25], vcc                     // 000000005848: BE98246A
  s_cbranch_execz  label_1618                           // 00000000584C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000005850: 020A0B51
  v_mov_b32     v13, s5                                 // 000000005854: 7E1A0205
  s_andn2_b64   s[22:23], s[22:23], exec                // 000000005858: 8A967E16
  s_cbranch_scc0  label_161A                            // 00000000585C: BF840002
  label_1618:
  s_and_b64     exec, s[24:25], s[22:23]                // 000000005860: 87FE1618
  s_branch      label_1610                              // 000000005864: BF82FFF6
  label_161A:
  s_mov_b64     exec, s[20:21]                          // 000000005868: BEFE0414
  s_add_u32     s20, s14, 4                             // 00000000586C: 8014840E
  s_addc_u32    s21, s15, 0                             // 000000005870: 8215800F
  v_mov_b32     v18, s20                                // 000000005874: 7E240214
  v_mov_b32     v19, s21                                // 000000005878: 7E260215
  v_add_i32     v20, vcc, 9, v5                         // 00000000587C: 4A280A89
  v_and_b32     v20, 63, v20                            // 000000005880: 362828BF
  v_add_i32     v23, vcc, 25, v5                        // 000000005884: 4A2E0A99
  v_add_i32     v24, vcc, 17, v5                        // 000000005888: 4A300A91
  flat_load_dword  v18, v[18:19]                        // 00000000588C: DC300000 12000012
  v_cndmask_b32  v13, 0, v13, s[18:19]                  // 000000005894: D200000D 004A1A80
  s_xor_b64     s[18:19], s[12:13], -1                  // 00000000589C: 8992C10C
  v_and_b32     v19, 63, v24                            // 0000000058A0: 362630BF
  v_and_b32     v23, 63, v23                            // 0000000058A4: 362E2EBF
  v_lshl_b64    v[24:25], 1, v20                        // 0000000058A8: D2C20018 00022881
  v_and_b32     v24, exec_lo, v24                       // 0000000058B0: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 0000000058B4: 3632327F
  v_cmp_ne_u64  s[20:21], 0, v[24:25]                   // 0000000058B8: D1CA0014 00023080
  s_mov_b64     s[22:23], exec                          // 0000000058C0: BE96047E
  s_mov_b64     s[24:25], exec                          // 0000000058C4: BE98047E
  s_nop         0x0000                                  // 0000000058C8: BF800000
  s_nop         0x0000                                  // 0000000058CC: BF800000
  s_nop         0x0000                                  // 0000000058D0: BF800000
  s_nop         0x0000                                  // 0000000058D4: BF800000
  s_nop         0x0000                                  // 0000000058D8: BF800000
  s_nop         0x0000                                  // 0000000058DC: BF800000
  label_1638:
  v_readfirstlane_b32  s5, v20                          // 0000000058E0: 7E0A0514
  v_cmp_eq_u32  vcc, s5, v20                            // 0000000058E4: 7D842805
  s_and_saveexec_b64  s[26:27], vcc                     // 0000000058E8: BE9A246A
  s_cbranch_execz  label_1640                           // 0000000058EC: BF880004
  v_readlane_b32  s5, v3, s5                            // 0000000058F0: 020A0B03
  v_mov_b32     v24, s5                                 // 0000000058F4: 7E300205
  s_andn2_b64   s[24:25], s[24:25], exec                // 0000000058F8: 8A987E18
  s_cbranch_scc0  label_1642                            // 0000000058FC: BF840002
  label_1640:
  s_and_b64     exec, s[26:27], s[24:25]                // 000000005900: 87FE181A
  s_branch      label_1638                              // 000000005904: BF82FFF6
  label_1642:
  s_mov_b64     exec, s[22:23]                          // 000000005908: BEFE0416
  v_cndmask_b32  v24, 0, v24, s[20:21]                  // 00000000590C: D2000018 00523080
  v_lshl_b64    v[25:26], 1, v20                        // 000000005914: D2C20019 00022881
  v_and_b32     v25, exec_lo, v25                       // 00000000591C: 3632327E
  v_and_b32     v26, exec_hi, v26                       // 000000005920: 3634347F
  v_cmp_ne_u64  s[20:21], 0, v[25:26]                   // 000000005924: D1CA0014 00023280
  s_mov_b64     s[22:23], exec                          // 00000000592C: BE96047E
  s_mov_b64     s[24:25], exec                          // 000000005930: BE98047E
  s_nop         0x0000                                  // 000000005934: BF800000
  s_nop         0x0000                                  // 000000005938: BF800000
  s_nop         0x0000                                  // 00000000593C: BF800000
  label_1650:
  v_readfirstlane_b32  s5, v20                          // 000000005940: 7E0A0514
  v_cmp_eq_u32  vcc, s5, v20                            // 000000005944: 7D842805
  s_and_saveexec_b64  s[26:27], vcc                     // 000000005948: BE9A246A
  s_cbranch_execz  label_1658                           // 00000000594C: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000005950: 020A0B4F
  v_mov_b32     v25, s5                                 // 000000005954: 7E320205
  s_andn2_b64   s[24:25], s[24:25], exec                // 000000005958: 8A987E18
  s_cbranch_scc0  label_165A                            // 00000000595C: BF840002
  label_1658:
  s_and_b64     exec, s[26:27], s[24:25]                // 000000005960: 87FE181A
  s_branch      label_1650                              // 000000005964: BF82FFF6
  label_165A:
  s_mov_b64     exec, s[22:23]                          // 000000005968: BEFE0416
  v_cndmask_b32  v25, 0, v25, s[20:21]                  // 00000000596C: D2000019 00523280
  v_lshl_b64    v[26:27], 1, v20                        // 000000005974: D2C2001A 00022881
  v_and_b32     v26, exec_lo, v26                       // 00000000597C: 3634347E
  v_and_b32     v27, exec_hi, v27                       // 000000005980: 3636367F
  v_cmp_ne_u64  s[20:21], 0, v[26:27]                   // 000000005984: D1CA0014 00023480
  s_mov_b64     s[22:23], exec                          // 00000000598C: BE96047E
  s_mov_b64     s[24:25], exec                          // 000000005990: BE98047E
  s_nop         0x0000                                  // 000000005994: BF800000
  s_nop         0x0000                                  // 000000005998: BF800000
  s_nop         0x0000                                  // 00000000599C: BF800000
  label_1668:
  v_readfirstlane_b32  s5, v20                          // 0000000059A0: 7E0A0514
  v_cmp_eq_u32  vcc, s5, v20                            // 0000000059A4: 7D842805
  s_and_saveexec_b64  s[26:27], vcc                     // 0000000059A8: BE9A246A
  s_cbranch_execz  label_1670                           // 0000000059AC: BF880004
  v_readlane_b32  s5, v81, s5                           // 0000000059B0: 020A0B51
  v_mov_b32     v20, s5                                 // 0000000059B4: 7E280205
  s_andn2_b64   s[24:25], s[24:25], exec                // 0000000059B8: 8A987E18
  s_cbranch_scc0  label_1672                            // 0000000059BC: BF840002
  label_1670:
  s_and_b64     exec, s[26:27], s[24:25]                // 0000000059C0: 87FE181A
  s_branch      label_1668                              // 0000000059C4: BF82FFF6
  label_1672:
  s_mov_b64     exec, s[22:23]                          // 0000000059C8: BEFE0416
  v_cndmask_b32  v20, 0, v20, s[20:21]                  // 0000000059CC: D2000014 00522880
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000059D4: BF8C0070
  v_mul_f32     v24, v18, v24                           // 0000000059D8: 10303112
  v_lshl_b64    v[26:27], 1, v19                        // 0000000059DC: D2C2001A 00022681
  v_and_b32     v26, exec_lo, v26                       // 0000000059E4: 3634347E
  v_and_b32     v27, exec_hi, v27                       // 0000000059E8: 3636367F
  v_cmp_ne_u64  s[20:21], 0, v[26:27]                   // 0000000059EC: D1CA0014 00023480
  s_mov_b64     s[22:23], exec                          // 0000000059F4: BE96047E
  s_mov_b64     s[24:25], exec                          // 0000000059F8: BE98047E
  s_nop         0x0000                                  // 0000000059FC: BF800000
  label_1680:
  v_readfirstlane_b32  s5, v19                          // 000000005A00: 7E0A0513
  v_cmp_eq_u32  vcc, s5, v19                            // 000000005A04: 7D842605
  s_and_saveexec_b64  s[26:27], vcc                     // 000000005A08: BE9A246A
  s_cbranch_execz  label_1688                           // 000000005A0C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000005A10: 020A0B51
  v_mov_b32     v26, s5                                 // 000000005A14: 7E340205
  s_andn2_b64   s[24:25], s[24:25], exec                // 000000005A18: 8A987E18
  s_cbranch_scc0  label_168A                            // 000000005A1C: BF840002
  label_1688:
  s_and_b64     exec, s[26:27], s[24:25]                // 000000005A20: 87FE181A
  s_branch      label_1680                              // 000000005A24: BF82FFF6
  label_168A:
  s_mov_b64     exec, s[22:23]                          // 000000005A28: BEFE0416
  v_cndmask_b32  v26, 0, v26, s[20:21]                  // 000000005A2C: D200001A 00523480
  v_lshl_b64    v[27:28], 1, v19                        // 000000005A34: D2C2001B 00022681
  v_and_b32     v27, exec_lo, v27                       // 000000005A3C: 3636367E
  v_and_b32     v28, exec_hi, v28                       // 000000005A40: 3638387F
  v_cmp_ne_u64  s[20:21], 0, v[27:28]                   // 000000005A44: D1CA0014 00023680
  s_mov_b64     s[22:23], exec                          // 000000005A4C: BE96047E
  s_mov_b64     s[24:25], exec                          // 000000005A50: BE98047E
  s_nop         0x0000                                  // 000000005A54: BF800000
  s_nop         0x0000                                  // 000000005A58: BF800000
  s_nop         0x0000                                  // 000000005A5C: BF800000
  label_1698:
  v_readfirstlane_b32  s5, v19                          // 000000005A60: 7E0A0513
  v_cmp_eq_u32  vcc, s5, v19                            // 000000005A64: 7D842605
  s_and_saveexec_b64  s[26:27], vcc                     // 000000005A68: BE9A246A
  s_cbranch_execz  label_16A0                           // 000000005A6C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000005A70: 020A0B09
  v_mov_b32     v27, s5                                 // 000000005A74: 7E360205
  s_andn2_b64   s[24:25], s[24:25], exec                // 000000005A78: 8A987E18
  s_cbranch_scc0  label_16A2                            // 000000005A7C: BF840002
  label_16A0:
  s_and_b64     exec, s[26:27], s[24:25]                // 000000005A80: 87FE181A
  s_branch      label_1698                              // 000000005A84: BF82FFF6
  label_16A2:
  s_mov_b64     exec, s[22:23]                          // 000000005A88: BEFE0416
  v_cndmask_b32  v27, 0, v27, s[20:21]                  // 000000005A8C: D200001B 00523680
  v_mul_f32     v25, v18, v25                           // 000000005A94: 10323312
  v_mul_f32     v20, v18, v20                           // 000000005A98: 10282912
  v_lshl_b64    v[28:29], 1, v19                        // 000000005A9C: D2C2001C 00022681
  v_and_b32     v28, exec_lo, v28                       // 000000005AA4: 3638387E
  v_and_b32     v29, exec_hi, v29                       // 000000005AA8: 363A3A7F
  v_cmp_ne_u64  s[20:21], 0, v[28:29]                   // 000000005AAC: D1CA0014 00023880
  s_mov_b64     s[22:23], exec                          // 000000005AB4: BE96047E
  s_mov_b64     s[24:25], exec                          // 000000005AB8: BE98047E
  s_nop         0x0000                                  // 000000005ABC: BF800000
  label_16B0:
  v_readfirstlane_b32  s5, v19                          // 000000005AC0: 7E0A0513
  v_cmp_eq_u32  vcc, s5, v19                            // 000000005AC4: 7D842605
  s_and_saveexec_b64  s[26:27], vcc                     // 000000005AC8: BE9A246A
  s_cbranch_execz  label_16B8                           // 000000005ACC: BF880004
  v_readlane_b32  s5, v10, s5                           // 000000005AD0: 020A0B0A
  v_mov_b32     v19, s5                                 // 000000005AD4: 7E260205
  s_andn2_b64   s[24:25], s[24:25], exec                // 000000005AD8: 8A987E18
  s_cbranch_scc0  label_16BA                            // 000000005ADC: BF840002
  label_16B8:
  s_and_b64     exec, s[26:27], s[24:25]                // 000000005AE0: 87FE181A
  s_branch      label_16B0                              // 000000005AE4: BF82FFF6
  label_16BA:
  s_mov_b64     exec, s[22:23]                          // 000000005AE8: BEFE0416
  v_cndmask_b32  v19, 0, v19, s[20:21]                  // 000000005AEC: D2000013 00522680
  v_lshl_b64    v[28:29], 1, v23                        // 000000005AF4: D2C2001C 00022E81
  v_and_b32     v28, exec_lo, v28                       // 000000005AFC: 3638387E
  v_and_b32     v29, exec_hi, v29                       // 000000005B00: 363A3A7F
  v_cmp_ne_u64  s[20:21], 0, v[28:29]                   // 000000005B04: D1CA0014 00023880
  s_mov_b64     s[22:23], exec                          // 000000005B0C: BE96047E
  s_mov_b64     s[24:25], exec                          // 000000005B10: BE98047E
  s_nop         0x0000                                  // 000000005B14: BF800000
  s_nop         0x0000                                  // 000000005B18: BF800000
  s_nop         0x0000                                  // 000000005B1C: BF800000
  label_16C8:
  v_readfirstlane_b32  s5, v23                          // 000000005B20: 7E0A0517
  v_cmp_eq_u32  vcc, s5, v23                            // 000000005B24: 7D842E05
  s_and_saveexec_b64  s[26:27], vcc                     // 000000005B28: BE9A246A
  s_cbranch_execz  label_16D0                           // 000000005B2C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000005B30: 020A0B51
  v_mov_b32     v28, s5                                 // 000000005B34: 7E380205
  s_andn2_b64   s[24:25], s[24:25], exec                // 000000005B38: 8A987E18
  s_cbranch_scc0  label_16D2                            // 000000005B3C: BF840002
  label_16D0:
  s_and_b64     exec, s[26:27], s[24:25]                // 000000005B40: 87FE181A
  s_branch      label_16C8                              // 000000005B44: BF82FFF6
  label_16D2:
  s_mov_b64     exec, s[22:23]                          // 000000005B48: BEFE0416
  v_cndmask_b32  v28, 0, v28, s[20:21]                  // 000000005B4C: D200001C 00523880
  v_lshl_b64    v[29:30], 1, v23                        // 000000005B54: D2C2001D 00022E81
  v_and_b32     v29, exec_lo, v29                       // 000000005B5C: 363A3A7E
  v_and_b32     v30, exec_hi, v30                       // 000000005B60: 363C3C7F
  v_cmp_ne_u64  s[20:21], 0, v[29:30]                   // 000000005B64: D1CA0014 00023A80
  s_mov_b64     s[22:23], exec                          // 000000005B6C: BE96047E
  s_mov_b64     s[24:25], exec                          // 000000005B70: BE98047E
  s_nop         0x0000                                  // 000000005B74: BF800000
  s_nop         0x0000                                  // 000000005B78: BF800000
  s_nop         0x0000                                  // 000000005B7C: BF800000
  label_16E0:
  v_readfirstlane_b32  s5, v23                          // 000000005B80: 7E0A0517
  v_cmp_eq_u32  vcc, s5, v23                            // 000000005B84: 7D842E05
  s_and_saveexec_b64  s[26:27], vcc                     // 000000005B88: BE9A246A
  s_cbranch_execz  label_16E8                           // 000000005B8C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000005B90: 020A0B09
  v_mov_b32     v29, s5                                 // 000000005B94: 7E3A0205
  s_andn2_b64   s[24:25], s[24:25], exec                // 000000005B98: 8A987E18
  s_cbranch_scc0  label_16EA                            // 000000005B9C: BF840002
  label_16E8:
  s_and_b64     exec, s[26:27], s[24:25]                // 000000005BA0: 87FE181A
  s_branch      label_16E0                              // 000000005BA4: BF82FFF6
  label_16EA:
  s_mov_b64     exec, s[22:23]                          // 000000005BA8: BEFE0416
  v_cndmask_b32  v29, 0, v29, s[20:21]                  // 000000005BAC: D200001D 00523A80
  v_lshl_b64    v[30:31], 1, v23                        // 000000005BB4: D2C2001E 00022E81
  v_and_b32     v30, exec_lo, v30                       // 000000005BBC: 363C3C7E
  v_and_b32     v31, exec_hi, v31                       // 000000005BC0: 363E3E7F
  v_cmp_ne_u64  s[20:21], 0, v[30:31]                   // 000000005BC4: D1CA0014 00023C80
  s_mov_b64     s[22:23], exec                          // 000000005BCC: BE96047E
  s_mov_b64     s[24:25], exec                          // 000000005BD0: BE98047E
  s_nop         0x0000                                  // 000000005BD4: BF800000
  s_nop         0x0000                                  // 000000005BD8: BF800000
  s_nop         0x0000                                  // 000000005BDC: BF800000
  label_16F8:
  v_readfirstlane_b32  s5, v23                          // 000000005BE0: 7E0A0517
  v_cmp_eq_u32  vcc, s5, v23                            // 000000005BE4: 7D842E05
  s_and_saveexec_b64  s[26:27], vcc                     // 000000005BE8: BE9A246A
  s_cbranch_execz  label_1700                           // 000000005BEC: BF880004
  v_readlane_b32  s5, v10, s5                           // 000000005BF0: 020A0B0A
  v_mov_b32     v23, s5                                 // 000000005BF4: 7E2E0205
  s_andn2_b64   s[24:25], s[24:25], exec                // 000000005BF8: 8A987E18
  s_cbranch_scc0  label_1702                            // 000000005BFC: BF840002
  label_1700:
  s_and_b64     exec, s[26:27], s[24:25]                // 000000005C00: 87FE181A
  s_branch      label_16F8                              // 000000005C04: BF82FFF6
  label_1702:
  s_mov_b64     exec, s[22:23]                          // 000000005C08: BEFE0416
  v_cndmask_b32  v23, 0, v23, s[20:21]                  // 000000005C0C: D2000017 00522E80
  s_mov_b64     s[20:21], exec                          // 000000005C14: BE94047E
  s_andn2_b64   exec, s[20:21], s[18:19]                // 000000005C18: 8AFE1214
  v_mul_f32     v13, v18, v15                           // 000000005C1C: 101A1F12
  s_andn2_b64   exec, s[20:21], exec                    // 000000005C20: 8AFE7E14
  v_mul_f32     v13, v18, v13                           // 000000005C24: 101A1B12
  v_mul_f32     v15, v18, v16                           // 000000005C28: 101E2112
  v_cmp_gt_i32  vcc, 57, v2                             // 000000005C2C: 7D0804B9
  v_cndmask_b32  v13, v13, v15, vcc                     // 000000005C30: 001A1F0D
  s_mov_b64     exec, s[20:21]                          // 000000005C34: BEFE0414
  v_cmp_lt_i32  s[20:21], v2, 56                        // 000000005C38: D1020014 00017102
  v_cndmask_b32  v15, v20, v25, s[20:21]                // 000000005C40: D200000F 00523314
  v_cmp_gt_i32  vcc, 25, v2                             // 000000005C48: 7D080499
  v_cndmask_b32  v15, v15, v24, vcc                     // 000000005C4C: 001E310F
  v_add_i32     v16, vcc, 2, v5                         // 000000005C50: 4A200A82
  v_and_b32     v16, 63, v16                            // 000000005C54: 362020BF
  v_lshl_b64    v[24:25], 1, v16                        // 000000005C58: D2C20018 00022081
  v_and_b32     v24, exec_lo, v24                       // 000000005C60: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 000000005C64: 3632327F
  v_cmp_ne_u64  s[22:23], 0, v[24:25]                   // 000000005C68: D1CA0016 00023080
  s_mov_b64     s[24:25], exec                          // 000000005C70: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000005C74: BE9A047E
  s_nop         0x0000                                  // 000000005C78: BF800000
  s_nop         0x0000                                  // 000000005C7C: BF800000
  label_1720:
  v_readfirstlane_b32  s5, v16                          // 000000005C80: 7E0A0510
  v_cmp_eq_u32  vcc, s5, v16                            // 000000005C84: 7D842005
  s_and_saveexec_b64  s[28:29], vcc                     // 000000005C88: BE9C246A
  s_cbranch_execz  label_1728                           // 000000005C8C: BF880004
  v_readlane_b32  s5, v3, s5                            // 000000005C90: 020A0B03
  v_mov_b32     v20, s5                                 // 000000005C94: 7E280205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000005C98: 8A9A7E1A
  s_cbranch_scc0  label_172A                            // 000000005C9C: BF840002
  label_1728:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000005CA0: 87FE1A1C
  s_branch      label_1720                              // 000000005CA4: BF82FFF6
  label_172A:
  s_mov_b64     exec, s[24:25]                          // 000000005CA8: BEFE0418
  v_cndmask_b32  v20, 0, v20, s[22:23]                  // 000000005CAC: D2000014 005A2880
  v_lshl_b64    v[24:25], 1, v16                        // 000000005CB4: D2C20018 00022081
  v_and_b32     v24, exec_lo, v24                       // 000000005CBC: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 000000005CC0: 3632327F
  v_cmp_ne_u64  s[22:23], 0, v[24:25]                   // 000000005CC4: D1CA0016 00023080
  s_mov_b64     s[24:25], exec                          // 000000005CCC: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000005CD0: BE9A047E
  s_nop         0x0000                                  // 000000005CD4: BF800000
  s_nop         0x0000                                  // 000000005CD8: BF800000
  s_nop         0x0000                                  // 000000005CDC: BF800000
  label_1738:
  v_readfirstlane_b32  s5, v16                          // 000000005CE0: 7E0A0510
  v_cmp_eq_u32  vcc, s5, v16                            // 000000005CE4: 7D842005
  s_and_saveexec_b64  s[28:29], vcc                     // 000000005CE8: BE9C246A
  s_cbranch_execz  label_1740                           // 000000005CEC: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000005CF0: 020A0B4F
  v_mov_b32     v24, s5                                 // 000000005CF4: 7E300205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000005CF8: 8A9A7E1A
  s_cbranch_scc0  label_1742                            // 000000005CFC: BF840002
  label_1740:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000005D00: 87FE1A1C
  s_branch      label_1738                              // 000000005D04: BF82FFF6
  label_1742:
  s_mov_b64     exec, s[24:25]                          // 000000005D08: BEFE0418
  v_cndmask_b32  v24, 0, v24, s[22:23]                  // 000000005D0C: D2000018 005A3080
  v_lshl_b64    v[30:31], 1, v16                        // 000000005D14: D2C2001E 00022081
  v_and_b32     v30, exec_lo, v30                       // 000000005D1C: 363C3C7E
  v_and_b32     v31, exec_hi, v31                       // 000000005D20: 363E3E7F
  v_cmp_ne_u64  s[22:23], 0, v[30:31]                   // 000000005D24: D1CA0016 00023C80
  s_mov_b64     s[24:25], exec                          // 000000005D2C: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000005D30: BE9A047E
  s_nop         0x0000                                  // 000000005D34: BF800000
  s_nop         0x0000                                  // 000000005D38: BF800000
  s_nop         0x0000                                  // 000000005D3C: BF800000
  label_1750:
  v_readfirstlane_b32  s5, v16                          // 000000005D40: 7E0A0510
  v_cmp_eq_u32  vcc, s5, v16                            // 000000005D44: 7D842005
  s_and_saveexec_b64  s[28:29], vcc                     // 000000005D48: BE9C246A
  s_cbranch_execz  label_1758                           // 000000005D4C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000005D50: 020A0B51
  v_mov_b32     v16, s5                                 // 000000005D54: 7E200205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000005D58: 8A9A7E1A
  s_cbranch_scc0  label_175A                            // 000000005D5C: BF840002
  label_1758:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000005D60: 87FE1A1C
  s_branch      label_1750                              // 000000005D64: BF82FFF6
  label_175A:
  s_mov_b64     exec, s[24:25]                          // 000000005D68: BEFE0418
  s_add_u32     s24, s14, 8                             // 000000005D6C: 8018880E
  s_addc_u32    s25, s15, 0                             // 000000005D70: 8219800F
  v_mov_b32     v34, s24                                // 000000005D74: 7E440218
  v_mov_b32     v35, s25                                // 000000005D78: 7E460219
  v_add_i32     v31, vcc, 10, v5                        // 000000005D7C: 4A3E0A8A
  v_add_i32     v32, vcc, 18, v5                        // 000000005D80: 4A400A92
  v_and_b32     v31, 63, v31                            // 000000005D84: 363E3EBF
  v_add_i32     v33, vcc, 26, v5                        // 000000005D88: 4A420A9A
  flat_load_dword  v25, v[34:35]                        // 000000005D8C: DC300000 19000022
  v_cndmask_b32  v16, 0, v16, s[22:23]                  // 000000005D94: D2000010 005A2080
  v_and_b32     v30, 63, v32                            // 000000005D9C: 363C40BF
  v_and_b32     v32, 63, v33                            // 000000005DA0: 364042BF
  v_lshl_b64    v[33:34], 1, v31                        // 000000005DA4: D2C20021 00023E81
  v_and_b32     v33, exec_lo, v33                       // 000000005DAC: 3642427E
  v_and_b32     v34, exec_hi, v34                       // 000000005DB0: 3644447F
  v_cmp_ne_u64  s[22:23], 0, v[33:34]                   // 000000005DB4: D1CA0016 00024280
  s_mov_b64     s[24:25], exec                          // 000000005DBC: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000005DC0: BE9A047E
  s_nop         0x0000                                  // 000000005DC4: BF800000
  s_nop         0x0000                                  // 000000005DC8: BF800000
  s_nop         0x0000                                  // 000000005DCC: BF800000
  s_nop         0x0000                                  // 000000005DD0: BF800000
  s_nop         0x0000                                  // 000000005DD4: BF800000
  s_nop         0x0000                                  // 000000005DD8: BF800000
  s_nop         0x0000                                  // 000000005DDC: BF800000
  label_1778:
  v_readfirstlane_b32  s5, v31                          // 000000005DE0: 7E0A051F
  v_cmp_eq_u32  vcc, s5, v31                            // 000000005DE4: 7D843E05
  s_and_saveexec_b64  s[28:29], vcc                     // 000000005DE8: BE9C246A
  s_cbranch_execz  label_1780                           // 000000005DEC: BF880004
  v_readlane_b32  s5, v3, s5                            // 000000005DF0: 020A0B03
  v_mov_b32     v33, s5                                 // 000000005DF4: 7E420205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000005DF8: 8A9A7E1A
  s_cbranch_scc0  label_1782                            // 000000005DFC: BF840002
  label_1780:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000005E00: 87FE1A1C
  s_branch      label_1778                              // 000000005E04: BF82FFF6
  label_1782:
  s_mov_b64     exec, s[24:25]                          // 000000005E08: BEFE0418
  v_cndmask_b32  v33, 0, v33, s[22:23]                  // 000000005E0C: D2000021 005A4280
  v_lshl_b64    v[34:35], 1, v31                        // 000000005E14: D2C20022 00023E81
  v_and_b32     v34, exec_lo, v34                       // 000000005E1C: 3644447E
  v_and_b32     v35, exec_hi, v35                       // 000000005E20: 3646467F
  v_cmp_ne_u64  s[22:23], 0, v[34:35]                   // 000000005E24: D1CA0016 00024480
  s_mov_b64     s[24:25], exec                          // 000000005E2C: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000005E30: BE9A047E
  s_nop         0x0000                                  // 000000005E34: BF800000
  s_nop         0x0000                                  // 000000005E38: BF800000
  s_nop         0x0000                                  // 000000005E3C: BF800000
  label_1790:
  v_readfirstlane_b32  s5, v31                          // 000000005E40: 7E0A051F
  v_cmp_eq_u32  vcc, s5, v31                            // 000000005E44: 7D843E05
  s_and_saveexec_b64  s[28:29], vcc                     // 000000005E48: BE9C246A
  s_cbranch_execz  label_1798                           // 000000005E4C: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000005E50: 020A0B4F
  v_mov_b32     v34, s5                                 // 000000005E54: 7E440205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000005E58: 8A9A7E1A
  s_cbranch_scc0  label_179A                            // 000000005E5C: BF840002
  label_1798:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000005E60: 87FE1A1C
  s_branch      label_1790                              // 000000005E64: BF82FFF6
  label_179A:
  s_mov_b64     exec, s[24:25]                          // 000000005E68: BEFE0418
  v_cndmask_b32  v34, 0, v34, s[22:23]                  // 000000005E6C: D2000022 005A4480
  v_lshl_b64    v[35:36], 1, v31                        // 000000005E74: D2C20023 00023E81
  v_and_b32     v35, exec_lo, v35                       // 000000005E7C: 3646467E
  v_and_b32     v36, exec_hi, v36                       // 000000005E80: 3648487F
  v_cmp_ne_u64  s[22:23], 0, v[35:36]                   // 000000005E84: D1CA0016 00024680
  s_mov_b64     s[24:25], exec                          // 000000005E8C: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000005E90: BE9A047E
  s_nop         0x0000                                  // 000000005E94: BF800000
  s_nop         0x0000                                  // 000000005E98: BF800000
  s_nop         0x0000                                  // 000000005E9C: BF800000
  label_17A8:
  v_readfirstlane_b32  s5, v31                          // 000000005EA0: 7E0A051F
  v_cmp_eq_u32  vcc, s5, v31                            // 000000005EA4: 7D843E05
  s_and_saveexec_b64  s[28:29], vcc                     // 000000005EA8: BE9C246A
  s_cbranch_execz  label_17B0                           // 000000005EAC: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000005EB0: 020A0B51
  v_mov_b32     v31, s5                                 // 000000005EB4: 7E3E0205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000005EB8: 8A9A7E1A
  s_cbranch_scc0  label_17B2                            // 000000005EBC: BF840002
  label_17B0:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000005EC0: 87FE1A1C
  s_branch      label_17A8                              // 000000005EC4: BF82FFF6
  label_17B2:
  s_mov_b64     exec, s[24:25]                          // 000000005EC8: BEFE0418
  v_cndmask_b32  v31, 0, v31, s[22:23]                  // 000000005ECC: D200001F 005A3E80
  v_lshl_b64    v[35:36], 1, v30                        // 000000005ED4: D2C20023 00023C81
  v_and_b32     v35, exec_lo, v35                       // 000000005EDC: 3646467E
  v_and_b32     v36, exec_hi, v36                       // 000000005EE0: 3648487F
  v_cmp_ne_u64  s[22:23], 0, v[35:36]                   // 000000005EE4: D1CA0016 00024680
  s_mov_b64     s[24:25], exec                          // 000000005EEC: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000005EF0: BE9A047E
  s_nop         0x0000                                  // 000000005EF4: BF800000
  s_nop         0x0000                                  // 000000005EF8: BF800000
  s_nop         0x0000                                  // 000000005EFC: BF800000
  label_17C0:
  v_readfirstlane_b32  s5, v30                          // 000000005F00: 7E0A051E
  v_cmp_eq_u32  vcc, s5, v30                            // 000000005F04: 7D843C05
  s_and_saveexec_b64  s[28:29], vcc                     // 000000005F08: BE9C246A
  s_cbranch_execz  label_17C8                           // 000000005F0C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000005F10: 020A0B51
  v_mov_b32     v35, s5                                 // 000000005F14: 7E460205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000005F18: 8A9A7E1A
  s_cbranch_scc0  label_17CA                            // 000000005F1C: BF840002
  label_17C8:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000005F20: 87FE1A1C
  s_branch      label_17C0                              // 000000005F24: BF82FFF6
  label_17CA:
  s_mov_b64     exec, s[24:25]                          // 000000005F28: BEFE0418
  v_cndmask_b32  v35, 0, v35, s[22:23]                  // 000000005F2C: D2000023 005A4680
  v_lshl_b64    v[36:37], 1, v30                        // 000000005F34: D2C20024 00023C81
  v_and_b32     v36, exec_lo, v36                       // 000000005F3C: 3648487E
  v_and_b32     v37, exec_hi, v37                       // 000000005F40: 364A4A7F
  v_cmp_ne_u64  s[22:23], 0, v[36:37]                   // 000000005F44: D1CA0016 00024880
  s_mov_b64     s[24:25], exec                          // 000000005F4C: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000005F50: BE9A047E
  s_nop         0x0000                                  // 000000005F54: BF800000
  s_nop         0x0000                                  // 000000005F58: BF800000
  s_nop         0x0000                                  // 000000005F5C: BF800000
  label_17D8:
  v_readfirstlane_b32  s5, v30                          // 000000005F60: 7E0A051E
  v_cmp_eq_u32  vcc, s5, v30                            // 000000005F64: 7D843C05
  s_and_saveexec_b64  s[28:29], vcc                     // 000000005F68: BE9C246A
  s_cbranch_execz  label_17E0                           // 000000005F6C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000005F70: 020A0B09
  v_mov_b32     v36, s5                                 // 000000005F74: 7E480205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000005F78: 8A9A7E1A
  s_cbranch_scc0  label_17E2                            // 000000005F7C: BF840002
  label_17E0:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000005F80: 87FE1A1C
  s_branch      label_17D8                              // 000000005F84: BF82FFF6
  label_17E2:
  s_mov_b64     exec, s[24:25]                          // 000000005F88: BEFE0418
  v_cndmask_b32  v36, 0, v36, s[22:23]                  // 000000005F8C: D2000024 005A4880
  v_lshl_b64    v[37:38], 1, v30                        // 000000005F94: D2C20025 00023C81
  v_and_b32     v37, exec_lo, v37                       // 000000005F9C: 364A4A7E
  v_and_b32     v38, exec_hi, v38                       // 000000005FA0: 364C4C7F
  v_cmp_ne_u64  s[22:23], 0, v[37:38]                   // 000000005FA4: D1CA0016 00024A80
  s_mov_b64     s[24:25], exec                          // 000000005FAC: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000005FB0: BE9A047E
  s_nop         0x0000                                  // 000000005FB4: BF800000
  s_nop         0x0000                                  // 000000005FB8: BF800000
  s_nop         0x0000                                  // 000000005FBC: BF800000
  label_17F0:
  v_readfirstlane_b32  s5, v30                          // 000000005FC0: 7E0A051E
  v_cmp_eq_u32  vcc, s5, v30                            // 000000005FC4: 7D843C05
  s_and_saveexec_b64  s[28:29], vcc                     // 000000005FC8: BE9C246A
  s_cbranch_execz  label_17F8                           // 000000005FCC: BF880004
  v_readlane_b32  s5, v10, s5                           // 000000005FD0: 020A0B0A
  v_mov_b32     v37, s5                                 // 000000005FD4: 7E4A0205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000005FD8: 8A9A7E1A
  s_cbranch_scc0  label_17FA                            // 000000005FDC: BF840002
  label_17F8:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000005FE0: 87FE1A1C
  s_branch      label_17F0                              // 000000005FE4: BF82FFF6
  label_17FA:
  s_mov_b64     exec, s[24:25]                          // 000000005FE8: BEFE0418
  v_cndmask_b32  v37, 0, v37, s[22:23]                  // 000000005FEC: D2000025 005A4A80
  v_lshl_b64    v[38:39], 1, v32                        // 000000005FF4: D2C20026 00024081
  v_and_b32     v38, exec_lo, v38                       // 000000005FFC: 364C4C7E
  v_and_b32     v39, exec_hi, v39                       // 000000006000: 364E4E7F
  v_cmp_ne_u64  s[22:23], 0, v[38:39]                   // 000000006004: D1CA0016 00024C80
  s_mov_b64     s[24:25], exec                          // 00000000600C: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000006010: BE9A047E
  s_nop         0x0000                                  // 000000006014: BF800000
  s_nop         0x0000                                  // 000000006018: BF800000
  s_nop         0x0000                                  // 00000000601C: BF800000
  label_1808:
  v_readfirstlane_b32  s5, v32                          // 000000006020: 7E0A0520
  v_cmp_eq_u32  vcc, s5, v32                            // 000000006024: 7D844005
  s_and_saveexec_b64  s[28:29], vcc                     // 000000006028: BE9C246A
  s_cbranch_execz  label_1810                           // 00000000602C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000006030: 020A0B51
  v_mov_b32     v38, s5                                 // 000000006034: 7E4C0205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000006038: 8A9A7E1A
  s_cbranch_scc0  label_1812                            // 00000000603C: BF840002
  label_1810:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000006040: 87FE1A1C
  s_branch      label_1808                              // 000000006044: BF82FFF6
  label_1812:
  s_mov_b64     exec, s[24:25]                          // 000000006048: BEFE0418
  v_cndmask_b32  v38, 0, v38, s[22:23]                  // 00000000604C: D2000026 005A4C80
  v_lshl_b64    v[39:40], 1, v32                        // 000000006054: D2C20027 00024081
  v_and_b32     v39, exec_lo, v39                       // 00000000605C: 364E4E7E
  v_and_b32     v40, exec_hi, v40                       // 000000006060: 3650507F
  v_cmp_ne_u64  s[22:23], 0, v[39:40]                   // 000000006064: D1CA0016 00024E80
  s_mov_b64     s[24:25], exec                          // 00000000606C: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000006070: BE9A047E
  s_nop         0x0000                                  // 000000006074: BF800000
  s_nop         0x0000                                  // 000000006078: BF800000
  s_nop         0x0000                                  // 00000000607C: BF800000
  label_1820:
  v_readfirstlane_b32  s5, v32                          // 000000006080: 7E0A0520
  v_cmp_eq_u32  vcc, s5, v32                            // 000000006084: 7D844005
  s_and_saveexec_b64  s[28:29], vcc                     // 000000006088: BE9C246A
  s_cbranch_execz  label_1828                           // 00000000608C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000006090: 020A0B09
  v_mov_b32     v39, s5                                 // 000000006094: 7E4E0205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000006098: 8A9A7E1A
  s_cbranch_scc0  label_182A                            // 00000000609C: BF840002
  label_1828:
  s_and_b64     exec, s[28:29], s[26:27]                // 0000000060A0: 87FE1A1C
  s_branch      label_1820                              // 0000000060A4: BF82FFF6
  label_182A:
  s_mov_b64     exec, s[24:25]                          // 0000000060A8: BEFE0418
  v_cndmask_b32  v39, 0, v39, s[22:23]                  // 0000000060AC: D2000027 005A4E80
  v_lshl_b64    v[40:41], 1, v32                        // 0000000060B4: D2C20028 00024081
  v_and_b32     v40, exec_lo, v40                       // 0000000060BC: 3650507E
  v_and_b32     v41, exec_hi, v41                       // 0000000060C0: 3652527F
  v_cmp_ne_u64  s[22:23], 0, v[40:41]                   // 0000000060C4: D1CA0016 00025080
  s_mov_b64     s[24:25], exec                          // 0000000060CC: BE98047E
  s_mov_b64     s[26:27], exec                          // 0000000060D0: BE9A047E
  s_nop         0x0000                                  // 0000000060D4: BF800000
  s_nop         0x0000                                  // 0000000060D8: BF800000
  s_nop         0x0000                                  // 0000000060DC: BF800000
  label_1838:
  v_readfirstlane_b32  s5, v32                          // 0000000060E0: 7E0A0520
  v_cmp_eq_u32  vcc, s5, v32                            // 0000000060E4: 7D844005
  s_and_saveexec_b64  s[28:29], vcc                     // 0000000060E8: BE9C246A
  s_cbranch_execz  label_1840                           // 0000000060EC: BF880004
  v_readlane_b32  s5, v10, s5                           // 0000000060F0: 020A0B0A
  v_mov_b32     v40, s5                                 // 0000000060F4: 7E500205
  s_andn2_b64   s[26:27], s[26:27], exec                // 0000000060F8: 8A9A7E1A
  s_cbranch_scc0  label_1842                            // 0000000060FC: BF840002
  label_1840:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000006100: 87FE1A1C
  s_branch      label_1838                              // 000000006104: BF82FFF6
  label_1842:
  s_mov_b64     exec, s[24:25]                          // 000000006108: BEFE0418
  v_cndmask_b32  v40, 0, v40, s[22:23]                  // 00000000610C: D2000028 005A5080
  s_mov_b64     s[22:23], exec                          // 000000006114: BE96047E
  s_andn2_b64   exec, s[22:23], s[18:19]                // 000000006118: 8AFE1216
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000611C: BF8C0070
  v_mul_f32     v16, v25, v20                           // 000000006120: 10202919
  s_andn2_b64   exec, s[22:23], exec                    // 000000006124: 8AFE7E16
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000006128: BF8C0070
  v_mul_f32     v16, v25, v16                           // 00000000612C: 10202119
  v_mul_f32     v20, v25, v24                           // 000000006130: 10283119
  v_cndmask_b32  v16, v16, v20, s[20:21]                // 000000006134: D2000010 00522910
  s_and_b64     exec, s[22:23], s[16:17]                // 00000000613C: 87FE1016
  v_mul_f32     v20, v25, v33                           // 000000006140: 10284319
  v_mul_f32     v24, v25, v35                           // 000000006144: 10304719
  s_andn2_b64   exec, s[22:23], exec                    // 000000006148: 8AFE7E16
  v_mul_f32     v20, v25, v34                           // 00000000614C: 10284519
  s_cbranch_execz  label_185C                           // 000000006150: BF880007
  v_mul_f32     v24, v25, v31                           // 000000006154: 10303F19
  v_mul_f32     v31, v25, v36                           // 000000006158: 103E4919
  v_mul_f32     v33, v25, v37                           // 00000000615C: 10424B19
  v_cndmask_b32  v20, v24, v20, s[20:21]                // 000000006160: D2000014 00522918
  v_cmp_gt_i32  vcc, 50, v2                             // 000000006168: 7D0804B2
  v_cndmask_b32  v24, v33, v31, vcc                     // 00000000616C: 00303F21
  label_185C:
  s_mov_b64     exec, s[22:23]                          // 000000006170: BEFE0416
  v_add_f32     v11, v6, v15                            // 000000006174: 06161F06
  v_cmp_lt_i32  s[18:19], v2, 18                        // 000000006178: D1020012 00012502
  v_cndmask_b32  v7, 0, -1, s[18:19]                    // 000000006180: D2000007 00498280
  v_lshl_b64    v[33:34], 1, v30                        // 000000006188: D2C20021 00023C81
  v_and_b32     v33, exec_lo, v33                       // 000000006190: 3642427E
  v_and_b32     v34, exec_hi, v34                       // 000000006194: 3644447F
  v_cmp_ne_u64  s[20:21], 0, v[33:34]                   // 000000006198: D1CA0014 00024280
  s_mov_b64     s[22:23], exec                          // 0000000061A0: BE96047E
  s_mov_b64     s[24:25], exec                          // 0000000061A4: BE98047E
  s_nop         0x0000                                  // 0000000061A8: BF800000
  s_nop         0x0000                                  // 0000000061AC: BF800000
  s_nop         0x0000                                  // 0000000061B0: BF800000
  s_nop         0x0000                                  // 0000000061B4: BF800000
  s_nop         0x0000                                  // 0000000061B8: BF800000
  s_nop         0x0000                                  // 0000000061BC: BF800000
  label_1870:
  v_readfirstlane_b32  s5, v30                          // 0000000061C0: 7E0A051E
  v_cmp_eq_u32  vcc, s5, v30                            // 0000000061C4: 7D843C05
  s_and_saveexec_b64  s[26:27], vcc                     // 0000000061C8: BE9A246A
  s_cbranch_execz  label_1878                           // 0000000061CC: BF880004
  v_readlane_b32  s5, v3, s5                            // 0000000061D0: 020A0B03
  v_mov_b32     v31, s5                                 // 0000000061D4: 7E3E0205
  s_andn2_b64   s[24:25], s[24:25], exec                // 0000000061D8: 8A987E18
  s_cbranch_scc0  label_187A                            // 0000000061DC: BF840002
  label_1878:
  s_and_b64     exec, s[26:27], s[24:25]                // 0000000061E0: 87FE181A
  s_branch      label_1870                              // 0000000061E4: BF82FFF6
  label_187A:
  s_mov_b64     exec, s[22:23]                          // 0000000061E8: BEFE0416
  v_cndmask_b32  v31, 0, v31, s[20:21]                  // 0000000061EC: D200001F 00523E80
  v_lshl_b64    v[33:34], 1, v30                        // 0000000061F4: D2C20021 00023C81
  v_and_b32     v33, exec_lo, v33                       // 0000000061FC: 3642427E
  v_and_b32     v34, exec_hi, v34                       // 000000006200: 3644447F
  v_cmp_ne_u64  s[20:21], 0, v[33:34]                   // 000000006204: D1CA0014 00024280
  s_mov_b64     s[22:23], exec                          // 00000000620C: BE96047E
  s_mov_b64     s[24:25], exec                          // 000000006210: BE98047E
  s_nop         0x0000                                  // 000000006214: BF800000
  s_nop         0x0000                                  // 000000006218: BF800000
  s_nop         0x0000                                  // 00000000621C: BF800000
  label_1888:
  v_readfirstlane_b32  s5, v30                          // 000000006220: 7E0A051E
  v_cmp_eq_u32  vcc, s5, v30                            // 000000006224: 7D843C05
  s_and_saveexec_b64  s[26:27], vcc                     // 000000006228: BE9A246A
  s_cbranch_execz  label_1890                           // 00000000622C: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000006230: 020A0B4F
  v_mov_b32     v33, s5                                 // 000000006234: 7E420205
  s_andn2_b64   s[24:25], s[24:25], exec                // 000000006238: 8A987E18
  s_cbranch_scc0  label_1892                            // 00000000623C: BF840002
  label_1890:
  s_and_b64     exec, s[26:27], s[24:25]                // 000000006240: 87FE181A
  s_branch      label_1888                              // 000000006244: BF82FFF6
  label_1892:
  s_mov_b64     exec, s[22:23]                          // 000000006248: BEFE0416
  v_cndmask_b32  v33, 0, v33, s[20:21]                  // 00000000624C: D2000021 00524280
  v_lshl_b64    v[34:35], 1, v30                        // 000000006254: D2C20022 00023C81
  v_and_b32     v34, exec_lo, v34                       // 00000000625C: 3644447E
  v_and_b32     v35, exec_hi, v35                       // 000000006260: 3646467F
  v_cmp_ne_u64  s[20:21], 0, v[34:35]                   // 000000006264: D1CA0014 00024480
  s_mov_b64     s[22:23], exec                          // 00000000626C: BE96047E
  s_mov_b64     s[24:25], exec                          // 000000006270: BE98047E
  s_nop         0x0000                                  // 000000006274: BF800000
  s_nop         0x0000                                  // 000000006278: BF800000
  s_nop         0x0000                                  // 00000000627C: BF800000
  label_18A0:
  v_readfirstlane_b32  s5, v30                          // 000000006280: 7E0A051E
  v_cmp_eq_u32  vcc, s5, v30                            // 000000006284: 7D843C05
  s_and_saveexec_b64  s[26:27], vcc                     // 000000006288: BE9A246A
  s_cbranch_execz  label_18A8                           // 00000000628C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000006290: 020A0B51
  v_mov_b32     v30, s5                                 // 000000006294: 7E3C0205
  s_andn2_b64   s[24:25], s[24:25], exec                // 000000006298: 8A987E18
  s_cbranch_scc0  label_18AA                            // 00000000629C: BF840002
  label_18A8:
  s_and_b64     exec, s[26:27], s[24:25]                // 0000000062A0: 87FE181A
  s_branch      label_18A0                              // 0000000062A4: BF82FFF6
  label_18AA:
  s_mov_b64     exec, s[22:23]                          // 0000000062A8: BEFE0416
  s_add_u32     s22, s14, 12                            // 0000000062AC: 80168C0E
  s_addc_u32    s23, s15, 0                             // 0000000062B0: 8217800F
  v_mov_b32     v34, s22                                // 0000000062B4: 7E440216
  v_mov_b32     v35, s23                                // 0000000062B8: 7E460217
  v_add_i32     v36, vcc, 42, v5                        // 0000000062BC: 4A480AAA
  v_add_i32     v37, vcc, 34, v5                        // 0000000062C0: 4A4A0AA2
  flat_load_dword  v34, v[34:35]                        // 0000000062C4: DC300000 22000022
  v_cndmask_b32  v30, 0, v30, s[20:21]                  // 0000000062CC: D200001E 00523C80
  s_xor_b64     s[20:21], s[16:17], -1                  // 0000000062D4: 8994C110
  v_and_b32     v35, 63, v37                            // 0000000062D8: 36464ABF
  v_and_b32     v36, 63, v36                            // 0000000062DC: 364848BF
  v_lshl_b64    v[41:42], 1, v32                        // 0000000062E0: D2C20029 00024081
  v_and_b32     v41, exec_lo, v41                       // 0000000062E8: 3652527E
  v_and_b32     v42, exec_hi, v42                       // 0000000062EC: 3654547F
  v_cmp_ne_u64  s[22:23], 0, v[41:42]                   // 0000000062F0: D1CA0016 00025280
  s_mov_b64     s[24:25], exec                          // 0000000062F8: BE98047E
  s_mov_b64     s[26:27], exec                          // 0000000062FC: BE9A047E
  label_18C0:
  v_readfirstlane_b32  s5, v32                          // 000000006300: 7E0A0520
  v_cmp_eq_u32  vcc, s5, v32                            // 000000006304: 7D844005
  s_and_saveexec_b64  s[28:29], vcc                     // 000000006308: BE9C246A
  s_cbranch_execz  label_18C8                           // 00000000630C: BF880004
  v_readlane_b32  s5, v3, s5                            // 000000006310: 020A0B03
  v_mov_b32     v37, s5                                 // 000000006314: 7E4A0205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000006318: 8A9A7E1A
  s_cbranch_scc0  label_18CA                            // 00000000631C: BF840002
  label_18C8:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000006320: 87FE1A1C
  s_branch      label_18C0                              // 000000006324: BF82FFF6
  label_18CA:
  s_mov_b64     exec, s[24:25]                          // 000000006328: BEFE0418
  v_cndmask_b32  v37, 0, v37, s[22:23]                  // 00000000632C: D2000025 005A4A80
  v_lshl_b64    v[41:42], 1, v32                        // 000000006334: D2C20029 00024081
  v_and_b32     v41, exec_lo, v41                       // 00000000633C: 3652527E
  v_and_b32     v42, exec_hi, v42                       // 000000006340: 3654547F
  v_cmp_ne_u64  s[22:23], 0, v[41:42]                   // 000000006344: D1CA0016 00025280
  s_mov_b64     s[24:25], exec                          // 00000000634C: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000006350: BE9A047E
  s_nop         0x0000                                  // 000000006354: BF800000
  s_nop         0x0000                                  // 000000006358: BF800000
  s_nop         0x0000                                  // 00000000635C: BF800000
  label_18D8:
  v_readfirstlane_b32  s5, v32                          // 000000006360: 7E0A0520
  v_cmp_eq_u32  vcc, s5, v32                            // 000000006364: 7D844005
  s_and_saveexec_b64  s[28:29], vcc                     // 000000006368: BE9C246A
  s_cbranch_execz  label_18E0                           // 00000000636C: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000006370: 020A0B4F
  v_mov_b32     v41, s5                                 // 000000006374: 7E520205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000006378: 8A9A7E1A
  s_cbranch_scc0  label_18E2                            // 00000000637C: BF840002
  label_18E0:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000006380: 87FE1A1C
  s_branch      label_18D8                              // 000000006384: BF82FFF6
  label_18E2:
  s_mov_b64     exec, s[24:25]                          // 000000006388: BEFE0418
  v_cndmask_b32  v41, 0, v41, s[22:23]                  // 00000000638C: D2000029 005A5280
  v_lshl_b64    v[42:43], 1, v32                        // 000000006394: D2C2002A 00024081
  v_and_b32     v42, exec_lo, v42                       // 00000000639C: 3654547E
  v_and_b32     v43, exec_hi, v43                       // 0000000063A0: 3656567F
  v_cmp_ne_u64  s[22:23], 0, v[42:43]                   // 0000000063A4: D1CA0016 00025480
  s_mov_b64     s[24:25], exec                          // 0000000063AC: BE98047E
  s_mov_b64     s[26:27], exec                          // 0000000063B0: BE9A047E
  s_nop         0x0000                                  // 0000000063B4: BF800000
  s_nop         0x0000                                  // 0000000063B8: BF800000
  s_nop         0x0000                                  // 0000000063BC: BF800000
  label_18F0:
  v_readfirstlane_b32  s5, v32                          // 0000000063C0: 7E0A0520
  v_cmp_eq_u32  vcc, s5, v32                            // 0000000063C4: 7D844005
  s_and_saveexec_b64  s[28:29], vcc                     // 0000000063C8: BE9C246A
  s_cbranch_execz  label_18F8                           // 0000000063CC: BF880004
  v_readlane_b32  s5, v81, s5                           // 0000000063D0: 020A0B51
  v_mov_b32     v32, s5                                 // 0000000063D4: 7E400205
  s_andn2_b64   s[26:27], s[26:27], exec                // 0000000063D8: 8A9A7E1A
  s_cbranch_scc0  label_18FA                            // 0000000063DC: BF840002
  label_18F8:
  s_and_b64     exec, s[28:29], s[26:27]                // 0000000063E0: 87FE1A1C
  s_branch      label_18F0                              // 0000000063E4: BF82FFF6
  label_18FA:
  s_mov_b64     exec, s[24:25]                          // 0000000063E8: BEFE0418
  v_cndmask_b32  v32, 0, v32, s[22:23]                  // 0000000063EC: D2000020 005A4080
  v_lshl_b64    v[42:43], 1, v35                        // 0000000063F4: D2C2002A 00024681
  v_and_b32     v42, exec_lo, v42                       // 0000000063FC: 3654547E
  v_and_b32     v43, exec_hi, v43                       // 000000006400: 3656567F
  v_cmp_ne_u64  s[22:23], 0, v[42:43]                   // 000000006404: D1CA0016 00025480
  s_mov_b64     s[24:25], exec                          // 00000000640C: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000006410: BE9A047E
  s_nop         0x0000                                  // 000000006414: BF800000
  s_nop         0x0000                                  // 000000006418: BF800000
  s_nop         0x0000                                  // 00000000641C: BF800000
  label_1908:
  v_readfirstlane_b32  s5, v35                          // 000000006420: 7E0A0523
  v_cmp_eq_u32  vcc, s5, v35                            // 000000006424: 7D844605
  s_and_saveexec_b64  s[28:29], vcc                     // 000000006428: BE9C246A
  s_cbranch_execz  label_1910                           // 00000000642C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000006430: 020A0B51
  v_mov_b32     v42, s5                                 // 000000006434: 7E540205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000006438: 8A9A7E1A
  s_cbranch_scc0  label_1912                            // 00000000643C: BF840002
  label_1910:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000006440: 87FE1A1C
  s_branch      label_1908                              // 000000006444: BF82FFF6
  label_1912:
  s_mov_b64     exec, s[24:25]                          // 000000006448: BEFE0418
  v_cndmask_b32  v42, 0, v42, s[22:23]                  // 00000000644C: D200002A 005A5480
  v_lshl_b64    v[43:44], 1, v35                        // 000000006454: D2C2002B 00024681
  v_and_b32     v43, exec_lo, v43                       // 00000000645C: 3656567E
  v_and_b32     v44, exec_hi, v44                       // 000000006460: 3658587F
  v_cmp_ne_u64  s[22:23], 0, v[43:44]                   // 000000006464: D1CA0016 00025680
  s_mov_b64     s[24:25], exec                          // 00000000646C: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000006470: BE9A047E
  s_nop         0x0000                                  // 000000006474: BF800000
  s_nop         0x0000                                  // 000000006478: BF800000
  s_nop         0x0000                                  // 00000000647C: BF800000
  label_1920:
  v_readfirstlane_b32  s5, v35                          // 000000006480: 7E0A0523
  v_cmp_eq_u32  vcc, s5, v35                            // 000000006484: 7D844605
  s_and_saveexec_b64  s[28:29], vcc                     // 000000006488: BE9C246A
  s_cbranch_execz  label_1928                           // 00000000648C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000006490: 020A0B09
  v_mov_b32     v43, s5                                 // 000000006494: 7E560205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000006498: 8A9A7E1A
  s_cbranch_scc0  label_192A                            // 00000000649C: BF840002
  label_1928:
  s_and_b64     exec, s[28:29], s[26:27]                // 0000000064A0: 87FE1A1C
  s_branch      label_1920                              // 0000000064A4: BF82FFF6
  label_192A:
  s_mov_b64     exec, s[24:25]                          // 0000000064A8: BEFE0418
  v_cndmask_b32  v43, 0, v43, s[22:23]                  // 0000000064AC: D200002B 005A5680
  v_lshl_b64    v[44:45], 1, v35                        // 0000000064B4: D2C2002C 00024681
  v_and_b32     v44, exec_lo, v44                       // 0000000064BC: 3658587E
  v_and_b32     v45, exec_hi, v45                       // 0000000064C0: 365A5A7F
  v_cmp_ne_u64  s[22:23], 0, v[44:45]                   // 0000000064C4: D1CA0016 00025880
  s_mov_b64     s[24:25], exec                          // 0000000064CC: BE98047E
  s_mov_b64     s[26:27], exec                          // 0000000064D0: BE9A047E
  s_nop         0x0000                                  // 0000000064D4: BF800000
  s_nop         0x0000                                  // 0000000064D8: BF800000
  s_nop         0x0000                                  // 0000000064DC: BF800000
  label_1938:
  v_readfirstlane_b32  s5, v35                          // 0000000064E0: 7E0A0523
  v_cmp_eq_u32  vcc, s5, v35                            // 0000000064E4: 7D844605
  s_and_saveexec_b64  s[28:29], vcc                     // 0000000064E8: BE9C246A
  s_cbranch_execz  label_1940                           // 0000000064EC: BF880004
  v_readlane_b32  s5, v10, s5                           // 0000000064F0: 020A0B0A
  v_mov_b32     v35, s5                                 // 0000000064F4: 7E460205
  s_andn2_b64   s[26:27], s[26:27], exec                // 0000000064F8: 8A9A7E1A
  s_cbranch_scc0  label_1942                            // 0000000064FC: BF840002
  label_1940:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000006500: 87FE1A1C
  s_branch      label_1938                              // 000000006504: BF82FFF6
  label_1942:
  s_mov_b64     exec, s[24:25]                          // 000000006508: BEFE0418
  v_cndmask_b32  v35, 0, v35, s[22:23]                  // 00000000650C: D2000023 005A4680
  v_lshl_b64    v[44:45], 1, v36                        // 000000006514: D2C2002C 00024881
  v_and_b32     v44, exec_lo, v44                       // 00000000651C: 3658587E
  v_and_b32     v45, exec_hi, v45                       // 000000006520: 365A5A7F
  v_cmp_ne_u64  s[22:23], 0, v[44:45]                   // 000000006524: D1CA0016 00025880
  s_mov_b64     s[24:25], exec                          // 00000000652C: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000006530: BE9A047E
  s_nop         0x0000                                  // 000000006534: BF800000
  s_nop         0x0000                                  // 000000006538: BF800000
  s_nop         0x0000                                  // 00000000653C: BF800000
  label_1950:
  v_readfirstlane_b32  s5, v36                          // 000000006540: 7E0A0524
  v_cmp_eq_u32  vcc, s5, v36                            // 000000006544: 7D844805
  s_and_saveexec_b64  s[28:29], vcc                     // 000000006548: BE9C246A
  s_cbranch_execz  label_1958                           // 00000000654C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000006550: 020A0B51
  v_mov_b32     v44, s5                                 // 000000006554: 7E580205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000006558: 8A9A7E1A
  s_cbranch_scc0  label_195A                            // 00000000655C: BF840002
  label_1958:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000006560: 87FE1A1C
  s_branch      label_1950                              // 000000006564: BF82FFF6
  label_195A:
  s_mov_b64     exec, s[24:25]                          // 000000006568: BEFE0418
  v_cndmask_b32  v44, 0, v44, s[22:23]                  // 00000000656C: D200002C 005A5880
  v_lshl_b64    v[45:46], 1, v36                        // 000000006574: D2C2002D 00024881
  v_and_b32     v45, exec_lo, v45                       // 00000000657C: 365A5A7E
  v_and_b32     v46, exec_hi, v46                       // 000000006580: 365C5C7F
  v_cmp_ne_u64  s[22:23], 0, v[45:46]                   // 000000006584: D1CA0016 00025A80
  s_mov_b64     s[24:25], exec                          // 00000000658C: BE98047E
  s_mov_b64     s[26:27], exec                          // 000000006590: BE9A047E
  s_nop         0x0000                                  // 000000006594: BF800000
  s_nop         0x0000                                  // 000000006598: BF800000
  s_nop         0x0000                                  // 00000000659C: BF800000
  label_1968:
  v_readfirstlane_b32  s5, v36                          // 0000000065A0: 7E0A0524
  v_cmp_eq_u32  vcc, s5, v36                            // 0000000065A4: 7D844805
  s_and_saveexec_b64  s[28:29], vcc                     // 0000000065A8: BE9C246A
  s_cbranch_execz  label_1970                           // 0000000065AC: BF880004
  v_readlane_b32  s5, v9, s5                            // 0000000065B0: 020A0B09
  v_mov_b32     v45, s5                                 // 0000000065B4: 7E5A0205
  s_andn2_b64   s[26:27], s[26:27], exec                // 0000000065B8: 8A9A7E1A
  s_cbranch_scc0  label_1972                            // 0000000065BC: BF840002
  label_1970:
  s_and_b64     exec, s[28:29], s[26:27]                // 0000000065C0: 87FE1A1C
  s_branch      label_1968                              // 0000000065C4: BF82FFF6
  label_1972:
  s_mov_b64     exec, s[24:25]                          // 0000000065C8: BEFE0418
  v_cndmask_b32  v45, 0, v45, s[22:23]                  // 0000000065CC: D200002D 005A5A80
  v_lshl_b64    v[46:47], 1, v36                        // 0000000065D4: D2C2002E 00024881
  v_and_b32     v46, exec_lo, v46                       // 0000000065DC: 365C5C7E
  v_and_b32     v47, exec_hi, v47                       // 0000000065E0: 365E5E7F
  v_cmp_ne_u64  s[22:23], 0, v[46:47]                   // 0000000065E4: D1CA0016 00025C80
  s_mov_b64     s[24:25], exec                          // 0000000065EC: BE98047E
  s_mov_b64     s[26:27], exec                          // 0000000065F0: BE9A047E
  s_nop         0x0000                                  // 0000000065F4: BF800000
  s_nop         0x0000                                  // 0000000065F8: BF800000
  s_nop         0x0000                                  // 0000000065FC: BF800000
  label_1980:
  v_readfirstlane_b32  s5, v36                          // 000000006600: 7E0A0524
  v_cmp_eq_u32  vcc, s5, v36                            // 000000006604: 7D844805
  s_and_saveexec_b64  s[28:29], vcc                     // 000000006608: BE9C246A
  s_cbranch_execz  label_1988                           // 00000000660C: BF880004
  v_readlane_b32  s5, v10, s5                           // 000000006610: 020A0B0A
  v_mov_b32     v36, s5                                 // 000000006614: 7E480205
  s_andn2_b64   s[26:27], s[26:27], exec                // 000000006618: 8A9A7E1A
  s_cbranch_scc0  label_198A                            // 00000000661C: BF840002
  label_1988:
  s_and_b64     exec, s[28:29], s[26:27]                // 000000006620: 87FE1A1C
  s_branch      label_1980                              // 000000006624: BF82FFF6
  label_198A:
  s_mov_b64     exec, s[24:25]                          // 000000006628: BEFE0418
  v_cndmask_b32  v36, 0, v36, s[22:23]                  // 00000000662C: D2000024 005A4880
  s_mov_b64     s[22:23], exec                          // 000000006634: BE96047E
  s_andn2_b64   exec, s[22:23], s[20:21]                // 000000006638: 8AFE1416
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000663C: BF8C0070
  v_mul_f32     v30, v34, v31                           // 000000006640: 103C3F22
  s_andn2_b64   exec, s[22:23], exec                    // 000000006644: 8AFE7E16
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000006648: BF8C0070
  v_mul_f32     v30, v34, v30                           // 00000000664C: 103C3D22
  v_mul_f32     v31, v34, v33                           // 000000006650: 103E4322
  v_cmp_gt_i32  vcc, 50, v2                             // 000000006654: 7D0804B2
  v_cndmask_b32  v30, v30, v31, vcc                     // 000000006658: 003C3F1E
  s_mov_b64     exec, s[22:23]                          // 00000000665C: BEFE0416
  v_cmp_lt_i32  s[24:25], v2, 48                        // 000000006660: D1020018 00016102
  v_add_f32     v11, v11, v20                           // 000000006668: 0616290B
  v_cmp_gt_i32  vcc, 18, v2                             // 00000000666C: 7D080492
  s_and_b64     exec, s[22:23], vcc                     // 000000006670: 87FE6A16
  v_mad_f32     v15, v34, v37, v11                      // 000000006674: D282000F 042E4B22
  s_cbranch_execz  label_19B2                           // 00000000667C: BF880012
  v_cmp_gt_i32  vcc, 16, v2                             // 000000006680: 7D080490
  s_and_saveexec_b64  s[26:27], vcc                     // 000000006684: BE9A246A
  v_mul_f32     v6, v34, v42                            // 000000006688: 100C5522
  s_cbranch_execz  label_19A9                           // 00000000668C: BF880005
  v_cndmask_b32  v20, 0, 1, s[18:19]                    // 000000006690: D2000014 00490280
  v_mov_b32     v115, v6                                // 000000006698: 7EE60306
  v_mov_b32     v7, -1                                  // 00000000669C: 7E0E02C1
  v_mov_b32     v8, 1                                   // 0000000066A0: 7E100281
  label_19A9:
  s_andn2_b64   exec, s[26:27], exec                    // 0000000066A4: 8AFE7E1A
  v_cndmask_b32  v20, 0, 1, s[18:19]                    // 0000000066A8: D2000014 00490280
  v_mov_b32     v8, 0                                   // 0000000066B0: 7E100280
  v_mov_b32     v6, v34                                 // 0000000066B4: 7E0C0322
  s_mov_b64     exec, s[26:27]                          // 0000000066B8: BEFE041A
  v_cmp_ne_i32  vcc, 0, v7                              // 0000000066BC: 7D0A0E80
  v_cndmask_b32  v7, 0, -1, vcc                         // 0000000066C0: D2000007 01A98280
  label_19B2:
  s_andn2_b64   exec, s[22:23], exec                    // 0000000066C8: 8AFE7E16
  v_cndmask_b32  v20, 0, 1, s[18:19]                    // 0000000066CC: D2000014 00490280
  s_cbranch_execz  label_19BD                           // 0000000066D4: BF880007
  v_mul_f32     v31, v34, v41                           // 0000000066D8: 103E5322
  v_mul_f32     v32, v34, v32                           // 0000000066DC: 10404122
  v_cndmask_b32  v31, v32, v31, s[24:25]                // 0000000066E0: D200001F 00623F20
  v_add_f32     v15, v11, v31                           // 0000000066E8: 061E3F0B
  v_mov_b32     v8, 0                                   // 0000000066EC: 7E100280
  v_mov_b32     v6, v34                                 // 0000000066F0: 7E0C0322
  label_19BD:
  s_mov_b64     exec, s[22:23]                          // 0000000066F4: BEFE0416
  v_cmp_ne_i32  vcc, 0, v7                              // 0000000066F8: 7D0A0E80
  v_cndmask_b32  v11, 0, -1, vcc                        // 0000000066FC: D200000B 01A98280
  v_cmp_ne_u32  vcc, 1, v8                              // 000000006704: 7D8A1081
  s_and_saveexec_b64  s[18:19], vcc                     // 000000006708: BE92246A
  v_mul_f32     v11, v6, v43                            // 00000000670C: 10165706
  s_cbranch_execz  label_19CA                           // 000000006710: BF880005
  v_mul_f32     v31, v34, v35                           // 000000006714: 103E4722
  v_cmp_gt_i32  vcc, 44, v2                             // 000000006718: 7D0804AC
  v_cndmask_b32  v11, v31, v11, vcc                     // 00000000671C: 0016171F
  v_mov_b32     v115, v11                               // 000000006720: 7EE6030B
  v_mov_b32     v11, 0                                  // 000000006724: 7E160280
  label_19CA:
  s_mov_b64     exec, s[18:19]                          // 000000006728: BEFE0412
  v_cmp_ne_i32  s[18:19], v11, 0                        // 00000000672C: D10A0012 0001010B
  v_add_i32     v11, vcc, 19, v5                        // 000000006734: 4A160A93
  v_and_b32     v11, 63, v11                            // 000000006738: 361616BF
  v_lshl_b64    v[31:32], 1, v11                        // 00000000673C: D2C2001F 00021681
  v_and_b32     v31, exec_lo, v31                       // 000000006744: 363E3E7E
  v_and_b32     v32, exec_hi, v32                       // 000000006748: 3640407F
  v_cmp_ne_u64  s[22:23], 0, v[31:32]                   // 00000000674C: D1CA0016 00023E80
  s_mov_b64     s[26:27], exec                          // 000000006754: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006758: BE9C047E
  s_nop         0x0000                                  // 00000000675C: BF800000
  label_19D8:
  v_readfirstlane_b32  s5, v11                          // 000000006760: 7E0A050B
  v_cmp_eq_u32  vcc, s5, v11                            // 000000006764: 7D841605
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006768: BE9E246A
  s_cbranch_execz  label_19E0                           // 00000000676C: BF880004
  v_readlane_b32  s5, v3, s5                            // 000000006770: 020A0B03
  v_mov_b32     v31, s5                                 // 000000006774: 7E3E0205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006778: 8A9C7E1C
  s_cbranch_scc0  label_19E2                            // 00000000677C: BF840002
  label_19E0:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006780: 87FE1C1E
  s_branch      label_19D8                              // 000000006784: BF82FFF6
  label_19E2:
  s_mov_b64     exec, s[26:27]                          // 000000006788: BEFE041A
  v_cndmask_b32  v31, 0, v31, s[22:23]                  // 00000000678C: D200001F 005A3E80
  v_lshl_b64    v[32:33], 1, v11                        // 000000006794: D2C20020 00021681
  v_and_b32     v32, exec_lo, v32                       // 00000000679C: 3640407E
  v_and_b32     v33, exec_hi, v33                       // 0000000067A0: 3642427F
  v_cmp_ne_u64  s[22:23], 0, v[32:33]                   // 0000000067A4: D1CA0016 00024080
  s_mov_b64     s[26:27], exec                          // 0000000067AC: BE9A047E
  s_mov_b64     s[28:29], exec                          // 0000000067B0: BE9C047E
  s_nop         0x0000                                  // 0000000067B4: BF800000
  s_nop         0x0000                                  // 0000000067B8: BF800000
  s_nop         0x0000                                  // 0000000067BC: BF800000
  label_19F0:
  v_readfirstlane_b32  s5, v11                          // 0000000067C0: 7E0A050B
  v_cmp_eq_u32  vcc, s5, v11                            // 0000000067C4: 7D841605
  s_and_saveexec_b64  s[30:31], vcc                     // 0000000067C8: BE9E246A
  s_cbranch_execz  label_19F8                           // 0000000067CC: BF880004
  v_readlane_b32  s5, v79, s5                           // 0000000067D0: 020A0B4F
  v_mov_b32     v32, s5                                 // 0000000067D4: 7E400205
  s_andn2_b64   s[28:29], s[28:29], exec                // 0000000067D8: 8A9C7E1C
  s_cbranch_scc0  label_19FA                            // 0000000067DC: BF840002
  label_19F8:
  s_and_b64     exec, s[30:31], s[28:29]                // 0000000067E0: 87FE1C1E
  s_branch      label_19F0                              // 0000000067E4: BF82FFF6
  label_19FA:
  s_mov_b64     exec, s[26:27]                          // 0000000067E8: BEFE041A
  v_cndmask_b32  v32, 0, v32, s[22:23]                  // 0000000067EC: D2000020 005A4080
  v_lshl_b64    v[41:42], 1, v11                        // 0000000067F4: D2C20029 00021681
  v_and_b32     v41, exec_lo, v41                       // 0000000067FC: 3652527E
  v_and_b32     v42, exec_hi, v42                       // 000000006800: 3654547F
  v_cmp_ne_u64  s[22:23], 0, v[41:42]                   // 000000006804: D1CA0016 00025280
  s_mov_b64     s[26:27], exec                          // 00000000680C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006810: BE9C047E
  s_nop         0x0000                                  // 000000006814: BF800000
  s_nop         0x0000                                  // 000000006818: BF800000
  s_nop         0x0000                                  // 00000000681C: BF800000
  label_1A08:
  v_readfirstlane_b32  s5, v11                          // 000000006820: 7E0A050B
  v_cmp_eq_u32  vcc, s5, v11                            // 000000006824: 7D841605
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006828: BE9E246A
  s_cbranch_execz  label_1A10                           // 00000000682C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000006830: 020A0B51
  v_mov_b32     v11, s5                                 // 000000006834: 7E160205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006838: 8A9C7E1C
  s_cbranch_scc0  label_1A12                            // 00000000683C: BF840002
  label_1A10:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006840: 87FE1C1E
  s_branch      label_1A08                              // 000000006844: BF82FFF6
  label_1A12:
  s_mov_b64     exec, s[26:27]                          // 000000006848: BEFE041A
  s_add_u32     s26, s14, 16                            // 00000000684C: 801A900E
  s_addc_u32    s27, s15, 0                             // 000000006850: 821B800F
  v_mov_b32     v46, s26                                // 000000006854: 7E5C021A
  v_mov_b32     v47, s27                                // 000000006858: 7E5E021B
  v_add_i32     v37, vcc, 27, v5                        // 00000000685C: 4A4A0A9B
  v_and_b32     v37, 63, v37                            // 000000006860: 364A4ABF
  v_add_i32     v41, vcc, 43, v5                        // 000000006864: 4A520AAB
  v_add_i32     v42, vcc, 35, v5                        // 000000006868: 4A540AA3
  flat_load_dword  v33, v[46:47]                        // 00000000686C: DC300000 2100002E
  v_cndmask_b32  v11, 0, v11, s[22:23]                  // 000000006874: D200000B 005A1680
  v_and_b32     v35, 63, v42                            // 00000000687C: 364654BF
  v_and_b32     v41, 63, v41                            // 000000006880: 365252BF
  v_lshl_b64    v[42:43], 1, v37                        // 000000006884: D2C2002A 00024A81
  v_and_b32     v42, exec_lo, v42                       // 00000000688C: 3654547E
  v_and_b32     v43, exec_hi, v43                       // 000000006890: 3656567F
  v_cmp_ne_u64  s[22:23], 0, v[42:43]                   // 000000006894: D1CA0016 00025480
  s_mov_b64     s[26:27], exec                          // 00000000689C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 0000000068A0: BE9C047E
  s_nop         0x0000                                  // 0000000068A4: BF800000
  s_nop         0x0000                                  // 0000000068A8: BF800000
  s_nop         0x0000                                  // 0000000068AC: BF800000
  s_nop         0x0000                                  // 0000000068B0: BF800000
  s_nop         0x0000                                  // 0000000068B4: BF800000
  s_nop         0x0000                                  // 0000000068B8: BF800000
  s_nop         0x0000                                  // 0000000068BC: BF800000
  label_1A30:
  v_readfirstlane_b32  s5, v37                          // 0000000068C0: 7E0A0525
  v_cmp_eq_u32  vcc, s5, v37                            // 0000000068C4: 7D844A05
  s_and_saveexec_b64  s[30:31], vcc                     // 0000000068C8: BE9E246A
  s_cbranch_execz  label_1A38                           // 0000000068CC: BF880004
  v_readlane_b32  s5, v3, s5                            // 0000000068D0: 020A0B03
  v_mov_b32     v42, s5                                 // 0000000068D4: 7E540205
  s_andn2_b64   s[28:29], s[28:29], exec                // 0000000068D8: 8A9C7E1C
  s_cbranch_scc0  label_1A3A                            // 0000000068DC: BF840002
  label_1A38:
  s_and_b64     exec, s[30:31], s[28:29]                // 0000000068E0: 87FE1C1E
  s_branch      label_1A30                              // 0000000068E4: BF82FFF6
  label_1A3A:
  s_mov_b64     exec, s[26:27]                          // 0000000068E8: BEFE041A
  v_cndmask_b32  v42, 0, v42, s[22:23]                  // 0000000068EC: D200002A 005A5480
  v_lshl_b64    v[46:47], 1, v37                        // 0000000068F4: D2C2002E 00024A81
  v_and_b32     v46, exec_lo, v46                       // 0000000068FC: 365C5C7E
  v_and_b32     v47, exec_hi, v47                       // 000000006900: 365E5E7F
  v_cmp_ne_u64  s[22:23], 0, v[46:47]                   // 000000006904: D1CA0016 00025C80
  s_mov_b64     s[26:27], exec                          // 00000000690C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006910: BE9C047E
  s_nop         0x0000                                  // 000000006914: BF800000
  s_nop         0x0000                                  // 000000006918: BF800000
  s_nop         0x0000                                  // 00000000691C: BF800000
  label_1A48:
  v_readfirstlane_b32  s5, v37                          // 000000006920: 7E0A0525
  v_cmp_eq_u32  vcc, s5, v37                            // 000000006924: 7D844A05
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006928: BE9E246A
  s_cbranch_execz  label_1A50                           // 00000000692C: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000006930: 020A0B4F
  v_mov_b32     v43, s5                                 // 000000006934: 7E560205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006938: 8A9C7E1C
  s_cbranch_scc0  label_1A52                            // 00000000693C: BF840002
  label_1A50:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006940: 87FE1C1E
  s_branch      label_1A48                              // 000000006944: BF82FFF6
  label_1A52:
  s_mov_b64     exec, s[26:27]                          // 000000006948: BEFE041A
  v_cndmask_b32  v43, 0, v43, s[22:23]                  // 00000000694C: D200002B 005A5680
  v_lshl_b64    v[46:47], 1, v37                        // 000000006954: D2C2002E 00024A81
  v_and_b32     v46, exec_lo, v46                       // 00000000695C: 365C5C7E
  v_and_b32     v47, exec_hi, v47                       // 000000006960: 365E5E7F
  v_cmp_ne_u64  s[22:23], 0, v[46:47]                   // 000000006964: D1CA0016 00025C80
  s_mov_b64     s[26:27], exec                          // 00000000696C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006970: BE9C047E
  s_nop         0x0000                                  // 000000006974: BF800000
  s_nop         0x0000                                  // 000000006978: BF800000
  s_nop         0x0000                                  // 00000000697C: BF800000
  label_1A60:
  v_readfirstlane_b32  s5, v37                          // 000000006980: 7E0A0525
  v_cmp_eq_u32  vcc, s5, v37                            // 000000006984: 7D844A05
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006988: BE9E246A
  s_cbranch_execz  label_1A68                           // 00000000698C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000006990: 020A0B51
  v_mov_b32     v37, s5                                 // 000000006994: 7E4A0205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006998: 8A9C7E1C
  s_cbranch_scc0  label_1A6A                            // 00000000699C: BF840002
  label_1A68:
  s_and_b64     exec, s[30:31], s[28:29]                // 0000000069A0: 87FE1C1E
  s_branch      label_1A60                              // 0000000069A4: BF82FFF6
  label_1A6A:
  s_mov_b64     exec, s[26:27]                          // 0000000069A8: BEFE041A
  v_cndmask_b32  v37, 0, v37, s[22:23]                  // 0000000069AC: D2000025 005A4A80
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000069B4: BF8C0070
  v_mul_f32     v42, v33, v42                           // 0000000069B8: 10545521
  v_lshl_b64    v[46:47], 1, v35                        // 0000000069BC: D2C2002E 00024681
  v_and_b32     v46, exec_lo, v46                       // 0000000069C4: 365C5C7E
  v_and_b32     v47, exec_hi, v47                       // 0000000069C8: 365E5E7F
  v_cmp_ne_u64  s[22:23], 0, v[46:47]                   // 0000000069CC: D1CA0016 00025C80
  s_mov_b64     s[26:27], exec                          // 0000000069D4: BE9A047E
  s_mov_b64     s[28:29], exec                          // 0000000069D8: BE9C047E
  s_nop         0x0000                                  // 0000000069DC: BF800000
  label_1A78:
  v_readfirstlane_b32  s5, v35                          // 0000000069E0: 7E0A0523
  v_cmp_eq_u32  vcc, s5, v35                            // 0000000069E4: 7D844605
  s_and_saveexec_b64  s[30:31], vcc                     // 0000000069E8: BE9E246A
  s_cbranch_execz  label_1A80                           // 0000000069EC: BF880004
  v_readlane_b32  s5, v81, s5                           // 0000000069F0: 020A0B51
  v_mov_b32     v46, s5                                 // 0000000069F4: 7E5C0205
  s_andn2_b64   s[28:29], s[28:29], exec                // 0000000069F8: 8A9C7E1C
  s_cbranch_scc0  label_1A82                            // 0000000069FC: BF840002
  label_1A80:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006A00: 87FE1C1E
  s_branch      label_1A78                              // 000000006A04: BF82FFF6
  label_1A82:
  s_mov_b64     exec, s[26:27]                          // 000000006A08: BEFE041A
  v_cndmask_b32  v46, 0, v46, s[22:23]                  // 000000006A0C: D200002E 005A5C80
  v_lshl_b64    v[47:48], 1, v35                        // 000000006A14: D2C2002F 00024681
  v_and_b32     v47, exec_lo, v47                       // 000000006A1C: 365E5E7E
  v_and_b32     v48, exec_hi, v48                       // 000000006A20: 3660607F
  v_cmp_ne_u64  s[22:23], 0, v[47:48]                   // 000000006A24: D1CA0016 00025E80
  s_mov_b64     s[26:27], exec                          // 000000006A2C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006A30: BE9C047E
  s_nop         0x0000                                  // 000000006A34: BF800000
  s_nop         0x0000                                  // 000000006A38: BF800000
  s_nop         0x0000                                  // 000000006A3C: BF800000
  label_1A90:
  v_readfirstlane_b32  s5, v35                          // 000000006A40: 7E0A0523
  v_cmp_eq_u32  vcc, s5, v35                            // 000000006A44: 7D844605
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006A48: BE9E246A
  s_cbranch_execz  label_1A98                           // 000000006A4C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000006A50: 020A0B09
  v_mov_b32     v47, s5                                 // 000000006A54: 7E5E0205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006A58: 8A9C7E1C
  s_cbranch_scc0  label_1A9A                            // 000000006A5C: BF840002
  label_1A98:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006A60: 87FE1C1E
  s_branch      label_1A90                              // 000000006A64: BF82FFF6
  label_1A9A:
  s_mov_b64     exec, s[26:27]                          // 000000006A68: BEFE041A
  v_cndmask_b32  v47, 0, v47, s[22:23]                  // 000000006A6C: D200002F 005A5E80
  v_mul_f32     v43, v33, v43                           // 000000006A74: 10565721
  v_mul_f32     v37, v33, v37                           // 000000006A78: 104A4B21
  v_lshl_b64    v[48:49], 1, v35                        // 000000006A7C: D2C20030 00024681
  v_and_b32     v48, exec_lo, v48                       // 000000006A84: 3660607E
  v_and_b32     v49, exec_hi, v49                       // 000000006A88: 3662627F
  v_cmp_ne_u64  s[22:23], 0, v[48:49]                   // 000000006A8C: D1CA0016 00026080
  s_mov_b64     s[26:27], exec                          // 000000006A94: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006A98: BE9C047E
  s_nop         0x0000                                  // 000000006A9C: BF800000
  label_1AA8:
  v_readfirstlane_b32  s5, v35                          // 000000006AA0: 7E0A0523
  v_cmp_eq_u32  vcc, s5, v35                            // 000000006AA4: 7D844605
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006AA8: BE9E246A
  s_cbranch_execz  label_1AB0                           // 000000006AAC: BF880004
  v_readlane_b32  s5, v10, s5                           // 000000006AB0: 020A0B0A
  v_mov_b32     v35, s5                                 // 000000006AB4: 7E460205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006AB8: 8A9C7E1C
  s_cbranch_scc0  label_1AB2                            // 000000006ABC: BF840002
  label_1AB0:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006AC0: 87FE1C1E
  s_branch      label_1AA8                              // 000000006AC4: BF82FFF6
  label_1AB2:
  s_mov_b64     exec, s[26:27]                          // 000000006AC8: BEFE041A
  v_cndmask_b32  v35, 0, v35, s[22:23]                  // 000000006ACC: D2000023 005A4680
  v_lshl_b64    v[48:49], 1, v41                        // 000000006AD4: D2C20030 00025281
  v_and_b32     v48, exec_lo, v48                       // 000000006ADC: 3660607E
  v_and_b32     v49, exec_hi, v49                       // 000000006AE0: 3662627F
  v_cmp_ne_u64  s[22:23], 0, v[48:49]                   // 000000006AE4: D1CA0016 00026080
  s_mov_b64     s[26:27], exec                          // 000000006AEC: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006AF0: BE9C047E
  s_nop         0x0000                                  // 000000006AF4: BF800000
  s_nop         0x0000                                  // 000000006AF8: BF800000
  s_nop         0x0000                                  // 000000006AFC: BF800000
  label_1AC0:
  v_readfirstlane_b32  s5, v41                          // 000000006B00: 7E0A0529
  v_cmp_eq_u32  vcc, s5, v41                            // 000000006B04: 7D845205
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006B08: BE9E246A
  s_cbranch_execz  label_1AC8                           // 000000006B0C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000006B10: 020A0B51
  v_mov_b32     v48, s5                                 // 000000006B14: 7E600205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006B18: 8A9C7E1C
  s_cbranch_scc0  label_1ACA                            // 000000006B1C: BF840002
  label_1AC8:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006B20: 87FE1C1E
  s_branch      label_1AC0                              // 000000006B24: BF82FFF6
  label_1ACA:
  s_mov_b64     exec, s[26:27]                          // 000000006B28: BEFE041A
  v_cndmask_b32  v48, 0, v48, s[22:23]                  // 000000006B2C: D2000030 005A6080
  v_lshl_b64    v[49:50], 1, v41                        // 000000006B34: D2C20031 00025281
  v_and_b32     v49, exec_lo, v49                       // 000000006B3C: 3662627E
  v_and_b32     v50, exec_hi, v50                       // 000000006B40: 3664647F
  v_cmp_ne_u64  s[22:23], 0, v[49:50]                   // 000000006B44: D1CA0016 00026280
  s_mov_b64     s[26:27], exec                          // 000000006B4C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006B50: BE9C047E
  s_nop         0x0000                                  // 000000006B54: BF800000
  s_nop         0x0000                                  // 000000006B58: BF800000
  s_nop         0x0000                                  // 000000006B5C: BF800000
  label_1AD8:
  v_readfirstlane_b32  s5, v41                          // 000000006B60: 7E0A0529
  v_cmp_eq_u32  vcc, s5, v41                            // 000000006B64: 7D845205
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006B68: BE9E246A
  s_cbranch_execz  label_1AE0                           // 000000006B6C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000006B70: 020A0B09
  v_mov_b32     v49, s5                                 // 000000006B74: 7E620205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006B78: 8A9C7E1C
  s_cbranch_scc0  label_1AE2                            // 000000006B7C: BF840002
  label_1AE0:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006B80: 87FE1C1E
  s_branch      label_1AD8                              // 000000006B84: BF82FFF6
  label_1AE2:
  s_mov_b64     exec, s[26:27]                          // 000000006B88: BEFE041A
  v_cndmask_b32  v49, 0, v49, s[22:23]                  // 000000006B8C: D2000031 005A6280
  v_lshl_b64    v[50:51], 1, v41                        // 000000006B94: D2C20032 00025281
  v_and_b32     v50, exec_lo, v50                       // 000000006B9C: 3664647E
  v_and_b32     v51, exec_hi, v51                       // 000000006BA0: 3666667F
  v_cmp_ne_u64  s[22:23], 0, v[50:51]                   // 000000006BA4: D1CA0016 00026480
  s_mov_b64     s[26:27], exec                          // 000000006BAC: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006BB0: BE9C047E
  s_nop         0x0000                                  // 000000006BB4: BF800000
  s_nop         0x0000                                  // 000000006BB8: BF800000
  s_nop         0x0000                                  // 000000006BBC: BF800000
  label_1AF0:
  v_readfirstlane_b32  s5, v41                          // 000000006BC0: 7E0A0529
  v_cmp_eq_u32  vcc, s5, v41                            // 000000006BC4: 7D845205
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006BC8: BE9E246A
  s_cbranch_execz  label_1AF8                           // 000000006BCC: BF880004
  v_readlane_b32  s5, v10, s5                           // 000000006BD0: 020A0B0A
  v_mov_b32     v41, s5                                 // 000000006BD4: 7E520205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006BD8: 8A9C7E1C
  s_cbranch_scc0  label_1AFA                            // 000000006BDC: BF840002
  label_1AF8:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006BE0: 87FE1C1E
  s_branch      label_1AF0                              // 000000006BE4: BF82FFF6
  label_1AFA:
  s_mov_b64     exec, s[26:27]                          // 000000006BE8: BEFE041A
  v_cndmask_b32  v41, 0, v41, s[22:23]                  // 000000006BEC: D2000029 005A5280
  s_mov_b64     s[22:23], exec                          // 000000006BF4: BE96047E
  s_andn2_b64   exec, s[22:23], s[20:21]                // 000000006BF8: 8AFE1416
  v_mul_f32     v11, v33, v31                           // 000000006BFC: 10163F21
  s_andn2_b64   exec, s[22:23], exec                    // 000000006C00: 8AFE7E16
  v_mul_f32     v11, v33, v11                           // 000000006C04: 10161721
  v_mul_f32     v31, v33, v32                           // 000000006C08: 103E4121
  v_cmp_gt_i32  vcc, 49, v2                             // 000000006C0C: 7D0804B1
  v_cndmask_b32  v11, v11, v31, vcc                     // 000000006C10: 00163F0B
  s_mov_b64     exec, s[22:23]                          // 000000006C14: BEFE0416
  v_cndmask_b32  v31, v37, v43, s[24:25]                // 000000006C18: D200001F 00625725
  v_cmp_gt_i32  vcc, 17, v2                             // 000000006C20: 7D080491
  v_cndmask_b32  v31, v31, v42, vcc                     // 000000006C24: 003E551F
  v_add_i32     v32, vcc, 20, v5                        // 000000006C28: 4A400A94
  v_and_b32     v32, 63, v32                            // 000000006C2C: 364040BF
  v_lshl_b64    v[42:43], 1, v32                        // 000000006C30: D2C2002A 00024081
  v_and_b32     v42, exec_lo, v42                       // 000000006C38: 3654547E
  v_and_b32     v43, exec_hi, v43                       // 000000006C3C: 3656567F
  v_cmp_ne_u64  s[22:23], 0, v[42:43]                   // 000000006C40: D1CA0016 00025480
  s_mov_b64     s[26:27], exec                          // 000000006C48: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006C4C: BE9C047E
  s_nop         0x0000                                  // 000000006C50: BF800000
  s_nop         0x0000                                  // 000000006C54: BF800000
  s_nop         0x0000                                  // 000000006C58: BF800000
  s_nop         0x0000                                  // 000000006C5C: BF800000
  label_1B18:
  v_readfirstlane_b32  s5, v32                          // 000000006C60: 7E0A0520
  v_cmp_eq_u32  vcc, s5, v32                            // 000000006C64: 7D844005
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006C68: BE9E246A
  s_cbranch_execz  label_1B20                           // 000000006C6C: BF880004
  v_readlane_b32  s5, v3, s5                            // 000000006C70: 020A0B03
  v_mov_b32     v37, s5                                 // 000000006C74: 7E4A0205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006C78: 8A9C7E1C
  s_cbranch_scc0  label_1B22                            // 000000006C7C: BF840002
  label_1B20:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006C80: 87FE1C1E
  s_branch      label_1B18                              // 000000006C84: BF82FFF6
  label_1B22:
  s_mov_b64     exec, s[26:27]                          // 000000006C88: BEFE041A
  v_cndmask_b32  v37, 0, v37, s[22:23]                  // 000000006C8C: D2000025 005A4A80
  v_lshl_b64    v[42:43], 1, v32                        // 000000006C94: D2C2002A 00024081
  v_and_b32     v42, exec_lo, v42                       // 000000006C9C: 3654547E
  v_and_b32     v43, exec_hi, v43                       // 000000006CA0: 3656567F
  v_cmp_ne_u64  s[22:23], 0, v[42:43]                   // 000000006CA4: D1CA0016 00025480
  s_mov_b64     s[26:27], exec                          // 000000006CAC: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006CB0: BE9C047E
  s_nop         0x0000                                  // 000000006CB4: BF800000
  s_nop         0x0000                                  // 000000006CB8: BF800000
  s_nop         0x0000                                  // 000000006CBC: BF800000
  label_1B30:
  v_readfirstlane_b32  s5, v32                          // 000000006CC0: 7E0A0520
  v_cmp_eq_u32  vcc, s5, v32                            // 000000006CC4: 7D844005
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006CC8: BE9E246A
  s_cbranch_execz  label_1B38                           // 000000006CCC: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000006CD0: 020A0B4F
  v_mov_b32     v42, s5                                 // 000000006CD4: 7E540205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006CD8: 8A9C7E1C
  s_cbranch_scc0  label_1B3A                            // 000000006CDC: BF840002
  label_1B38:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006CE0: 87FE1C1E
  s_branch      label_1B30                              // 000000006CE4: BF82FFF6
  label_1B3A:
  s_mov_b64     exec, s[26:27]                          // 000000006CE8: BEFE041A
  v_cndmask_b32  v42, 0, v42, s[22:23]                  // 000000006CEC: D200002A 005A5480
  v_lshl_b64    v[50:51], 1, v32                        // 000000006CF4: D2C20032 00024081
  v_and_b32     v50, exec_lo, v50                       // 000000006CFC: 3664647E
  v_and_b32     v51, exec_hi, v51                       // 000000006D00: 3666667F
  v_cmp_ne_u64  s[22:23], 0, v[50:51]                   // 000000006D04: D1CA0016 00026480
  s_mov_b64     s[26:27], exec                          // 000000006D0C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006D10: BE9C047E
  s_nop         0x0000                                  // 000000006D14: BF800000
  s_nop         0x0000                                  // 000000006D18: BF800000
  s_nop         0x0000                                  // 000000006D1C: BF800000
  label_1B48:
  v_readfirstlane_b32  s5, v32                          // 000000006D20: 7E0A0520
  v_cmp_eq_u32  vcc, s5, v32                            // 000000006D24: 7D844005
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006D28: BE9E246A
  s_cbranch_execz  label_1B50                           // 000000006D2C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000006D30: 020A0B51
  v_mov_b32     v32, s5                                 // 000000006D34: 7E400205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006D38: 8A9C7E1C
  s_cbranch_scc0  label_1B52                            // 000000006D3C: BF840002
  label_1B50:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006D40: 87FE1C1E
  s_branch      label_1B48                              // 000000006D44: BF82FFF6
  label_1B52:
  s_mov_b64     exec, s[26:27]                          // 000000006D48: BEFE041A
  s_add_u32     s26, s14, 20                            // 000000006D4C: 801A940E
  s_addc_u32    s27, s15, 0                             // 000000006D50: 821B800F
  v_mov_b32     v54, s26                                // 000000006D54: 7E6C021A
  v_mov_b32     v55, s27                                // 000000006D58: 7E6E021B
  v_add_i32     v51, vcc, 28, v5                        // 000000006D5C: 4A660A9C
  v_add_i32     v52, vcc, 36, v5                        // 000000006D60: 4A680AA4
  v_and_b32     v51, 63, v51                            // 000000006D64: 366666BF
  v_add_i32     v53, vcc, 44, v5                        // 000000006D68: 4A6A0AAC
  flat_load_dword  v43, v[54:55]                        // 000000006D6C: DC300000 2B000036
  v_cndmask_b32  v32, 0, v32, s[22:23]                  // 000000006D74: D2000020 005A4080
  v_and_b32     v50, 63, v52                            // 000000006D7C: 366468BF
  v_and_b32     v52, 63, v53                            // 000000006D80: 36686ABF
  v_lshl_b64    v[53:54], 1, v51                        // 000000006D84: D2C20035 00026681
  v_and_b32     v53, exec_lo, v53                       // 000000006D8C: 366A6A7E
  v_and_b32     v54, exec_hi, v54                       // 000000006D90: 366C6C7F
  v_cmp_ne_u64  s[22:23], 0, v[53:54]                   // 000000006D94: D1CA0016 00026A80
  s_mov_b64     s[26:27], exec                          // 000000006D9C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006DA0: BE9C047E
  s_nop         0x0000                                  // 000000006DA4: BF800000
  s_nop         0x0000                                  // 000000006DA8: BF800000
  s_nop         0x0000                                  // 000000006DAC: BF800000
  s_nop         0x0000                                  // 000000006DB0: BF800000
  s_nop         0x0000                                  // 000000006DB4: BF800000
  s_nop         0x0000                                  // 000000006DB8: BF800000
  s_nop         0x0000                                  // 000000006DBC: BF800000
  label_1B70:
  v_readfirstlane_b32  s5, v51                          // 000000006DC0: 7E0A0533
  v_cmp_eq_u32  vcc, s5, v51                            // 000000006DC4: 7D846605
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006DC8: BE9E246A
  s_cbranch_execz  label_1B78                           // 000000006DCC: BF880004
  v_readlane_b32  s5, v3, s5                            // 000000006DD0: 020A0B03
  v_mov_b32     v53, s5                                 // 000000006DD4: 7E6A0205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006DD8: 8A9C7E1C
  s_cbranch_scc0  label_1B7A                            // 000000006DDC: BF840002
  label_1B78:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006DE0: 87FE1C1E
  s_branch      label_1B70                              // 000000006DE4: BF82FFF6
  label_1B7A:
  s_mov_b64     exec, s[26:27]                          // 000000006DE8: BEFE041A
  v_cndmask_b32  v53, 0, v53, s[22:23]                  // 000000006DEC: D2000035 005A6A80
  v_lshl_b64    v[54:55], 1, v51                        // 000000006DF4: D2C20036 00026681
  v_and_b32     v54, exec_lo, v54                       // 000000006DFC: 366C6C7E
  v_and_b32     v55, exec_hi, v55                       // 000000006E00: 366E6E7F
  v_cmp_ne_u64  s[22:23], 0, v[54:55]                   // 000000006E04: D1CA0016 00026C80
  s_mov_b64     s[26:27], exec                          // 000000006E0C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006E10: BE9C047E
  s_nop         0x0000                                  // 000000006E14: BF800000
  s_nop         0x0000                                  // 000000006E18: BF800000
  s_nop         0x0000                                  // 000000006E1C: BF800000
  label_1B88:
  v_readfirstlane_b32  s5, v51                          // 000000006E20: 7E0A0533
  v_cmp_eq_u32  vcc, s5, v51                            // 000000006E24: 7D846605
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006E28: BE9E246A
  s_cbranch_execz  label_1B90                           // 000000006E2C: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000006E30: 020A0B4F
  v_mov_b32     v54, s5                                 // 000000006E34: 7E6C0205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006E38: 8A9C7E1C
  s_cbranch_scc0  label_1B92                            // 000000006E3C: BF840002
  label_1B90:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006E40: 87FE1C1E
  s_branch      label_1B88                              // 000000006E44: BF82FFF6
  label_1B92:
  s_mov_b64     exec, s[26:27]                          // 000000006E48: BEFE041A
  v_cndmask_b32  v54, 0, v54, s[22:23]                  // 000000006E4C: D2000036 005A6C80
  v_lshl_b64    v[55:56], 1, v51                        // 000000006E54: D2C20037 00026681
  v_and_b32     v55, exec_lo, v55                       // 000000006E5C: 366E6E7E
  v_and_b32     v56, exec_hi, v56                       // 000000006E60: 3670707F
  v_cmp_ne_u64  s[22:23], 0, v[55:56]                   // 000000006E64: D1CA0016 00026E80
  s_mov_b64     s[26:27], exec                          // 000000006E6C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006E70: BE9C047E
  s_nop         0x0000                                  // 000000006E74: BF800000
  s_nop         0x0000                                  // 000000006E78: BF800000
  s_nop         0x0000                                  // 000000006E7C: BF800000
  label_1BA0:
  v_readfirstlane_b32  s5, v51                          // 000000006E80: 7E0A0533
  v_cmp_eq_u32  vcc, s5, v51                            // 000000006E84: 7D846605
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006E88: BE9E246A
  s_cbranch_execz  label_1BA8                           // 000000006E8C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000006E90: 020A0B51
  v_mov_b32     v51, s5                                 // 000000006E94: 7E660205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006E98: 8A9C7E1C
  s_cbranch_scc0  label_1BAA                            // 000000006E9C: BF840002
  label_1BA8:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006EA0: 87FE1C1E
  s_branch      label_1BA0                              // 000000006EA4: BF82FFF6
  label_1BAA:
  s_mov_b64     exec, s[26:27]                          // 000000006EA8: BEFE041A
  v_cndmask_b32  v51, 0, v51, s[22:23]                  // 000000006EAC: D2000033 005A6680
  v_lshl_b64    v[55:56], 1, v50                        // 000000006EB4: D2C20037 00026481
  v_and_b32     v55, exec_lo, v55                       // 000000006EBC: 366E6E7E
  v_and_b32     v56, exec_hi, v56                       // 000000006EC0: 3670707F
  v_cmp_ne_u64  s[22:23], 0, v[55:56]                   // 000000006EC4: D1CA0016 00026E80
  s_mov_b64     s[26:27], exec                          // 000000006ECC: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006ED0: BE9C047E
  s_nop         0x0000                                  // 000000006ED4: BF800000
  s_nop         0x0000                                  // 000000006ED8: BF800000
  s_nop         0x0000                                  // 000000006EDC: BF800000
  label_1BB8:
  v_readfirstlane_b32  s5, v50                          // 000000006EE0: 7E0A0532
  v_cmp_eq_u32  vcc, s5, v50                            // 000000006EE4: 7D846405
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006EE8: BE9E246A
  s_cbranch_execz  label_1BC0                           // 000000006EEC: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000006EF0: 020A0B51
  v_mov_b32     v55, s5                                 // 000000006EF4: 7E6E0205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006EF8: 8A9C7E1C
  s_cbranch_scc0  label_1BC2                            // 000000006EFC: BF840002
  label_1BC0:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006F00: 87FE1C1E
  s_branch      label_1BB8                              // 000000006F04: BF82FFF6
  label_1BC2:
  s_mov_b64     exec, s[26:27]                          // 000000006F08: BEFE041A
  v_cndmask_b32  v55, 0, v55, s[22:23]                  // 000000006F0C: D2000037 005A6E80
  v_lshl_b64    v[56:57], 1, v50                        // 000000006F14: D2C20038 00026481
  v_and_b32     v56, exec_lo, v56                       // 000000006F1C: 3670707E
  v_and_b32     v57, exec_hi, v57                       // 000000006F20: 3672727F
  v_cmp_ne_u64  s[22:23], 0, v[56:57]                   // 000000006F24: D1CA0016 00027080
  s_mov_b64     s[26:27], exec                          // 000000006F2C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006F30: BE9C047E
  s_nop         0x0000                                  // 000000006F34: BF800000
  s_nop         0x0000                                  // 000000006F38: BF800000
  s_nop         0x0000                                  // 000000006F3C: BF800000
  label_1BD0:
  v_readfirstlane_b32  s5, v50                          // 000000006F40: 7E0A0532
  v_cmp_eq_u32  vcc, s5, v50                            // 000000006F44: 7D846405
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006F48: BE9E246A
  s_cbranch_execz  label_1BD8                           // 000000006F4C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000006F50: 020A0B09
  v_mov_b32     v56, s5                                 // 000000006F54: 7E700205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006F58: 8A9C7E1C
  s_cbranch_scc0  label_1BDA                            // 000000006F5C: BF840002
  label_1BD8:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006F60: 87FE1C1E
  s_branch      label_1BD0                              // 000000006F64: BF82FFF6
  label_1BDA:
  s_mov_b64     exec, s[26:27]                          // 000000006F68: BEFE041A
  v_cndmask_b32  v56, 0, v56, s[22:23]                  // 000000006F6C: D2000038 005A7080
  v_lshl_b64    v[57:58], 1, v50                        // 000000006F74: D2C20039 00026481
  v_and_b32     v57, exec_lo, v57                       // 000000006F7C: 3672727E
  v_and_b32     v58, exec_hi, v58                       // 000000006F80: 3674747F
  v_cmp_ne_u64  s[22:23], 0, v[57:58]                   // 000000006F84: D1CA0016 00027280
  s_mov_b64     s[26:27], exec                          // 000000006F8C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006F90: BE9C047E
  s_nop         0x0000                                  // 000000006F94: BF800000
  s_nop         0x0000                                  // 000000006F98: BF800000
  s_nop         0x0000                                  // 000000006F9C: BF800000
  label_1BE8:
  v_readfirstlane_b32  s5, v50                          // 000000006FA0: 7E0A0532
  v_cmp_eq_u32  vcc, s5, v50                            // 000000006FA4: 7D846405
  s_and_saveexec_b64  s[30:31], vcc                     // 000000006FA8: BE9E246A
  s_cbranch_execz  label_1BF0                           // 000000006FAC: BF880004
  v_readlane_b32  s5, v10, s5                           // 000000006FB0: 020A0B0A
  v_mov_b32     v57, s5                                 // 000000006FB4: 7E720205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000006FB8: 8A9C7E1C
  s_cbranch_scc0  label_1BF2                            // 000000006FBC: BF840002
  label_1BF0:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000006FC0: 87FE1C1E
  s_branch      label_1BE8                              // 000000006FC4: BF82FFF6
  label_1BF2:
  s_mov_b64     exec, s[26:27]                          // 000000006FC8: BEFE041A
  v_cndmask_b32  v57, 0, v57, s[22:23]                  // 000000006FCC: D2000039 005A7280
  v_lshl_b64    v[58:59], 1, v52                        // 000000006FD4: D2C2003A 00026881
  v_and_b32     v58, exec_lo, v58                       // 000000006FDC: 3674747E
  v_and_b32     v59, exec_hi, v59                       // 000000006FE0: 3676767F
  v_cmp_ne_u64  s[22:23], 0, v[58:59]                   // 000000006FE4: D1CA0016 00027480
  s_mov_b64     s[26:27], exec                          // 000000006FEC: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000006FF0: BE9C047E
  s_nop         0x0000                                  // 000000006FF4: BF800000
  s_nop         0x0000                                  // 000000006FF8: BF800000
  s_nop         0x0000                                  // 000000006FFC: BF800000
  label_1C00:
  v_readfirstlane_b32  s5, v52                          // 000000007000: 7E0A0534
  v_cmp_eq_u32  vcc, s5, v52                            // 000000007004: 7D846805
  s_and_saveexec_b64  s[30:31], vcc                     // 000000007008: BE9E246A
  s_cbranch_execz  label_1C08                           // 00000000700C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000007010: 020A0B51
  v_mov_b32     v58, s5                                 // 000000007014: 7E740205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000007018: 8A9C7E1C
  s_cbranch_scc0  label_1C0A                            // 00000000701C: BF840002
  label_1C08:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000007020: 87FE1C1E
  s_branch      label_1C00                              // 000000007024: BF82FFF6
  label_1C0A:
  s_mov_b64     exec, s[26:27]                          // 000000007028: BEFE041A
  v_cndmask_b32  v58, 0, v58, s[22:23]                  // 00000000702C: D200003A 005A7480
  v_lshl_b64    v[59:60], 1, v52                        // 000000007034: D2C2003B 00026881
  v_and_b32     v59, exec_lo, v59                       // 00000000703C: 3676767E
  v_and_b32     v60, exec_hi, v60                       // 000000007040: 3678787F
  v_cmp_ne_u64  s[22:23], 0, v[59:60]                   // 000000007044: D1CA0016 00027680
  s_mov_b64     s[26:27], exec                          // 00000000704C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000007050: BE9C047E
  s_nop         0x0000                                  // 000000007054: BF800000
  s_nop         0x0000                                  // 000000007058: BF800000
  s_nop         0x0000                                  // 00000000705C: BF800000
  label_1C18:
  v_readfirstlane_b32  s5, v52                          // 000000007060: 7E0A0534
  v_cmp_eq_u32  vcc, s5, v52                            // 000000007064: 7D846805
  s_and_saveexec_b64  s[30:31], vcc                     // 000000007068: BE9E246A
  s_cbranch_execz  label_1C20                           // 00000000706C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000007070: 020A0B09
  v_mov_b32     v59, s5                                 // 000000007074: 7E760205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000007078: 8A9C7E1C
  s_cbranch_scc0  label_1C22                            // 00000000707C: BF840002
  label_1C20:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000007080: 87FE1C1E
  s_branch      label_1C18                              // 000000007084: BF82FFF6
  label_1C22:
  s_mov_b64     exec, s[26:27]                          // 000000007088: BEFE041A
  v_cndmask_b32  v59, 0, v59, s[22:23]                  // 00000000708C: D200003B 005A7680
  v_lshl_b64    v[60:61], 1, v52                        // 000000007094: D2C2003C 00026881
  v_and_b32     v60, exec_lo, v60                       // 00000000709C: 3678787E
  v_and_b32     v61, exec_hi, v61                       // 0000000070A0: 367A7A7F
  v_cmp_ne_u64  s[22:23], 0, v[60:61]                   // 0000000070A4: D1CA0016 00027880
  s_mov_b64     s[26:27], exec                          // 0000000070AC: BE9A047E
  s_mov_b64     s[28:29], exec                          // 0000000070B0: BE9C047E
  s_nop         0x0000                                  // 0000000070B4: BF800000
  s_nop         0x0000                                  // 0000000070B8: BF800000
  s_nop         0x0000                                  // 0000000070BC: BF800000
  label_1C30:
  v_readfirstlane_b32  s5, v52                          // 0000000070C0: 7E0A0534
  v_cmp_eq_u32  vcc, s5, v52                            // 0000000070C4: 7D846805
  s_and_saveexec_b64  s[30:31], vcc                     // 0000000070C8: BE9E246A
  s_cbranch_execz  label_1C38                           // 0000000070CC: BF880004
  v_readlane_b32  s5, v10, s5                           // 0000000070D0: 020A0B0A
  v_mov_b32     v60, s5                                 // 0000000070D4: 7E780205
  s_andn2_b64   s[28:29], s[28:29], exec                // 0000000070D8: 8A9C7E1C
  s_cbranch_scc0  label_1C3A                            // 0000000070DC: BF840002
  label_1C38:
  s_and_b64     exec, s[30:31], s[28:29]                // 0000000070E0: 87FE1C1E
  s_branch      label_1C30                              // 0000000070E4: BF82FFF6
  label_1C3A:
  s_mov_b64     exec, s[26:27]                          // 0000000070E8: BEFE041A
  v_cndmask_b32  v60, 0, v60, s[22:23]                  // 0000000070EC: D200003C 005A7880
  s_mov_b64     s[22:23], exec                          // 0000000070F4: BE96047E
  s_andn2_b64   exec, s[22:23], s[20:21]                // 0000000070F8: 8AFE1416
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000070FC: BF8C0070
  v_mul_f32     v32, v43, v37                           // 000000007100: 10404B2B
  s_andn2_b64   exec, s[22:23], exec                    // 000000007104: 8AFE7E16
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000007108: BF8C0070
  v_mul_f32     v32, v43, v32                           // 00000000710C: 1040412B
  v_mul_f32     v37, v43, v42                           // 000000007110: 104A552B
  v_cndmask_b32  v32, v32, v37, s[24:25]                // 000000007114: D2000020 00624B20
  s_and_b64     exec, s[22:23], s[18:19]                // 00000000711C: 87FE1216
  v_mul_f32     v37, v43, v53                           // 000000007120: 104A6B2B
  v_mul_f32     v42, v43, v55                           // 000000007124: 10546F2B
  s_andn2_b64   exec, s[22:23], exec                    // 000000007128: 8AFE7E16
  v_mul_f32     v37, v43, v54                           // 00000000712C: 104A6D2B
  s_cbranch_execz  label_1C54                           // 000000007130: BF880007
  v_mul_f32     v42, v43, v51                           // 000000007134: 1054672B
  v_mul_f32     v51, v43, v56                           // 000000007138: 1066712B
  v_mul_f32     v53, v43, v57                           // 00000000713C: 106A732B
  v_cndmask_b32  v37, v42, v37, s[24:25]                // 000000007140: D2000025 00624B2A
  v_cmp_gt_i32  vcc, 42, v2                             // 000000007148: 7D0804AA
  v_cndmask_b32  v42, v53, v51, vcc                     // 00000000714C: 00546735
  label_1C54:
  s_mov_b64     exec, s[22:23]                          // 000000007150: BEFE0416
  v_add_f32     v15, v15, v31                           // 000000007154: 061E3F0F
  v_cmp_lt_i32  s[20:21], v2, 10                        // 000000007158: D1020014 00011502
  v_lshl_b64    v[53:54], 1, v50                        // 000000007160: D2C20035 00026481
  v_and_b32     v53, exec_lo, v53                       // 000000007168: 366A6A7E
  v_and_b32     v54, exec_hi, v54                       // 00000000716C: 366C6C7F
  v_cmp_ne_u64  s[22:23], 0, v[53:54]                   // 000000007170: D1CA0016 00026A80
  s_mov_b64     s[26:27], exec                          // 000000007178: BE9A047E
  s_mov_b64     s[28:29], exec                          // 00000000717C: BE9C047E
  label_1C60:
  v_readfirstlane_b32  s5, v50                          // 000000007180: 7E0A0532
  v_cmp_eq_u32  vcc, s5, v50                            // 000000007184: 7D846405
  s_and_saveexec_b64  s[30:31], vcc                     // 000000007188: BE9E246A
  s_cbranch_execz  label_1C68                           // 00000000718C: BF880004
  v_readlane_b32  s5, v3, s5                            // 000000007190: 020A0B03
  v_mov_b32     v31, s5                                 // 000000007194: 7E3E0205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000007198: 8A9C7E1C
  s_cbranch_scc0  label_1C6A                            // 00000000719C: BF840002
  label_1C68:
  s_and_b64     exec, s[30:31], s[28:29]                // 0000000071A0: 87FE1C1E
  s_branch      label_1C60                              // 0000000071A4: BF82FFF6
  label_1C6A:
  s_mov_b64     exec, s[26:27]                          // 0000000071A8: BEFE041A
  v_cndmask_b32  v31, 0, v31, s[22:23]                  // 0000000071AC: D200001F 005A3E80
  v_lshl_b64    v[53:54], 1, v50                        // 0000000071B4: D2C20035 00026481
  v_and_b32     v53, exec_lo, v53                       // 0000000071BC: 366A6A7E
  v_and_b32     v54, exec_hi, v54                       // 0000000071C0: 366C6C7F
  v_cmp_ne_u64  s[22:23], 0, v[53:54]                   // 0000000071C4: D1CA0016 00026A80
  s_mov_b64     s[26:27], exec                          // 0000000071CC: BE9A047E
  s_mov_b64     s[28:29], exec                          // 0000000071D0: BE9C047E
  s_nop         0x0000                                  // 0000000071D4: BF800000
  s_nop         0x0000                                  // 0000000071D8: BF800000
  s_nop         0x0000                                  // 0000000071DC: BF800000
  label_1C78:
  v_readfirstlane_b32  s5, v50                          // 0000000071E0: 7E0A0532
  v_cmp_eq_u32  vcc, s5, v50                            // 0000000071E4: 7D846405
  s_and_saveexec_b64  s[30:31], vcc                     // 0000000071E8: BE9E246A
  s_cbranch_execz  label_1C80                           // 0000000071EC: BF880004
  v_readlane_b32  s5, v79, s5                           // 0000000071F0: 020A0B4F
  v_mov_b32     v51, s5                                 // 0000000071F4: 7E660205
  s_andn2_b64   s[28:29], s[28:29], exec                // 0000000071F8: 8A9C7E1C
  s_cbranch_scc0  label_1C82                            // 0000000071FC: BF840002
  label_1C80:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000007200: 87FE1C1E
  s_branch      label_1C78                              // 000000007204: BF82FFF6
  label_1C82:
  s_mov_b64     exec, s[26:27]                          // 000000007208: BEFE041A
  v_cndmask_b32  v51, 0, v51, s[22:23]                  // 00000000720C: D2000033 005A6680
  v_lshl_b64    v[53:54], 1, v50                        // 000000007214: D2C20035 00026481
  v_and_b32     v53, exec_lo, v53                       // 00000000721C: 366A6A7E
  v_and_b32     v54, exec_hi, v54                       // 000000007220: 366C6C7F
  v_cmp_ne_u64  s[22:23], 0, v[53:54]                   // 000000007224: D1CA0016 00026A80
  s_mov_b64     s[26:27], exec                          // 00000000722C: BE9A047E
  s_mov_b64     s[28:29], exec                          // 000000007230: BE9C047E
  s_nop         0x0000                                  // 000000007234: BF800000
  s_nop         0x0000                                  // 000000007238: BF800000
  s_nop         0x0000                                  // 00000000723C: BF800000
  label_1C90:
  v_readfirstlane_b32  s5, v50                          // 000000007240: 7E0A0532
  v_cmp_eq_u32  vcc, s5, v50                            // 000000007244: 7D846405
  s_and_saveexec_b64  s[30:31], vcc                     // 000000007248: BE9E246A
  s_cbranch_execz  label_1C98                           // 00000000724C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000007250: 020A0B51
  v_mov_b32     v50, s5                                 // 000000007254: 7E640205
  s_andn2_b64   s[28:29], s[28:29], exec                // 000000007258: 8A9C7E1C
  s_cbranch_scc0  label_1C9A                            // 00000000725C: BF840002
  label_1C98:
  s_and_b64     exec, s[30:31], s[28:29]                // 000000007260: 87FE1C1E
  s_branch      label_1C90                              // 000000007264: BF82FFF6
  label_1C9A:
  s_mov_b64     exec, s[26:27]                          // 000000007268: BEFE041A
  s_add_u32     s26, s14, 24                            // 00000000726C: 801A980E
  s_addc_u32    s27, s15, 0                             // 000000007270: 821B800F
  v_mov_b32     v53, s26                                // 000000007274: 7E6A021A
  v_mov_b32     v54, s27                                // 000000007278: 7E6C021B
  v_add_i32     v55, vcc, 52, v5                        // 00000000727C: 4A6E0AB4
  v_add_i32     v56, vcc, 60, v5                        // 000000007280: 4A700ABC
  flat_load_dword  v53, v[53:54]                        // 000000007284: DC300000 35000035
  v_cndmask_b32  v50, 0, v50, s[22:23]                  // 00000000728C: D2000032 005A6480
  s_xor_b64     s[22:23], s[18:19], -1                  // 000000007294: 8996C112
  v_and_b32     v54, 63, v55                            // 000000007298: 366C6EBF
  v_and_b32     v55, 63, v56                            // 00000000729C: 366E70BF
  v_lshl_b64    v[56:57], 1, v52                        // 0000000072A0: D2C20038 00026881
  v_and_b32     v56, exec_lo, v56                       // 0000000072A8: 3670707E
  v_and_b32     v57, exec_hi, v57                       // 0000000072AC: 3672727F
  v_cmp_ne_u64  s[26:27], 0, v[56:57]                   // 0000000072B0: D1CA001A 00027080
  s_mov_b64     s[28:29], exec                          // 0000000072B8: BE9C047E
  s_mov_b64     s[30:31], exec                          // 0000000072BC: BE9E047E
  label_1CB0:
  v_readfirstlane_b32  s5, v52                          // 0000000072C0: 7E0A0534
  v_cmp_eq_u32  vcc, s5, v52                            // 0000000072C4: 7D846805
  s_and_saveexec_b64  s[32:33], vcc                     // 0000000072C8: BEA0246A
  s_cbranch_execz  label_1CB8                           // 0000000072CC: BF880004
  v_readlane_b32  s5, v3, s5                            // 0000000072D0: 020A0B03
  v_mov_b32     v56, s5                                 // 0000000072D4: 7E700205
  s_andn2_b64   s[30:31], s[30:31], exec                // 0000000072D8: 8A9E7E1E
  s_cbranch_scc0  label_1CBA                            // 0000000072DC: BF840002
  label_1CB8:
  s_and_b64     exec, s[32:33], s[30:31]                // 0000000072E0: 87FE1E20
  s_branch      label_1CB0                              // 0000000072E4: BF82FFF6
  label_1CBA:
  s_mov_b64     exec, s[28:29]                          // 0000000072E8: BEFE041C
  v_cndmask_b32  v56, 0, v56, s[26:27]                  // 0000000072EC: D2000038 006A7080
  v_lshl_b64    v[61:62], 1, v52                        // 0000000072F4: D2C2003D 00026881
  v_and_b32     v61, exec_lo, v61                       // 0000000072FC: 367A7A7E
  v_and_b32     v62, exec_hi, v62                       // 000000007300: 367C7C7F
  v_cmp_ne_u64  s[26:27], 0, v[61:62]                   // 000000007304: D1CA001A 00027A80
  s_mov_b64     s[28:29], exec                          // 00000000730C: BE9C047E
  s_mov_b64     s[30:31], exec                          // 000000007310: BE9E047E
  s_nop         0x0000                                  // 000000007314: BF800000
  s_nop         0x0000                                  // 000000007318: BF800000
  s_nop         0x0000                                  // 00000000731C: BF800000
  label_1CC8:
  v_readfirstlane_b32  s5, v52                          // 000000007320: 7E0A0534
  v_cmp_eq_u32  vcc, s5, v52                            // 000000007324: 7D846805
  s_and_saveexec_b64  s[32:33], vcc                     // 000000007328: BEA0246A
  s_cbranch_execz  label_1CD0                           // 00000000732C: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000007330: 020A0B4F
  v_mov_b32     v57, s5                                 // 000000007334: 7E720205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000007338: 8A9E7E1E
  s_cbranch_scc0  label_1CD2                            // 00000000733C: BF840002
  label_1CD0:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000007340: 87FE1E20
  s_branch      label_1CC8                              // 000000007344: BF82FFF6
  label_1CD2:
  s_mov_b64     exec, s[28:29]                          // 000000007348: BEFE041C
  v_cndmask_b32  v57, 0, v57, s[26:27]                  // 00000000734C: D2000039 006A7280
  v_lshl_b64    v[61:62], 1, v52                        // 000000007354: D2C2003D 00026881
  v_and_b32     v61, exec_lo, v61                       // 00000000735C: 367A7A7E
  v_and_b32     v62, exec_hi, v62                       // 000000007360: 367C7C7F
  v_cmp_ne_u64  s[26:27], 0, v[61:62]                   // 000000007364: D1CA001A 00027A80
  s_mov_b64     s[28:29], exec                          // 00000000736C: BE9C047E
  s_mov_b64     s[30:31], exec                          // 000000007370: BE9E047E
  s_nop         0x0000                                  // 000000007374: BF800000
  s_nop         0x0000                                  // 000000007378: BF800000
  s_nop         0x0000                                  // 00000000737C: BF800000
  label_1CE0:
  v_readfirstlane_b32  s5, v52                          // 000000007380: 7E0A0534
  v_cmp_eq_u32  vcc, s5, v52                            // 000000007384: 7D846805
  s_and_saveexec_b64  s[32:33], vcc                     // 000000007388: BEA0246A
  s_cbranch_execz  label_1CE8                           // 00000000738C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000007390: 020A0B51
  v_mov_b32     v52, s5                                 // 000000007394: 7E680205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000007398: 8A9E7E1E
  s_cbranch_scc0  label_1CEA                            // 00000000739C: BF840002
  label_1CE8:
  s_and_b64     exec, s[32:33], s[30:31]                // 0000000073A0: 87FE1E20
  s_branch      label_1CE0                              // 0000000073A4: BF82FFF6
  label_1CEA:
  s_mov_b64     exec, s[28:29]                          // 0000000073A8: BEFE041C
  v_cndmask_b32  v52, 0, v52, s[26:27]                  // 0000000073AC: D2000034 006A6880
  v_lshl_b64    v[61:62], 1, v54                        // 0000000073B4: D2C2003D 00026C81
  v_and_b32     v61, exec_lo, v61                       // 0000000073BC: 367A7A7E
  v_and_b32     v62, exec_hi, v62                       // 0000000073C0: 367C7C7F
  v_cmp_ne_u64  s[26:27], 0, v[61:62]                   // 0000000073C4: D1CA001A 00027A80
  s_mov_b64     s[28:29], exec                          // 0000000073CC: BE9C047E
  s_mov_b64     s[30:31], exec                          // 0000000073D0: BE9E047E
  s_nop         0x0000                                  // 0000000073D4: BF800000
  s_nop         0x0000                                  // 0000000073D8: BF800000
  s_nop         0x0000                                  // 0000000073DC: BF800000
  label_1CF8:
  v_readfirstlane_b32  s5, v54                          // 0000000073E0: 7E0A0536
  v_cmp_eq_u32  vcc, s5, v54                            // 0000000073E4: 7D846C05
  s_and_saveexec_b64  s[32:33], vcc                     // 0000000073E8: BEA0246A
  s_cbranch_execz  label_1D00                           // 0000000073EC: BF880004
  v_readlane_b32  s5, v81, s5                           // 0000000073F0: 020A0B51
  v_mov_b32     v61, s5                                 // 0000000073F4: 7E7A0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 0000000073F8: 8A9E7E1E
  s_cbranch_scc0  label_1D02                            // 0000000073FC: BF840002
  label_1D00:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000007400: 87FE1E20
  s_branch      label_1CF8                              // 000000007404: BF82FFF6
  label_1D02:
  s_mov_b64     exec, s[28:29]                          // 000000007408: BEFE041C
  v_cndmask_b32  v61, 0, v61, s[26:27]                  // 00000000740C: D200003D 006A7A80
  v_lshl_b64    v[62:63], 1, v54                        // 000000007414: D2C2003E 00026C81
  v_and_b32     v62, exec_lo, v62                       // 00000000741C: 367C7C7E
  v_and_b32     v63, exec_hi, v63                       // 000000007420: 367E7E7F
  v_cmp_ne_u64  s[26:27], 0, v[62:63]                   // 000000007424: D1CA001A 00027C80
  s_mov_b64     s[28:29], exec                          // 00000000742C: BE9C047E
  s_mov_b64     s[30:31], exec                          // 000000007430: BE9E047E
  s_nop         0x0000                                  // 000000007434: BF800000
  s_nop         0x0000                                  // 000000007438: BF800000
  s_nop         0x0000                                  // 00000000743C: BF800000
  label_1D10:
  v_readfirstlane_b32  s5, v54                          // 000000007440: 7E0A0536
  v_cmp_eq_u32  vcc, s5, v54                            // 000000007444: 7D846C05
  s_and_saveexec_b64  s[32:33], vcc                     // 000000007448: BEA0246A
  s_cbranch_execz  label_1D18                           // 00000000744C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000007450: 020A0B09
  v_mov_b32     v62, s5                                 // 000000007454: 7E7C0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000007458: 8A9E7E1E
  s_cbranch_scc0  label_1D1A                            // 00000000745C: BF840002
  label_1D18:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000007460: 87FE1E20
  s_branch      label_1D10                              // 000000007464: BF82FFF6
  label_1D1A:
  s_mov_b64     exec, s[28:29]                          // 000000007468: BEFE041C
  v_cndmask_b32  v62, 0, v62, s[26:27]                  // 00000000746C: D200003E 006A7C80
  v_lshl_b64    v[63:64], 1, v54                        // 000000007474: D2C2003F 00026C81
  v_and_b32     v63, exec_lo, v63                       // 00000000747C: 367E7E7E
  v_and_b32     v64, exec_hi, v64                       // 000000007480: 3680807F
  v_cmp_ne_u64  s[26:27], 0, v[63:64]                   // 000000007484: D1CA001A 00027E80
  s_mov_b64     s[28:29], exec                          // 00000000748C: BE9C047E
  s_mov_b64     s[30:31], exec                          // 000000007490: BE9E047E
  s_nop         0x0000                                  // 000000007494: BF800000
  s_nop         0x0000                                  // 000000007498: BF800000
  s_nop         0x0000                                  // 00000000749C: BF800000
  label_1D28:
  v_readfirstlane_b32  s5, v54                          // 0000000074A0: 7E0A0536
  v_cmp_eq_u32  vcc, s5, v54                            // 0000000074A4: 7D846C05
  s_and_saveexec_b64  s[32:33], vcc                     // 0000000074A8: BEA0246A
  s_cbranch_execz  label_1D30                           // 0000000074AC: BF880004
  v_readlane_b32  s5, v10, s5                           // 0000000074B0: 020A0B0A
  v_mov_b32     v54, s5                                 // 0000000074B4: 7E6C0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 0000000074B8: 8A9E7E1E
  s_cbranch_scc0  label_1D32                            // 0000000074BC: BF840002
  label_1D30:
  s_and_b64     exec, s[32:33], s[30:31]                // 0000000074C0: 87FE1E20
  s_branch      label_1D28                              // 0000000074C4: BF82FFF6
  label_1D32:
  s_mov_b64     exec, s[28:29]                          // 0000000074C8: BEFE041C
  v_cndmask_b32  v54, 0, v54, s[26:27]                  // 0000000074CC: D2000036 006A6C80
  v_lshl_b64    v[63:64], 1, v55                        // 0000000074D4: D2C2003F 00026E81
  v_and_b32     v63, exec_lo, v63                       // 0000000074DC: 367E7E7E
  v_and_b32     v64, exec_hi, v64                       // 0000000074E0: 3680807F
  v_cmp_ne_u64  s[26:27], 0, v[63:64]                   // 0000000074E4: D1CA001A 00027E80
  s_mov_b64     s[28:29], exec                          // 0000000074EC: BE9C047E
  s_mov_b64     s[30:31], exec                          // 0000000074F0: BE9E047E
  s_nop         0x0000                                  // 0000000074F4: BF800000
  s_nop         0x0000                                  // 0000000074F8: BF800000
  s_nop         0x0000                                  // 0000000074FC: BF800000
  label_1D40:
  v_readfirstlane_b32  s5, v55                          // 000000007500: 7E0A0537
  v_cmp_eq_u32  vcc, s5, v55                            // 000000007504: 7D846E05
  s_and_saveexec_b64  s[32:33], vcc                     // 000000007508: BEA0246A
  s_cbranch_execz  label_1D48                           // 00000000750C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000007510: 020A0B51
  v_mov_b32     v63, s5                                 // 000000007514: 7E7E0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000007518: 8A9E7E1E
  s_cbranch_scc0  label_1D4A                            // 00000000751C: BF840002
  label_1D48:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000007520: 87FE1E20
  s_branch      label_1D40                              // 000000007524: BF82FFF6
  label_1D4A:
  s_mov_b64     exec, s[28:29]                          // 000000007528: BEFE041C
  v_cndmask_b32  v63, 0, v63, s[26:27]                  // 00000000752C: D200003F 006A7E80
  v_lshl_b64    v[64:65], 1, v55                        // 000000007534: D2C20040 00026E81
  v_and_b32     v64, exec_lo, v64                       // 00000000753C: 3680807E
  v_and_b32     v65, exec_hi, v65                       // 000000007540: 3682827F
  v_cmp_ne_u64  s[26:27], 0, v[64:65]                   // 000000007544: D1CA001A 00028080
  s_mov_b64     s[28:29], exec                          // 00000000754C: BE9C047E
  s_mov_b64     s[30:31], exec                          // 000000007550: BE9E047E
  s_nop         0x0000                                  // 000000007554: BF800000
  s_nop         0x0000                                  // 000000007558: BF800000
  s_nop         0x0000                                  // 00000000755C: BF800000
  label_1D58:
  v_readfirstlane_b32  s5, v55                          // 000000007560: 7E0A0537
  v_cmp_eq_u32  vcc, s5, v55                            // 000000007564: 7D846E05
  s_and_saveexec_b64  s[32:33], vcc                     // 000000007568: BEA0246A
  s_cbranch_execz  label_1D60                           // 00000000756C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000007570: 020A0B09
  v_mov_b32     v64, s5                                 // 000000007574: 7E800205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000007578: 8A9E7E1E
  s_cbranch_scc0  label_1D62                            // 00000000757C: BF840002
  label_1D60:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000007580: 87FE1E20
  s_branch      label_1D58                              // 000000007584: BF82FFF6
  label_1D62:
  s_mov_b64     exec, s[28:29]                          // 000000007588: BEFE041C
  v_cndmask_b32  v64, 0, v64, s[26:27]                  // 00000000758C: D2000040 006A8080
  v_lshl_b64    v[65:66], 1, v55                        // 000000007594: D2C20041 00026E81
  v_and_b32     v65, exec_lo, v65                       // 00000000759C: 3682827E
  v_and_b32     v66, exec_hi, v66                       // 0000000075A0: 3684847F
  v_cmp_ne_u64  s[26:27], 0, v[65:66]                   // 0000000075A4: D1CA001A 00028280
  s_mov_b64     s[28:29], exec                          // 0000000075AC: BE9C047E
  s_mov_b64     s[30:31], exec                          // 0000000075B0: BE9E047E
  s_nop         0x0000                                  // 0000000075B4: BF800000
  s_nop         0x0000                                  // 0000000075B8: BF800000
  s_nop         0x0000                                  // 0000000075BC: BF800000
  label_1D70:
  v_readfirstlane_b32  s5, v55                          // 0000000075C0: 7E0A0537
  v_cmp_eq_u32  vcc, s5, v55                            // 0000000075C4: 7D846E05
  s_and_saveexec_b64  s[32:33], vcc                     // 0000000075C8: BEA0246A
  s_cbranch_execz  label_1D78                           // 0000000075CC: BF880004
  v_readlane_b32  s5, v10, s5                           // 0000000075D0: 020A0B0A
  v_mov_b32     v65, s5                                 // 0000000075D4: 7E820205
  s_andn2_b64   s[30:31], s[30:31], exec                // 0000000075D8: 8A9E7E1E
  s_cbranch_scc0  label_1D7A                            // 0000000075DC: BF840002
  label_1D78:
  s_and_b64     exec, s[32:33], s[30:31]                // 0000000075E0: 87FE1E20
  s_branch      label_1D70                              // 0000000075E4: BF82FFF6
  label_1D7A:
  s_mov_b64     exec, s[28:29]                          // 0000000075E8: BEFE041C
  v_cndmask_b32  v65, 0, v65, s[26:27]                  // 0000000075EC: D2000041 006A8280
  v_lshl_b64    v[66:67], 1, v55                        // 0000000075F4: D2C20042 00026E81
  v_and_b32     v66, exec_lo, v66                       // 0000000075FC: 3684847E
  v_and_b32     v67, exec_hi, v67                       // 000000007600: 3686867F
  v_cmp_ne_u64  s[26:27], 0, v[66:67]                   // 000000007604: D1CA001A 00028480
  s_mov_b64     s[28:29], exec                          // 00000000760C: BE9C047E
  s_mov_b64     s[30:31], exec                          // 000000007610: BE9E047E
  s_nop         0x0000                                  // 000000007614: BF800000
  s_nop         0x0000                                  // 000000007618: BF800000
  s_nop         0x0000                                  // 00000000761C: BF800000
  label_1D88:
  v_readfirstlane_b32  s5, v55                          // 000000007620: 7E0A0537
  v_cmp_eq_u32  vcc, s5, v55                            // 000000007624: 7D846E05
  s_and_saveexec_b64  s[32:33], vcc                     // 000000007628: BEA0246A
  s_cbranch_execz  label_1D90                           // 00000000762C: BF880004
  v_readlane_b32  s5, v4, s5                            // 000000007630: 020A0B04
  v_mov_b32     v55, s5                                 // 000000007634: 7E6E0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000007638: 8A9E7E1E
  s_cbranch_scc0  label_1D92                            // 00000000763C: BF840002
  label_1D90:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000007640: 87FE1E20
  s_branch      label_1D88                              // 000000007644: BF82FFF6
  label_1D92:
  s_mov_b64     exec, s[28:29]                          // 000000007648: BEFE041C
  v_cndmask_b32  v55, 0, v55, s[26:27]                  // 00000000764C: D2000037 006A6E80
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000007654: BF8C0070
  v_mul_f32     v31, v53, v31                           // 000000007658: 103E3F35
  v_mul_f32     v50, v53, v50                           // 00000000765C: 10646535
  v_mul_f32     v51, v53, v51                           // 000000007660: 10666735
  v_cmp_gt_i32  vcc, 42, v2                             // 000000007664: 7D0804AA
  v_cndmask_b32  v50, v50, v51, vcc                     // 000000007668: 00646732
  v_cndmask_b32  v31, v31, v50, s[22:23]                // 00000000766C: D200001F 005A651F
  v_cmp_lt_i32  s[26:27], v2, 40                        // 000000007674: D102001A 00015102
  v_add_f32     v15, v15, v37                           // 00000000767C: 061E4B0F
  v_cmp_le_i32  vcc, 10, v2                             // 000000007680: 7D06048A
  v_cndmask_b32  v8, 0, -1, vcc                         // 000000007684: D2000008 01A98280
  s_mov_b64     s[28:29], exec                          // 00000000768C: BE9C047E
  s_andn2_b64   exec, s[28:29], vcc                     // 000000007690: 8AFE6A1C
  v_mad_f32     v7, v53, v56, v15                       // 000000007694: D2820007 043E7135
  s_cbranch_execz  label_1DB7                           // 00000000769C: BF88000F
  v_cmp_le_i32  vcc, 8, v2                              // 0000000076A0: 7D060488
  v_cndmask_b32  v50, 0, -1, vcc                        // 0000000076A4: D2000032 01A98280
  s_mov_b64     s[30:31], exec                          // 0000000076AC: BE9E047E
  s_andn2_b64   exec, s[30:31], vcc                     // 0000000076B0: 8AFE6A1E
  v_mul_f32     v37, v53, v61                           // 0000000076B4: 104A7B35
  v_mov_b32     v50, -1                                 // 0000000076B8: 7E6402C1
  v_mov_b32     v6, 1                                   // 0000000076BC: 7E0C0281
  s_andn2_b64   exec, s[30:31], exec                    // 0000000076C0: 8AFE7E1E
  v_mov_b32     v6, 0                                   // 0000000076C4: 7E0C0280
  v_mov_b32     v37, v53                                // 0000000076C8: 7E4A0335
  s_mov_b64     exec, s[30:31]                          // 0000000076CC: BEFE041E
  v_cmp_ne_i32  vcc, 0, v50                             // 0000000076D0: 7D0A6480
  v_cndmask_b32  v8, 0, -1, vcc                         // 0000000076D4: D2000008 01A98280
  label_1DB7:
  s_andn2_b64   exec, s[28:29], exec                    // 0000000076DC: 8AFE7E1C
  v_mul_f32     v50, v53, v57                           // 0000000076E0: 10647335
  s_cbranch_execz  label_1DC0                           // 0000000076E4: BF880006
  v_mul_f32     v51, v53, v52                           // 0000000076E8: 10666935
  v_cndmask_b32  v50, v51, v50, s[26:27]                // 0000000076EC: D2000032 006A6533
  v_add_f32     v7, v15, v50                            // 0000000076F4: 060E650F
  v_mov_b32     v6, 0                                   // 0000000076F8: 7E0C0280
  v_mov_b32     v37, v53                                // 0000000076FC: 7E4A0335
  label_1DC0:
  s_mov_b64     exec, s[28:29]                          // 000000007700: BEFE041C
  v_cmp_ne_i32  vcc, 0, v8                              // 000000007704: 7D0A1080
  v_cndmask_b32  v8, 0, -1, vcc                         // 000000007708: D2000008 01A98280
  v_cmp_ne_u32  vcc, 1, v6                              // 000000007710: 7D8A0C81
  s_and_saveexec_b64  s[28:29], vcc                     // 000000007714: BE9C246A
  v_mul_f32     v15, v53, v62                           // 000000007718: 101E7D35
  s_cbranch_execz  label_1DCC                           // 00000000771C: BF880004
  v_mul_f32     v50, v53, v54                           // 000000007720: 10646D35
  v_cmp_gt_i32  vcc, 36, v2                             // 000000007724: 7D0804A4
  v_cndmask_b32  v37, v50, v15, vcc                     // 000000007728: 004A1F32
  v_mov_b32     v8, 0                                   // 00000000772C: 7E100280
  label_1DCC:
  s_mov_b64     exec, s[28:29]                          // 000000007730: BEFE041C
  v_cmp_ne_i32  s[28:29], v8, 0                         // 000000007734: D10A001C 00010108
  v_add_i32     v15, vcc, 37, v5                        // 00000000773C: 4A1E0AA5
  v_and_b32     v15, 63, v15                            // 000000007740: 361E1EBF
  v_lshl_b64    v[51:52], 1, v15                        // 000000007744: D2C20033 00021E81
  v_and_b32     v51, exec_lo, v51                       // 00000000774C: 3666667E
  v_and_b32     v52, exec_hi, v52                       // 000000007750: 3668687F
  v_cmp_ne_u64  s[30:31], 0, v[51:52]                   // 000000007754: D1CA001E 00026680
  s_mov_b64     s[32:33], exec                          // 00000000775C: BEA0047E
  s_mov_b64     s[34:35], exec                          // 000000007760: BEA2047E
  s_nop         0x0000                                  // 000000007764: BF800000
  s_nop         0x0000                                  // 000000007768: BF800000
  s_nop         0x0000                                  // 00000000776C: BF800000
  s_nop         0x0000                                  // 000000007770: BF800000
  s_nop         0x0000                                  // 000000007774: BF800000
  s_nop         0x0000                                  // 000000007778: BF800000
  s_nop         0x0000                                  // 00000000777C: BF800000
  label_1DE0:
  v_readfirstlane_b32  s5, v15                          // 000000007780: 7E0A050F
  v_cmp_eq_u32  vcc, s5, v15                            // 000000007784: 7D841E05
  s_and_saveexec_b64  s[36:37], vcc                     // 000000007788: BEA4246A
  s_cbranch_execz  label_1DE8                           // 00000000778C: BF880004
  v_readlane_b32  s5, v3, s5                            // 000000007790: 020A0B03
  v_mov_b32     v51, s5                                 // 000000007794: 7E660205
  s_andn2_b64   s[34:35], s[34:35], exec                // 000000007798: 8AA27E22
  s_cbranch_scc0  label_1DEA                            // 00000000779C: BF840002
  label_1DE8:
  s_and_b64     exec, s[36:37], s[34:35]                // 0000000077A0: 87FE2224
  s_branch      label_1DE0                              // 0000000077A4: BF82FFF6
  label_1DEA:
  s_mov_b64     exec, s[32:33]                          // 0000000077A8: BEFE0420
  v_cndmask_b32  v51, 0, v51, s[30:31]                  // 0000000077AC: D2000033 007A6680
  v_lshl_b64    v[56:57], 1, v15                        // 0000000077B4: D2C20038 00021E81
  v_and_b32     v56, exec_lo, v56                       // 0000000077BC: 3670707E
  v_and_b32     v57, exec_hi, v57                       // 0000000077C0: 3672727F
  v_cmp_ne_u64  s[30:31], 0, v[56:57]                   // 0000000077C4: D1CA001E 00027080
  s_mov_b64     s[32:33], exec                          // 0000000077CC: BEA0047E
  s_mov_b64     s[34:35], exec                          // 0000000077D0: BEA2047E
  s_nop         0x0000                                  // 0000000077D4: BF800000
  s_nop         0x0000                                  // 0000000077D8: BF800000
  s_nop         0x0000                                  // 0000000077DC: BF800000
  label_1DF8:
  v_readfirstlane_b32  s5, v15                          // 0000000077E0: 7E0A050F
  v_cmp_eq_u32  vcc, s5, v15                            // 0000000077E4: 7D841E05
  s_and_saveexec_b64  s[36:37], vcc                     // 0000000077E8: BEA4246A
  s_cbranch_execz  label_1E00                           // 0000000077EC: BF880004
  v_readlane_b32  s5, v79, s5                           // 0000000077F0: 020A0B4F
  v_mov_b32     v52, s5                                 // 0000000077F4: 7E680205
  s_andn2_b64   s[34:35], s[34:35], exec                // 0000000077F8: 8AA27E22
  s_cbranch_scc0  label_1E02                            // 0000000077FC: BF840002
  label_1E00:
  s_and_b64     exec, s[36:37], s[34:35]                // 000000007800: 87FE2224
  s_branch      label_1DF8                              // 000000007804: BF82FFF6
  label_1E02:
  s_mov_b64     exec, s[32:33]                          // 000000007808: BEFE0420
  v_cndmask_b32  v52, 0, v52, s[30:31]                  // 00000000780C: D2000034 007A6880
  v_lshl_b64    v[56:57], 1, v15                        // 000000007814: D2C20038 00021E81
  v_and_b32     v56, exec_lo, v56                       // 00000000781C: 3670707E
  v_and_b32     v57, exec_hi, v57                       // 000000007820: 3672727F
  v_cmp_ne_u64  s[30:31], 0, v[56:57]                   // 000000007824: D1CA001E 00027080
  s_mov_b64     s[32:33], exec                          // 00000000782C: BEA0047E
  s_mov_b64     s[34:35], exec                          // 000000007830: BEA2047E
  s_nop         0x0000                                  // 000000007834: BF800000
  s_nop         0x0000                                  // 000000007838: BF800000
  s_nop         0x0000                                  // 00000000783C: BF800000
  label_1E10:
  v_readfirstlane_b32  s5, v15                          // 000000007840: 7E0A050F
  v_cmp_eq_u32  vcc, s5, v15                            // 000000007844: 7D841E05
  s_and_saveexec_b64  s[36:37], vcc                     // 000000007848: BEA4246A
  s_cbranch_execz  label_1E18                           // 00000000784C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000007850: 020A0B51
  v_mov_b32     v15, s5                                 // 000000007854: 7E1E0205
  s_andn2_b64   s[34:35], s[34:35], exec                // 000000007858: 8AA27E22
  s_cbranch_scc0  label_1E1A                            // 00000000785C: BF840002
  label_1E18:
  s_and_b64     exec, s[36:37], s[34:35]                // 000000007860: 87FE2224
  s_branch      label_1E10                              // 000000007864: BF82FFF6
  label_1E1A:
  s_mov_b64     exec, s[32:33]                          // 000000007868: BEFE0420
  s_add_u32     s32, s14, 28                            // 00000000786C: 80209C0E
  s_addc_u32    s33, s15, 0                             // 000000007870: 8221800F
  v_mov_b32     v66, s32                                // 000000007874: 7E840220
  v_mov_b32     v67, s33                                // 000000007878: 7E860221
  v_add_i32     v57, vcc, 45, v5                        // 00000000787C: 4A720AAD
  v_add_i32     v61, vcc, 53, v5                        // 000000007880: 4A7A0AB5
  v_and_b32     v57, 63, v57                            // 000000007884: 367272BF
  v_add_i32     v62, vcc, 61, v5                        // 000000007888: 4A7C0ABD
  flat_load_dword  v54, v[66:67]                        // 00000000788C: DC300000 36000042
  v_cndmask_b32  v15, 0, v15, s[30:31]                  // 000000007894: D200000F 007A1E80
  v_and_b32     v56, 63, v61                            // 00000000789C: 36707ABF
  v_and_b32     v61, 63, v62                            // 0000000078A0: 367A7CBF
  v_lshl_b64    v[66:67], 1, v57                        // 0000000078A4: D2C20042 00027281
  v_and_b32     v66, exec_lo, v66                       // 0000000078AC: 3684847E
  v_and_b32     v67, exec_hi, v67                       // 0000000078B0: 3686867F
  v_cmp_ne_u64  s[30:31], 0, v[66:67]                   // 0000000078B4: D1CA001E 00028480
  s_mov_b64     s[32:33], exec                          // 0000000078BC: BEA0047E
  s_mov_b64     s[34:35], exec                          // 0000000078C0: BEA2047E
  s_nop         0x0000                                  // 0000000078C4: BF800000
  s_nop         0x0000                                  // 0000000078C8: BF800000
  s_nop         0x0000                                  // 0000000078CC: BF800000
  s_nop         0x0000                                  // 0000000078D0: BF800000
  s_nop         0x0000                                  // 0000000078D4: BF800000
  s_nop         0x0000                                  // 0000000078D8: BF800000
  s_nop         0x0000                                  // 0000000078DC: BF800000
  label_1E38:
  v_readfirstlane_b32  s5, v57                          // 0000000078E0: 7E0A0539
  v_cmp_eq_u32  vcc, s5, v57                            // 0000000078E4: 7D847205
  s_and_saveexec_b64  s[36:37], vcc                     // 0000000078E8: BEA4246A
  s_cbranch_execz  label_1E40                           // 0000000078EC: BF880004
  v_readlane_b32  s5, v3, s5                            // 0000000078F0: 020A0B03
  v_mov_b32     v62, s5                                 // 0000000078F4: 7E7C0205
  s_andn2_b64   s[34:35], s[34:35], exec                // 0000000078F8: 8AA27E22
  s_cbranch_scc0  label_1E42                            // 0000000078FC: BF840002
  label_1E40:
  s_and_b64     exec, s[36:37], s[34:35]                // 000000007900: 87FE2224
  s_branch      label_1E38                              // 000000007904: BF82FFF6
  label_1E42:
  s_mov_b64     exec, s[32:33]                          // 000000007908: BEFE0420
  v_cndmask_b32  v62, 0, v62, s[30:31]                  // 00000000790C: D200003E 007A7C80
  v_lshl_b64    v[66:67], 1, v57                        // 000000007914: D2C20042 00027281
  v_and_b32     v66, exec_lo, v66                       // 00000000791C: 3684847E
  v_and_b32     v67, exec_hi, v67                       // 000000007920: 3686867F
  v_cmp_ne_u64  s[30:31], 0, v[66:67]                   // 000000007924: D1CA001E 00028480
  s_mov_b64     s[32:33], exec                          // 00000000792C: BEA0047E
  s_mov_b64     s[34:35], exec                          // 000000007930: BEA2047E
  s_nop         0x0000                                  // 000000007934: BF800000
  s_nop         0x0000                                  // 000000007938: BF800000
  s_nop         0x0000                                  // 00000000793C: BF800000
  label_1E50:
  v_readfirstlane_b32  s5, v57                          // 000000007940: 7E0A0539
  v_cmp_eq_u32  vcc, s5, v57                            // 000000007944: 7D847205
  s_and_saveexec_b64  s[36:37], vcc                     // 000000007948: BEA4246A
  s_cbranch_execz  label_1E58                           // 00000000794C: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000007950: 020A0B4F
  v_mov_b32     v66, s5                                 // 000000007954: 7E840205
  s_andn2_b64   s[34:35], s[34:35], exec                // 000000007958: 8AA27E22
  s_cbranch_scc0  label_1E5A                            // 00000000795C: BF840002
  label_1E58:
  s_and_b64     exec, s[36:37], s[34:35]                // 000000007960: 87FE2224
  s_branch      label_1E50                              // 000000007964: BF82FFF6
  label_1E5A:
  s_mov_b64     exec, s[32:33]                          // 000000007968: BEFE0420
  v_cndmask_b32  v66, 0, v66, s[30:31]                  // 00000000796C: D2000042 007A8480
  v_lshl_b64    v[67:68], 1, v57                        // 000000007974: D2C20043 00027281
  v_and_b32     v67, exec_lo, v67                       // 00000000797C: 3686867E
  v_and_b32     v68, exec_hi, v68                       // 000000007980: 3688887F
  v_cmp_ne_u64  s[30:31], 0, v[67:68]                   // 000000007984: D1CA001E 00028680
  s_mov_b64     s[32:33], exec                          // 00000000798C: BEA0047E
  s_mov_b64     s[34:35], exec                          // 000000007990: BEA2047E
  s_nop         0x0000                                  // 000000007994: BF800000
  s_nop         0x0000                                  // 000000007998: BF800000
  s_nop         0x0000                                  // 00000000799C: BF800000
  label_1E68:
  v_readfirstlane_b32  s5, v57                          // 0000000079A0: 7E0A0539
  v_cmp_eq_u32  vcc, s5, v57                            // 0000000079A4: 7D847205
  s_and_saveexec_b64  s[36:37], vcc                     // 0000000079A8: BEA4246A
  s_cbranch_execz  label_1E70                           // 0000000079AC: BF880004
  v_readlane_b32  s5, v81, s5                           // 0000000079B0: 020A0B51
  v_mov_b32     v57, s5                                 // 0000000079B4: 7E720205
  s_andn2_b64   s[34:35], s[34:35], exec                // 0000000079B8: 8AA27E22
  s_cbranch_scc0  label_1E72                            // 0000000079BC: BF840002
  label_1E70:
  s_and_b64     exec, s[36:37], s[34:35]                // 0000000079C0: 87FE2224
  s_branch      label_1E68                              // 0000000079C4: BF82FFF6
  label_1E72:
  s_mov_b64     exec, s[32:33]                          // 0000000079C8: BEFE0420
  v_cndmask_b32  v57, 0, v57, s[30:31]                  // 0000000079CC: D2000039 007A7280
  v_lshl_b64    v[67:68], 1, v56                        // 0000000079D4: D2C20043 00027081
  v_and_b32     v67, exec_lo, v67                       // 0000000079DC: 3686867E
  v_and_b32     v68, exec_hi, v68                       // 0000000079E0: 3688887F
  v_cmp_ne_u64  s[30:31], 0, v[67:68]                   // 0000000079E4: D1CA001E 00028680
  s_mov_b64     s[32:33], exec                          // 0000000079EC: BEA0047E
  s_mov_b64     s[34:35], exec                          // 0000000079F0: BEA2047E
  s_nop         0x0000                                  // 0000000079F4: BF800000
  s_nop         0x0000                                  // 0000000079F8: BF800000
  s_nop         0x0000                                  // 0000000079FC: BF800000
  label_1E80:
  v_readfirstlane_b32  s5, v56                          // 000000007A00: 7E0A0538
  v_cmp_eq_u32  vcc, s5, v56                            // 000000007A04: 7D847005
  s_and_saveexec_b64  s[36:37], vcc                     // 000000007A08: BEA4246A
  s_cbranch_execz  label_1E88                           // 000000007A0C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000007A10: 020A0B51
  v_mov_b32     v67, s5                                 // 000000007A14: 7E860205
  s_andn2_b64   s[34:35], s[34:35], exec                // 000000007A18: 8AA27E22
  s_cbranch_scc0  label_1E8A                            // 000000007A1C: BF840002
  label_1E88:
  s_and_b64     exec, s[36:37], s[34:35]                // 000000007A20: 87FE2224
  s_branch      label_1E80                              // 000000007A24: BF82FFF6
  label_1E8A:
  s_mov_b64     exec, s[32:33]                          // 000000007A28: BEFE0420
  v_cndmask_b32  v67, 0, v67, s[30:31]                  // 000000007A2C: D2000043 007A8680
  v_lshl_b64    v[68:69], 1, v56                        // 000000007A34: D2C20044 00027081
  v_and_b32     v68, exec_lo, v68                       // 000000007A3C: 3688887E
  v_and_b32     v69, exec_hi, v69                       // 000000007A40: 368A8A7F
  v_cmp_ne_u64  s[30:31], 0, v[68:69]                   // 000000007A44: D1CA001E 00028880
  s_mov_b64     s[32:33], exec                          // 000000007A4C: BEA0047E
  s_mov_b64     s[34:35], exec                          // 000000007A50: BEA2047E
  s_nop         0x0000                                  // 000000007A54: BF800000
  s_nop         0x0000                                  // 000000007A58: BF800000
  s_nop         0x0000                                  // 000000007A5C: BF800000
  label_1E98:
  v_readfirstlane_b32  s5, v56                          // 000000007A60: 7E0A0538
  v_cmp_eq_u32  vcc, s5, v56                            // 000000007A64: 7D847005
  s_and_saveexec_b64  s[36:37], vcc                     // 000000007A68: BEA4246A
  s_cbranch_execz  label_1EA0                           // 000000007A6C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000007A70: 020A0B09
  v_mov_b32     v68, s5                                 // 000000007A74: 7E880205
  s_andn2_b64   s[34:35], s[34:35], exec                // 000000007A78: 8AA27E22
  s_cbranch_scc0  label_1EA2                            // 000000007A7C: BF840002
  label_1EA0:
  s_and_b64     exec, s[36:37], s[34:35]                // 000000007A80: 87FE2224
  s_branch      label_1E98                              // 000000007A84: BF82FFF6
  label_1EA2:
  s_mov_b64     exec, s[32:33]                          // 000000007A88: BEFE0420
  v_cndmask_b32  v68, 0, v68, s[30:31]                  // 000000007A8C: D2000044 007A8880
  v_lshl_b64    v[69:70], 1, v56                        // 000000007A94: D2C20045 00027081
  v_and_b32     v69, exec_lo, v69                       // 000000007A9C: 368A8A7E
  v_and_b32     v70, exec_hi, v70                       // 000000007AA0: 368C8C7F
  v_cmp_ne_u64  s[30:31], 0, v[69:70]                   // 000000007AA4: D1CA001E 00028A80
  s_mov_b64     s[32:33], exec                          // 000000007AAC: BEA0047E
  s_mov_b64     s[34:35], exec                          // 000000007AB0: BEA2047E
  s_nop         0x0000                                  // 000000007AB4: BF800000
  s_nop         0x0000                                  // 000000007AB8: BF800000
  s_nop         0x0000                                  // 000000007ABC: BF800000
  label_1EB0:
  v_readfirstlane_b32  s5, v56                          // 000000007AC0: 7E0A0538
  v_cmp_eq_u32  vcc, s5, v56                            // 000000007AC4: 7D847005
  s_and_saveexec_b64  s[36:37], vcc                     // 000000007AC8: BEA4246A
  s_cbranch_execz  label_1EB8                           // 000000007ACC: BF880004
  v_readlane_b32  s5, v10, s5                           // 000000007AD0: 020A0B0A
  v_mov_b32     v56, s5                                 // 000000007AD4: 7E700205
  s_andn2_b64   s[34:35], s[34:35], exec                // 000000007AD8: 8AA27E22
  s_cbranch_scc0  label_1EBA                            // 000000007ADC: BF840002
  label_1EB8:
  s_and_b64     exec, s[36:37], s[34:35]                // 000000007AE0: 87FE2224
  s_branch      label_1EB0                              // 000000007AE4: BF82FFF6
  label_1EBA:
  s_mov_b64     exec, s[32:33]                          // 000000007AE8: BEFE0420
  v_cndmask_b32  v56, 0, v56, s[30:31]                  // 000000007AEC: D2000038 007A7080
  v_lshl_b64    v[69:70], 1, v61                        // 000000007AF4: D2C20045 00027A81
  v_and_b32     v69, exec_lo, v69                       // 000000007AFC: 368A8A7E
  v_and_b32     v70, exec_hi, v70                       // 000000007B00: 368C8C7F
  v_cmp_ne_u64  s[30:31], 0, v[69:70]                   // 000000007B04: D1CA001E 00028A80
  s_mov_b64     s[32:33], exec                          // 000000007B0C: BEA0047E
  s_mov_b64     s[34:35], exec                          // 000000007B10: BEA2047E
  s_nop         0x0000                                  // 000000007B14: BF800000
  s_nop         0x0000                                  // 000000007B18: BF800000
  s_nop         0x0000                                  // 000000007B1C: BF800000
  label_1EC8:
  v_readfirstlane_b32  s5, v61                          // 000000007B20: 7E0A053D
  v_cmp_eq_u32  vcc, s5, v61                            // 000000007B24: 7D847A05
  s_and_saveexec_b64  s[36:37], vcc                     // 000000007B28: BEA4246A
  s_cbranch_execz  label_1ED0                           // 000000007B2C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000007B30: 020A0B51
  v_mov_b32     v69, s5                                 // 000000007B34: 7E8A0205
  s_andn2_b64   s[34:35], s[34:35], exec                // 000000007B38: 8AA27E22
  s_cbranch_scc0  label_1ED2                            // 000000007B3C: BF840002
  label_1ED0:
  s_and_b64     exec, s[36:37], s[34:35]                // 000000007B40: 87FE2224
  s_branch      label_1EC8                              // 000000007B44: BF82FFF6
  label_1ED2:
  s_mov_b64     exec, s[32:33]                          // 000000007B48: BEFE0420
  v_cndmask_b32  v69, 0, v69, s[30:31]                  // 000000007B4C: D2000045 007A8A80
  v_lshl_b64    v[70:71], 1, v61                        // 000000007B54: D2C20046 00027A81
  v_and_b32     v70, exec_lo, v70                       // 000000007B5C: 368C8C7E
  v_and_b32     v71, exec_hi, v71                       // 000000007B60: 368E8E7F
  v_cmp_ne_u64  s[30:31], 0, v[70:71]                   // 000000007B64: D1CA001E 00028C80
  s_mov_b64     s[32:33], exec                          // 000000007B6C: BEA0047E
  s_mov_b64     s[34:35], exec                          // 000000007B70: BEA2047E
  s_nop         0x0000                                  // 000000007B74: BF800000
  s_nop         0x0000                                  // 000000007B78: BF800000
  s_nop         0x0000                                  // 000000007B7C: BF800000
  label_1EE0:
  v_readfirstlane_b32  s5, v61                          // 000000007B80: 7E0A053D
  v_cmp_eq_u32  vcc, s5, v61                            // 000000007B84: 7D847A05
  s_and_saveexec_b64  s[36:37], vcc                     // 000000007B88: BEA4246A
  s_cbranch_execz  label_1EE8                           // 000000007B8C: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000007B90: 020A0B09
  v_mov_b32     v70, s5                                 // 000000007B94: 7E8C0205
  s_andn2_b64   s[34:35], s[34:35], exec                // 000000007B98: 8AA27E22
  s_cbranch_scc0  label_1EEA                            // 000000007B9C: BF840002
  label_1EE8:
  s_and_b64     exec, s[36:37], s[34:35]                // 000000007BA0: 87FE2224
  s_branch      label_1EE0                              // 000000007BA4: BF82FFF6
  label_1EEA:
  s_mov_b64     exec, s[32:33]                          // 000000007BA8: BEFE0420
  v_cndmask_b32  v70, 0, v70, s[30:31]                  // 000000007BAC: D2000046 007A8C80
  v_lshl_b64    v[71:72], 1, v61                        // 000000007BB4: D2C20047 00027A81
  v_and_b32     v71, exec_lo, v71                       // 000000007BBC: 368E8E7E
  v_and_b32     v72, exec_hi, v72                       // 000000007BC0: 3690907F
  v_cmp_ne_u64  s[30:31], 0, v[71:72]                   // 000000007BC4: D1CA001E 00028E80
  s_mov_b64     s[32:33], exec                          // 000000007BCC: BEA0047E
  s_mov_b64     s[34:35], exec                          // 000000007BD0: BEA2047E
  s_nop         0x0000                                  // 000000007BD4: BF800000
  s_nop         0x0000                                  // 000000007BD8: BF800000
  s_nop         0x0000                                  // 000000007BDC: BF800000
  label_1EF8:
  v_readfirstlane_b32  s5, v61                          // 000000007BE0: 7E0A053D
  v_cmp_eq_u32  vcc, s5, v61                            // 000000007BE4: 7D847A05
  s_and_saveexec_b64  s[36:37], vcc                     // 000000007BE8: BEA4246A
  s_cbranch_execz  label_1F00                           // 000000007BEC: BF880004
  v_readlane_b32  s5, v10, s5                           // 000000007BF0: 020A0B0A
  v_mov_b32     v71, s5                                 // 000000007BF4: 7E8E0205
  s_andn2_b64   s[34:35], s[34:35], exec                // 000000007BF8: 8AA27E22
  s_cbranch_scc0  label_1F02                            // 000000007BFC: BF840002
  label_1F00:
  s_and_b64     exec, s[36:37], s[34:35]                // 000000007C00: 87FE2224
  s_branch      label_1EF8                              // 000000007C04: BF82FFF6
  label_1F02:
  s_mov_b64     exec, s[32:33]                          // 000000007C08: BEFE0420
  v_cndmask_b32  v71, 0, v71, s[30:31]                  // 000000007C0C: D2000047 007A8E80
  v_lshl_b64    v[72:73], 1, v61                        // 000000007C14: D2C20048 00027A81
  v_and_b32     v72, exec_lo, v72                       // 000000007C1C: 3690907E
  v_and_b32     v73, exec_hi, v73                       // 000000007C20: 3692927F
  v_cmp_ne_u64  s[30:31], 0, v[72:73]                   // 000000007C24: D1CA001E 00029080
  s_mov_b64     s[32:33], exec                          // 000000007C2C: BEA0047E
  s_mov_b64     s[34:35], exec                          // 000000007C30: BEA2047E
  s_nop         0x0000                                  // 000000007C34: BF800000
  s_nop         0x0000                                  // 000000007C38: BF800000
  s_nop         0x0000                                  // 000000007C3C: BF800000
  label_1F10:
  v_readfirstlane_b32  s5, v61                          // 000000007C40: 7E0A053D
  v_cmp_eq_u32  vcc, s5, v61                            // 000000007C44: 7D847A05
  s_and_saveexec_b64  s[36:37], vcc                     // 000000007C48: BEA4246A
  s_cbranch_execz  label_1F18                           // 000000007C4C: BF880004
  v_readlane_b32  s5, v4, s5                            // 000000007C50: 020A0B04
  v_mov_b32     v61, s5                                 // 000000007C54: 7E7A0205
  s_andn2_b64   s[34:35], s[34:35], exec                // 000000007C58: 8AA27E22
  s_cbranch_scc0  label_1F1A                            // 000000007C5C: BF840002
  label_1F18:
  s_and_b64     exec, s[36:37], s[34:35]                // 000000007C60: 87FE2224
  s_branch      label_1F10                              // 000000007C64: BF82FFF6
  label_1F1A:
  s_mov_b64     exec, s[32:33]                          // 000000007C68: BEFE0420
  v_cndmask_b32  v61, 0, v61, s[30:31]                  // 000000007C6C: D200003D 007A7A80
  s_mov_b64     s[30:31], exec                          // 000000007C74: BE9E047E
  s_andn2_b64   exec, s[30:31], s[22:23]                // 000000007C78: 8AFE161E
  v_cndmask_b32  v50, 0, 1, s[12:13]                    // 000000007C7C: D2000032 00310280
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000007C84: BF8C0070
  v_mul_f32     v12, v54, v51                           // 000000007C88: 10186736
  s_andn2_b64   exec, s[30:31], exec                    // 000000007C8C: 8AFE7E1E
  v_cndmask_b32  v50, 0, 1, s[12:13]                    // 000000007C90: D2000032 00310280
  s_cbranch_execz  label_1F2C                           // 000000007C98: BF880005
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000007C9C: BF8C0070
  v_mul_f32     v15, v54, v15                           // 000000007CA0: 101E1F36
  v_mul_f32     v52, v54, v52                           // 000000007CA4: 10686936
  v_cmp_gt_i32  vcc, 41, v2                             // 000000007CA8: 7D0804A9
  v_cndmask_b32  v12, v15, v52, vcc                     // 000000007CAC: 0018690F
  label_1F2C:
  s_mov_b64     exec, s[30:31]                          // 000000007CB0: BEFE041E
  v_add_i32     v52, vcc, 38, v5                        // 000000007CB4: 4A680AA6
  v_and_b32     v52, 63, v52                            // 000000007CB8: 366868BF
  v_lshl_b64    v[72:73], 1, v52                        // 000000007CBC: D2C20048 00026881
  v_and_b32     v72, exec_lo, v72                       // 000000007CC4: 3690907E
  v_and_b32     v73, exec_hi, v73                       // 000000007CC8: 3692927F
  v_cmp_ne_u64  s[12:13], 0, v[72:73]                   // 000000007CCC: D1CA000C 00029080
  s_mov_b64     s[30:31], exec                          // 000000007CD4: BE9E047E
  s_mov_b64     s[32:33], exec                          // 000000007CD8: BEA0047E
  s_nop         0x0000                                  // 000000007CDC: BF800000
  label_1F38:
  v_readfirstlane_b32  s5, v52                          // 000000007CE0: 7E0A0534
  v_cmp_eq_u32  vcc, s5, v52                            // 000000007CE4: 7D846805
  s_and_saveexec_b64  s[34:35], vcc                     // 000000007CE8: BEA2246A
  s_cbranch_execz  label_1F40                           // 000000007CEC: BF880004
  v_readlane_b32  s5, v3, s5                            // 000000007CF0: 020A0B03
  v_mov_b32     v72, s5                                 // 000000007CF4: 7E900205
  s_andn2_b64   s[32:33], s[32:33], exec                // 000000007CF8: 8AA07E20
  s_cbranch_scc0  label_1F42                            // 000000007CFC: BF840002
  label_1F40:
  s_and_b64     exec, s[34:35], s[32:33]                // 000000007D00: 87FE2022
  s_branch      label_1F38                              // 000000007D04: BF82FFF6
  label_1F42:
  s_mov_b64     exec, s[30:31]                          // 000000007D08: BEFE041E
  v_cndmask_b32  v72, 0, v72, s[12:13]                  // 000000007D0C: D2000048 00329080
  v_lshl_b64    v[73:74], 1, v52                        // 000000007D14: D2C20049 00026881
  v_and_b32     v73, exec_lo, v73                       // 000000007D1C: 3692927E
  v_and_b32     v74, exec_hi, v74                       // 000000007D20: 3694947F
  v_cmp_ne_u64  s[12:13], 0, v[73:74]                   // 000000007D24: D1CA000C 00029280
  s_mov_b64     s[30:31], exec                          // 000000007D2C: BE9E047E
  s_mov_b64     s[32:33], exec                          // 000000007D30: BEA0047E
  s_nop         0x0000                                  // 000000007D34: BF800000
  s_nop         0x0000                                  // 000000007D38: BF800000
  s_nop         0x0000                                  // 000000007D3C: BF800000
  label_1F50:
  v_readfirstlane_b32  s5, v52                          // 000000007D40: 7E0A0534
  v_cmp_eq_u32  vcc, s5, v52                            // 000000007D44: 7D846805
  s_and_saveexec_b64  s[34:35], vcc                     // 000000007D48: BEA2246A
  s_cbranch_execz  label_1F58                           // 000000007D4C: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000007D50: 020A0B4F
  v_mov_b32     v73, s5                                 // 000000007D54: 7E920205
  s_andn2_b64   s[32:33], s[32:33], exec                // 000000007D58: 8AA07E20
  s_cbranch_scc0  label_1F5A                            // 000000007D5C: BF840002
  label_1F58:
  s_and_b64     exec, s[34:35], s[32:33]                // 000000007D60: 87FE2022
  s_branch      label_1F50                              // 000000007D64: BF82FFF6
  label_1F5A:
  s_mov_b64     exec, s[30:31]                          // 000000007D68: BEFE041E
  v_cndmask_b32  v73, 0, v73, s[12:13]                  // 000000007D6C: D2000049 00329280
  v_lshl_b64    v[74:75], 1, v52                        // 000000007D74: D2C2004A 00026881
  v_and_b32     v74, exec_lo, v74                       // 000000007D7C: 3694947E
  v_and_b32     v75, exec_hi, v75                       // 000000007D80: 3696967F
  v_cmp_ne_u64  s[12:13], 0, v[74:75]                   // 000000007D84: D1CA000C 00029480
  s_mov_b64     s[30:31], exec                          // 000000007D8C: BE9E047E
  s_mov_b64     s[32:33], exec                          // 000000007D90: BEA0047E
  s_nop         0x0000                                  // 000000007D94: BF800000
  s_nop         0x0000                                  // 000000007D98: BF800000
  s_nop         0x0000                                  // 000000007D9C: BF800000
  label_1F68:
  v_readfirstlane_b32  s5, v52                          // 000000007DA0: 7E0A0534
  v_cmp_eq_u32  vcc, s5, v52                            // 000000007DA4: 7D846805
  s_and_saveexec_b64  s[34:35], vcc                     // 000000007DA8: BEA2246A
  s_cbranch_execz  label_1F70                           // 000000007DAC: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000007DB0: 020A0B51
  v_mov_b32     v52, s5                                 // 000000007DB4: 7E680205
  s_andn2_b64   s[32:33], s[32:33], exec                // 000000007DB8: 8AA07E20
  s_cbranch_scc0  label_1F72                            // 000000007DBC: BF840002
  label_1F70:
  s_and_b64     exec, s[34:35], s[32:33]                // 000000007DC0: 87FE2022
  s_branch      label_1F68                              // 000000007DC4: BF82FFF6
  label_1F72:
  s_mov_b64     exec, s[30:31]                          // 000000007DC8: BEFE041E
  s_add_u32     s14, s14, 32                            // 000000007DCC: 800EA00E
  s_addc_u32    s15, s15, 0                             // 000000007DD0: 820F800F
  v_mov_b32     v74, s14                                // 000000007DD4: 7E94020E
  v_mov_b32     v75, s15                                // 000000007DD8: 7E96020F
  v_add_i32     v76, vcc, 46, v5                        // 000000007DDC: 4A980AAE
  v_add_i32     v77, vcc, 54, v5                        // 000000007DE0: 4A9A0AB6
  v_and_b32     v76, 63, v76                            // 000000007DE4: 369898BF
  v_add_i32     v5, vcc, 62, v5                         // 000000007DE8: 4A0A0ABE
  flat_load_dword  v74, v[74:75]                        // 000000007DEC: DC300000 4A00004A
  v_cndmask_b32  v52, 0, v52, s[12:13]                  // 000000007DF4: D2000034 00326880
  v_and_b32     v75, 63, v77                            // 000000007DFC: 36969ABF
  v_and_b32     v5, 63, v5                              // 000000007E00: 360A0ABF
  v_lshl_b64    v[77:78], 1, v76                        // 000000007E04: D2C2004D 00029881
  v_and_b32     v77, exec_lo, v77                       // 000000007E0C: 369A9A7E
  v_and_b32     v78, exec_hi, v78                       // 000000007E10: 369C9C7F
  v_cmp_ne_u64  s[12:13], 0, v[77:78]                   // 000000007E14: D1CA000C 00029A80
  s_mov_b64     s[14:15], exec                          // 000000007E1C: BE8E047E
  s_mov_b64     s[30:31], exec                          // 000000007E20: BE9E047E
  s_nop         0x0000                                  // 000000007E24: BF800000
  s_nop         0x0000                                  // 000000007E28: BF800000
  s_nop         0x0000                                  // 000000007E2C: BF800000
  s_nop         0x0000                                  // 000000007E30: BF800000
  s_nop         0x0000                                  // 000000007E34: BF800000
  s_nop         0x0000                                  // 000000007E38: BF800000
  s_nop         0x0000                                  // 000000007E3C: BF800000
  label_1F90:
  v_readfirstlane_b32  s5, v76                          // 000000007E40: 7E0A054C
  v_cmp_eq_u32  vcc, s5, v76                            // 000000007E44: 7D849805
  s_and_saveexec_b64  s[32:33], vcc                     // 000000007E48: BEA0246A
  s_cbranch_execz  label_1F98                           // 000000007E4C: BF880004
  v_readlane_b32  s5, v3, s5                            // 000000007E50: 020A0B03
  v_mov_b32     v77, s5                                 // 000000007E54: 7E9A0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000007E58: 8A9E7E1E
  s_cbranch_scc0  label_1F9A                            // 000000007E5C: BF840002
  label_1F98:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000007E60: 87FE1E20
  s_branch      label_1F90                              // 000000007E64: BF82FFF6
  label_1F9A:
  s_mov_b64     exec, s[14:15]                          // 000000007E68: BEFE040E
  v_cndmask_b32  v3, 0, v77, s[12:13]                   // 000000007E6C: D2000003 00329A80
  v_lshl_b64    v[77:78], 1, v76                        // 000000007E74: D2C2004D 00029881
  v_and_b32     v77, exec_lo, v77                       // 000000007E7C: 369A9A7E
  v_and_b32     v78, exec_hi, v78                       // 000000007E80: 369C9C7F
  v_cmp_ne_u64  s[12:13], 0, v[77:78]                   // 000000007E84: D1CA000C 00029A80
  s_mov_b64     s[14:15], exec                          // 000000007E8C: BE8E047E
  s_mov_b64     s[30:31], exec                          // 000000007E90: BE9E047E
  s_nop         0x0000                                  // 000000007E94: BF800000
  s_nop         0x0000                                  // 000000007E98: BF800000
  s_nop         0x0000                                  // 000000007E9C: BF800000
  label_1FA8:
  v_readfirstlane_b32  s5, v76                          // 000000007EA0: 7E0A054C
  v_cmp_eq_u32  vcc, s5, v76                            // 000000007EA4: 7D849805
  s_and_saveexec_b64  s[32:33], vcc                     // 000000007EA8: BEA0246A
  s_cbranch_execz  label_1FB0                           // 000000007EAC: BF880004
  v_readlane_b32  s5, v79, s5                           // 000000007EB0: 020A0B4F
  v_mov_b32     v77, s5                                 // 000000007EB4: 7E9A0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000007EB8: 8A9E7E1E
  s_cbranch_scc0  label_1FB2                            // 000000007EBC: BF840002
  label_1FB0:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000007EC0: 87FE1E20
  s_branch      label_1FA8                              // 000000007EC4: BF82FFF6
  label_1FB2:
  s_mov_b64     exec, s[14:15]                          // 000000007EC8: BEFE040E
  v_cndmask_b32  v6, 0, v77, s[12:13]                   // 000000007ECC: D2000006 00329A80
  v_lshl_b64    v[77:78], 1, v76                        // 000000007ED4: D2C2004D 00029881
  v_and_b32     v77, exec_lo, v77                       // 000000007EDC: 369A9A7E
  v_and_b32     v78, exec_hi, v78                       // 000000007EE0: 369C9C7F
  v_cmp_ne_u64  s[12:13], 0, v[77:78]                   // 000000007EE4: D1CA000C 00029A80
  s_mov_b64     s[14:15], exec                          // 000000007EEC: BE8E047E
  s_mov_b64     s[30:31], exec                          // 000000007EF0: BE9E047E
  s_nop         0x0000                                  // 000000007EF4: BF800000
  s_nop         0x0000                                  // 000000007EF8: BF800000
  s_nop         0x0000                                  // 000000007EFC: BF800000
  label_1FC0:
  v_readfirstlane_b32  s5, v76                          // 000000007F00: 7E0A054C
  v_cmp_eq_u32  vcc, s5, v76                            // 000000007F04: 7D849805
  s_and_saveexec_b64  s[32:33], vcc                     // 000000007F08: BEA0246A
  s_cbranch_execz  label_1FC8                           // 000000007F0C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000007F10: 020A0B51
  v_mov_b32     v76, s5                                 // 000000007F14: 7E980205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000007F18: 8A9E7E1E
  s_cbranch_scc0  label_1FCA                            // 000000007F1C: BF840002
  label_1FC8:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000007F20: 87FE1E20
  s_branch      label_1FC0                              // 000000007F24: BF82FFF6
  label_1FCA:
  s_mov_b64     exec, s[14:15]                          // 000000007F28: BEFE040E
  v_cndmask_b32  v76, 0, v76, s[12:13]                  // 000000007F2C: D200004C 00329880
  v_lshl_b64    v[77:78], 1, v75                        // 000000007F34: D2C2004D 00029681
  v_and_b32     v77, exec_lo, v77                       // 000000007F3C: 369A9A7E
  v_and_b32     v78, exec_hi, v78                       // 000000007F40: 369C9C7F
  v_cmp_ne_u64  s[12:13], 0, v[77:78]                   // 000000007F44: D1CA000C 00029A80
  s_mov_b64     s[14:15], exec                          // 000000007F4C: BE8E047E
  s_mov_b64     s[30:31], exec                          // 000000007F50: BE9E047E
  s_nop         0x0000                                  // 000000007F54: BF800000
  s_nop         0x0000                                  // 000000007F58: BF800000
  s_nop         0x0000                                  // 000000007F5C: BF800000
  label_1FD8:
  v_readfirstlane_b32  s5, v75                          // 000000007F60: 7E0A054B
  v_cmp_eq_u32  vcc, s5, v75                            // 000000007F64: 7D849605
  s_and_saveexec_b64  s[32:33], vcc                     // 000000007F68: BEA0246A
  s_cbranch_execz  label_1FE0                           // 000000007F6C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000007F70: 020A0B51
  v_mov_b32     v77, s5                                 // 000000007F74: 7E9A0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000007F78: 8A9E7E1E
  s_cbranch_scc0  label_1FE2                            // 000000007F7C: BF840002
  label_1FE0:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000007F80: 87FE1E20
  s_branch      label_1FD8                              // 000000007F84: BF82FFF6
  label_1FE2:
  s_mov_b64     exec, s[14:15]                          // 000000007F88: BEFE040E
  v_cndmask_b32  v77, 0, v77, s[12:13]                  // 000000007F8C: D200004D 00329A80
  v_lshl_b64    v[78:79], 1, v75                        // 000000007F94: D2C2004E 00029681
  v_and_b32     v78, exec_lo, v78                       // 000000007F9C: 369C9C7E
  v_and_b32     v79, exec_hi, v79                       // 000000007FA0: 369E9E7F
  v_cmp_ne_u64  s[12:13], 0, v[78:79]                   // 000000007FA4: D1CA000C 00029C80
  s_mov_b64     s[14:15], exec                          // 000000007FAC: BE8E047E
  s_mov_b64     s[30:31], exec                          // 000000007FB0: BE9E047E
  s_nop         0x0000                                  // 000000007FB4: BF800000
  s_nop         0x0000                                  // 000000007FB8: BF800000
  s_nop         0x0000                                  // 000000007FBC: BF800000
  label_1FF0:
  v_readfirstlane_b32  s5, v75                          // 000000007FC0: 7E0A054B
  v_cmp_eq_u32  vcc, s5, v75                            // 000000007FC4: 7D849605
  s_and_saveexec_b64  s[32:33], vcc                     // 000000007FC8: BEA0246A
  s_cbranch_execz  label_1FF8                           // 000000007FCC: BF880004
  v_readlane_b32  s5, v9, s5                            // 000000007FD0: 020A0B09
  v_mov_b32     v78, s5                                 // 000000007FD4: 7E9C0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000007FD8: 8A9E7E1E
  s_cbranch_scc0  label_1FFA                            // 000000007FDC: BF840002
  label_1FF8:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000007FE0: 87FE1E20
  s_branch      label_1FF0                              // 000000007FE4: BF82FFF6
  label_1FFA:
  s_mov_b64     exec, s[14:15]                          // 000000007FE8: BEFE040E
  v_cndmask_b32  v78, 0, v78, s[12:13]                  // 000000007FEC: D200004E 00329C80
  v_lshl_b64    v[79:80], 1, v75                        // 000000007FF4: D2C2004F 00029681
  v_and_b32     v79, exec_lo, v79                       // 000000007FFC: 369E9E7E
  v_and_b32     v80, exec_hi, v80                       // 000000008000: 36A0A07F
  v_cmp_ne_u64  s[12:13], 0, v[79:80]                   // 000000008004: D1CA000C 00029E80
  s_mov_b64     s[14:15], exec                          // 00000000800C: BE8E047E
  s_mov_b64     s[30:31], exec                          // 000000008010: BE9E047E
  s_nop         0x0000                                  // 000000008014: BF800000
  s_nop         0x0000                                  // 000000008018: BF800000
  s_nop         0x0000                                  // 00000000801C: BF800000
  label_2008:
  v_readfirstlane_b32  s5, v75                          // 000000008020: 7E0A054B
  v_cmp_eq_u32  vcc, s5, v75                            // 000000008024: 7D849605
  s_and_saveexec_b64  s[32:33], vcc                     // 000000008028: BEA0246A
  s_cbranch_execz  label_2010                           // 00000000802C: BF880004
  v_readlane_b32  s5, v10, s5                           // 000000008030: 020A0B0A
  v_mov_b32     v75, s5                                 // 000000008034: 7E960205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000008038: 8A9E7E1E
  s_cbranch_scc0  label_2012                            // 00000000803C: BF840002
  label_2010:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000008040: 87FE1E20
  s_branch      label_2008                              // 000000008044: BF82FFF6
  label_2012:
  s_mov_b64     exec, s[14:15]                          // 000000008048: BEFE040E
  v_cndmask_b32  v75, 0, v75, s[12:13]                  // 00000000804C: D200004B 00329680
  v_lshl_b64    v[79:80], 1, v5                         // 000000008054: D2C2004F 00020A81
  v_and_b32     v79, exec_lo, v79                       // 00000000805C: 369E9E7E
  v_and_b32     v80, exec_hi, v80                       // 000000008060: 36A0A07F
  v_cmp_ne_u64  s[12:13], 0, v[79:80]                   // 000000008064: D1CA000C 00029E80
  s_mov_b64     s[14:15], exec                          // 00000000806C: BE8E047E
  s_mov_b64     s[30:31], exec                          // 000000008070: BE9E047E
  s_nop         0x0000                                  // 000000008074: BF800000
  s_nop         0x0000                                  // 000000008078: BF800000
  s_nop         0x0000                                  // 00000000807C: BF800000
  label_2020:
  v_readfirstlane_b32  s5, v5                           // 000000008080: 7E0A0505
  v_cmp_eq_u32  vcc, s5, v5                             // 000000008084: 7D840A05
  s_and_saveexec_b64  s[32:33], vcc                     // 000000008088: BEA0246A
  s_cbranch_execz  label_2028                           // 00000000808C: BF880004
  v_readlane_b32  s5, v81, s5                           // 000000008090: 020A0B51
  v_mov_b32     v79, s5                                 // 000000008094: 7E9E0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000008098: 8A9E7E1E
  s_cbranch_scc0  label_202A                            // 00000000809C: BF840002
  label_2028:
  s_and_b64     exec, s[32:33], s[30:31]                // 0000000080A0: 87FE1E20
  s_branch      label_2020                              // 0000000080A4: BF82FFF6
  label_202A:
  s_mov_b64     exec, s[14:15]                          // 0000000080A8: BEFE040E
  v_cndmask_b32  v8, 0, v79, s[12:13]                   // 0000000080AC: D2000008 00329E80
  v_lshl_b64    v[79:80], 1, v5                         // 0000000080B4: D2C2004F 00020A81
  v_and_b32     v79, exec_lo, v79                       // 0000000080BC: 369E9E7E
  v_and_b32     v80, exec_hi, v80                       // 0000000080C0: 36A0A07F
  v_cmp_ne_u64  s[12:13], 0, v[79:80]                   // 0000000080C4: D1CA000C 00029E80
  s_mov_b64     s[14:15], exec                          // 0000000080CC: BE8E047E
  s_mov_b64     s[30:31], exec                          // 0000000080D0: BE9E047E
  s_nop         0x0000                                  // 0000000080D4: BF800000
  s_nop         0x0000                                  // 0000000080D8: BF800000
  s_nop         0x0000                                  // 0000000080DC: BF800000
  label_2038:
  v_readfirstlane_b32  s5, v5                           // 0000000080E0: 7E0A0505
  v_cmp_eq_u32  vcc, s5, v5                             // 0000000080E4: 7D840A05
  s_and_saveexec_b64  s[32:33], vcc                     // 0000000080E8: BEA0246A
  s_cbranch_execz  label_2040                           // 0000000080EC: BF880004
  v_readlane_b32  s5, v9, s5                            // 0000000080F0: 020A0B09
  v_mov_b32     v79, s5                                 // 0000000080F4: 7E9E0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 0000000080F8: 8A9E7E1E
  s_cbranch_scc0  label_2042                            // 0000000080FC: BF840002
  label_2040:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000008100: 87FE1E20
  s_branch      label_2038                              // 000000008104: BF82FFF6
  label_2042:
  s_mov_b64     exec, s[14:15]                          // 000000008108: BEFE040E
  v_cndmask_b32  v9, 0, v79, s[12:13]                   // 00000000810C: D2000009 00329E80
  v_lshl_b64    v[79:80], 1, v5                         // 000000008114: D2C2004F 00020A81
  v_and_b32     v79, exec_lo, v79                       // 00000000811C: 369E9E7E
  v_and_b32     v80, exec_hi, v80                       // 000000008120: 36A0A07F
  v_cmp_ne_u64  s[12:13], 0, v[79:80]                   // 000000008124: D1CA000C 00029E80
  s_mov_b64     s[14:15], exec                          // 00000000812C: BE8E047E
  s_mov_b64     s[30:31], exec                          // 000000008130: BE9E047E
  s_nop         0x0000                                  // 000000008134: BF800000
  s_nop         0x0000                                  // 000000008138: BF800000
  s_nop         0x0000                                  // 00000000813C: BF800000
  label_2050:
  v_readfirstlane_b32  s5, v5                           // 000000008140: 7E0A0505
  v_cmp_eq_u32  vcc, s5, v5                             // 000000008144: 7D840A05
  s_and_saveexec_b64  s[32:33], vcc                     // 000000008148: BEA0246A
  s_cbranch_execz  label_2058                           // 00000000814C: BF880004
  v_readlane_b32  s5, v10, s5                           // 000000008150: 020A0B0A
  v_mov_b32     v79, s5                                 // 000000008154: 7E9E0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 000000008158: 8A9E7E1E
  s_cbranch_scc0  label_205A                            // 00000000815C: BF840002
  label_2058:
  s_and_b64     exec, s[32:33], s[30:31]                // 000000008160: 87FE1E20
  s_branch      label_2050                              // 000000008164: BF82FFF6
  label_205A:
  s_mov_b64     exec, s[14:15]                          // 000000008168: BEFE040E
  v_cndmask_b32  v10, 0, v79, s[12:13]                  // 00000000816C: D200000A 00329E80
  v_lshl_b64    v[79:80], 1, v5                         // 000000008174: D2C2004F 00020A81
  v_and_b32     v79, exec_lo, v79                       // 00000000817C: 369E9E7E
  v_and_b32     v80, exec_hi, v80                       // 000000008180: 36A0A07F
  v_cmp_ne_u64  s[12:13], 0, v[79:80]                   // 000000008184: D1CA000C 00029E80
  s_mov_b64     s[14:15], exec                          // 00000000818C: BE8E047E
  s_mov_b64     s[30:31], exec                          // 000000008190: BE9E047E
  s_nop         0x0000                                  // 000000008194: BF800000
  s_nop         0x0000                                  // 000000008198: BF800000
  s_nop         0x0000                                  // 00000000819C: BF800000
  label_2068:
  v_readfirstlane_b32  s5, v5                           // 0000000081A0: 7E0A0505
  v_cmp_eq_u32  vcc, s5, v5                             // 0000000081A4: 7D840A05
  s_and_saveexec_b64  s[32:33], vcc                     // 0000000081A8: BEA0246A
  s_cbranch_execz  label_2070                           // 0000000081AC: BF880004
  v_readlane_b32  s5, v4, s5                            // 0000000081B0: 020A0B04
  v_mov_b32     v5, s5                                  // 0000000081B4: 7E0A0205
  s_andn2_b64   s[30:31], s[30:31], exec                // 0000000081B8: 8A9E7E1E
  s_cbranch_scc0  label_2072                            // 0000000081BC: BF840002
  label_2070:
  s_and_b64     exec, s[32:33], s[30:31]                // 0000000081C0: 87FE1E20
  s_branch      label_2068                              // 0000000081C4: BF82FFF6
  label_2072:
  s_mov_b64     exec, s[14:15]                          // 0000000081C8: BEFE040E
  v_cndmask_b32  v4, 0, v5, s[12:13]                    // 0000000081CC: D2000004 00320A80
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000081D4: BF8C0070
  v_mul_f32     v5, v74, v72                            // 0000000081D8: 100A914A
  v_mul_f32     v52, v74, v52                           // 0000000081DC: 1068694A
  v_mul_f32     v72, v74, v73                           // 0000000081E0: 1090934A
  v_cndmask_b32  v52, v52, v72, s[26:27]                // 0000000081E4: D2000034 006A9134
  v_cndmask_b32  v5, v5, v52, s[22:23]                  // 0000000081EC: D2000005 005A6905
  v_bfi_b32     v0, 7, v2, v0                           // 0000000081F4: D2940000 04020487
  v_add_i32     v1, vcc, s8, v1                         // 0000000081FC: 4A020208
  v_mul_f32     v3, v74, v3                             // 000000008200: 1006074A
  v_mul_f32     v52, v74, v77                           // 000000008204: 10689B4A
  v_mul_f32     v6, v74, v6                             // 000000008208: 100C0D4A
  v_mul_f32     v72, v74, v76                           // 00000000820C: 1090994A
  v_mul_f32     v73, v74, v78                           // 000000008210: 10929D4A
  v_mul_f32     v75, v74, v75                           // 000000008214: 1096974A
  v_cndmask_b32  v6, v72, v6, s[26:27]                  // 000000008218: D2000006 006A0D48
  v_cmp_gt_i32  vcc, 34, v2                             // 000000008220: 7D0804A2
  v_cndmask_b32  v72, v75, v73, vcc                     // 000000008224: 0090934B
  v_cndmask_b32  v52, v72, v52, s[28:29]                // 000000008228: D2000034 00726948
  v_cndmask_b32  v3, v6, v3, s[28:29]                   // 000000008230: D2000003 00720706
  v_add_i32     v0, vcc, s8, v0                         // 000000008238: 4A000008
  s_add_u32     s4, s4, s8                              // 00000000823C: 80040804
  v_cmp_lt_i32  s[12:13], v1, s4                        // 000000008240: D102000C 00000901
  s_load_dwordx2  s[6:7], s[6:7], 0x04                  // 000000008248: C0430704
  s_and_saveexec_b64  s[12:13], s[12:13]                // 00000000824C: BE8C240C
  s_cbranch_execz  label_20C7                           // 000000008250: BF880032
  s_add_u32     s5, s9, s8                              // 000000008254: 80050809
  v_cmp_gt_i32  vcc, s5, v0                             // 000000008258: 7D080005
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000825C: BE8E246A
  v_add_f32     v6, v82, v13                            // 000000008260: 060C1B52
  s_cbranch_execz  label_20AD                           // 000000008264: BF880013
  v_add_f32     v6, v6, v16                             // 000000008268: 060C2106
  v_add_f32     v6, v6, v30                             // 00000000826C: 060C3D06
  v_add_f32     v6, v6, v11                             // 000000008270: 060C1706
  v_add_f32     v6, v6, v32                             // 000000008274: 060C4106
  v_add_f32     v6, v6, v31                             // 000000008278: 060C3F06
  v_add_f32     v6, v6, v12                             // 00000000827C: 060C1906
  v_add_f32     v5, v6, v5                              // 000000008280: 060A0B06
  v_mul_lo_u32  v6, v1, s11                             // 000000008284: D2D20006 00001701
  v_add_i32     v11, vcc, v6, v0                        // 00000000828C: 4A160106
  v_ashrrev_i32  v12, 31, v11                           // 000000008290: 3018169F
  v_lshl_b64    v[11:12], v[11:12], 2                   // 000000008294: D2C2000B 0001050B
  s_waitcnt     lgkmcnt(0)                              // 00000000829C: BF8C007F
  v_add_i32     v15, vcc, s6, v11                       // 0000000082A0: 4A1E1606
  v_mov_b32     v11, s7                                 // 0000000082A4: 7E160207
  v_addc_u32    v16, vcc, v11, v12, vcc                 // 0000000082A8: 5020190B
  flat_store_dword  v[15:16], v5                        // 0000000082AC: DC700000 0000050F
  label_20AD:
  s_mov_b64     exec, s[14:15]                          // 0000000082B4: BEFE040E
  v_add_i32     v5, vcc, 8, v0                          // 0000000082B8: 4A0A0088
  v_cmp_gt_i32  vcc, s5, v5                             // 0000000082BC: 7D080A05
  s_and_b64     exec, s[14:15], vcc                     // 0000000082C0: 87FE6A0E
  v_mul_f32     v6, v54, v66                            // 0000000082C4: 100C8536
  s_cbranch_execz  label_20C7                           // 0000000082C8: BF880014
  v_mul_f32     v11, v54, v57                           // 0000000082CC: 10167336
  v_mul_f32     v12, v54, v62                           // 0000000082D0: 10187D36
  v_cndmask_b32  v6, v11, v6, s[26:27]                  // 0000000082D4: D2000006 006A0D0B
  v_cmp_gt_i32  vcc, 9, v2                              // 0000000082DC: 7D080489
  v_cndmask_b32  v6, v6, v12, vcc                       // 0000000082E0: 000C1906
  v_add_f32     v6, v7, v6                              // 0000000082E4: 060C0D07
  v_add_f32     v3, v6, v3                              // 0000000082E8: 06060706
  v_mul_lo_u32  v6, v1, s11                             // 0000000082EC: D2D20006 00001701
  v_add_i32     v5, vcc, v5, v6                         // 0000000082F4: 4A0A0D05
  v_ashrrev_i32  v6, 31, v5                             // 0000000082F8: 300C0A9F
  v_lshl_b64    v[5:6], v[5:6], 2                       // 0000000082FC: D2C20005 00010505
  s_waitcnt     lgkmcnt(0)                              // 000000008304: BF8C007F
  v_add_i32     v5, vcc, s6, v5                         // 000000008308: 4A0A0A06
  v_mov_b32     v11, s7                                 // 00000000830C: 7E160207
  v_addc_u32    v6, vcc, v11, v6, vcc                   // 000000008310: 500C0D0B
  flat_store_dword  v[5:6], v3                          // 000000008314: DC700000 00000305
  label_20C7:
  s_mov_b64     exec, s[12:13]                          // 00000000831C: BEFE040C
  v_add_i32     v1, vcc, 8, v1                          // 000000008320: 4A020288
  v_cmp_gt_i32  vcc, s4, v1                             // 000000008324: 7D080204
  s_and_b64     exec, s[12:13], vcc                     // 000000008328: 87FE6A0C
  s_cbranch_execz  label_2167                           // 00000000832C: BF88009B
  s_add_u32     s4, s9, s8                              // 000000008330: 80040809
  v_cmp_gt_i32  vcc, s4, v0                             // 000000008334: 7D080004
  s_and_saveexec_b64  s[8:9], vcc                       // 000000008338: BE88246A
  v_mov_b32     v3, v115                                // 00000000833C: 7E060373
  s_cbranch_execz  label_20FD                           // 000000008340: BF88002C
  v_mul_f32     v5, v18, v27                            // 000000008344: 100A3712
  v_mul_f32     v6, v18, v19                            // 000000008348: 100C2712
  v_cmp_gt_i32  vcc, 51, v2                             // 00000000834C: 7D0804B3
  v_mul_f32     v11, v18, v26                           // 000000008350: 10163512
  v_cndmask_b32  v5, v6, v5, vcc                        // 000000008354: 000A0B06
  v_cndmask_b32  v5, v5, v11, s[16:17]                  // 000000008358: D2000005 00421705
  v_add_f32     v6, 0, v83                              // 000000008360: 060CA680
  v_mul_f32     v7, v33, v47                            // 000000008364: 100E5F21
  v_mul_f32     v11, v33, v35                           // 000000008368: 10164721
  v_cmp_gt_i32  vcc, 43, v2                             // 00000000836C: 7D0804AB
  v_add_f32     v5, v6, v5                              // 000000008370: 060A0B06
  v_mul_f32     v6, v33, v46                            // 000000008374: 100C5D21
  v_cndmask_b32  v7, v11, v7, vcc                       // 000000008378: 000E0F0B
  v_add_f32     v5, v5, v24                             // 00000000837C: 060A3105
  v_cndmask_b32  v6, v7, v6, s[18:19]                   // 000000008380: D2000006 004A0D07
  v_add_f32     v3, v5, v3                              // 000000008388: 06060705
  v_mul_lo_u32  v5, v1, s11                             // 00000000838C: D2D20005 00001701
  v_mul_f32     v7, v54, v68                            // 000000008394: 100E8936
  v_mul_f32     v11, v54, v56                           // 000000008398: 10167136
  v_cmp_lt_i32  s[0:1], v2, 35                          // 00000000839C: D1020000 00014702
  v_add_f32     v3, v3, v6                              // 0000000083A4: 06060D03
  v_add_i32     v12, vcc, v5, v0                        // 0000000083A8: 4A180105
  v_mul_f32     v6, v54, v67                            // 0000000083AC: 100C8736
  v_cndmask_b32  v7, v11, v7, s[0:1]                    // 0000000083B0: D2000007 00020F0B
  v_add_f32     v3, v3, v42                             // 0000000083B8: 06065503
  v_ashrrev_i32  v13, 31, v12                           // 0000000083BC: 301A189F
  v_cndmask_b32  v6, v7, v6, s[28:29]                   // 0000000083C0: D2000006 00720D07
  v_add_f32     v3, v3, v37                             // 0000000083C8: 06064B03
  v_add_f32     v3, v3, v6                              // 0000000083CC: 06060D03
  v_lshl_b64    v[5:6], v[12:13], 2                     // 0000000083D0: D2C20005 0001050C
  v_add_f32     v3, v3, v52                             // 0000000083D8: 06066903
  s_waitcnt     lgkmcnt(0)                              // 0000000083DC: BF8C007F
  v_add_i32     v5, vcc, s6, v5                         // 0000000083E0: 4A0A0A06
  v_mov_b32     v7, s7                                  // 0000000083E4: 7E0E0207
  v_addc_u32    v6, vcc, v7, v6, vcc                    // 0000000083E8: 500C0D07
  flat_store_dword  v[5:6], v3                          // 0000000083EC: DC700000 00000305
  label_20FD:
  s_mov_b64     exec, s[8:9]                            // 0000000083F4: BEFE0408
  v_add_i32     v0, vcc, 8, v0                          // 0000000083F8: 4A000088
  v_cmp_gt_i32  vcc, s4, v0                             // 0000000083FC: 7D080004
  s_and_b64     exec, s[8:9], vcc                       // 000000008400: 87FE6A08
  v_mul_f32     v3, v17, v22                            // 000000008404: 10062D11
  s_cbranch_execz  label_2167                           // 000000008408: BF880064
  v_mul_f32     v5, v17, v14                            // 00000000840C: 100A1D11
  v_mul_f32     v6, v17, v21                            // 000000008410: 100C2B11
  v_mul_f32     v7, v18, v29                            // 000000008414: 100E3B12
  v_mul_f32     v11, v18, v23                           // 000000008418: 10162F12
  v_cndmask_b32  v3, v5, v3, s[24:25]                   // 00000000841C: D2000003 00620705
  v_cmp_gt_i32  vcc, 20, v2                             // 000000008424: 7D080494
  v_mul_f32     v5, v18, v28                            // 000000008428: 100A3912
  v_mul_f32     v12, v25, v39                           // 00000000842C: 10184F19
  v_mul_f32     v13, v25, v40                           // 000000008430: 101A5119
  v_cndmask_b32  v3, v3, v6, vcc                        // 000000008434: 00060D03
  v_cndmask_b32  v6, v11, v7, s[24:25]                  // 000000008438: D2000006 00620F0B
  v_cmp_gt_i32  vcc, 19, v2                             // 000000008440: 7D080493
  v_mul_f32     v7, v25, v38                            // 000000008444: 100E4D19
  v_mul_f32     v11, v34, v45                           // 000000008448: 10165B22
  v_mul_f32     v14, v34, v36                           // 00000000844C: 101C4922
  v_cndmask_b32  v5, v6, v5, vcc                        // 000000008450: 000A0B06
  v_cndmask_b32  v6, v13, v12, s[24:25]                 // 000000008454: D2000006 0062190D
  v_mul_f32     v12, v34, v44                           // 00000000845C: 10185922
  v_mul_f32     v13, v33, v49                           // 000000008460: 101A6321
  v_mul_f32     v15, v33, v41                           // 000000008464: 101E5321
  v_add_f32     v3, 0, v3                               // 000000008468: 06060680
  v_cmp_ne_u32  vcc, 0, v20                             // 00000000846C: 7D8A2880
  v_cndmask_b32  v6, v6, v7, vcc                        // 000000008470: 000C0F06
  v_cndmask_b32  v7, v14, v11, s[26:27]                 // 000000008474: D2000007 006A170E
  v_cmp_gt_i32  vcc, 12, v2                             // 00000000847C: 7D08048C
  v_mul_f32     v11, v33, v48                           // 000000008480: 10166121
  v_mul_f32     v14, v43, v59                           // 000000008484: 101C772B
  v_mul_f32     v16, v43, v60                           // 000000008488: 1020792B
  v_add_f32     v3, v3, v5                              // 00000000848C: 06060B03
  v_cndmask_b32  v5, v7, v12, vcc                       // 000000008490: 000A1907
  v_cndmask_b32  v7, v15, v13, s[26:27]                 // 000000008494: D2000007 006A1B0F
  v_cmp_gt_i32  vcc, 11, v2                             // 00000000849C: 7D08048B
  v_mul_f32     v12, v43, v58                           // 0000000084A0: 1018752B
  v_mul_f32     v13, v53, v63                           // 0000000084A4: 101A7F35
  v_mul_f32     v15, v53, v64                           // 0000000084A8: 101E8135
  v_mul_f32     v17, v53, v65                           // 0000000084AC: 10228335
  v_mul_f32     v18, v53, v55                           // 0000000084B0: 10246F35
  v_add_f32     v3, v3, v6                              // 0000000084B4: 06060D03
  v_cndmask_b32  v6, v7, v11, vcc                       // 0000000084B8: 000C1707
  v_cndmask_b32  v7, v16, v14, s[26:27]                 // 0000000084BC: D2000007 006A1D10
  v_cmp_lt_i32  s[0:1], v2, 62                          // 0000000084C4: D1020000 00017D02
  v_cmp_gt_i32  vcc, 4, v2                              // 0000000084CC: 7D080484
  v_mul_f32     v11, v54, v69                           // 0000000084D0: 10168B36
  v_mul_f32     v14, v54, v70                           // 0000000084D4: 101C8D36
  v_mul_f32     v16, v54, v71                           // 0000000084D8: 10208F36
  v_mul_f32     v19, v54, v61                           // 0000000084DC: 10267B36
  v_add_f32     v3, v3, v5                              // 0000000084E0: 06060B03
  v_cndmask_b32  v5, v7, v12, s[20:21]                  // 0000000084E4: D2000005 00521907
  v_cndmask_b32  v7, v18, v17, s[0:1]                   // 0000000084EC: D2000007 00022312
  v_cndmask_b32  v12, v15, v13, vcc                     // 0000000084F4: 00181B0F
  v_cmp_lt_i32  s[0:1], v2, 61                          // 0000000084F8: D1020000 00017B02
  v_cmp_lt_i32  s[2:3], v2, 3                           // 000000008500: D1020002 00010702
  v_mul_f32     v8, v74, v8                             // 000000008508: 1010114A
  v_mul_f32     v9, v74, v9                             // 00000000850C: 1012134A
  v_mul_f32     v10, v74, v10                           // 000000008510: 1014154A
  v_mul_f32     v4, v74, v4                             // 000000008514: 1008094A
  v_add_f32     v3, v3, v6                              // 000000008518: 06060D03
  v_cmp_ne_u32  vcc, 0, v50                             // 00000000851C: 7D8A6480
  v_cndmask_b32  v6, v7, v12, vcc                       // 000000008520: 000C1907
  v_cndmask_b32  v7, v19, v16, s[0:1]                   // 000000008524: D2000007 00022113
  v_cndmask_b32  v11, v14, v11, s[2:3]                  // 00000000852C: D200000B 000A170E
  v_cmp_lt_i32  s[0:1], v2, 60                          // 000000008534: D1020000 00017902
  v_cmp_lt_i32  s[2:3], v2, 2                           // 00000000853C: D1020002 00010502
  v_add_f32     v2, v3, v5                              // 000000008544: 06040B03
  v_cndmask_b32  v3, v7, v11, vcc                       // 000000008548: 00061707
  v_cndmask_b32  v4, v4, v10, s[0:1]                    // 00000000854C: D2000004 00021504
  v_cndmask_b32  v5, v9, v8, s[2:3]                     // 000000008554: D2000005 000A1109
  v_add_f32     v2, v2, v6                              // 00000000855C: 06040D02
  v_cndmask_b32  v4, v4, v5, vcc                        // 000000008560: 00080B04
  v_add_f32     v2, v2, v3                              // 000000008564: 06040702
  v_add_f32     v2, v2, v4                              // 000000008568: 06040902
  v_mul_lo_u32  v1, v1, s11                             // 00000000856C: D2D20001 00001701
  v_add_i32     v0, vcc, v1, v0                         // 000000008574: 4A000101
  v_ashrrev_i32  v1, 31, v0                             // 000000008578: 3002009F
  v_lshl_b64    v[0:1], v[0:1], 2                       // 00000000857C: D2C20000 00010500
  s_waitcnt     lgkmcnt(0)                              // 000000008584: BF8C007F
  v_add_i32     v0, vcc, s6, v0                         // 000000008588: 4A000006
  v_mov_b32     v3, s7                                  // 00000000858C: 7E060207
  v_addc_u32    v1, vcc, v3, v1, vcc                    // 000000008590: 50020303
  flat_store_dword  v[0:1], v2                          // 000000008594: DC700000 00000200
  label_2167:
  s_endpgm                                              // 00000000859C: BF810000
  //
  // padding (0000000085a0 - 000000008600)
  //
  //
  // amd_kernel_code_t for &ZZ17Stencil_Hcc_Shfl4RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__619__cxxamp_trampolineEPfiiS4_iiS4_iiiii (000000008600 - 000000008700)
  //
  //
  // &ZZ17Stencil_Hcc_Shfl4RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__619__cxxamp_trampolineEPfiiS4_iiS4_iiiii:
  //
  s_load_dword  s0, s[4:5], 0x01                        // 000000008700: C0000501
  v_mbcnt_lo_u32_b32  v2, -1, 0                         // 000000008704: D2460002 000100C1
  v_mbcnt_hi_u32_b32  v2, -1, v2                        // 00000000870C: 480404C1
  s_waitcnt     lgkmcnt(0)                              // 000000008710: BF8C007F
  s_and_b32     s1, s0, 0x0000ffff                      // 000000008714: 8701FF00 0000FFFF
  s_bfe_u32     s0, s0, 0x00100010                      // 00000000871C: 9380FF00 00100010
  s_mul_i32     s1, s1, s8                              // 000000008724: 93010801
  v_add_i32     v0, vcc, s1, v0                         // 000000008728: 4A000001
  s_mul_i32     s0, s0, s9                              // 00000000872C: 93000900
  v_add_i32     v1, vcc, s0, v1                         // 000000008730: 4A020200
  v_add_i32     v3, vcc, 2, v2                          // 000000008734: 4A060482
  v_add_i32     v4, vcc, 6, v2                          // 000000008738: 4A080486
  v_add_i32     v5, vcc, 4, v2                          // 00000000873C: 4A0A0484
  v_add_i32     v6, vcc, 8, v2                          // 000000008740: 4A0C0488
  s_load_dwordx2  s[0:1], s[6:7], 0x0c                  // 000000008744: C040070C
  v_ashrrev_i32  v7, 31, v2                             // 000000008748: 300E049F
  s_mov_b32     s2, 0x66666667                          // 00000000874C: BE8203FF 66666667
  v_ashrrev_i32  v8, 31, v3                             // 000000008754: 3010069F
  v_ashrrev_i32  v9, 31, v4                             // 000000008758: 3012089F
  v_ashrrev_i32  v10, 31, v5                            // 00000000875C: 30140A9F
  v_ashrrev_i32  v11, 31, v6                            // 000000008760: 30160C9F
  v_mul_hi_u32  v12, v2, s2                             // 000000008764: D2D4000C 00000502
  v_mul_lo_u32  v7, v7, s2                              // 00000000876C: D2D20007 00000507
  v_lshlrev_b32  v1, 2, v1                              // 000000008774: 34020282
  v_mul_hi_u32  v13, v3, s2                             // 000000008778: D2D4000D 00000503
  v_mul_lo_u32  v8, v8, s2                              // 000000008780: D2D20008 00000508
  v_mul_hi_u32  v14, v4, s2                             // 000000008788: D2D4000E 00000504
  v_mul_lo_u32  v9, v9, s2                              // 000000008790: D2D20009 00000509
  v_mul_hi_u32  v15, v5, s2                             // 000000008798: D2D4000F 00000505
  v_mul_lo_u32  v10, v10, s2                            // 0000000087A0: D2D2000A 0000050A
  v_mul_hi_u32  v16, v6, s2                             // 0000000087A8: D2D40010 00000506
  v_mul_lo_u32  v11, v11, s2                            // 0000000087B0: D2D2000B 0000050B
  v_add_i32     v7, vcc, v7, v12                        // 0000000087B8: 4A0E1907
  v_ashrrev_i32  v12, 3, v2                             // 0000000087BC: 30180483
  v_and_b32     v1, 0xffffffe0, v1                      // 0000000087C0: 360202FF FFFFFFE0
  v_add_i32     v8, vcc, v8, v13                        // 0000000087C8: 4A101B08
  v_add_i32     v9, vcc, v9, v14                        // 0000000087CC: 4A121D09
  v_add_i32     v10, vcc, v10, v15                      // 0000000087D0: 4A141F0A
  v_add_i32     v11, vcc, v11, v16                      // 0000000087D4: 4A16210B
  v_lshrrev_b32  v13, 31, v7                            // 0000000087D8: 2C1A0E9F
  v_ashrrev_i32  v7, 2, v7                              // 0000000087DC: 300E0E82
  v_add_i32     v1, vcc, v12, v1                        // 0000000087E0: 4A02030C
  v_lshrrev_b32  v14, 31, v8                            // 0000000087E4: 2C1C109F
  v_ashrrev_i32  v8, 2, v8                              // 0000000087E8: 30101082
  v_lshrrev_b32  v15, 31, v9                            // 0000000087EC: 2C1E129F
  v_ashrrev_i32  v9, 2, v9                              // 0000000087F0: 30121282
  v_lshrrev_b32  v16, 31, v10                           // 0000000087F4: 2C20149F
  v_ashrrev_i32  v10, 2, v10                            // 0000000087F8: 30141482
  v_lshrrev_b32  v17, 31, v11                           // 0000000087FC: 2C22169F
  v_ashrrev_i32  v11, 2, v11                            // 000000008800: 30161682
  v_add_i32     v7, vcc, v7, v13                        // 000000008804: 4A0E1B07
  v_and_b32     v13, -8, v1                             // 000000008808: 361A02C8
  v_add_i32     v8, vcc, v8, v14                        // 00000000880C: 4A101D08
  v_add_i32     v9, vcc, v9, v15                        // 000000008810: 4A121F09
  v_add_i32     v10, vcc, v10, v16                      // 000000008814: 4A14210A
  v_add_i32     v11, vcc, v11, v17                      // 000000008818: 4A16230B
  s_load_dword  s2, s[6:7], 0x0e                        // 00000000881C: C001070E
  s_waitcnt     lgkmcnt(0)                              // 000000008820: BF8C007F
  s_lshl_b32    s3, s0, 1                               // 000000008824: 8F038100
  v_mul_lo_u32  v14, v7, 10                             // 000000008828: D2D2000E 00011507
  v_add_i32     v15, vcc, v13, v8                       // 000000008830: 4A1E110D
  v_add_i32     v16, vcc, v13, v9                       // 000000008834: 4A20130D
  v_mul_lo_u32  v8, v8, 10                              // 000000008838: D2D20008 00011508
  v_or_b32      v17, 6, v13                             // 000000008840: 38221A86
  v_mul_lo_u32  v9, v9, 10                              // 000000008844: D2D20009 00011509
  v_mul_lo_u32  v18, v10, 10                            // 00000000884C: D2D20012 0001150A
  v_add_i32     v19, vcc, v13, v11                      // 000000008854: 4A26170D
  v_mul_lo_u32  v11, v11, 10                            // 000000008858: D2D2000B 0001150B
  v_add_i32     v7, vcc, v7, v13                        // 000000008860: 4A0E1B07
  s_add_u32     s4, s3, s1                              // 000000008864: 80040103
  v_and_b32     v13, -8, v0                             // 000000008868: 361A00C8
  v_sub_i32     v14, vcc, v2, v14                       // 00000000886C: 4C1C1D02
  v_add_i32     v15, vcc, 19, v15                       // 000000008870: 4A1E1E93
  v_sub_i32     v3, vcc, v3, v8                         // 000000008874: 4C061103
  v_add_i32     v8, vcc, 25, v16                        // 000000008878: 4A102099
  v_add_i32     v10, vcc, v10, v17                      // 00000000887C: 4A14230A
  v_sub_i32     v4, vcc, v4, v9                         // 000000008880: 4C081304
  v_sub_i32     v5, vcc, v5, v18                        // 000000008884: 4C0A2505
  v_add_i32     v9, vcc, 12, v19                        // 000000008888: 4A12268C
  v_sub_i32     v6, vcc, v6, v11                        // 00000000888C: 4C0C1706
  s_load_dwordx2  s[8:9], s[6:7], 0x00                  // 000000008890: C0440700
  v_add_i32     v11, vcc, v14, v13                      // 000000008894: 4A161B0E
  v_mul_lo_u32  v14, v15, s4                            // 000000008898: D2D2000E 0000090F
  v_add_i32     v3, vcc, v3, v13                        // 0000000088A0: 4A061B03
  v_mul_lo_u32  v10, v10, s4                            // 0000000088A4: D2D2000A 0000090A
  v_mul_lo_u32  v8, v8, s4                              // 0000000088AC: D2D20008 00000908
  v_add_i32     v4, vcc, v4, v13                        // 0000000088B4: 4A081B04
  v_add_i32     v5, vcc, v5, v13                        // 0000000088B8: 4A0A1B05
  v_mul_lo_u32  v15, v7, s4                             // 0000000088BC: D2D2000F 00000907
  v_mul_lo_u32  v9, v9, s4                              // 0000000088C4: D2D20009 00000909
  v_add_i32     v6, vcc, v6, v13                        // 0000000088CC: 4A0C1B06
  v_add_i32     v3, vcc, v3, v14                        // 0000000088D0: 4A061D03
  v_add_i32     v16, vcc, v4, v8                        // 0000000088D4: 4A201104
  v_add_i32     v13, vcc, v5, v10                       // 0000000088D8: 4A1A1505
  v_add_i32     v8, vcc, v15, v11                       // 0000000088DC: 4A10170F
  v_add_i32     v5, vcc, v6, v9                         // 0000000088E0: 4A0A1306
  v_ashrrev_i32  v4, 31, v3                             // 0000000088E4: 3008069F
  v_ashrrev_i32  v17, 31, v16                           // 0000000088E8: 3022209F
  v_ashrrev_i32  v14, 31, v13                           // 0000000088EC: 301C1A9F
  v_ashrrev_i32  v9, 31, v8                             // 0000000088F0: 3012109F
  v_ashrrev_i32  v6, 31, v5                             // 0000000088F4: 300C0A9F
  v_add_i32     v7, vcc, 32, v7                         // 0000000088F8: 4A0E0EA0
  s_add_u32     s3, s3, s2                              // 0000000088FC: 80030203
  v_cmp_lt_i32  s[10:11], v7, s3                        // 000000008900: D102000A 00000707
  v_cmp_lt_i32  s[12:13], v11, s4                       // 000000008908: D102000C 0000090B
  v_lshl_b64    v[16:17], v[16:17], 2                   // 000000008910: D2C20010 00010510
  v_lshl_b64    v[3:4], v[3:4], 2                       // 000000008918: D2C20003 00010503
  v_lshl_b64    v[8:9], v[8:9], 2                       // 000000008920: D2C20008 00010508
  v_lshl_b64    v[13:14], v[13:14], 2                   // 000000008928: D2C2000D 0001050D
  v_lshl_b64    v[5:6], v[5:6], 2                       // 000000008930: D2C20005 00010505
  s_waitcnt     lgkmcnt(0)                              // 000000008938: BF8C007F
  v_add_i32     v3, vcc, s8, v3                         // 00000000893C: 4A060608
  v_mov_b32     v10, s9                                 // 000000008940: 7E140209
  v_addc_u32    v4, vcc, v10, v4, vcc                   // 000000008944: 5008090A
  v_add_i32     v15, vcc, s8, v16                       // 000000008948: 4A1E2008
  v_addc_u32    v16, vcc, v10, v17, vcc                 // 00000000894C: 5020230A
  v_add_i32     v8, vcc, s8, v8                         // 000000008950: 4A101008
  v_addc_u32    v9, vcc, v10, v9, vcc                   // 000000008954: 5012130A
  v_add_i32     v5, vcc, s8, v5                         // 000000008958: 4A0A0A08
  v_addc_u32    v6, vcc, v10, v6, vcc                   // 00000000895C: 500C0D0A
  v_add_i32     v13, vcc, s8, v13                       // 000000008960: 4A1A1A08
  v_addc_u32    v14, vcc, v10, v14, vcc                 // 000000008964: 501C1D0A
  s_and_b64     s[10:11], s[12:13], s[10:11]            // 000000008968: 878A0A0C
  flat_load_dword  v8, v[8:9]                           // 00000000896C: DC300000 08000008
  flat_load_dword  v9, v[15:16]                         // 000000008974: DC300000 0900000F
  flat_load_dword  v3, v[3:4]                           // 00000000897C: DC300000 03000003
  flat_load_dword  v4, v[5:6]                           // 000000008984: DC300000 04000005
  flat_load_dword  v5, v[13:14]                         // 00000000898C: DC300000 0500000D
  s_and_saveexec_b64  s[10:11], s[10:11]                // 000000008994: BE8A240A
  v_mul_lo_u32  v6, v7, s4                              // 000000008998: D2D20006 00000907
  s_cbranch_execz  label_2272                           // 0000000089A0: BF880009
  v_add_i32     v6, vcc, v6, v11                        // 0000000089A4: 4A0C1706
  v_ashrrev_i32  v7, 31, v6                             // 0000000089A8: 300E0C9F
  v_lshl_b64    v[6:7], v[6:7], 2                       // 0000000089AC: D2C20006 00010506
  v_add_i32     v6, vcc, s8, v6                         // 0000000089B4: 4A0C0C08
  v_mov_b32     v10, s9                                 // 0000000089B8: 7E140209
  v_addc_u32    v7, vcc, v10, v7, vcc                   // 0000000089BC: 500E0F0A
  flat_load_dword  v6, v[6:7]                           // 0000000089C0: DC300000 06000006
  label_2272:
  s_andn2_b64   exec, s[10:11], exec                    // 0000000089C8: 8AFE7E0A
  s_cbranch_execz  label_2274                           // 0000000089CC: BF880000
  label_2274:
  s_mov_b64     exec, s[10:11]                          // 0000000089D0: BEFE040A
  s_load_dwordx2  s[8:9], s[6:7], 0x08                  // 0000000089D4: C0440708
  v_lshlrev_b32  v7, 1, v12                             // 0000000089D8: 340E1881
  v_add_i32     v7, vcc, v7, v2                         // 0000000089DC: 4A0E0507
  v_and_b32     v10, 63, v7                             // 0000000089E0: 36140EBF
  s_waitcnt     lgkmcnt(0)                              // 0000000089E4: BF8C007F
  v_mov_b32     v11, s8                                 // 0000000089E8: 7E160208
  v_mov_b32     v12, s9                                 // 0000000089EC: 7E180209
  flat_load_dword  v11, v[11:12]                        // 0000000089F0: DC300000 0B00000B
  v_lshl_b64    v[12:13], 1, v10                        // 0000000089F8: D2C2000C 00021481
  v_and_b32     v12, exec_lo, v12                       // 000000008A00: 3618187E
  v_and_b32     v13, exec_hi, v13                       // 000000008A04: 361A1A7F
  v_cmp_ne_u64  s[10:11], 0, v[12:13]                   // 000000008A08: D1CA000A 00021880
  s_mov_b64     s[12:13], exec                          // 000000008A10: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008A14: BE8E047E
  s_nop         0x0000                                  // 000000008A18: BF800000
  s_nop         0x0000                                  // 000000008A1C: BF800000
  label_2288:
  v_readfirstlane_b32  s3, v10                          // 000000008A20: 7E06050A
  v_cmp_eq_u32  vcc, s3, v10                            // 000000008A24: 7D841403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008A28: BE90246A
  s_cbranch_execz  label_2291                           // 000000008A2C: BF880005
  s_waitcnt     vmcnt(5)                                // 000000008A30: BF8C0F75
  v_readlane_b32  s3, v8, s3                            // 000000008A34: 02060708
  v_mov_b32     v12, s3                                 // 000000008A38: 7E180203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008A3C: 8A8E7E0E
  s_cbranch_scc0  label_2293                            // 000000008A40: BF840002
  label_2291:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008A44: 87FE0E10
  s_branch      label_2288                              // 000000008A48: BF82FFF5
  label_2293:
  s_mov_b64     exec, s[12:13]                          // 000000008A4C: BEFE040C
  v_cndmask_b32  v12, 0, v12, s[10:11]                  // 000000008A50: D200000C 002A1880
  v_lshl_b64    v[13:14], 1, v10                        // 000000008A58: D2C2000D 00021481
  v_and_b32     v13, exec_lo, v13                       // 000000008A60: 361A1A7E
  v_and_b32     v14, exec_hi, v14                       // 000000008A64: 361C1C7F
  v_cmp_ne_u64  s[10:11], 0, v[13:14]                   // 000000008A68: D1CA000A 00021A80
  s_mov_b64     s[12:13], exec                          // 000000008A70: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008A74: BE8E047E
  s_nop         0x0000                                  // 000000008A78: BF800000
  s_nop         0x0000                                  // 000000008A7C: BF800000
  label_22A0:
  v_readfirstlane_b32  s3, v10                          // 000000008A80: 7E06050A
  v_cmp_eq_u32  vcc, s3, v10                            // 000000008A84: 7D841403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008A88: BE90246A
  s_cbranch_execz  label_22A9                           // 000000008A8C: BF880005
  s_waitcnt     vmcnt(1)                                // 000000008A90: BF8C0F71
  v_readlane_b32  s3, v5, s3                            // 000000008A94: 02060705
  v_mov_b32     v10, s3                                 // 000000008A98: 7E140203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008A9C: 8A8E7E0E
  s_cbranch_scc0  label_22AB                            // 000000008AA0: BF840002
  label_22A9:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008AA4: 87FE0E10
  s_branch      label_22A0                              // 000000008AA8: BF82FFF5
  label_22AB:
  s_mov_b64     exec, s[12:13]                          // 000000008AAC: BEFE040C
  v_cndmask_b32  v10, 0, v10, s[10:11]                  // 000000008AB0: D200000A 002A1480
  v_add_i32     v13, vcc, 16, v7                        // 000000008AB8: 4A1A0E90
  v_add_i32     v14, vcc, 32, v7                        // 000000008ABC: 4A1C0EA0
  v_and_b32     v14, 63, v14                            // 000000008AC0: 361C1CBF
  v_and_b32     v13, 63, v13                            // 000000008AC4: 361A1ABF
  v_lshl_b64    v[15:16], 1, v13                        // 000000008AC8: D2C2000F 00021A81
  v_and_b32     v15, exec_lo, v15                       // 000000008AD0: 361E1E7E
  v_and_b32     v16, exec_hi, v16                       // 000000008AD4: 3620207F
  v_cmp_ne_u64  s[10:11], 0, v[15:16]                   // 000000008AD8: D1CA000A 00021E80
  s_mov_b64     s[12:13], exec                          // 000000008AE0: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008AE4: BE8E047E
  s_nop         0x0000                                  // 000000008AE8: BF800000
  s_nop         0x0000                                  // 000000008AEC: BF800000
  s_nop         0x0000                                  // 000000008AF0: BF800000
  s_nop         0x0000                                  // 000000008AF4: BF800000
  s_nop         0x0000                                  // 000000008AF8: BF800000
  s_nop         0x0000                                  // 000000008AFC: BF800000
  label_22C0:
  v_readfirstlane_b32  s3, v13                          // 000000008B00: 7E06050D
  v_cmp_eq_u32  vcc, s3, v13                            // 000000008B04: 7D841A03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008B08: BE90246A
  s_cbranch_execz  label_22C8                           // 000000008B0C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000008B10: 02060705
  v_mov_b32     v15, s3                                 // 000000008B14: 7E1E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008B18: 8A8E7E0E
  s_cbranch_scc0  label_22CA                            // 000000008B1C: BF840002
  label_22C8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008B20: 87FE0E10
  s_branch      label_22C0                              // 000000008B24: BF82FFF6
  label_22CA:
  s_mov_b64     exec, s[12:13]                          // 000000008B28: BEFE040C
  v_cndmask_b32  v15, 0, v15, s[10:11]                  // 000000008B2C: D200000F 002A1E80
  v_lshl_b64    v[16:17], 1, v13                        // 000000008B34: D2C20010 00021A81
  v_and_b32     v16, exec_lo, v16                       // 000000008B3C: 3620207E
  v_and_b32     v17, exec_hi, v17                       // 000000008B40: 3622227F
  v_cmp_ne_u64  s[10:11], 0, v[16:17]                   // 000000008B44: D1CA000A 00022080
  s_mov_b64     s[12:13], exec                          // 000000008B4C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008B50: BE8E047E
  s_nop         0x0000                                  // 000000008B54: BF800000
  s_nop         0x0000                                  // 000000008B58: BF800000
  s_nop         0x0000                                  // 000000008B5C: BF800000
  label_22D8:
  v_readfirstlane_b32  s3, v13                          // 000000008B60: 7E06050D
  v_cmp_eq_u32  vcc, s3, v13                            // 000000008B64: 7D841A03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008B68: BE90246A
  s_cbranch_execz  label_22E0                           // 000000008B6C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000008B70: 02060704
  v_mov_b32     v13, s3                                 // 000000008B74: 7E1A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008B78: 8A8E7E0E
  s_cbranch_scc0  label_22E2                            // 000000008B7C: BF840002
  label_22E0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008B80: 87FE0E10
  s_branch      label_22D8                              // 000000008B84: BF82FFF6
  label_22E2:
  s_mov_b64     exec, s[12:13]                          // 000000008B88: BEFE040C
  v_cndmask_b32  v13, 0, v13, s[10:11]                  // 000000008B8C: D200000D 002A1A80
  v_lshl_b64    v[16:17], 1, v14                        // 000000008B94: D2C20010 00021C81
  v_and_b32     v16, exec_lo, v16                       // 000000008B9C: 3620207E
  v_and_b32     v17, exec_hi, v17                       // 000000008BA0: 3622227F
  v_cmp_ne_u64  s[10:11], 0, v[16:17]                   // 000000008BA4: D1CA000A 00022080
  s_mov_b64     s[12:13], exec                          // 000000008BAC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008BB0: BE8E047E
  s_nop         0x0000                                  // 000000008BB4: BF800000
  s_nop         0x0000                                  // 000000008BB8: BF800000
  s_nop         0x0000                                  // 000000008BBC: BF800000
  label_22F0:
  v_readfirstlane_b32  s3, v14                          // 000000008BC0: 7E06050E
  v_cmp_eq_u32  vcc, s3, v14                            // 000000008BC4: 7D841C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008BC8: BE90246A
  s_cbranch_execz  label_22F8                           // 000000008BCC: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000008BD0: 02060704
  v_mov_b32     v16, s3                                 // 000000008BD4: 7E200203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008BD8: 8A8E7E0E
  s_cbranch_scc0  label_22FA                            // 000000008BDC: BF840002
  label_22F8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008BE0: 87FE0E10
  s_branch      label_22F0                              // 000000008BE4: BF82FFF6
  label_22FA:
  s_mov_b64     exec, s[12:13]                          // 000000008BE8: BEFE040C
  v_cndmask_b32  v16, 0, v16, s[10:11]                  // 000000008BEC: D2000010 002A2080
  v_lshl_b64    v[17:18], 1, v14                        // 000000008BF4: D2C20011 00021C81
  v_and_b32     v17, exec_lo, v17                       // 000000008BFC: 3622227E
  v_and_b32     v18, exec_hi, v18                       // 000000008C00: 3624247F
  v_cmp_ne_u64  s[10:11], 0, v[17:18]                   // 000000008C04: D1CA000A 00022280
  s_mov_b64     s[12:13], exec                          // 000000008C0C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008C10: BE8E047E
  s_nop         0x0000                                  // 000000008C14: BF800000
  s_nop         0x0000                                  // 000000008C18: BF800000
  s_nop         0x0000                                  // 000000008C1C: BF800000
  label_2308:
  v_readfirstlane_b32  s3, v14                          // 000000008C20: 7E06050E
  v_cmp_eq_u32  vcc, s3, v14                            // 000000008C24: 7D841C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008C28: BE90246A
  s_cbranch_execz  label_2310                           // 000000008C2C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000008C30: 02060703
  v_mov_b32     v14, s3                                 // 000000008C34: 7E1C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008C38: 8A8E7E0E
  s_cbranch_scc0  label_2312                            // 000000008C3C: BF840002
  label_2310:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008C40: 87FE0E10
  s_branch      label_2308                              // 000000008C44: BF82FFF6
  label_2312:
  s_mov_b64     exec, s[12:13]                          // 000000008C48: BEFE040C
  v_cndmask_b32  v14, 0, v14, s[10:11]                  // 000000008C4C: D200000E 002A1C80
  v_add_i32     v17, vcc, 48, v7                        // 000000008C54: 4A220EB0
  v_add_i32     v18, vcc, 1, v7                         // 000000008C58: 4A240E81
  v_and_b32     v18, 63, v18                            // 000000008C5C: 362424BF
  v_and_b32     v17, 63, v17                            // 000000008C60: 362222BF
  v_lshl_b64    v[19:20], 1, v17                        // 000000008C64: D2C20013 00022281
  v_and_b32     v19, exec_lo, v19                       // 000000008C6C: 3626267E
  v_and_b32     v20, exec_hi, v20                       // 000000008C70: 3628287F
  v_cmp_ne_u64  s[10:11], 0, v[19:20]                   // 000000008C74: D1CA000A 00022680
  s_mov_b64     s[12:13], exec                          // 000000008C7C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008C80: BE8E047E
  s_nop         0x0000                                  // 000000008C84: BF800000
  s_nop         0x0000                                  // 000000008C88: BF800000
  s_nop         0x0000                                  // 000000008C8C: BF800000
  s_nop         0x0000                                  // 000000008C90: BF800000
  s_nop         0x0000                                  // 000000008C94: BF800000
  s_nop         0x0000                                  // 000000008C98: BF800000
  s_nop         0x0000                                  // 000000008C9C: BF800000
  label_2328:
  v_readfirstlane_b32  s3, v17                          // 000000008CA0: 7E060511
  v_cmp_eq_u32  vcc, s3, v17                            // 000000008CA4: 7D842203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008CA8: BE90246A
  s_cbranch_execz  label_2330                           // 000000008CAC: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000008CB0: 02060703
  v_mov_b32     v19, s3                                 // 000000008CB4: 7E260203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008CB8: 8A8E7E0E
  s_cbranch_scc0  label_2332                            // 000000008CBC: BF840002
  label_2330:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008CC0: 87FE0E10
  s_branch      label_2328                              // 000000008CC4: BF82FFF6
  label_2332:
  s_mov_b64     exec, s[12:13]                          // 000000008CC8: BEFE040C
  v_cndmask_b32  v19, 0, v19, s[10:11]                  // 000000008CCC: D2000013 002A2680
  v_lshl_b64    v[20:21], 1, v17                        // 000000008CD4: D2C20014 00022281
  v_and_b32     v20, exec_lo, v20                       // 000000008CDC: 3628287E
  v_and_b32     v21, exec_hi, v21                       // 000000008CE0: 362A2A7F
  v_cmp_ne_u64  s[10:11], 0, v[20:21]                   // 000000008CE4: D1CA000A 00022880
  s_mov_b64     s[12:13], exec                          // 000000008CEC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008CF0: BE8E047E
  s_nop         0x0000                                  // 000000008CF4: BF800000
  s_nop         0x0000                                  // 000000008CF8: BF800000
  s_nop         0x0000                                  // 000000008CFC: BF800000
  label_2340:
  v_readfirstlane_b32  s3, v17                          // 000000008D00: 7E060511
  v_cmp_eq_u32  vcc, s3, v17                            // 000000008D04: 7D842203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008D08: BE90246A
  s_cbranch_execz  label_2348                           // 000000008D0C: BF880004
  v_readlane_b32  s3, v9, s3                            // 000000008D10: 02060709
  v_mov_b32     v17, s3                                 // 000000008D14: 7E220203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008D18: 8A8E7E0E
  s_cbranch_scc0  label_234A                            // 000000008D1C: BF840002
  label_2348:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008D20: 87FE0E10
  s_branch      label_2340                              // 000000008D24: BF82FFF6
  label_234A:
  s_mov_b64     exec, s[12:13]                          // 000000008D28: BEFE040C
  s_add_u32     s12, s8, 4                              // 000000008D2C: 800C8408
  s_addc_u32    s13, s9, 0                              // 000000008D30: 820D8009
  v_mov_b32     v20, s12                                // 000000008D34: 7E28020C
  v_mov_b32     v21, s13                                // 000000008D38: 7E2A020D
  flat_load_dword  v20, v[20:21]                        // 000000008D3C: DC300000 14000014
  v_cndmask_b32  v17, 0, v17, s[10:11]                  // 000000008D44: D2000011 002A2280
  v_lshl_b64    v[21:22], 1, v18                        // 000000008D4C: D2C20015 00022481
  v_and_b32     v21, exec_lo, v21                       // 000000008D54: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 000000008D58: 362C2C7F
  v_cmp_ne_u64  s[10:11], 0, v[21:22]                   // 000000008D5C: D1CA000A 00022A80
  s_mov_b64     s[12:13], exec                          // 000000008D64: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008D68: BE8E047E
  s_nop         0x0000                                  // 000000008D6C: BF800000
  s_nop         0x0000                                  // 000000008D70: BF800000
  s_nop         0x0000                                  // 000000008D74: BF800000
  s_nop         0x0000                                  // 000000008D78: BF800000
  s_nop         0x0000                                  // 000000008D7C: BF800000
  label_2360:
  v_readfirstlane_b32  s3, v18                          // 000000008D80: 7E060512
  v_cmp_eq_u32  vcc, s3, v18                            // 000000008D84: 7D842403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008D88: BE90246A
  s_cbranch_execz  label_2368                           // 000000008D8C: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000008D90: 02060708
  v_mov_b32     v21, s3                                 // 000000008D94: 7E2A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008D98: 8A8E7E0E
  s_cbranch_scc0  label_236A                            // 000000008D9C: BF840002
  label_2368:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008DA0: 87FE0E10
  s_branch      label_2360                              // 000000008DA4: BF82FFF6
  label_236A:
  s_mov_b64     exec, s[12:13]                          // 000000008DA8: BEFE040C
  v_cndmask_b32  v21, 0, v21, s[10:11]                  // 000000008DAC: D2000015 002A2A80
  v_lshl_b64    v[22:23], 1, v18                        // 000000008DB4: D2C20016 00022481
  v_and_b32     v22, exec_lo, v22                       // 000000008DBC: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 000000008DC0: 362E2E7F
  v_cmp_ne_u64  s[10:11], 0, v[22:23]                   // 000000008DC4: D1CA000A 00022C80
  s_mov_b64     s[12:13], exec                          // 000000008DCC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008DD0: BE8E047E
  s_nop         0x0000                                  // 000000008DD4: BF800000
  s_nop         0x0000                                  // 000000008DD8: BF800000
  s_nop         0x0000                                  // 000000008DDC: BF800000
  label_2378:
  v_readfirstlane_b32  s3, v18                          // 000000008DE0: 7E060512
  v_cmp_eq_u32  vcc, s3, v18                            // 000000008DE4: 7D842403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008DE8: BE90246A
  s_cbranch_execz  label_2380                           // 000000008DEC: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000008DF0: 02060705
  v_mov_b32     v18, s3                                 // 000000008DF4: 7E240203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008DF8: 8A8E7E0E
  s_cbranch_scc0  label_2382                            // 000000008DFC: BF840002
  label_2380:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008E00: 87FE0E10
  s_branch      label_2378                              // 000000008E04: BF82FFF6
  label_2382:
  s_mov_b64     exec, s[12:13]                          // 000000008E08: BEFE040C
  v_cndmask_b32  v18, 0, v18, s[10:11]                  // 000000008E0C: D2000012 002A2480
  v_add_i32     v22, vcc, 33, v7                        // 000000008E14: 4A2C0EA1
  v_and_b32     v22, 63, v22                            // 000000008E18: 362C2CBF
  v_add_i32     v23, vcc, 17, v7                        // 000000008E1C: 4A2E0E91
  v_and_b32     v23, 63, v23                            // 000000008E20: 362E2EBF
  v_lshl_b64    v[24:25], 1, v23                        // 000000008E24: D2C20018 00022E81
  v_and_b32     v24, exec_lo, v24                       // 000000008E2C: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 000000008E30: 3632327F
  v_cmp_ne_u64  s[10:11], 0, v[24:25]                   // 000000008E34: D1CA000A 00023080
  s_mov_b64     s[12:13], exec                          // 000000008E3C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008E40: BE8E047E
  s_nop         0x0000                                  // 000000008E44: BF800000
  s_nop         0x0000                                  // 000000008E48: BF800000
  s_nop         0x0000                                  // 000000008E4C: BF800000
  s_nop         0x0000                                  // 000000008E50: BF800000
  s_nop         0x0000                                  // 000000008E54: BF800000
  s_nop         0x0000                                  // 000000008E58: BF800000
  s_nop         0x0000                                  // 000000008E5C: BF800000
  label_2398:
  v_readfirstlane_b32  s3, v23                          // 000000008E60: 7E060517
  v_cmp_eq_u32  vcc, s3, v23                            // 000000008E64: 7D842E03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008E68: BE90246A
  s_cbranch_execz  label_23A0                           // 000000008E6C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000008E70: 02060705
  v_mov_b32     v24, s3                                 // 000000008E74: 7E300203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008E78: 8A8E7E0E
  s_cbranch_scc0  label_23A2                            // 000000008E7C: BF840002
  label_23A0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008E80: 87FE0E10
  s_branch      label_2398                              // 000000008E84: BF82FFF6
  label_23A2:
  s_mov_b64     exec, s[12:13]                          // 000000008E88: BEFE040C
  v_cndmask_b32  v24, 0, v24, s[10:11]                  // 000000008E8C: D2000018 002A3080
  v_lshl_b64    v[25:26], 1, v23                        // 000000008E94: D2C20019 00022E81
  v_and_b32     v25, exec_lo, v25                       // 000000008E9C: 3632327E
  v_and_b32     v26, exec_hi, v26                       // 000000008EA0: 3634347F
  v_cmp_ne_u64  s[10:11], 0, v[25:26]                   // 000000008EA4: D1CA000A 00023280
  s_mov_b64     s[12:13], exec                          // 000000008EAC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008EB0: BE8E047E
  s_nop         0x0000                                  // 000000008EB4: BF800000
  s_nop         0x0000                                  // 000000008EB8: BF800000
  s_nop         0x0000                                  // 000000008EBC: BF800000
  label_23B0:
  v_readfirstlane_b32  s3, v23                          // 000000008EC0: 7E060517
  v_cmp_eq_u32  vcc, s3, v23                            // 000000008EC4: 7D842E03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008EC8: BE90246A
  s_cbranch_execz  label_23B8                           // 000000008ECC: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000008ED0: 02060704
  v_mov_b32     v23, s3                                 // 000000008ED4: 7E2E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008ED8: 8A8E7E0E
  s_cbranch_scc0  label_23BA                            // 000000008EDC: BF840002
  label_23B8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008EE0: 87FE0E10
  s_branch      label_23B0                              // 000000008EE4: BF82FFF6
  label_23BA:
  s_mov_b64     exec, s[12:13]                          // 000000008EE8: BEFE040C
  v_cndmask_b32  v23, 0, v23, s[10:11]                  // 000000008EEC: D2000017 002A2E80
  v_lshl_b64    v[25:26], 1, v22                        // 000000008EF4: D2C20019 00022C81
  v_and_b32     v25, exec_lo, v25                       // 000000008EFC: 3632327E
  v_and_b32     v26, exec_hi, v26                       // 000000008F00: 3634347F
  v_cmp_ne_u64  s[10:11], 0, v[25:26]                   // 000000008F04: D1CA000A 00023280
  s_mov_b64     s[12:13], exec                          // 000000008F0C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008F10: BE8E047E
  s_nop         0x0000                                  // 000000008F14: BF800000
  s_nop         0x0000                                  // 000000008F18: BF800000
  s_nop         0x0000                                  // 000000008F1C: BF800000
  label_23C8:
  v_readfirstlane_b32  s3, v22                          // 000000008F20: 7E060516
  v_cmp_eq_u32  vcc, s3, v22                            // 000000008F24: 7D842C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008F28: BE90246A
  s_cbranch_execz  label_23D0                           // 000000008F2C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000008F30: 02060704
  v_mov_b32     v25, s3                                 // 000000008F34: 7E320203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008F38: 8A8E7E0E
  s_cbranch_scc0  label_23D2                            // 000000008F3C: BF840002
  label_23D0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008F40: 87FE0E10
  s_branch      label_23C8                              // 000000008F44: BF82FFF6
  label_23D2:
  s_mov_b64     exec, s[12:13]                          // 000000008F48: BEFE040C
  v_cndmask_b32  v25, 0, v25, s[10:11]                  // 000000008F4C: D2000019 002A3280
  v_lshl_b64    v[26:27], 1, v22                        // 000000008F54: D2C2001A 00022C81
  v_and_b32     v26, exec_lo, v26                       // 000000008F5C: 3634347E
  v_and_b32     v27, exec_hi, v27                       // 000000008F60: 3636367F
  v_cmp_ne_u64  s[10:11], 0, v[26:27]                   // 000000008F64: D1CA000A 00023480
  s_mov_b64     s[12:13], exec                          // 000000008F6C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008F70: BE8E047E
  s_nop         0x0000                                  // 000000008F74: BF800000
  s_nop         0x0000                                  // 000000008F78: BF800000
  s_nop         0x0000                                  // 000000008F7C: BF800000
  label_23E0:
  v_readfirstlane_b32  s3, v22                          // 000000008F80: 7E060516
  v_cmp_eq_u32  vcc, s3, v22                            // 000000008F84: 7D842C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000008F88: BE90246A
  s_cbranch_execz  label_23E8                           // 000000008F8C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000008F90: 02060703
  v_mov_b32     v22, s3                                 // 000000008F94: 7E2C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000008F98: 8A8E7E0E
  s_cbranch_scc0  label_23EA                            // 000000008F9C: BF840002
  label_23E8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000008FA0: 87FE0E10
  s_branch      label_23E0                              // 000000008FA4: BF82FFF6
  label_23EA:
  s_mov_b64     exec, s[12:13]                          // 000000008FA8: BEFE040C
  v_cndmask_b32  v22, 0, v22, s[10:11]                  // 000000008FAC: D2000016 002A2C80
  v_add_i32     v26, vcc, 2, v7                         // 000000008FB4: 4A340E82
  v_add_i32     v27, vcc, 18, v7                        // 000000008FB8: 4A360E92
  v_and_b32     v27, 63, v27                            // 000000008FBC: 363636BF
  v_and_b32     v26, 63, v26                            // 000000008FC0: 363434BF
  v_add_i32     v28, vcc, 49, v7                        // 000000008FC4: 4A380EB1
  v_and_b32     v28, 63, v28                            // 000000008FC8: 363838BF
  v_lshl_b64    v[29:30], 1, v28                        // 000000008FCC: D2C2001D 00023881
  v_and_b32     v29, exec_lo, v29                       // 000000008FD4: 363A3A7E
  v_and_b32     v30, exec_hi, v30                       // 000000008FD8: 363C3C7F
  v_cmp_ne_u64  s[10:11], 0, v[29:30]                   // 000000008FDC: D1CA000A 00023A80
  s_mov_b64     s[12:13], exec                          // 000000008FE4: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000008FE8: BE8E047E
  s_nop         0x0000                                  // 000000008FEC: BF800000
  s_nop         0x0000                                  // 000000008FF0: BF800000
  s_nop         0x0000                                  // 000000008FF4: BF800000
  s_nop         0x0000                                  // 000000008FF8: BF800000
  s_nop         0x0000                                  // 000000008FFC: BF800000
  label_2400:
  v_readfirstlane_b32  s3, v28                          // 000000009000: 7E06051C
  v_cmp_eq_u32  vcc, s3, v28                            // 000000009004: 7D843803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009008: BE90246A
  s_cbranch_execz  label_2408                           // 00000000900C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000009010: 02060703
  v_mov_b32     v29, s3                                 // 000000009014: 7E3A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009018: 8A8E7E0E
  s_cbranch_scc0  label_240A                            // 00000000901C: BF840002
  label_2408:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009020: 87FE0E10
  s_branch      label_2400                              // 000000009024: BF82FFF6
  label_240A:
  s_mov_b64     exec, s[12:13]                          // 000000009028: BEFE040C
  v_cndmask_b32  v29, 0, v29, s[10:11]                  // 00000000902C: D200001D 002A3A80
  v_lshl_b64    v[30:31], 1, v28                        // 000000009034: D2C2001E 00023881
  v_and_b32     v30, exec_lo, v30                       // 00000000903C: 363C3C7E
  v_and_b32     v31, exec_hi, v31                       // 000000009040: 363E3E7F
  v_cmp_ne_u64  s[10:11], 0, v[30:31]                   // 000000009044: D1CA000A 00023C80
  s_mov_b64     s[12:13], exec                          // 00000000904C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009050: BE8E047E
  s_nop         0x0000                                  // 000000009054: BF800000
  s_nop         0x0000                                  // 000000009058: BF800000
  s_nop         0x0000                                  // 00000000905C: BF800000
  label_2418:
  v_readfirstlane_b32  s3, v28                          // 000000009060: 7E06051C
  v_cmp_eq_u32  vcc, s3, v28                            // 000000009064: 7D843803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009068: BE90246A
  s_cbranch_execz  label_2420                           // 00000000906C: BF880004
  v_readlane_b32  s3, v9, s3                            // 000000009070: 02060709
  v_mov_b32     v28, s3                                 // 000000009074: 7E380203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009078: 8A8E7E0E
  s_cbranch_scc0  label_2422                            // 00000000907C: BF840002
  label_2420:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009080: 87FE0E10
  s_branch      label_2418                              // 000000009084: BF82FFF6
  label_2422:
  s_mov_b64     exec, s[12:13]                          // 000000009088: BEFE040C
  s_add_u32     s12, s8, 8                              // 00000000908C: 800C8808
  s_addc_u32    s13, s9, 0                              // 000000009090: 820D8009
  v_mov_b32     v30, s12                                // 000000009094: 7E3C020C
  v_mov_b32     v31, s13                                // 000000009098: 7E3E020D
  flat_load_dword  v30, v[30:31]                        // 00000000909C: DC300000 1E00001E
  v_cndmask_b32  v28, 0, v28, s[10:11]                  // 0000000090A4: D200001C 002A3880
  v_lshl_b64    v[31:32], 1, v26                        // 0000000090AC: D2C2001F 00023481
  v_and_b32     v31, exec_lo, v31                       // 0000000090B4: 363E3E7E
  v_and_b32     v32, exec_hi, v32                       // 0000000090B8: 3640407F
  v_cmp_ne_u64  s[10:11], 0, v[31:32]                   // 0000000090BC: D1CA000A 00023E80
  s_mov_b64     s[12:13], exec                          // 0000000090C4: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000090C8: BE8E047E
  s_nop         0x0000                                  // 0000000090CC: BF800000
  s_nop         0x0000                                  // 0000000090D0: BF800000
  s_nop         0x0000                                  // 0000000090D4: BF800000
  s_nop         0x0000                                  // 0000000090D8: BF800000
  s_nop         0x0000                                  // 0000000090DC: BF800000
  label_2438:
  v_readfirstlane_b32  s3, v26                          // 0000000090E0: 7E06051A
  v_cmp_eq_u32  vcc, s3, v26                            // 0000000090E4: 7D843403
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000090E8: BE90246A
  s_cbranch_execz  label_2440                           // 0000000090EC: BF880004
  v_readlane_b32  s3, v8, s3                            // 0000000090F0: 02060708
  v_mov_b32     v31, s3                                 // 0000000090F4: 7E3E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000090F8: 8A8E7E0E
  s_cbranch_scc0  label_2442                            // 0000000090FC: BF840002
  label_2440:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009100: 87FE0E10
  s_branch      label_2438                              // 000000009104: BF82FFF6
  label_2442:
  s_mov_b64     exec, s[12:13]                          // 000000009108: BEFE040C
  v_cndmask_b32  v31, 0, v31, s[10:11]                  // 00000000910C: D200001F 002A3E80
  v_lshl_b64    v[32:33], 1, v26                        // 000000009114: D2C20020 00023481
  v_and_b32     v32, exec_lo, v32                       // 00000000911C: 3640407E
  v_and_b32     v33, exec_hi, v33                       // 000000009120: 3642427F
  v_cmp_ne_u64  s[10:11], 0, v[32:33]                   // 000000009124: D1CA000A 00024080
  s_mov_b64     s[12:13], exec                          // 00000000912C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009130: BE8E047E
  s_nop         0x0000                                  // 000000009134: BF800000
  s_nop         0x0000                                  // 000000009138: BF800000
  s_nop         0x0000                                  // 00000000913C: BF800000
  label_2450:
  v_readfirstlane_b32  s3, v26                          // 000000009140: 7E06051A
  v_cmp_eq_u32  vcc, s3, v26                            // 000000009144: 7D843403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009148: BE90246A
  s_cbranch_execz  label_2458                           // 00000000914C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000009150: 02060705
  v_mov_b32     v26, s3                                 // 000000009154: 7E340203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009158: 8A8E7E0E
  s_cbranch_scc0  label_245A                            // 00000000915C: BF840002
  label_2458:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009160: 87FE0E10
  s_branch      label_2450                              // 000000009164: BF82FFF6
  label_245A:
  s_mov_b64     exec, s[12:13]                          // 000000009168: BEFE040C
  v_cndmask_b32  v26, 0, v26, s[10:11]                  // 00000000916C: D200001A 002A3480
  v_lshl_b64    v[32:33], 1, v27                        // 000000009174: D2C20020 00023681
  v_and_b32     v32, exec_lo, v32                       // 00000000917C: 3640407E
  v_and_b32     v33, exec_hi, v33                       // 000000009180: 3642427F
  v_cmp_ne_u64  s[10:11], 0, v[32:33]                   // 000000009184: D1CA000A 00024080
  s_mov_b64     s[12:13], exec                          // 00000000918C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009190: BE8E047E
  s_nop         0x0000                                  // 000000009194: BF800000
  s_nop         0x0000                                  // 000000009198: BF800000
  s_nop         0x0000                                  // 00000000919C: BF800000
  label_2468:
  v_readfirstlane_b32  s3, v27                          // 0000000091A0: 7E06051B
  v_cmp_eq_u32  vcc, s3, v27                            // 0000000091A4: 7D843603
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000091A8: BE90246A
  s_cbranch_execz  label_2470                           // 0000000091AC: BF880004
  v_readlane_b32  s3, v5, s3                            // 0000000091B0: 02060705
  v_mov_b32     v32, s3                                 // 0000000091B4: 7E400203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000091B8: 8A8E7E0E
  s_cbranch_scc0  label_2472                            // 0000000091BC: BF840002
  label_2470:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000091C0: 87FE0E10
  s_branch      label_2468                              // 0000000091C4: BF82FFF6
  label_2472:
  s_mov_b64     exec, s[12:13]                          // 0000000091C8: BEFE040C
  v_cndmask_b32  v32, 0, v32, s[10:11]                  // 0000000091CC: D2000020 002A4080
  v_lshl_b64    v[33:34], 1, v27                        // 0000000091D4: D2C20021 00023681
  v_and_b32     v33, exec_lo, v33                       // 0000000091DC: 3642427E
  v_and_b32     v34, exec_hi, v34                       // 0000000091E0: 3644447F
  v_cmp_ne_u64  s[10:11], 0, v[33:34]                   // 0000000091E4: D1CA000A 00024280
  s_mov_b64     s[12:13], exec                          // 0000000091EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000091F0: BE8E047E
  s_nop         0x0000                                  // 0000000091F4: BF800000
  s_nop         0x0000                                  // 0000000091F8: BF800000
  s_nop         0x0000                                  // 0000000091FC: BF800000
  label_2480:
  v_readfirstlane_b32  s3, v27                          // 000000009200: 7E06051B
  v_cmp_eq_u32  vcc, s3, v27                            // 000000009204: 7D843603
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009208: BE90246A
  s_cbranch_execz  label_2488                           // 00000000920C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000009210: 02060704
  v_mov_b32     v27, s3                                 // 000000009214: 7E360203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009218: 8A8E7E0E
  s_cbranch_scc0  label_248A                            // 00000000921C: BF840002
  label_2488:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009220: 87FE0E10
  s_branch      label_2480                              // 000000009224: BF82FFF6
  label_248A:
  s_mov_b64     exec, s[12:13]                          // 000000009228: BEFE040C
  v_cndmask_b32  v27, 0, v27, s[10:11]                  // 00000000922C: D200001B 002A3680
  v_add_i32     v33, vcc, 50, v7                        // 000000009234: 4A420EB2
  v_add_i32     v34, vcc, 10, v7                        // 000000009238: 4A440E8A
  v_and_b32     v34, 63, v34                            // 00000000923C: 364444BF
  v_and_b32     v33, 63, v33                            // 000000009240: 364242BF
  v_add_i32     v35, vcc, 34, v7                        // 000000009244: 4A460EA2
  v_and_b32     v35, 63, v35                            // 000000009248: 364646BF
  v_lshl_b64    v[36:37], 1, v35                        // 00000000924C: D2C20024 00024681
  v_and_b32     v36, exec_lo, v36                       // 000000009254: 3648487E
  v_and_b32     v37, exec_hi, v37                       // 000000009258: 364A4A7F
  v_cmp_ne_u64  s[10:11], 0, v[36:37]                   // 00000000925C: D1CA000A 00024880
  s_mov_b64     s[12:13], exec                          // 000000009264: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009268: BE8E047E
  s_nop         0x0000                                  // 00000000926C: BF800000
  s_nop         0x0000                                  // 000000009270: BF800000
  s_nop         0x0000                                  // 000000009274: BF800000
  s_nop         0x0000                                  // 000000009278: BF800000
  s_nop         0x0000                                  // 00000000927C: BF800000
  label_24A0:
  v_readfirstlane_b32  s3, v35                          // 000000009280: 7E060523
  v_cmp_eq_u32  vcc, s3, v35                            // 000000009284: 7D844603
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009288: BE90246A
  s_cbranch_execz  label_24A8                           // 00000000928C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000009290: 02060704
  v_mov_b32     v36, s3                                 // 000000009294: 7E480203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009298: 8A8E7E0E
  s_cbranch_scc0  label_24AA                            // 00000000929C: BF840002
  label_24A8:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000092A0: 87FE0E10
  s_branch      label_24A0                              // 0000000092A4: BF82FFF6
  label_24AA:
  s_mov_b64     exec, s[12:13]                          // 0000000092A8: BEFE040C
  v_cndmask_b32  v36, 0, v36, s[10:11]                  // 0000000092AC: D2000024 002A4880
  v_lshl_b64    v[37:38], 1, v35                        // 0000000092B4: D2C20025 00024681
  v_and_b32     v37, exec_lo, v37                       // 0000000092BC: 364A4A7E
  v_and_b32     v38, exec_hi, v38                       // 0000000092C0: 364C4C7F
  v_cmp_ne_u64  s[10:11], 0, v[37:38]                   // 0000000092C4: D1CA000A 00024A80
  s_mov_b64     s[12:13], exec                          // 0000000092CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000092D0: BE8E047E
  s_nop         0x0000                                  // 0000000092D4: BF800000
  s_nop         0x0000                                  // 0000000092D8: BF800000
  s_nop         0x0000                                  // 0000000092DC: BF800000
  label_24B8:
  v_readfirstlane_b32  s3, v35                          // 0000000092E0: 7E060523
  v_cmp_eq_u32  vcc, s3, v35                            // 0000000092E4: 7D844603
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000092E8: BE90246A
  s_cbranch_execz  label_24C0                           // 0000000092EC: BF880004
  v_readlane_b32  s3, v3, s3                            // 0000000092F0: 02060703
  v_mov_b32     v35, s3                                 // 0000000092F4: 7E460203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000092F8: 8A8E7E0E
  s_cbranch_scc0  label_24C2                            // 0000000092FC: BF840002
  label_24C0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009300: 87FE0E10
  s_branch      label_24B8                              // 000000009304: BF82FFF6
  label_24C2:
  s_mov_b64     exec, s[12:13]                          // 000000009308: BEFE040C
  v_cndmask_b32  v35, 0, v35, s[10:11]                  // 00000000930C: D2000023 002A4680
  v_lshl_b64    v[37:38], 1, v33                        // 000000009314: D2C20025 00024281
  v_and_b32     v37, exec_lo, v37                       // 00000000931C: 364A4A7E
  v_and_b32     v38, exec_hi, v38                       // 000000009320: 364C4C7F
  v_cmp_ne_u64  s[10:11], 0, v[37:38]                   // 000000009324: D1CA000A 00024A80
  s_mov_b64     s[12:13], exec                          // 00000000932C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009330: BE8E047E
  s_nop         0x0000                                  // 000000009334: BF800000
  s_nop         0x0000                                  // 000000009338: BF800000
  s_nop         0x0000                                  // 00000000933C: BF800000
  label_24D0:
  v_readfirstlane_b32  s3, v33                          // 000000009340: 7E060521
  v_cmp_eq_u32  vcc, s3, v33                            // 000000009344: 7D844203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009348: BE90246A
  s_cbranch_execz  label_24D8                           // 00000000934C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000009350: 02060703
  v_mov_b32     v37, s3                                 // 000000009354: 7E4A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009358: 8A8E7E0E
  s_cbranch_scc0  label_24DA                            // 00000000935C: BF840002
  label_24D8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009360: 87FE0E10
  s_branch      label_24D0                              // 000000009364: BF82FFF6
  label_24DA:
  s_mov_b64     exec, s[12:13]                          // 000000009368: BEFE040C
  v_cndmask_b32  v37, 0, v37, s[10:11]                  // 00000000936C: D2000025 002A4A80
  v_lshl_b64    v[38:39], 1, v33                        // 000000009374: D2C20026 00024281
  v_and_b32     v38, exec_lo, v38                       // 00000000937C: 364C4C7E
  v_and_b32     v39, exec_hi, v39                       // 000000009380: 364E4E7F
  v_cmp_ne_u64  s[10:11], 0, v[38:39]                   // 000000009384: D1CA000A 00024C80
  s_mov_b64     s[12:13], exec                          // 00000000938C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009390: BE8E047E
  s_nop         0x0000                                  // 000000009394: BF800000
  s_nop         0x0000                                  // 000000009398: BF800000
  s_nop         0x0000                                  // 00000000939C: BF800000
  label_24E8:
  v_readfirstlane_b32  s3, v33                          // 0000000093A0: 7E060521
  v_cmp_eq_u32  vcc, s3, v33                            // 0000000093A4: 7D844203
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000093A8: BE90246A
  s_cbranch_execz  label_24F0                           // 0000000093AC: BF880004
  v_readlane_b32  s3, v9, s3                            // 0000000093B0: 02060709
  v_mov_b32     v33, s3                                 // 0000000093B4: 7E420203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000093B8: 8A8E7E0E
  s_cbranch_scc0  label_24F2                            // 0000000093BC: BF840002
  label_24F0:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000093C0: 87FE0E10
  s_branch      label_24E8                              // 0000000093C4: BF82FFF6
  label_24F2:
  s_mov_b64     exec, s[12:13]                          // 0000000093C8: BEFE040C
  s_add_u32     s12, s8, 12                             // 0000000093CC: 800C8C08
  s_addc_u32    s13, s9, 0                              // 0000000093D0: 820D8009
  v_mov_b32     v38, s12                                // 0000000093D4: 7E4C020C
  v_mov_b32     v39, s13                                // 0000000093D8: 7E4E020D
  flat_load_dword  v38, v[38:39]                        // 0000000093DC: DC300000 26000026
  v_cndmask_b32  v33, 0, v33, s[10:11]                  // 0000000093E4: D2000021 002A4280
  v_lshl_b64    v[39:40], 1, v34                        // 0000000093EC: D2C20027 00024481
  v_and_b32     v39, exec_lo, v39                       // 0000000093F4: 364E4E7E
  v_and_b32     v40, exec_hi, v40                       // 0000000093F8: 3650507F
  v_cmp_ne_u64  s[10:11], 0, v[39:40]                   // 0000000093FC: D1CA000A 00024E80
  s_mov_b64     s[12:13], exec                          // 000000009404: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009408: BE8E047E
  s_nop         0x0000                                  // 00000000940C: BF800000
  s_nop         0x0000                                  // 000000009410: BF800000
  s_nop         0x0000                                  // 000000009414: BF800000
  s_nop         0x0000                                  // 000000009418: BF800000
  s_nop         0x0000                                  // 00000000941C: BF800000
  label_2508:
  v_readfirstlane_b32  s3, v34                          // 000000009420: 7E060522
  v_cmp_eq_u32  vcc, s3, v34                            // 000000009424: 7D844403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009428: BE90246A
  s_cbranch_execz  label_2510                           // 00000000942C: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000009430: 02060708
  v_mov_b32     v39, s3                                 // 000000009434: 7E4E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009438: 8A8E7E0E
  s_cbranch_scc0  label_2512                            // 00000000943C: BF840002
  label_2510:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009440: 87FE0E10
  s_branch      label_2508                              // 000000009444: BF82FFF6
  label_2512:
  s_mov_b64     exec, s[12:13]                          // 000000009448: BEFE040C
  v_cndmask_b32  v39, 0, v39, s[10:11]                  // 00000000944C: D2000027 002A4E80
  v_lshl_b64    v[40:41], 1, v34                        // 000000009454: D2C20028 00024481
  v_and_b32     v40, exec_lo, v40                       // 00000000945C: 3650507E
  v_and_b32     v41, exec_hi, v41                       // 000000009460: 3652527F
  v_cmp_ne_u64  s[10:11], 0, v[40:41]                   // 000000009464: D1CA000A 00025080
  s_mov_b64     s[12:13], exec                          // 00000000946C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009470: BE8E047E
  s_nop         0x0000                                  // 000000009474: BF800000
  s_nop         0x0000                                  // 000000009478: BF800000
  s_nop         0x0000                                  // 00000000947C: BF800000
  label_2520:
  v_readfirstlane_b32  s3, v34                          // 000000009480: 7E060522
  v_cmp_eq_u32  vcc, s3, v34                            // 000000009484: 7D844403
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009488: BE90246A
  s_cbranch_execz  label_2528                           // 00000000948C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000009490: 02060705
  v_mov_b32     v34, s3                                 // 000000009494: 7E440203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009498: 8A8E7E0E
  s_cbranch_scc0  label_252A                            // 00000000949C: BF840002
  label_2528:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000094A0: 87FE0E10
  s_branch      label_2520                              // 0000000094A4: BF82FFF6
  label_252A:
  s_mov_b64     exec, s[12:13]                          // 0000000094A8: BEFE040C
  v_cndmask_b32  v34, 0, v34, s[10:11]                  // 0000000094AC: D2000022 002A4480
  v_add_i32     v40, vcc, 42, v7                        // 0000000094B4: 4A500EAA
  v_and_b32     v40, 63, v40                            // 0000000094B8: 365050BF
  v_add_i32     v41, vcc, 26, v7                        // 0000000094BC: 4A520E9A
  v_and_b32     v41, 63, v41                            // 0000000094C0: 365252BF
  v_lshl_b64    v[42:43], 1, v41                        // 0000000094C4: D2C2002A 00025281
  v_and_b32     v42, exec_lo, v42                       // 0000000094CC: 3654547E
  v_and_b32     v43, exec_hi, v43                       // 0000000094D0: 3656567F
  v_cmp_ne_u64  s[10:11], 0, v[42:43]                   // 0000000094D4: D1CA000A 00025480
  s_mov_b64     s[12:13], exec                          // 0000000094DC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000094E0: BE8E047E
  s_nop         0x0000                                  // 0000000094E4: BF800000
  s_nop         0x0000                                  // 0000000094E8: BF800000
  s_nop         0x0000                                  // 0000000094EC: BF800000
  s_nop         0x0000                                  // 0000000094F0: BF800000
  s_nop         0x0000                                  // 0000000094F4: BF800000
  s_nop         0x0000                                  // 0000000094F8: BF800000
  s_nop         0x0000                                  // 0000000094FC: BF800000
  label_2540:
  v_readfirstlane_b32  s3, v41                          // 000000009500: 7E060529
  v_cmp_eq_u32  vcc, s3, v41                            // 000000009504: 7D845203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009508: BE90246A
  s_cbranch_execz  label_2548                           // 00000000950C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000009510: 02060705
  v_mov_b32     v42, s3                                 // 000000009514: 7E540203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009518: 8A8E7E0E
  s_cbranch_scc0  label_254A                            // 00000000951C: BF840002
  label_2548:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009520: 87FE0E10
  s_branch      label_2540                              // 000000009524: BF82FFF6
  label_254A:
  s_mov_b64     exec, s[12:13]                          // 000000009528: BEFE040C
  v_cndmask_b32  v42, 0, v42, s[10:11]                  // 00000000952C: D200002A 002A5480
  v_lshl_b64    v[43:44], 1, v41                        // 000000009534: D2C2002B 00025281
  v_and_b32     v43, exec_lo, v43                       // 00000000953C: 3656567E
  v_and_b32     v44, exec_hi, v44                       // 000000009540: 3658587F
  v_cmp_ne_u64  s[10:11], 0, v[43:44]                   // 000000009544: D1CA000A 00025680
  s_mov_b64     s[12:13], exec                          // 00000000954C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009550: BE8E047E
  s_nop         0x0000                                  // 000000009554: BF800000
  s_nop         0x0000                                  // 000000009558: BF800000
  s_nop         0x0000                                  // 00000000955C: BF800000
  label_2558:
  v_readfirstlane_b32  s3, v41                          // 000000009560: 7E060529
  v_cmp_eq_u32  vcc, s3, v41                            // 000000009564: 7D845203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009568: BE90246A
  s_cbranch_execz  label_2560                           // 00000000956C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000009570: 02060704
  v_mov_b32     v41, s3                                 // 000000009574: 7E520203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009578: 8A8E7E0E
  s_cbranch_scc0  label_2562                            // 00000000957C: BF840002
  label_2560:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009580: 87FE0E10
  s_branch      label_2558                              // 000000009584: BF82FFF6
  label_2562:
  s_mov_b64     exec, s[12:13]                          // 000000009588: BEFE040C
  v_cndmask_b32  v41, 0, v41, s[10:11]                  // 00000000958C: D2000029 002A5280
  v_lshl_b64    v[43:44], 1, v40                        // 000000009594: D2C2002B 00025081
  v_and_b32     v43, exec_lo, v43                       // 00000000959C: 3656567E
  v_and_b32     v44, exec_hi, v44                       // 0000000095A0: 3658587F
  v_cmp_ne_u64  s[10:11], 0, v[43:44]                   // 0000000095A4: D1CA000A 00025680
  s_mov_b64     s[12:13], exec                          // 0000000095AC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000095B0: BE8E047E
  s_nop         0x0000                                  // 0000000095B4: BF800000
  s_nop         0x0000                                  // 0000000095B8: BF800000
  s_nop         0x0000                                  // 0000000095BC: BF800000
  label_2570:
  v_readfirstlane_b32  s3, v40                          // 0000000095C0: 7E060528
  v_cmp_eq_u32  vcc, s3, v40                            // 0000000095C4: 7D845003
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000095C8: BE90246A
  s_cbranch_execz  label_2578                           // 0000000095CC: BF880004
  v_readlane_b32  s3, v4, s3                            // 0000000095D0: 02060704
  v_mov_b32     v43, s3                                 // 0000000095D4: 7E560203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000095D8: 8A8E7E0E
  s_cbranch_scc0  label_257A                            // 0000000095DC: BF840002
  label_2578:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000095E0: 87FE0E10
  s_branch      label_2570                              // 0000000095E4: BF82FFF6
  label_257A:
  s_mov_b64     exec, s[12:13]                          // 0000000095E8: BEFE040C
  v_cndmask_b32  v43, 0, v43, s[10:11]                  // 0000000095EC: D200002B 002A5680
  v_lshl_b64    v[44:45], 1, v40                        // 0000000095F4: D2C2002C 00025081
  v_and_b32     v44, exec_lo, v44                       // 0000000095FC: 3658587E
  v_and_b32     v45, exec_hi, v45                       // 000000009600: 365A5A7F
  v_cmp_ne_u64  s[10:11], 0, v[44:45]                   // 000000009604: D1CA000A 00025880
  s_mov_b64     s[12:13], exec                          // 00000000960C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009610: BE8E047E
  s_nop         0x0000                                  // 000000009614: BF800000
  s_nop         0x0000                                  // 000000009618: BF800000
  s_nop         0x0000                                  // 00000000961C: BF800000
  label_2588:
  v_readfirstlane_b32  s3, v40                          // 000000009620: 7E060528
  v_cmp_eq_u32  vcc, s3, v40                            // 000000009624: 7D845003
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009628: BE90246A
  s_cbranch_execz  label_2590                           // 00000000962C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000009630: 02060703
  v_mov_b32     v40, s3                                 // 000000009634: 7E500203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009638: 8A8E7E0E
  s_cbranch_scc0  label_2592                            // 00000000963C: BF840002
  label_2590:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009640: 87FE0E10
  s_branch      label_2588                              // 000000009644: BF82FFF6
  label_2592:
  s_mov_b64     exec, s[12:13]                          // 000000009648: BEFE040C
  v_cndmask_b32  v40, 0, v40, s[10:11]                  // 00000000964C: D2000028 002A5080
  v_add_i32     v44, vcc, 58, v7                        // 000000009654: 4A580EBA
  v_and_b32     v44, 63, v44                            // 000000009658: 365858BF
  v_lshl_b64    v[45:46], 1, v44                        // 00000000965C: D2C2002D 00025881
  v_and_b32     v45, exec_lo, v45                       // 000000009664: 365A5A7E
  v_and_b32     v46, exec_hi, v46                       // 000000009668: 365C5C7F
  v_cmp_ne_u64  s[10:11], 0, v[45:46]                   // 00000000966C: D1CA000A 00025A80
  s_mov_b64     s[12:13], exec                          // 000000009674: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009678: BE8E047E
  s_nop         0x0000                                  // 00000000967C: BF800000
  label_25A0:
  v_readfirstlane_b32  s3, v44                          // 000000009680: 7E06052C
  v_cmp_eq_u32  vcc, s3, v44                            // 000000009684: 7D845803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009688: BE90246A
  s_cbranch_execz  label_25A8                           // 00000000968C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000009690: 02060703
  v_mov_b32     v45, s3                                 // 000000009694: 7E5A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009698: 8A8E7E0E
  s_cbranch_scc0  label_25AA                            // 00000000969C: BF840002
  label_25A8:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000096A0: 87FE0E10
  s_branch      label_25A0                              // 0000000096A4: BF82FFF6
  label_25AA:
  s_mov_b64     exec, s[12:13]                          // 0000000096A8: BEFE040C
  v_cndmask_b32  v45, 0, v45, s[10:11]                  // 0000000096AC: D200002D 002A5A80
  v_lshl_b64    v[46:47], 1, v44                        // 0000000096B4: D2C2002E 00025881
  v_and_b32     v46, exec_lo, v46                       // 0000000096BC: 365C5C7E
  v_and_b32     v47, exec_hi, v47                       // 0000000096C0: 365E5E7F
  v_cmp_ne_u64  s[10:11], 0, v[46:47]                   // 0000000096C4: D1CA000A 00025C80
  s_mov_b64     s[12:13], exec                          // 0000000096CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000096D0: BE8E047E
  s_nop         0x0000                                  // 0000000096D4: BF800000
  s_nop         0x0000                                  // 0000000096D8: BF800000
  s_nop         0x0000                                  // 0000000096DC: BF800000
  label_25B8:
  v_readfirstlane_b32  s3, v44                          // 0000000096E0: 7E06052C
  v_cmp_eq_u32  vcc, s3, v44                            // 0000000096E4: 7D845803
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000096E8: BE90246A
  s_cbranch_execz  label_25C0                           // 0000000096EC: BF880004
  v_readlane_b32  s3, v9, s3                            // 0000000096F0: 02060709
  v_mov_b32     v46, s3                                 // 0000000096F4: 7E5C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000096F8: 8A8E7E0E
  s_cbranch_scc0  label_25C2                            // 0000000096FC: BF840002
  label_25C0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009700: 87FE0E10
  s_branch      label_25B8                              // 000000009704: BF82FFF6
  label_25C2:
  s_mov_b64     exec, s[12:13]                          // 000000009708: BEFE040C
  v_cndmask_b32  v46, 0, v46, s[10:11]                  // 00000000970C: D200002E 002A5C80
  v_lshl_b64    v[47:48], 1, v44                        // 000000009714: D2C2002F 00025881
  v_and_b32     v47, exec_lo, v47                       // 00000000971C: 365E5E7E
  v_and_b32     v48, exec_hi, v48                       // 000000009720: 3660607F
  v_cmp_ne_u64  s[10:11], 0, v[47:48]                   // 000000009724: D1CA000A 00025E80
  s_mov_b64     s[12:13], exec                          // 00000000972C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009730: BE8E047E
  s_nop         0x0000                                  // 000000009734: BF800000
  s_nop         0x0000                                  // 000000009738: BF800000
  s_nop         0x0000                                  // 00000000973C: BF800000
  label_25D0:
  v_readfirstlane_b32  s3, v44                          // 000000009740: 7E06052C
  v_cmp_eq_u32  vcc, s3, v44                            // 000000009744: 7D845803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009748: BE90246A
  s_cbranch_execz  label_25D8                           // 00000000974C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000009750: 02060706
  v_mov_b32     v44, s3                                 // 000000009754: 7E580203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009758: 8A8E7E0E
  s_cbranch_scc0  label_25DA                            // 00000000975C: BF840002
  label_25D8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009760: 87FE0E10
  s_branch      label_25D0                              // 000000009764: BF82FFF6
  label_25DA:
  s_mov_b64     exec, s[12:13]                          // 000000009768: BEFE040C
  v_cndmask_b32  v44, 0, v44, s[10:11]                  // 00000000976C: D200002C 002A5880
  v_cmp_gt_i32  s[10:11], v2, 5                         // 000000009774: D108000A 00010B02
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000977C: BF8C0070
  v_mul_f32     v45, v38, v45                           // 000000009780: 105A5B26
  v_mul_f32     v44, v38, v44                           // 000000009784: 10585926
  v_mul_f32     v46, v38, v46                           // 000000009788: 105C5D26
  v_cmp_gt_i32  vcc, 56, v2                             // 00000000978C: 7D0804B8
  v_cndmask_b32  v44, v44, v46, vcc                     // 000000009790: 00585D2C
  v_cndmask_b32  v44, v45, v44, s[10:11]                // 000000009794: D200002C 002A592D
  s_add_u32     s10, s8, 16                             // 00000000979C: 800A9008
  s_addc_u32    s11, s9, 0                              // 0000000097A0: 820B8009
  v_mov_b32     v45, s10                                // 0000000097A4: 7E5A020A
  v_mov_b32     v46, s11                                // 0000000097A8: 7E5C020B
  flat_load_dword  v45, v[45:46]                        // 0000000097AC: DC300000 2D00002D
  v_add_i32     v46, vcc, 11, v7                        // 0000000097B4: 4A5C0E8B
  v_and_b32     v46, 63, v46                            // 0000000097B8: 365C5CBF
  v_lshl_b64    v[47:48], 1, v46                        // 0000000097BC: D2C2002F 00025C81
  v_and_b32     v47, exec_lo, v47                       // 0000000097C4: 365E5E7E
  v_and_b32     v48, exec_hi, v48                       // 0000000097C8: 3660607F
  v_cmp_ne_u64  s[10:11], 0, v[47:48]                   // 0000000097CC: D1CA000A 00025E80
  s_mov_b64     s[12:13], exec                          // 0000000097D4: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000097D8: BE8E047E
  s_nop         0x0000                                  // 0000000097DC: BF800000
  label_25F8:
  v_readfirstlane_b32  s3, v46                          // 0000000097E0: 7E06052E
  v_cmp_eq_u32  vcc, s3, v46                            // 0000000097E4: 7D845C03
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000097E8: BE90246A
  s_cbranch_execz  label_2600                           // 0000000097EC: BF880004
  v_readlane_b32  s3, v8, s3                            // 0000000097F0: 02060708
  v_mov_b32     v47, s3                                 // 0000000097F4: 7E5E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000097F8: 8A8E7E0E
  s_cbranch_scc0  label_2602                            // 0000000097FC: BF840002
  label_2600:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009800: 87FE0E10
  s_branch      label_25F8                              // 000000009804: BF82FFF6
  label_2602:
  s_mov_b64     exec, s[12:13]                          // 000000009808: BEFE040C
  v_cndmask_b32  v47, 0, v47, s[10:11]                  // 00000000980C: D200002F 002A5E80
  v_lshl_b64    v[48:49], 1, v46                        // 000000009814: D2C20030 00025C81
  v_and_b32     v48, exec_lo, v48                       // 00000000981C: 3660607E
  v_and_b32     v49, exec_hi, v49                       // 000000009820: 3662627F
  v_cmp_ne_u64  s[10:11], 0, v[48:49]                   // 000000009824: D1CA000A 00026080
  s_mov_b64     s[12:13], exec                          // 00000000982C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009830: BE8E047E
  s_nop         0x0000                                  // 000000009834: BF800000
  s_nop         0x0000                                  // 000000009838: BF800000
  s_nop         0x0000                                  // 00000000983C: BF800000
  label_2610:
  v_readfirstlane_b32  s3, v46                          // 000000009840: 7E06052E
  v_cmp_eq_u32  vcc, s3, v46                            // 000000009844: 7D845C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009848: BE90246A
  s_cbranch_execz  label_2618                           // 00000000984C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000009850: 02060705
  v_mov_b32     v46, s3                                 // 000000009854: 7E5C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009858: 8A8E7E0E
  s_cbranch_scc0  label_261A                            // 00000000985C: BF840002
  label_2618:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009860: 87FE0E10
  s_branch      label_2610                              // 000000009864: BF82FFF6
  label_261A:
  s_mov_b64     exec, s[12:13]                          // 000000009868: BEFE040C
  v_cndmask_b32  v46, 0, v46, s[10:11]                  // 00000000986C: D200002E 002A5C80
  v_add_i32     v48, vcc, 27, v7                        // 000000009874: 4A600E9B
  v_add_i32     v49, vcc, 43, v7                        // 000000009878: 4A620EAB
  v_and_b32     v49, 63, v49                            // 00000000987C: 366262BF
  v_and_b32     v48, 63, v48                            // 000000009880: 366060BF
  v_lshl_b64    v[50:51], 1, v48                        // 000000009884: D2C20032 00026081
  v_and_b32     v50, exec_lo, v50                       // 00000000988C: 3664647E
  v_and_b32     v51, exec_hi, v51                       // 000000009890: 3666667F
  v_cmp_ne_u64  s[10:11], 0, v[50:51]                   // 000000009894: D1CA000A 00026480
  s_mov_b64     s[12:13], exec                          // 00000000989C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000098A0: BE8E047E
  s_nop         0x0000                                  // 0000000098A4: BF800000
  s_nop         0x0000                                  // 0000000098A8: BF800000
  s_nop         0x0000                                  // 0000000098AC: BF800000
  s_nop         0x0000                                  // 0000000098B0: BF800000
  s_nop         0x0000                                  // 0000000098B4: BF800000
  s_nop         0x0000                                  // 0000000098B8: BF800000
  s_nop         0x0000                                  // 0000000098BC: BF800000
  label_2630:
  v_readfirstlane_b32  s3, v48                          // 0000000098C0: 7E060530
  v_cmp_eq_u32  vcc, s3, v48                            // 0000000098C4: 7D846003
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000098C8: BE90246A
  s_cbranch_execz  label_2638                           // 0000000098CC: BF880004
  v_readlane_b32  s3, v5, s3                            // 0000000098D0: 02060705
  v_mov_b32     v50, s3                                 // 0000000098D4: 7E640203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000098D8: 8A8E7E0E
  s_cbranch_scc0  label_263A                            // 0000000098DC: BF840002
  label_2638:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000098E0: 87FE0E10
  s_branch      label_2630                              // 0000000098E4: BF82FFF6
  label_263A:
  s_mov_b64     exec, s[12:13]                          // 0000000098E8: BEFE040C
  v_cndmask_b32  v50, 0, v50, s[10:11]                  // 0000000098EC: D2000032 002A6480
  v_lshl_b64    v[51:52], 1, v48                        // 0000000098F4: D2C20033 00026081
  v_and_b32     v51, exec_lo, v51                       // 0000000098FC: 3666667E
  v_and_b32     v52, exec_hi, v52                       // 000000009900: 3668687F
  v_cmp_ne_u64  s[10:11], 0, v[51:52]                   // 000000009904: D1CA000A 00026680
  s_mov_b64     s[12:13], exec                          // 00000000990C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009910: BE8E047E
  s_nop         0x0000                                  // 000000009914: BF800000
  s_nop         0x0000                                  // 000000009918: BF800000
  s_nop         0x0000                                  // 00000000991C: BF800000
  label_2648:
  v_readfirstlane_b32  s3, v48                          // 000000009920: 7E060530
  v_cmp_eq_u32  vcc, s3, v48                            // 000000009924: 7D846003
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009928: BE90246A
  s_cbranch_execz  label_2650                           // 00000000992C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000009930: 02060704
  v_mov_b32     v48, s3                                 // 000000009934: 7E600203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009938: 8A8E7E0E
  s_cbranch_scc0  label_2652                            // 00000000993C: BF840002
  label_2650:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009940: 87FE0E10
  s_branch      label_2648                              // 000000009944: BF82FFF6
  label_2652:
  s_mov_b64     exec, s[12:13]                          // 000000009948: BEFE040C
  v_cndmask_b32  v48, 0, v48, s[10:11]                  // 00000000994C: D2000030 002A6080
  v_lshl_b64    v[51:52], 1, v49                        // 000000009954: D2C20033 00026281
  v_and_b32     v51, exec_lo, v51                       // 00000000995C: 3666667E
  v_and_b32     v52, exec_hi, v52                       // 000000009960: 3668687F
  v_cmp_ne_u64  s[10:11], 0, v[51:52]                   // 000000009964: D1CA000A 00026680
  s_mov_b64     s[12:13], exec                          // 00000000996C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009970: BE8E047E
  s_nop         0x0000                                  // 000000009974: BF800000
  s_nop         0x0000                                  // 000000009978: BF800000
  s_nop         0x0000                                  // 00000000997C: BF800000
  label_2660:
  v_readfirstlane_b32  s3, v49                          // 000000009980: 7E060531
  v_cmp_eq_u32  vcc, s3, v49                            // 000000009984: 7D846203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009988: BE90246A
  s_cbranch_execz  label_2668                           // 00000000998C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000009990: 02060704
  v_mov_b32     v51, s3                                 // 000000009994: 7E660203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009998: 8A8E7E0E
  s_cbranch_scc0  label_266A                            // 00000000999C: BF840002
  label_2668:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000099A0: 87FE0E10
  s_branch      label_2660                              // 0000000099A4: BF82FFF6
  label_266A:
  s_mov_b64     exec, s[12:13]                          // 0000000099A8: BEFE040C
  v_cndmask_b32  v51, 0, v51, s[10:11]                  // 0000000099AC: D2000033 002A6680
  v_lshl_b64    v[52:53], 1, v49                        // 0000000099B4: D2C20034 00026281
  v_and_b32     v52, exec_lo, v52                       // 0000000099BC: 3668687E
  v_and_b32     v53, exec_hi, v53                       // 0000000099C0: 366A6A7F
  v_cmp_ne_u64  s[10:11], 0, v[52:53]                   // 0000000099C4: D1CA000A 00026880
  s_mov_b64     s[12:13], exec                          // 0000000099CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000099D0: BE8E047E
  s_nop         0x0000                                  // 0000000099D4: BF800000
  s_nop         0x0000                                  // 0000000099D8: BF800000
  s_nop         0x0000                                  // 0000000099DC: BF800000
  label_2678:
  v_readfirstlane_b32  s3, v49                          // 0000000099E0: 7E060531
  v_cmp_eq_u32  vcc, s3, v49                            // 0000000099E4: 7D846203
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000099E8: BE90246A
  s_cbranch_execz  label_2680                           // 0000000099EC: BF880004
  v_readlane_b32  s3, v3, s3                            // 0000000099F0: 02060703
  v_mov_b32     v49, s3                                 // 0000000099F4: 7E620203
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000099F8: 8A8E7E0E
  s_cbranch_scc0  label_2682                            // 0000000099FC: BF840002
  label_2680:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009A00: 87FE0E10
  s_branch      label_2678                              // 000000009A04: BF82FFF6
  label_2682:
  s_mov_b64     exec, s[12:13]                          // 000000009A08: BEFE040C
  v_cndmask_b32  v49, 0, v49, s[10:11]                  // 000000009A0C: D2000031 002A6280
  v_add_i32     v52, vcc, 59, v7                        // 000000009A14: 4A680EBB
  v_and_b32     v52, 63, v52                            // 000000009A18: 366868BF
  v_lshl_b64    v[53:54], 1, v52                        // 000000009A1C: D2C20035 00026881
  v_and_b32     v53, exec_lo, v53                       // 000000009A24: 366A6A7E
  v_and_b32     v54, exec_hi, v54                       // 000000009A28: 366C6C7F
  v_cmp_ne_u64  s[10:11], 0, v[53:54]                   // 000000009A2C: D1CA000A 00026A80
  s_mov_b64     s[12:13], exec                          // 000000009A34: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009A38: BE8E047E
  s_nop         0x0000                                  // 000000009A3C: BF800000
  label_2690:
  v_readfirstlane_b32  s3, v52                          // 000000009A40: 7E060534
  v_cmp_eq_u32  vcc, s3, v52                            // 000000009A44: 7D846803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009A48: BE90246A
  s_cbranch_execz  label_2698                           // 000000009A4C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000009A50: 02060703
  v_mov_b32     v53, s3                                 // 000000009A54: 7E6A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009A58: 8A8E7E0E
  s_cbranch_scc0  label_269A                            // 000000009A5C: BF840002
  label_2698:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009A60: 87FE0E10
  s_branch      label_2690                              // 000000009A64: BF82FFF6
  label_269A:
  s_mov_b64     exec, s[12:13]                          // 000000009A68: BEFE040C
  v_cndmask_b32  v53, 0, v53, s[10:11]                  // 000000009A6C: D2000035 002A6A80
  v_lshl_b64    v[54:55], 1, v52                        // 000000009A74: D2C20036 00026881
  v_and_b32     v54, exec_lo, v54                       // 000000009A7C: 366C6C7E
  v_and_b32     v55, exec_hi, v55                       // 000000009A80: 366E6E7F
  v_cmp_ne_u64  s[10:11], 0, v[54:55]                   // 000000009A84: D1CA000A 00026C80
  s_mov_b64     s[12:13], exec                          // 000000009A8C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009A90: BE8E047E
  s_nop         0x0000                                  // 000000009A94: BF800000
  s_nop         0x0000                                  // 000000009A98: BF800000
  s_nop         0x0000                                  // 000000009A9C: BF800000
  label_26A8:
  v_readfirstlane_b32  s3, v52                          // 000000009AA0: 7E060534
  v_cmp_eq_u32  vcc, s3, v52                            // 000000009AA4: 7D846803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009AA8: BE90246A
  s_cbranch_execz  label_26B0                           // 000000009AAC: BF880004
  v_readlane_b32  s3, v9, s3                            // 000000009AB0: 02060709
  v_mov_b32     v54, s3                                 // 000000009AB4: 7E6C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009AB8: 8A8E7E0E
  s_cbranch_scc0  label_26B2                            // 000000009ABC: BF840002
  label_26B0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009AC0: 87FE0E10
  s_branch      label_26A8                              // 000000009AC4: BF82FFF6
  label_26B2:
  s_mov_b64     exec, s[12:13]                          // 000000009AC8: BEFE040C
  v_cndmask_b32  v54, 0, v54, s[10:11]                  // 000000009ACC: D2000036 002A6C80
  v_lshl_b64    v[55:56], 1, v52                        // 000000009AD4: D2C20037 00026881
  v_and_b32     v55, exec_lo, v55                       // 000000009ADC: 366E6E7E
  v_and_b32     v56, exec_hi, v56                       // 000000009AE0: 3670707F
  v_cmp_ne_u64  s[10:11], 0, v[55:56]                   // 000000009AE4: D1CA000A 00026E80
  s_mov_b64     s[12:13], exec                          // 000000009AEC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009AF0: BE8E047E
  s_nop         0x0000                                  // 000000009AF4: BF800000
  s_nop         0x0000                                  // 000000009AF8: BF800000
  s_nop         0x0000                                  // 000000009AFC: BF800000
  label_26C0:
  v_readfirstlane_b32  s3, v52                          // 000000009B00: 7E060534
  v_cmp_eq_u32  vcc, s3, v52                            // 000000009B04: 7D846803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009B08: BE90246A
  s_cbranch_execz  label_26C8                           // 000000009B0C: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000009B10: 02060706
  v_mov_b32     v52, s3                                 // 000000009B14: 7E680203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009B18: 8A8E7E0E
  s_cbranch_scc0  label_26CA                            // 000000009B1C: BF840002
  label_26C8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009B20: 87FE0E10
  s_branch      label_26C0                              // 000000009B24: BF82FFF6
  label_26CA:
  s_mov_b64     exec, s[12:13]                          // 000000009B28: BEFE040C
  s_add_u32     s12, s8, 20                             // 000000009B2C: 800C9408
  s_addc_u32    s13, s9, 0                              // 000000009B30: 820D8009
  v_cndmask_b32  v52, 0, v52, s[10:11]                  // 000000009B34: D2000034 002A6880
  v_mov_b32     v55, s12                                // 000000009B3C: 7E6E020C
  v_mov_b32     v56, s13                                // 000000009B40: 7E70020D
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000009B44: BF8C0070
  v_mul_f32     v52, v45, v52                           // 000000009B48: 1068692D
  v_mul_f32     v54, v45, v54                           // 000000009B4C: 106C6D2D
  v_cmp_lt_i32  s[10:11], v2, 56                        // 000000009B50: D102000A 00017102
  v_add_i32     v57, vcc, 12, v7                        // 000000009B58: 4A720E8C
  v_cmp_lt_i32  vcc, 4, v2                              // 000000009B5C: 7D020484
  v_mul_f32     v53, v45, v53                           // 000000009B60: 106A6B2D
  v_cndmask_b32  v52, v52, v54, s[10:11]                // 000000009B64: D2000034 002A6D34
  v_and_b32     v54, 63, v57                            // 000000009B6C: 366C72BF
  flat_load_dword  v55, v[55:56]                        // 000000009B70: DC300000 37000037
  v_cndmask_b32  v52, v53, v52, vcc                     // 000000009B78: 00686935
  v_lshl_b64    v[56:57], 1, v54                        // 000000009B7C: D2C20038 00026C81
  v_and_b32     v56, exec_lo, v56                       // 000000009B84: 3670707E
  v_and_b32     v57, exec_hi, v57                       // 000000009B88: 3672727F
  v_cmp_ne_u64  s[10:11], 0, v[56:57]                   // 000000009B8C: D1CA000A 00027080
  s_mov_b64     s[12:13], exec                          // 000000009B94: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009B98: BE8E047E
  s_nop         0x0000                                  // 000000009B9C: BF800000
  label_26E8:
  v_readfirstlane_b32  s3, v54                          // 000000009BA0: 7E060536
  v_cmp_eq_u32  vcc, s3, v54                            // 000000009BA4: 7D846C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009BA8: BE90246A
  s_cbranch_execz  label_26F0                           // 000000009BAC: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000009BB0: 02060708
  v_mov_b32     v53, s3                                 // 000000009BB4: 7E6A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009BB8: 8A8E7E0E
  s_cbranch_scc0  label_26F2                            // 000000009BBC: BF840002
  label_26F0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009BC0: 87FE0E10
  s_branch      label_26E8                              // 000000009BC4: BF82FFF6
  label_26F2:
  s_mov_b64     exec, s[12:13]                          // 000000009BC8: BEFE040C
  v_cndmask_b32  v53, 0, v53, s[10:11]                  // 000000009BCC: D2000035 002A6A80
  v_lshl_b64    v[56:57], 1, v54                        // 000000009BD4: D2C20038 00026C81
  v_and_b32     v56, exec_lo, v56                       // 000000009BDC: 3670707E
  v_and_b32     v57, exec_hi, v57                       // 000000009BE0: 3672727F
  v_cmp_ne_u64  s[10:11], 0, v[56:57]                   // 000000009BE4: D1CA000A 00027080
  s_mov_b64     s[12:13], exec                          // 000000009BEC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009BF0: BE8E047E
  s_nop         0x0000                                  // 000000009BF4: BF800000
  s_nop         0x0000                                  // 000000009BF8: BF800000
  s_nop         0x0000                                  // 000000009BFC: BF800000
  label_2700:
  v_readfirstlane_b32  s3, v54                          // 000000009C00: 7E060536
  v_cmp_eq_u32  vcc, s3, v54                            // 000000009C04: 7D846C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009C08: BE90246A
  s_cbranch_execz  label_2708                           // 000000009C0C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000009C10: 02060705
  v_mov_b32     v54, s3                                 // 000000009C14: 7E6C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009C18: 8A8E7E0E
  s_cbranch_scc0  label_270A                            // 000000009C1C: BF840002
  label_2708:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009C20: 87FE0E10
  s_branch      label_2700                              // 000000009C24: BF82FFF6
  label_270A:
  s_mov_b64     exec, s[12:13]                          // 000000009C28: BEFE040C
  v_cndmask_b32  v54, 0, v54, s[10:11]                  // 000000009C2C: D2000036 002A6C80
  v_add_i32     v56, vcc, 28, v7                        // 000000009C34: 4A700E9C
  v_add_i32     v57, vcc, 44, v7                        // 000000009C38: 4A720EAC
  v_and_b32     v57, 63, v57                            // 000000009C3C: 367272BF
  v_and_b32     v56, 63, v56                            // 000000009C40: 367070BF
  v_lshl_b64    v[58:59], 1, v56                        // 000000009C44: D2C2003A 00027081
  v_and_b32     v58, exec_lo, v58                       // 000000009C4C: 3674747E
  v_and_b32     v59, exec_hi, v59                       // 000000009C50: 3676767F
  v_cmp_ne_u64  s[10:11], 0, v[58:59]                   // 000000009C54: D1CA000A 00027480
  s_mov_b64     s[12:13], exec                          // 000000009C5C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009C60: BE8E047E
  s_nop         0x0000                                  // 000000009C64: BF800000
  s_nop         0x0000                                  // 000000009C68: BF800000
  s_nop         0x0000                                  // 000000009C6C: BF800000
  s_nop         0x0000                                  // 000000009C70: BF800000
  s_nop         0x0000                                  // 000000009C74: BF800000
  s_nop         0x0000                                  // 000000009C78: BF800000
  s_nop         0x0000                                  // 000000009C7C: BF800000
  label_2720:
  v_readfirstlane_b32  s3, v56                          // 000000009C80: 7E060538
  v_cmp_eq_u32  vcc, s3, v56                            // 000000009C84: 7D847003
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009C88: BE90246A
  s_cbranch_execz  label_2728                           // 000000009C8C: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000009C90: 02060705
  v_mov_b32     v58, s3                                 // 000000009C94: 7E740203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009C98: 8A8E7E0E
  s_cbranch_scc0  label_272A                            // 000000009C9C: BF840002
  label_2728:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009CA0: 87FE0E10
  s_branch      label_2720                              // 000000009CA4: BF82FFF6
  label_272A:
  s_mov_b64     exec, s[12:13]                          // 000000009CA8: BEFE040C
  v_cndmask_b32  v58, 0, v58, s[10:11]                  // 000000009CAC: D200003A 002A7480
  v_lshl_b64    v[59:60], 1, v56                        // 000000009CB4: D2C2003B 00027081
  v_and_b32     v59, exec_lo, v59                       // 000000009CBC: 3676767E
  v_and_b32     v60, exec_hi, v60                       // 000000009CC0: 3678787F
  v_cmp_ne_u64  s[10:11], 0, v[59:60]                   // 000000009CC4: D1CA000A 00027680
  s_mov_b64     s[12:13], exec                          // 000000009CCC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009CD0: BE8E047E
  s_nop         0x0000                                  // 000000009CD4: BF800000
  s_nop         0x0000                                  // 000000009CD8: BF800000
  s_nop         0x0000                                  // 000000009CDC: BF800000
  label_2738:
  v_readfirstlane_b32  s3, v56                          // 000000009CE0: 7E060538
  v_cmp_eq_u32  vcc, s3, v56                            // 000000009CE4: 7D847003
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009CE8: BE90246A
  s_cbranch_execz  label_2740                           // 000000009CEC: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000009CF0: 02060704
  v_mov_b32     v56, s3                                 // 000000009CF4: 7E700203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009CF8: 8A8E7E0E
  s_cbranch_scc0  label_2742                            // 000000009CFC: BF840002
  label_2740:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009D00: 87FE0E10
  s_branch      label_2738                              // 000000009D04: BF82FFF6
  label_2742:
  s_mov_b64     exec, s[12:13]                          // 000000009D08: BEFE040C
  v_cndmask_b32  v56, 0, v56, s[10:11]                  // 000000009D0C: D2000038 002A7080
  v_lshl_b64    v[59:60], 1, v57                        // 000000009D14: D2C2003B 00027281
  v_and_b32     v59, exec_lo, v59                       // 000000009D1C: 3676767E
  v_and_b32     v60, exec_hi, v60                       // 000000009D20: 3678787F
  v_cmp_ne_u64  s[10:11], 0, v[59:60]                   // 000000009D24: D1CA000A 00027680
  s_mov_b64     s[12:13], exec                          // 000000009D2C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009D30: BE8E047E
  s_nop         0x0000                                  // 000000009D34: BF800000
  s_nop         0x0000                                  // 000000009D38: BF800000
  s_nop         0x0000                                  // 000000009D3C: BF800000
  label_2750:
  v_readfirstlane_b32  s3, v57                          // 000000009D40: 7E060539
  v_cmp_eq_u32  vcc, s3, v57                            // 000000009D44: 7D847203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009D48: BE90246A
  s_cbranch_execz  label_2758                           // 000000009D4C: BF880004
  v_readlane_b32  s3, v4, s3                            // 000000009D50: 02060704
  v_mov_b32     v59, s3                                 // 000000009D54: 7E760203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009D58: 8A8E7E0E
  s_cbranch_scc0  label_275A                            // 000000009D5C: BF840002
  label_2758:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009D60: 87FE0E10
  s_branch      label_2750                              // 000000009D64: BF82FFF6
  label_275A:
  s_mov_b64     exec, s[12:13]                          // 000000009D68: BEFE040C
  v_cndmask_b32  v59, 0, v59, s[10:11]                  // 000000009D6C: D200003B 002A7680
  v_lshl_b64    v[60:61], 1, v57                        // 000000009D74: D2C2003C 00027281
  v_and_b32     v60, exec_lo, v60                       // 000000009D7C: 3678787E
  v_and_b32     v61, exec_hi, v61                       // 000000009D80: 367A7A7F
  v_cmp_ne_u64  s[10:11], 0, v[60:61]                   // 000000009D84: D1CA000A 00027880
  s_mov_b64     s[12:13], exec                          // 000000009D8C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009D90: BE8E047E
  s_nop         0x0000                                  // 000000009D94: BF800000
  s_nop         0x0000                                  // 000000009D98: BF800000
  s_nop         0x0000                                  // 000000009D9C: BF800000
  label_2768:
  v_readfirstlane_b32  s3, v57                          // 000000009DA0: 7E060539
  v_cmp_eq_u32  vcc, s3, v57                            // 000000009DA4: 7D847203
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009DA8: BE90246A
  s_cbranch_execz  label_2770                           // 000000009DAC: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000009DB0: 02060703
  v_mov_b32     v57, s3                                 // 000000009DB4: 7E720203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009DB8: 8A8E7E0E
  s_cbranch_scc0  label_2772                            // 000000009DBC: BF840002
  label_2770:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009DC0: 87FE0E10
  s_branch      label_2768                              // 000000009DC4: BF82FFF6
  label_2772:
  s_mov_b64     exec, s[12:13]                          // 000000009DC8: BEFE040C
  v_cndmask_b32  v57, 0, v57, s[10:11]                  // 000000009DCC: D2000039 002A7280
  v_add_i32     v60, vcc, 60, v7                        // 000000009DD4: 4A780EBC
  v_and_b32     v60, 63, v60                            // 000000009DD8: 367878BF
  v_lshl_b64    v[61:62], 1, v60                        // 000000009DDC: D2C2003D 00027881
  v_and_b32     v61, exec_lo, v61                       // 000000009DE4: 367A7A7E
  v_and_b32     v62, exec_hi, v62                       // 000000009DE8: 367C7C7F
  v_cmp_ne_u64  s[10:11], 0, v[61:62]                   // 000000009DEC: D1CA000A 00027A80
  s_mov_b64     s[12:13], exec                          // 000000009DF4: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009DF8: BE8E047E
  s_nop         0x0000                                  // 000000009DFC: BF800000
  label_2780:
  v_readfirstlane_b32  s3, v60                          // 000000009E00: 7E06053C
  v_cmp_eq_u32  vcc, s3, v60                            // 000000009E04: 7D847803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009E08: BE90246A
  s_cbranch_execz  label_2788                           // 000000009E0C: BF880004
  v_readlane_b32  s3, v3, s3                            // 000000009E10: 02060703
  v_mov_b32     v61, s3                                 // 000000009E14: 7E7A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009E18: 8A8E7E0E
  s_cbranch_scc0  label_278A                            // 000000009E1C: BF840002
  label_2788:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009E20: 87FE0E10
  s_branch      label_2780                              // 000000009E24: BF82FFF6
  label_278A:
  s_mov_b64     exec, s[12:13]                          // 000000009E28: BEFE040C
  v_cndmask_b32  v61, 0, v61, s[10:11]                  // 000000009E2C: D200003D 002A7A80
  v_lshl_b64    v[62:63], 1, v60                        // 000000009E34: D2C2003E 00027881
  v_and_b32     v62, exec_lo, v62                       // 000000009E3C: 367C7C7E
  v_and_b32     v63, exec_hi, v63                       // 000000009E40: 367E7E7F
  v_cmp_ne_u64  s[10:11], 0, v[62:63]                   // 000000009E44: D1CA000A 00027C80
  s_mov_b64     s[12:13], exec                          // 000000009E4C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009E50: BE8E047E
  s_nop         0x0000                                  // 000000009E54: BF800000
  s_nop         0x0000                                  // 000000009E58: BF800000
  s_nop         0x0000                                  // 000000009E5C: BF800000
  label_2798:
  v_readfirstlane_b32  s3, v60                          // 000000009E60: 7E06053C
  v_cmp_eq_u32  vcc, s3, v60                            // 000000009E64: 7D847803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009E68: BE90246A
  s_cbranch_execz  label_27A0                           // 000000009E6C: BF880004
  v_readlane_b32  s3, v9, s3                            // 000000009E70: 02060709
  v_mov_b32     v62, s3                                 // 000000009E74: 7E7C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009E78: 8A8E7E0E
  s_cbranch_scc0  label_27A2                            // 000000009E7C: BF840002
  label_27A0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009E80: 87FE0E10
  s_branch      label_2798                              // 000000009E84: BF82FFF6
  label_27A2:
  s_mov_b64     exec, s[12:13]                          // 000000009E88: BEFE040C
  v_cndmask_b32  v62, 0, v62, s[10:11]                  // 000000009E8C: D200003E 002A7C80
  v_lshl_b64    v[63:64], 1, v60                        // 000000009E94: D2C2003F 00027881
  v_and_b32     v63, exec_lo, v63                       // 000000009E9C: 367E7E7E
  v_and_b32     v64, exec_hi, v64                       // 000000009EA0: 3680807F
  v_cmp_ne_u64  s[10:11], 0, v[63:64]                   // 000000009EA4: D1CA000A 00027E80
  s_mov_b64     s[12:13], exec                          // 000000009EAC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009EB0: BE8E047E
  s_nop         0x0000                                  // 000000009EB4: BF800000
  s_nop         0x0000                                  // 000000009EB8: BF800000
  s_nop         0x0000                                  // 000000009EBC: BF800000
  label_27B0:
  v_readfirstlane_b32  s3, v60                          // 000000009EC0: 7E06053C
  v_cmp_eq_u32  vcc, s3, v60                            // 000000009EC4: 7D847803
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009EC8: BE90246A
  s_cbranch_execz  label_27B8                           // 000000009ECC: BF880004
  v_readlane_b32  s3, v6, s3                            // 000000009ED0: 02060706
  v_mov_b32     v60, s3                                 // 000000009ED4: 7E780203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009ED8: 8A8E7E0E
  s_cbranch_scc0  label_27BA                            // 000000009EDC: BF840002
  label_27B8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009EE0: 87FE0E10
  s_branch      label_27B0                              // 000000009EE4: BF82FFF6
  label_27BA:
  s_mov_b64     exec, s[12:13]                          // 000000009EE8: BEFE040C
  v_cndmask_b32  v60, 0, v60, s[10:11]                  // 000000009EEC: D200003C 002A7880
  v_cmp_gt_i32  s[10:11], v2, 3                         // 000000009EF4: D108000A 00010702
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000009EFC: BF8C0070
  v_mul_f32     v61, v55, v61                           // 000000009F00: 107A7B37
  v_mul_f32     v60, v55, v60                           // 000000009F04: 10787937
  v_mul_f32     v62, v55, v62                           // 000000009F08: 107C7D37
  v_cmp_gt_i32  vcc, 56, v2                             // 000000009F0C: 7D0804B8
  v_cndmask_b32  v60, v60, v62, vcc                     // 000000009F10: 00787D3C
  v_cndmask_b32  v60, v61, v60, s[10:11]                // 000000009F14: D200003C 002A793D
  s_add_u32     s10, s8, 24                             // 000000009F1C: 800A9808
  s_addc_u32    s11, s9, 0                              // 000000009F20: 820B8009
  v_mov_b32     v61, s10                                // 000000009F24: 7E7A020A
  v_mov_b32     v62, s11                                // 000000009F28: 7E7C020B
  flat_load_dword  v61, v[61:62]                        // 000000009F2C: DC300000 3D00003D
  v_add_i32     v62, vcc, 20, v7                        // 000000009F34: 4A7C0E94
  v_and_b32     v62, 63, v62                            // 000000009F38: 367C7CBF
  v_lshl_b64    v[63:64], 1, v62                        // 000000009F3C: D2C2003F 00027C81
  v_and_b32     v63, exec_lo, v63                       // 000000009F44: 367E7E7E
  v_and_b32     v64, exec_hi, v64                       // 000000009F48: 3680807F
  v_cmp_ne_u64  s[10:11], 0, v[63:64]                   // 000000009F4C: D1CA000A 00027E80
  s_mov_b64     s[12:13], exec                          // 000000009F54: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009F58: BE8E047E
  s_nop         0x0000                                  // 000000009F5C: BF800000
  label_27D8:
  v_readfirstlane_b32  s3, v62                          // 000000009F60: 7E06053E
  v_cmp_eq_u32  vcc, s3, v62                            // 000000009F64: 7D847C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009F68: BE90246A
  s_cbranch_execz  label_27E0                           // 000000009F6C: BF880004
  v_readlane_b32  s3, v8, s3                            // 000000009F70: 02060708
  v_mov_b32     v63, s3                                 // 000000009F74: 7E7E0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009F78: 8A8E7E0E
  s_cbranch_scc0  label_27E2                            // 000000009F7C: BF840002
  label_27E0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009F80: 87FE0E10
  s_branch      label_27D8                              // 000000009F84: BF82FFF6
  label_27E2:
  s_mov_b64     exec, s[12:13]                          // 000000009F88: BEFE040C
  v_cndmask_b32  v63, 0, v63, s[10:11]                  // 000000009F8C: D200003F 002A7E80
  v_lshl_b64    v[64:65], 1, v62                        // 000000009F94: D2C20040 00027C81
  v_and_b32     v64, exec_lo, v64                       // 000000009F9C: 3680807E
  v_and_b32     v65, exec_hi, v65                       // 000000009FA0: 3682827F
  v_cmp_ne_u64  s[10:11], 0, v[64:65]                   // 000000009FA4: D1CA000A 00028080
  s_mov_b64     s[12:13], exec                          // 000000009FAC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000009FB0: BE8E047E
  s_nop         0x0000                                  // 000000009FB4: BF800000
  s_nop         0x0000                                  // 000000009FB8: BF800000
  s_nop         0x0000                                  // 000000009FBC: BF800000
  label_27F0:
  v_readfirstlane_b32  s3, v62                          // 000000009FC0: 7E06053E
  v_cmp_eq_u32  vcc, s3, v62                            // 000000009FC4: 7D847C03
  s_and_saveexec_b64  s[16:17], vcc                     // 000000009FC8: BE90246A
  s_cbranch_execz  label_27F8                           // 000000009FCC: BF880004
  v_readlane_b32  s3, v5, s3                            // 000000009FD0: 02060705
  v_mov_b32     v62, s3                                 // 000000009FD4: 7E7C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000009FD8: 8A8E7E0E
  s_cbranch_scc0  label_27FA                            // 000000009FDC: BF840002
  label_27F8:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000009FE0: 87FE0E10
  s_branch      label_27F0                              // 000000009FE4: BF82FFF6
  label_27FA:
  s_mov_b64     exec, s[12:13]                          // 000000009FE8: BEFE040C
  v_cndmask_b32  v62, 0, v62, s[10:11]                  // 000000009FEC: D200003E 002A7C80
  v_add_i32     v64, vcc, 36, v7                        // 000000009FF4: 4A800EA4
  v_and_b32     v64, 63, v64                            // 000000009FF8: 368080BF
  v_lshl_b64    v[65:66], 1, v64                        // 000000009FFC: D2C20041 00028081
  v_and_b32     v65, exec_lo, v65                       // 00000000A004: 3682827E
  v_and_b32     v66, exec_hi, v66                       // 00000000A008: 3684847F
  v_cmp_ne_u64  s[10:11], 0, v[65:66]                   // 00000000A00C: D1CA000A 00028280
  s_mov_b64     s[12:13], exec                          // 00000000A014: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A018: BE8E047E
  s_nop         0x0000                                  // 00000000A01C: BF800000
  label_2808:
  v_readfirstlane_b32  s3, v64                          // 00000000A020: 7E060540
  v_cmp_eq_u32  vcc, s3, v64                            // 00000000A024: 7D848003
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A028: BE90246A
  s_cbranch_execz  label_2810                           // 00000000A02C: BF880004
  v_readlane_b32  s3, v5, s3                            // 00000000A030: 02060705
  v_mov_b32     v65, s3                                 // 00000000A034: 7E820203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A038: 8A8E7E0E
  s_cbranch_scc0  label_2812                            // 00000000A03C: BF840002
  label_2810:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A040: 87FE0E10
  s_branch      label_2808                              // 00000000A044: BF82FFF6
  label_2812:
  s_mov_b64     exec, s[12:13]                          // 00000000A048: BEFE040C
  v_cndmask_b32  v65, 0, v65, s[10:11]                  // 00000000A04C: D2000041 002A8280
  v_lshl_b64    v[66:67], 1, v64                        // 00000000A054: D2C20042 00028081
  v_and_b32     v66, exec_lo, v66                       // 00000000A05C: 3684847E
  v_and_b32     v67, exec_hi, v67                       // 00000000A060: 3686867F
  v_cmp_ne_u64  s[10:11], 0, v[66:67]                   // 00000000A064: D1CA000A 00028480
  s_mov_b64     s[12:13], exec                          // 00000000A06C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A070: BE8E047E
  s_nop         0x0000                                  // 00000000A074: BF800000
  s_nop         0x0000                                  // 00000000A078: BF800000
  s_nop         0x0000                                  // 00000000A07C: BF800000
  label_2820:
  v_readfirstlane_b32  s3, v64                          // 00000000A080: 7E060540
  v_cmp_eq_u32  vcc, s3, v64                            // 00000000A084: 7D848003
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A088: BE90246A
  s_cbranch_execz  label_2828                           // 00000000A08C: BF880004
  v_readlane_b32  s3, v4, s3                            // 00000000A090: 02060704
  v_mov_b32     v64, s3                                 // 00000000A094: 7E800203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A098: 8A8E7E0E
  s_cbranch_scc0  label_282A                            // 00000000A09C: BF840002
  label_2828:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A0A0: 87FE0E10
  s_branch      label_2820                              // 00000000A0A4: BF82FFF6
  label_282A:
  s_mov_b64     exec, s[12:13]                          // 00000000A0A8: BEFE040C
  v_cndmask_b32  v64, 0, v64, s[10:11]                  // 00000000A0AC: D2000040 002A8080
  v_add_i32     v66, vcc, 0x00000044, v7                // 00000000A0B4: 4A840EFF 00000044
  v_add_i32     v67, vcc, 52, v7                        // 00000000A0BC: 4A860EB4
  v_and_b32     v67, 63, v67                            // 00000000A0C0: 368686BF
  v_and_b32     v66, 63, v66                            // 00000000A0C4: 368484BF
  v_lshl_b64    v[68:69], 1, v67                        // 00000000A0C8: D2C20044 00028681
  v_and_b32     v68, exec_lo, v68                       // 00000000A0D0: 3688887E
  v_and_b32     v69, exec_hi, v69                       // 00000000A0D4: 368A8A7F
  v_cmp_ne_u64  s[10:11], 0, v[68:69]                   // 00000000A0D8: D1CA000A 00028880
  s_mov_b64     s[12:13], exec                          // 00000000A0E0: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A0E4: BE8E047E
  s_nop         0x0000                                  // 00000000A0E8: BF800000
  s_nop         0x0000                                  // 00000000A0EC: BF800000
  s_nop         0x0000                                  // 00000000A0F0: BF800000
  s_nop         0x0000                                  // 00000000A0F4: BF800000
  s_nop         0x0000                                  // 00000000A0F8: BF800000
  s_nop         0x0000                                  // 00000000A0FC: BF800000
  label_2840:
  v_readfirstlane_b32  s3, v67                          // 00000000A100: 7E060543
  v_cmp_eq_u32  vcc, s3, v67                            // 00000000A104: 7D848603
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A108: BE90246A
  s_cbranch_execz  label_2848                           // 00000000A10C: BF880004
  v_readlane_b32  s3, v4, s3                            // 00000000A110: 02060704
  v_mov_b32     v68, s3                                 // 00000000A114: 7E880203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A118: 8A8E7E0E
  s_cbranch_scc0  label_284A                            // 00000000A11C: BF840002
  label_2848:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A120: 87FE0E10
  s_branch      label_2840                              // 00000000A124: BF82FFF6
  label_284A:
  s_mov_b64     exec, s[12:13]                          // 00000000A128: BEFE040C
  v_cndmask_b32  v68, 0, v68, s[10:11]                  // 00000000A12C: D2000044 002A8880
  v_lshl_b64    v[69:70], 1, v67                        // 00000000A134: D2C20045 00028681
  v_and_b32     v69, exec_lo, v69                       // 00000000A13C: 368A8A7E
  v_and_b32     v70, exec_hi, v70                       // 00000000A140: 368C8C7F
  v_cmp_ne_u64  s[10:11], 0, v[69:70]                   // 00000000A144: D1CA000A 00028A80
  s_mov_b64     s[12:13], exec                          // 00000000A14C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A150: BE8E047E
  s_nop         0x0000                                  // 00000000A154: BF800000
  s_nop         0x0000                                  // 00000000A158: BF800000
  s_nop         0x0000                                  // 00000000A15C: BF800000
  label_2858:
  v_readfirstlane_b32  s3, v67                          // 00000000A160: 7E060543
  v_cmp_eq_u32  vcc, s3, v67                            // 00000000A164: 7D848603
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A168: BE90246A
  s_cbranch_execz  label_2860                           // 00000000A16C: BF880004
  v_readlane_b32  s3, v3, s3                            // 00000000A170: 02060703
  v_mov_b32     v69, s3                                 // 00000000A174: 7E8A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A178: 8A8E7E0E
  s_cbranch_scc0  label_2862                            // 00000000A17C: BF840002
  label_2860:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A180: 87FE0E10
  s_branch      label_2858                              // 00000000A184: BF82FFF6
  label_2862:
  s_mov_b64     exec, s[12:13]                          // 00000000A188: BEFE040C
  v_cndmask_b32  v69, 0, v69, s[10:11]                  // 00000000A18C: D2000045 002A8A80
  v_lshl_b64    v[70:71], 1, v67                        // 00000000A194: D2C20046 00028681
  v_and_b32     v70, exec_lo, v70                       // 00000000A19C: 368C8C7E
  v_and_b32     v71, exec_hi, v71                       // 00000000A1A0: 368E8E7F
  v_cmp_ne_u64  s[10:11], 0, v[70:71]                   // 00000000A1A4: D1CA000A 00028C80
  s_mov_b64     s[12:13], exec                          // 00000000A1AC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A1B0: BE8E047E
  s_nop         0x0000                                  // 00000000A1B4: BF800000
  s_nop         0x0000                                  // 00000000A1B8: BF800000
  s_nop         0x0000                                  // 00000000A1BC: BF800000
  label_2870:
  v_readfirstlane_b32  s3, v67                          // 00000000A1C0: 7E060543
  v_cmp_eq_u32  vcc, s3, v67                            // 00000000A1C4: 7D848603
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A1C8: BE90246A
  s_cbranch_execz  label_2878                           // 00000000A1CC: BF880004
  v_readlane_b32  s3, v9, s3                            // 00000000A1D0: 02060709
  v_mov_b32     v67, s3                                 // 00000000A1D4: 7E860203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A1D8: 8A8E7E0E
  s_cbranch_scc0  label_287A                            // 00000000A1DC: BF840002
  label_2878:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A1E0: 87FE0E10
  s_branch      label_2870                              // 00000000A1E4: BF82FFF6
  label_287A:
  s_mov_b64     exec, s[12:13]                          // 00000000A1E8: BEFE040C
  v_cndmask_b32  v67, 0, v67, s[10:11]                  // 00000000A1EC: D2000043 002A8680
  v_lshl_b64    v[70:71], 1, v66                        // 00000000A1F4: D2C20046 00028481
  v_and_b32     v70, exec_lo, v70                       // 00000000A1FC: 368C8C7E
  v_and_b32     v71, exec_hi, v71                       // 00000000A200: 368E8E7F
  v_cmp_ne_u64  s[10:11], 0, v[70:71]                   // 00000000A204: D1CA000A 00028C80
  s_mov_b64     s[12:13], exec                          // 00000000A20C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A210: BE8E047E
  s_nop         0x0000                                  // 00000000A214: BF800000
  s_nop         0x0000                                  // 00000000A218: BF800000
  s_nop         0x0000                                  // 00000000A21C: BF800000
  label_2888:
  v_readfirstlane_b32  s3, v66                          // 00000000A220: 7E060542
  v_cmp_eq_u32  vcc, s3, v66                            // 00000000A224: 7D848403
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A228: BE90246A
  s_cbranch_execz  label_2890                           // 00000000A22C: BF880004
  v_readlane_b32  s3, v9, s3                            // 00000000A230: 02060709
  v_mov_b32     v70, s3                                 // 00000000A234: 7E8C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A238: 8A8E7E0E
  s_cbranch_scc0  label_2892                            // 00000000A23C: BF840002
  label_2890:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A240: 87FE0E10
  s_branch      label_2888                              // 00000000A244: BF82FFF6
  label_2892:
  s_mov_b64     exec, s[12:13]                          // 00000000A248: BEFE040C
  v_cndmask_b32  v70, 0, v70, s[10:11]                  // 00000000A24C: D2000046 002A8C80
  v_lshl_b64    v[71:72], 1, v66                        // 00000000A254: D2C20047 00028481
  v_and_b32     v71, exec_lo, v71                       // 00000000A25C: 368E8E7E
  v_and_b32     v72, exec_hi, v72                       // 00000000A260: 3690907F
  v_cmp_ne_u64  s[10:11], 0, v[71:72]                   // 00000000A264: D1CA000A 00028E80
  s_mov_b64     s[12:13], exec                          // 00000000A26C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A270: BE8E047E
  s_nop         0x0000                                  // 00000000A274: BF800000
  s_nop         0x0000                                  // 00000000A278: BF800000
  s_nop         0x0000                                  // 00000000A27C: BF800000
  label_28A0:
  v_readfirstlane_b32  s3, v66                          // 00000000A280: 7E060542
  v_cmp_eq_u32  vcc, s3, v66                            // 00000000A284: 7D848403
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A288: BE90246A
  s_cbranch_execz  label_28A8                           // 00000000A28C: BF880004
  v_readlane_b32  s3, v6, s3                            // 00000000A290: 02060706
  v_mov_b32     v66, s3                                 // 00000000A294: 7E840203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A298: 8A8E7E0E
  s_cbranch_scc0  label_28AA                            // 00000000A29C: BF840002
  label_28A8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A2A0: 87FE0E10
  s_branch      label_28A0                              // 00000000A2A4: BF82FFF6
  label_28AA:
  s_mov_b64     exec, s[12:13]                          // 00000000A2A8: BEFE040C
  s_add_u32     s12, s8, 28                             // 00000000A2AC: 800C9C08
  s_addc_u32    s13, s9, 0                              // 00000000A2B0: 820D8009
  v_mov_b32     v71, s12                                // 00000000A2B4: 7E8E020C
  v_mov_b32     v72, s13                                // 00000000A2B8: 7E90020D
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000A2BC: BF8C0070
  v_mul_f32     v67, v61, v67                           // 00000000A2C0: 1086873D
  v_mul_f32     v69, v61, v69                           // 00000000A2C4: 108A8B3D
  v_cmp_lt_i32  s[12:13], v2, 62                        // 00000000A2C8: D102000C 00017D02
  v_add_i32     v73, vcc, 21, v7                        // 00000000A2D0: 4A920E95
  v_cmp_lt_i32  vcc, 9, v2                              // 00000000A2D4: 7D020489
  v_mul_f32     v68, v61, v68                           // 00000000A2D8: 1088893D
  v_cndmask_b32  v67, v67, v69, s[12:13]                // 00000000A2DC: D2000043 00328B43
  v_and_b32     v69, 63, v73                            // 00000000A2E4: 368A92BF
  flat_load_dword  v71, v[71:72]                        // 00000000A2E8: DC300000 47000047
  v_cndmask_b32  v66, 0, v66, s[10:11]                  // 00000000A2F0: D2000042 002A8480
  v_cndmask_b32  v67, v68, v67, vcc                     // 00000000A2F8: 00868744
  v_lshl_b64    v[72:73], 1, v69                        // 00000000A2FC: D2C20048 00028A81
  v_and_b32     v72, exec_lo, v72                       // 00000000A304: 3690907E
  v_and_b32     v73, exec_hi, v73                       // 00000000A308: 3692927F
  v_cmp_ne_u64  s[10:11], 0, v[72:73]                   // 00000000A30C: D1CA000A 00029080
  s_mov_b64     s[12:13], exec                          // 00000000A314: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A318: BE8E047E
  s_nop         0x0000                                  // 00000000A31C: BF800000
  label_28C8:
  v_readfirstlane_b32  s3, v69                          // 00000000A320: 7E060545
  v_cmp_eq_u32  vcc, s3, v69                            // 00000000A324: 7D848A03
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A328: BE90246A
  s_cbranch_execz  label_28D0                           // 00000000A32C: BF880004
  v_readlane_b32  s3, v8, s3                            // 00000000A330: 02060708
  v_mov_b32     v68, s3                                 // 00000000A334: 7E880203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A338: 8A8E7E0E
  s_cbranch_scc0  label_28D2                            // 00000000A33C: BF840002
  label_28D0:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A340: 87FE0E10
  s_branch      label_28C8                              // 00000000A344: BF82FFF6
  label_28D2:
  s_mov_b64     exec, s[12:13]                          // 00000000A348: BEFE040C
  v_cndmask_b32  v68, 0, v68, s[10:11]                  // 00000000A34C: D2000044 002A8880
  v_lshl_b64    v[72:73], 1, v69                        // 00000000A354: D2C20048 00028A81
  v_and_b32     v72, exec_lo, v72                       // 00000000A35C: 3690907E
  v_and_b32     v73, exec_hi, v73                       // 00000000A360: 3692927F
  v_cmp_ne_u64  s[10:11], 0, v[72:73]                   // 00000000A364: D1CA000A 00029080
  s_mov_b64     s[12:13], exec                          // 00000000A36C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A370: BE8E047E
  s_nop         0x0000                                  // 00000000A374: BF800000
  s_nop         0x0000                                  // 00000000A378: BF800000
  s_nop         0x0000                                  // 00000000A37C: BF800000
  label_28E0:
  v_readfirstlane_b32  s3, v69                          // 00000000A380: 7E060545
  v_cmp_eq_u32  vcc, s3, v69                            // 00000000A384: 7D848A03
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A388: BE90246A
  s_cbranch_execz  label_28E8                           // 00000000A38C: BF880004
  v_readlane_b32  s3, v5, s3                            // 00000000A390: 02060705
  v_mov_b32     v69, s3                                 // 00000000A394: 7E8A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A398: 8A8E7E0E
  s_cbranch_scc0  label_28EA                            // 00000000A39C: BF840002
  label_28E8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A3A0: 87FE0E10
  s_branch      label_28E0                              // 00000000A3A4: BF82FFF6
  label_28EA:
  s_mov_b64     exec, s[12:13]                          // 00000000A3A8: BEFE040C
  v_cndmask_b32  v69, 0, v69, s[10:11]                  // 00000000A3AC: D2000045 002A8A80
  v_add_i32     v72, vcc, 37, v7                        // 00000000A3B4: 4A900EA5
  v_and_b32     v72, 63, v72                            // 00000000A3B8: 369090BF
  v_lshl_b64    v[73:74], 1, v72                        // 00000000A3BC: D2C20049 00029081
  v_and_b32     v73, exec_lo, v73                       // 00000000A3C4: 3692927E
  v_and_b32     v74, exec_hi, v74                       // 00000000A3C8: 3694947F
  v_cmp_ne_u64  s[10:11], 0, v[73:74]                   // 00000000A3CC: D1CA000A 00029280
  s_mov_b64     s[12:13], exec                          // 00000000A3D4: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A3D8: BE8E047E
  s_nop         0x0000                                  // 00000000A3DC: BF800000
  label_28F8:
  v_readfirstlane_b32  s3, v72                          // 00000000A3E0: 7E060548
  v_cmp_eq_u32  vcc, s3, v72                            // 00000000A3E4: 7D849003
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A3E8: BE90246A
  s_cbranch_execz  label_2900                           // 00000000A3EC: BF880004
  v_readlane_b32  s3, v5, s3                            // 00000000A3F0: 02060705
  v_mov_b32     v73, s3                                 // 00000000A3F4: 7E920203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A3F8: 8A8E7E0E
  s_cbranch_scc0  label_2902                            // 00000000A3FC: BF840002
  label_2900:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A400: 87FE0E10
  s_branch      label_28F8                              // 00000000A404: BF82FFF6
  label_2902:
  s_mov_b64     exec, s[12:13]                          // 00000000A408: BEFE040C
  v_cndmask_b32  v73, 0, v73, s[10:11]                  // 00000000A40C: D2000049 002A9280
  v_lshl_b64    v[74:75], 1, v72                        // 00000000A414: D2C2004A 00029081
  v_and_b32     v74, exec_lo, v74                       // 00000000A41C: 3694947E
  v_and_b32     v75, exec_hi, v75                       // 00000000A420: 3696967F
  v_cmp_ne_u64  s[10:11], 0, v[74:75]                   // 00000000A424: D1CA000A 00029480
  s_mov_b64     s[12:13], exec                          // 00000000A42C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A430: BE8E047E
  s_nop         0x0000                                  // 00000000A434: BF800000
  s_nop         0x0000                                  // 00000000A438: BF800000
  s_nop         0x0000                                  // 00000000A43C: BF800000
  label_2910:
  v_readfirstlane_b32  s3, v72                          // 00000000A440: 7E060548
  v_cmp_eq_u32  vcc, s3, v72                            // 00000000A444: 7D849003
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A448: BE90246A
  s_cbranch_execz  label_2918                           // 00000000A44C: BF880004
  v_readlane_b32  s3, v4, s3                            // 00000000A450: 02060704
  v_mov_b32     v72, s3                                 // 00000000A454: 7E900203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A458: 8A8E7E0E
  s_cbranch_scc0  label_291A                            // 00000000A45C: BF840002
  label_2918:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A460: 87FE0E10
  s_branch      label_2910                              // 00000000A464: BF82FFF6
  label_291A:
  s_mov_b64     exec, s[12:13]                          // 00000000A468: BEFE040C
  v_cndmask_b32  v72, 0, v72, s[10:11]                  // 00000000A46C: D2000048 002A9080
  v_add_i32     v74, vcc, 0x00000045, v7                // 00000000A474: 4A940EFF 00000045
  v_add_i32     v75, vcc, 53, v7                        // 00000000A47C: 4A960EB5
  v_and_b32     v75, 63, v75                            // 00000000A480: 369696BF
  v_and_b32     v74, 63, v74                            // 00000000A484: 369494BF
  v_lshl_b64    v[76:77], 1, v75                        // 00000000A488: D2C2004C 00029681
  v_and_b32     v76, exec_lo, v76                       // 00000000A490: 3698987E
  v_and_b32     v77, exec_hi, v77                       // 00000000A494: 369A9A7F
  v_cmp_ne_u64  s[10:11], 0, v[76:77]                   // 00000000A498: D1CA000A 00029880
  s_mov_b64     s[12:13], exec                          // 00000000A4A0: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A4A4: BE8E047E
  s_nop         0x0000                                  // 00000000A4A8: BF800000
  s_nop         0x0000                                  // 00000000A4AC: BF800000
  s_nop         0x0000                                  // 00000000A4B0: BF800000
  s_nop         0x0000                                  // 00000000A4B4: BF800000
  s_nop         0x0000                                  // 00000000A4B8: BF800000
  s_nop         0x0000                                  // 00000000A4BC: BF800000
  label_2930:
  v_readfirstlane_b32  s3, v75                          // 00000000A4C0: 7E06054B
  v_cmp_eq_u32  vcc, s3, v75                            // 00000000A4C4: 7D849603
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A4C8: BE90246A
  s_cbranch_execz  label_2938                           // 00000000A4CC: BF880004
  v_readlane_b32  s3, v4, s3                            // 00000000A4D0: 02060704
  v_mov_b32     v76, s3                                 // 00000000A4D4: 7E980203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A4D8: 8A8E7E0E
  s_cbranch_scc0  label_293A                            // 00000000A4DC: BF840002
  label_2938:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A4E0: 87FE0E10
  s_branch      label_2930                              // 00000000A4E4: BF82FFF6
  label_293A:
  s_mov_b64     exec, s[12:13]                          // 00000000A4E8: BEFE040C
  v_cndmask_b32  v76, 0, v76, s[10:11]                  // 00000000A4EC: D200004C 002A9880
  v_lshl_b64    v[77:78], 1, v75                        // 00000000A4F4: D2C2004D 00029681
  v_and_b32     v77, exec_lo, v77                       // 00000000A4FC: 369A9A7E
  v_and_b32     v78, exec_hi, v78                       // 00000000A500: 369C9C7F
  v_cmp_ne_u64  s[10:11], 0, v[77:78]                   // 00000000A504: D1CA000A 00029A80
  s_mov_b64     s[12:13], exec                          // 00000000A50C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A510: BE8E047E
  s_nop         0x0000                                  // 00000000A514: BF800000
  s_nop         0x0000                                  // 00000000A518: BF800000
  s_nop         0x0000                                  // 00000000A51C: BF800000
  label_2948:
  v_readfirstlane_b32  s3, v75                          // 00000000A520: 7E06054B
  v_cmp_eq_u32  vcc, s3, v75                            // 00000000A524: 7D849603
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A528: BE90246A
  s_cbranch_execz  label_2950                           // 00000000A52C: BF880004
  v_readlane_b32  s3, v3, s3                            // 00000000A530: 02060703
  v_mov_b32     v77, s3                                 // 00000000A534: 7E9A0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A538: 8A8E7E0E
  s_cbranch_scc0  label_2952                            // 00000000A53C: BF840002
  label_2950:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A540: 87FE0E10
  s_branch      label_2948                              // 00000000A544: BF82FFF6
  label_2952:
  s_mov_b64     exec, s[12:13]                          // 00000000A548: BEFE040C
  v_cndmask_b32  v77, 0, v77, s[10:11]                  // 00000000A54C: D200004D 002A9A80
  v_lshl_b64    v[78:79], 1, v75                        // 00000000A554: D2C2004E 00029681
  v_and_b32     v78, exec_lo, v78                       // 00000000A55C: 369C9C7E
  v_and_b32     v79, exec_hi, v79                       // 00000000A560: 369E9E7F
  v_cmp_ne_u64  s[10:11], 0, v[78:79]                   // 00000000A564: D1CA000A 00029C80
  s_mov_b64     s[12:13], exec                          // 00000000A56C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A570: BE8E047E
  s_nop         0x0000                                  // 00000000A574: BF800000
  s_nop         0x0000                                  // 00000000A578: BF800000
  s_nop         0x0000                                  // 00000000A57C: BF800000
  label_2960:
  v_readfirstlane_b32  s3, v75                          // 00000000A580: 7E06054B
  v_cmp_eq_u32  vcc, s3, v75                            // 00000000A584: 7D849603
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A588: BE90246A
  s_cbranch_execz  label_2968                           // 00000000A58C: BF880004
  v_readlane_b32  s3, v9, s3                            // 00000000A590: 02060709
  v_mov_b32     v75, s3                                 // 00000000A594: 7E960203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A598: 8A8E7E0E
  s_cbranch_scc0  label_296A                            // 00000000A59C: BF840002
  label_2968:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A5A0: 87FE0E10
  s_branch      label_2960                              // 00000000A5A4: BF82FFF6
  label_296A:
  s_mov_b64     exec, s[12:13]                          // 00000000A5A8: BEFE040C
  v_cndmask_b32  v75, 0, v75, s[10:11]                  // 00000000A5AC: D200004B 002A9680
  v_lshl_b64    v[78:79], 1, v74                        // 00000000A5B4: D2C2004E 00029481
  v_and_b32     v78, exec_lo, v78                       // 00000000A5BC: 369C9C7E
  v_and_b32     v79, exec_hi, v79                       // 00000000A5C0: 369E9E7F
  v_cmp_ne_u64  s[10:11], 0, v[78:79]                   // 00000000A5C4: D1CA000A 00029C80
  s_mov_b64     s[12:13], exec                          // 00000000A5CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A5D0: BE8E047E
  s_nop         0x0000                                  // 00000000A5D4: BF800000
  s_nop         0x0000                                  // 00000000A5D8: BF800000
  s_nop         0x0000                                  // 00000000A5DC: BF800000
  label_2978:
  v_readfirstlane_b32  s3, v74                          // 00000000A5E0: 7E06054A
  v_cmp_eq_u32  vcc, s3, v74                            // 00000000A5E4: 7D849403
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A5E8: BE90246A
  s_cbranch_execz  label_2980                           // 00000000A5EC: BF880004
  v_readlane_b32  s3, v9, s3                            // 00000000A5F0: 02060709
  v_mov_b32     v78, s3                                 // 00000000A5F4: 7E9C0203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A5F8: 8A8E7E0E
  s_cbranch_scc0  label_2982                            // 00000000A5FC: BF840002
  label_2980:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A600: 87FE0E10
  s_branch      label_2978                              // 00000000A604: BF82FFF6
  label_2982:
  s_mov_b64     exec, s[12:13]                          // 00000000A608: BEFE040C
  v_cndmask_b32  v78, 0, v78, s[10:11]                  // 00000000A60C: D200004E 002A9C80
  v_lshl_b64    v[79:80], 1, v74                        // 00000000A614: D2C2004F 00029481
  v_and_b32     v79, exec_lo, v79                       // 00000000A61C: 369E9E7E
  v_and_b32     v80, exec_hi, v80                       // 00000000A620: 36A0A07F
  v_cmp_ne_u64  s[10:11], 0, v[79:80]                   // 00000000A624: D1CA000A 00029E80
  s_mov_b64     s[12:13], exec                          // 00000000A62C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000A630: BE8E047E
  s_nop         0x0000                                  // 00000000A634: BF800000
  s_nop         0x0000                                  // 00000000A638: BF800000
  s_nop         0x0000                                  // 00000000A63C: BF800000
  label_2990:
  v_readfirstlane_b32  s3, v74                          // 00000000A640: 7E06054A
  v_cmp_eq_u32  vcc, s3, v74                            // 00000000A644: 7D849403
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000A648: BE90246A
  s_cbranch_execz  label_2998                           // 00000000A64C: BF880004
  v_readlane_b32  s3, v6, s3                            // 00000000A650: 02060706
  v_mov_b32     v74, s3                                 // 00000000A654: 7E940203
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000A658: 8A8E7E0E
  s_cbranch_scc0  label_299A                            // 00000000A65C: BF840002
  label_2998:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000A660: 87FE0E10
  s_branch      label_2990                              // 00000000A664: BF82FFF6
  label_299A:
  s_mov_b64     exec, s[12:13]                          // 00000000A668: BEFE040C
  s_add_u32     s8, s8, 32                              // 00000000A66C: 8008A008
  s_addc_u32    s9, s9, 0                               // 00000000A670: 82098009
  v_mov_b32     v79, s8                                 // 00000000A674: 7E9E0208
  v_mov_b32     v80, s9                                 // 00000000A678: 7EA00209
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000A67C: BF8C0070
  v_mul_f32     v75, v71, v75                           // 00000000A680: 10969747
  v_mul_f32     v77, v71, v77                           // 00000000A684: 109A9B47
  v_cmp_lt_i32  s[8:9], v2, 61                          // 00000000A688: D1020008 00017B02
  v_add_i32     v81, vcc, 22, v7                        // 00000000A690: 4AA20E96
  v_cmp_lt_i32  vcc, 8, v2                              // 00000000A694: 7D020488
  v_mul_f32     v76, v71, v76                           // 00000000A698: 10989947
  v_cndmask_b32  v75, v75, v77, s[8:9]                  // 00000000A69C: D200004B 00229B4B
  v_and_b32     v77, 63, v81                            // 00000000A6A4: 369AA2BF
  flat_load_dword  v79, v[79:80]                        // 00000000A6A8: DC300000 4F00004F
  v_cndmask_b32  v74, 0, v74, s[10:11]                  // 00000000A6B0: D200004A 002A9480
  v_cndmask_b32  v75, v76, v75, vcc                     // 00000000A6B8: 0096974C
  v_add_i32     v0, vcc, s0, v0                         // 00000000A6BC: 4A000000
  v_add_i32     v1, vcc, s0, v1                         // 00000000A6C0: 4A020200
  v_lshl_b64    v[80:81], 1, v77                        // 00000000A6C4: D2C20050 00029A81
  v_and_b32     v80, exec_lo, v80                       // 00000000A6CC: 36A0A07E
  v_and_b32     v81, exec_hi, v81                       // 00000000A6D0: 36A2A27F
  v_cmp_ne_u64  s[8:9], 0, v[80:81]                     // 00000000A6D4: D1CA0008 0002A080
  s_mov_b64     s[10:11], exec                          // 00000000A6DC: BE8A047E
  s_mov_b64     s[12:13], exec                          // 00000000A6E0: BE8C047E
  s_nop         0x0000                                  // 00000000A6E4: BF800000
  s_nop         0x0000                                  // 00000000A6E8: BF800000
  s_nop         0x0000                                  // 00000000A6EC: BF800000
  s_nop         0x0000                                  // 00000000A6F0: BF800000
  s_nop         0x0000                                  // 00000000A6F4: BF800000
  s_nop         0x0000                                  // 00000000A6F8: BF800000
  s_nop         0x0000                                  // 00000000A6FC: BF800000
  label_29C0:
  v_readfirstlane_b32  s3, v77                          // 00000000A700: 7E06054D
  v_cmp_eq_u32  vcc, s3, v77                            // 00000000A704: 7D849A03
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000A708: BE8E246A
  s_cbranch_execz  label_29C8                           // 00000000A70C: BF880004
  v_readlane_b32  s3, v8, s3                            // 00000000A710: 02060708
  v_mov_b32     v76, s3                                 // 00000000A714: 7E980203
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000A718: 8A8C7E0C
  s_cbranch_scc0  label_29CA                            // 00000000A71C: BF840002
  label_29C8:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000A720: 87FE0C0E
  s_branch      label_29C0                              // 00000000A724: BF82FFF6
  label_29CA:
  s_mov_b64     exec, s[10:11]                          // 00000000A728: BEFE040A
  v_cndmask_b32  v8, 0, v76, s[8:9]                     // 00000000A72C: D2000008 00229880
  v_lshl_b64    v[80:81], 1, v77                        // 00000000A734: D2C20050 00029A81
  v_and_b32     v80, exec_lo, v80                       // 00000000A73C: 36A0A07E
  v_and_b32     v81, exec_hi, v81                       // 00000000A740: 36A2A27F
  v_cmp_ne_u64  s[8:9], 0, v[80:81]                     // 00000000A744: D1CA0008 0002A080
  s_mov_b64     s[10:11], exec                          // 00000000A74C: BE8A047E
  s_mov_b64     s[12:13], exec                          // 00000000A750: BE8C047E
  s_nop         0x0000                                  // 00000000A754: BF800000
  s_nop         0x0000                                  // 00000000A758: BF800000
  s_nop         0x0000                                  // 00000000A75C: BF800000
  label_29D8:
  v_readfirstlane_b32  s3, v77                          // 00000000A760: 7E06054D
  v_cmp_eq_u32  vcc, s3, v77                            // 00000000A764: 7D849A03
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000A768: BE8E246A
  s_cbranch_execz  label_29E0                           // 00000000A76C: BF880004
  v_readlane_b32  s3, v5, s3                            // 00000000A770: 02060705
  v_mov_b32     v76, s3                                 // 00000000A774: 7E980203
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000A778: 8A8C7E0C
  s_cbranch_scc0  label_29E2                            // 00000000A77C: BF840002
  label_29E0:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000A780: 87FE0C0E
  s_branch      label_29D8                              // 00000000A784: BF82FFF6
  label_29E2:
  s_mov_b64     exec, s[10:11]                          // 00000000A788: BEFE040A
  v_cndmask_b32  v76, 0, v76, s[8:9]                    // 00000000A78C: D200004C 00229880
  v_add_i32     v77, vcc, 38, v7                        // 00000000A794: 4A9A0EA6
  v_and_b32     v77, 63, v77                            // 00000000A798: 369A9ABF
  v_lshl_b64    v[80:81], 1, v77                        // 00000000A79C: D2C20050 00029A81
  v_and_b32     v80, exec_lo, v80                       // 00000000A7A4: 36A0A07E
  v_and_b32     v81, exec_hi, v81                       // 00000000A7A8: 36A2A27F
  v_cmp_ne_u64  s[8:9], 0, v[80:81]                     // 00000000A7AC: D1CA0008 0002A080
  s_mov_b64     s[10:11], exec                          // 00000000A7B4: BE8A047E
  s_mov_b64     s[12:13], exec                          // 00000000A7B8: BE8C047E
  s_nop         0x0000                                  // 00000000A7BC: BF800000
  label_29F0:
  v_readfirstlane_b32  s3, v77                          // 00000000A7C0: 7E06054D
  v_cmp_eq_u32  vcc, s3, v77                            // 00000000A7C4: 7D849A03
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000A7C8: BE8E246A
  s_cbranch_execz  label_29F8                           // 00000000A7CC: BF880004
  v_readlane_b32  s3, v5, s3                            // 00000000A7D0: 02060705
  v_mov_b32     v80, s3                                 // 00000000A7D4: 7EA00203
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000A7D8: 8A8C7E0C
  s_cbranch_scc0  label_29FA                            // 00000000A7DC: BF840002
  label_29F8:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000A7E0: 87FE0C0E
  s_branch      label_29F0                              // 00000000A7E4: BF82FFF6
  label_29FA:
  s_mov_b64     exec, s[10:11]                          // 00000000A7E8: BEFE040A
  v_cndmask_b32  v5, 0, v80, s[8:9]                     // 00000000A7EC: D2000005 0022A080
  v_lshl_b64    v[80:81], 1, v77                        // 00000000A7F4: D2C20050 00029A81
  v_and_b32     v80, exec_lo, v80                       // 00000000A7FC: 36A0A07E
  v_and_b32     v81, exec_hi, v81                       // 00000000A800: 36A2A27F
  v_cmp_ne_u64  s[8:9], 0, v[80:81]                     // 00000000A804: D1CA0008 0002A080
  s_mov_b64     s[10:11], exec                          // 00000000A80C: BE8A047E
  s_mov_b64     s[12:13], exec                          // 00000000A810: BE8C047E
  s_nop         0x0000                                  // 00000000A814: BF800000
  s_nop         0x0000                                  // 00000000A818: BF800000
  s_nop         0x0000                                  // 00000000A81C: BF800000
  label_2A08:
  v_readfirstlane_b32  s3, v77                          // 00000000A820: 7E06054D
  v_cmp_eq_u32  vcc, s3, v77                            // 00000000A824: 7D849A03
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000A828: BE8E246A
  s_cbranch_execz  label_2A10                           // 00000000A82C: BF880004
  v_readlane_b32  s3, v4, s3                            // 00000000A830: 02060704
  v_mov_b32     v77, s3                                 // 00000000A834: 7E9A0203
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000A838: 8A8C7E0C
  s_cbranch_scc0  label_2A12                            // 00000000A83C: BF840002
  label_2A10:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000A840: 87FE0C0E
  s_branch      label_2A08                              // 00000000A844: BF82FFF6
  label_2A12:
  s_mov_b64     exec, s[10:11]                          // 00000000A848: BEFE040A
  v_cndmask_b32  v77, 0, v77, s[8:9]                    // 00000000A84C: D200004D 00229A80
  v_add_i32     v80, vcc, 0x00000046, v7                // 00000000A854: 4AA00EFF 00000046
  v_add_i32     v7, vcc, 54, v7                         // 00000000A85C: 4A0E0EB6
  v_and_b32     v7, 63, v7                              // 00000000A860: 360E0EBF
  v_and_b32     v80, 63, v80                            // 00000000A864: 36A0A0BF
  v_lshl_b64    v[81:82], 1, v7                         // 00000000A868: D2C20051 00020E81
  v_and_b32     v81, exec_lo, v81                       // 00000000A870: 36A2A27E
  v_and_b32     v82, exec_hi, v82                       // 00000000A874: 36A4A47F
  v_cmp_ne_u64  s[8:9], 0, v[81:82]                     // 00000000A878: D1CA0008 0002A280
  s_mov_b64     s[10:11], exec                          // 00000000A880: BE8A047E
  s_mov_b64     s[12:13], exec                          // 00000000A884: BE8C047E
  s_nop         0x0000                                  // 00000000A888: BF800000
  s_nop         0x0000                                  // 00000000A88C: BF800000
  s_nop         0x0000                                  // 00000000A890: BF800000
  s_nop         0x0000                                  // 00000000A894: BF800000
  s_nop         0x0000                                  // 00000000A898: BF800000
  s_nop         0x0000                                  // 00000000A89C: BF800000
  label_2A28:
  v_readfirstlane_b32  s3, v7                           // 00000000A8A0: 7E060507
  v_cmp_eq_u32  vcc, s3, v7                             // 00000000A8A4: 7D840E03
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000A8A8: BE8E246A
  s_cbranch_execz  label_2A30                           // 00000000A8AC: BF880004
  v_readlane_b32  s3, v4, s3                            // 00000000A8B0: 02060704
  v_mov_b32     v81, s3                                 // 00000000A8B4: 7EA20203
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000A8B8: 8A8C7E0C
  s_cbranch_scc0  label_2A32                            // 00000000A8BC: BF840002
  label_2A30:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000A8C0: 87FE0C0E
  s_branch      label_2A28                              // 00000000A8C4: BF82FFF6
  label_2A32:
  s_mov_b64     exec, s[10:11]                          // 00000000A8C8: BEFE040A
  v_cndmask_b32  v4, 0, v81, s[8:9]                     // 00000000A8CC: D2000004 0022A280
  v_lshl_b64    v[81:82], 1, v7                         // 00000000A8D4: D2C20051 00020E81
  v_and_b32     v81, exec_lo, v81                       // 00000000A8DC: 36A2A27E
  v_and_b32     v82, exec_hi, v82                       // 00000000A8E0: 36A4A47F
  v_cmp_ne_u64  s[8:9], 0, v[81:82]                     // 00000000A8E4: D1CA0008 0002A280
  s_mov_b64     s[10:11], exec                          // 00000000A8EC: BE8A047E
  s_mov_b64     s[12:13], exec                          // 00000000A8F0: BE8C047E
  s_nop         0x0000                                  // 00000000A8F4: BF800000
  s_nop         0x0000                                  // 00000000A8F8: BF800000
  s_nop         0x0000                                  // 00000000A8FC: BF800000
  label_2A40:
  v_readfirstlane_b32  s3, v7                           // 00000000A900: 7E060507
  v_cmp_eq_u32  vcc, s3, v7                             // 00000000A904: 7D840E03
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000A908: BE8E246A
  s_cbranch_execz  label_2A48                           // 00000000A90C: BF880004
  v_readlane_b32  s3, v3, s3                            // 00000000A910: 02060703
  v_mov_b32     v81, s3                                 // 00000000A914: 7EA20203
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000A918: 8A8C7E0C
  s_cbranch_scc0  label_2A4A                            // 00000000A91C: BF840002
  label_2A48:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000A920: 87FE0C0E
  s_branch      label_2A40                              // 00000000A924: BF82FFF6
  label_2A4A:
  s_mov_b64     exec, s[10:11]                          // 00000000A928: BEFE040A
  v_cndmask_b32  v3, 0, v81, s[8:9]                     // 00000000A92C: D2000003 0022A280
  v_lshl_b64    v[81:82], 1, v7                         // 00000000A934: D2C20051 00020E81
  v_and_b32     v81, exec_lo, v81                       // 00000000A93C: 36A2A27E
  v_and_b32     v82, exec_hi, v82                       // 00000000A940: 36A4A47F
  v_cmp_ne_u64  s[8:9], 0, v[81:82]                     // 00000000A944: D1CA0008 0002A280
  s_mov_b64     s[10:11], exec                          // 00000000A94C: BE8A047E
  s_mov_b64     s[12:13], exec                          // 00000000A950: BE8C047E
  s_nop         0x0000                                  // 00000000A954: BF800000
  s_nop         0x0000                                  // 00000000A958: BF800000
  s_nop         0x0000                                  // 00000000A95C: BF800000
  label_2A58:
  v_readfirstlane_b32  s3, v7                           // 00000000A960: 7E060507
  v_cmp_eq_u32  vcc, s3, v7                             // 00000000A964: 7D840E03
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000A968: BE8E246A
  s_cbranch_execz  label_2A60                           // 00000000A96C: BF880004
  v_readlane_b32  s3, v9, s3                            // 00000000A970: 02060709
  v_mov_b32     v7, s3                                  // 00000000A974: 7E0E0203
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000A978: 8A8C7E0C
  s_cbranch_scc0  label_2A62                            // 00000000A97C: BF840002
  label_2A60:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000A980: 87FE0C0E
  s_branch      label_2A58                              // 00000000A984: BF82FFF6
  label_2A62:
  s_mov_b64     exec, s[10:11]                          // 00000000A988: BEFE040A
  v_cndmask_b32  v7, 0, v7, s[8:9]                      // 00000000A98C: D2000007 00220E80
  v_lshl_b64    v[81:82], 1, v80                        // 00000000A994: D2C20051 0002A081
  v_and_b32     v81, exec_lo, v81                       // 00000000A99C: 36A2A27E
  v_and_b32     v82, exec_hi, v82                       // 00000000A9A0: 36A4A47F
  v_cmp_ne_u64  s[8:9], 0, v[81:82]                     // 00000000A9A4: D1CA0008 0002A280
  s_mov_b64     s[10:11], exec                          // 00000000A9AC: BE8A047E
  s_mov_b64     s[12:13], exec                          // 00000000A9B0: BE8C047E
  s_nop         0x0000                                  // 00000000A9B4: BF800000
  s_nop         0x0000                                  // 00000000A9B8: BF800000
  s_nop         0x0000                                  // 00000000A9BC: BF800000
  label_2A70:
  v_readfirstlane_b32  s3, v80                          // 00000000A9C0: 7E060550
  v_cmp_eq_u32  vcc, s3, v80                            // 00000000A9C4: 7D84A003
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000A9C8: BE8E246A
  s_cbranch_execz  label_2A78                           // 00000000A9CC: BF880004
  v_readlane_b32  s3, v9, s3                            // 00000000A9D0: 02060709
  v_mov_b32     v81, s3                                 // 00000000A9D4: 7EA20203
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000A9D8: 8A8C7E0C
  s_cbranch_scc0  label_2A7A                            // 00000000A9DC: BF840002
  label_2A78:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000A9E0: 87FE0C0E
  s_branch      label_2A70                              // 00000000A9E4: BF82FFF6
  label_2A7A:
  s_mov_b64     exec, s[10:11]                          // 00000000A9E8: BEFE040A
  v_cndmask_b32  v9, 0, v81, s[8:9]                     // 00000000A9EC: D2000009 0022A280
  v_lshl_b64    v[81:82], 1, v80                        // 00000000A9F4: D2C20051 0002A081
  v_and_b32     v81, exec_lo, v81                       // 00000000A9FC: 36A2A27E
  v_and_b32     v82, exec_hi, v82                       // 00000000AA00: 36A4A47F
  v_cmp_ne_u64  s[8:9], 0, v[81:82]                     // 00000000AA04: D1CA0008 0002A280
  s_mov_b64     s[10:11], exec                          // 00000000AA0C: BE8A047E
  s_mov_b64     s[12:13], exec                          // 00000000AA10: BE8C047E
  s_nop         0x0000                                  // 00000000AA14: BF800000
  s_nop         0x0000                                  // 00000000AA18: BF800000
  s_nop         0x0000                                  // 00000000AA1C: BF800000
  label_2A88:
  v_readfirstlane_b32  s3, v80                          // 00000000AA20: 7E060550
  v_cmp_eq_u32  vcc, s3, v80                            // 00000000AA24: 7D84A003
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000AA28: BE8E246A
  s_cbranch_execz  label_2A90                           // 00000000AA2C: BF880004
  v_readlane_b32  s3, v6, s3                            // 00000000AA30: 02060706
  v_mov_b32     v80, s3                                 // 00000000AA34: 7EA00203
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000AA38: 8A8C7E0C
  s_cbranch_scc0  label_2A92                            // 00000000AA3C: BF840002
  label_2A90:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000AA40: 87FE0C0E
  s_branch      label_2A88                              // 00000000AA44: BF82FFF6
  label_2A92:
  s_mov_b64     exec, s[10:11]                          // 00000000AA48: BEFE040A
  s_add_u32     s1, s1, s0                              // 00000000AA4C: 80010001
  s_add_u32     s0, s2, s0                              // 00000000AA50: 80000002
  v_cmp_lt_i32  s[2:3], v1, s0                          // 00000000AA54: D1020002 00000101
  v_cmp_lt_i32  s[10:11], v0, s1                        // 00000000AA5C: D102000A 00000300
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000AA64: BF8C0070
  v_mul_f32     v7, v79, v7                             // 00000000AA68: 100E0F4F
  v_mul_f32     v3, v79, v3                             // 00000000AA6C: 1006074F
  v_cmp_gt_i32  vcc, 60, v2                             // 00000000AA70: 7D0804BC
  v_cmp_gt_i32  s[12:13], v2, 7                         // 00000000AA74: D108000C 00010F02
  v_mul_f32     v4, v79, v4                             // 00000000AA7C: 1008094F
  v_cndmask_b32  v3, v7, v3, vcc                        // 00000000AA80: 00060707
  s_and_b64     vcc, s[10:11], s[2:3]                   // 00000000AA84: 87EA020A
  v_cndmask_b32  v6, 0, v80, s[8:9]                     // 00000000AA88: D2000006 0022A080
  v_cndmask_b32  v3, v4, v3, s[12:13]                   // 00000000AA90: D2000003 00320704
  s_xor_b64     s[2:3], vcc, -1                         // 00000000AA98: 8982C16A
  s_load_dwordx2  s[6:7], s[6:7], 0x04                  // 00000000AA9C: C0430704
  s_mov_b64     s[8:9], exec                            // 00000000AAA0: BE88047E
  s_andn2_b64   exec, s[8:9], s[2:3]                    // 00000000AAA4: 8AFE0208
  v_mul_f32     v4, v11, v12                            // 00000000AAA8: 1008190B
  s_cbranch_execz  label_2AE4                           // 00000000AAAC: BF880038
  v_mul_f32     v7, v11, v10                            // 00000000AAB0: 100E150B
  v_cmp_gt_i32  vcc, 52, v2                             // 00000000AAB4: 7D0804B4
  v_mul_f32     v10, v20, v21                           // 00000000AAB8: 10142B14
  v_mul_f32     v12, v20, v18                           // 00000000AABC: 10182514
  v_cndmask_b32  v4, v7, v4, vcc                        // 00000000AAC0: 00080907
  v_cmp_gt_i32  vcc, 51, v2                             // 00000000AAC4: 7D0804B3
  v_mul_f32     v7, v30, v26                            // 00000000AAC8: 100E351E
  v_mul_f32     v18, v30, v31                           // 00000000AACC: 10243F1E
  v_cndmask_b32  v10, v12, v10, vcc                     // 00000000AAD0: 0014150C
  v_cmp_gt_i32  vcc, 50, v2                             // 00000000AAD4: 7D0804B2
  v_mul_f32     v12, v38, v34                           // 00000000AAD8: 10184526
  v_mul_f32     v21, v38, v39                           // 00000000AADC: 102A4F26
  v_cndmask_b32  v7, v7, v18, vcc                       // 00000000AAE0: 000E2507
  v_cmp_gt_i32  vcc, 44, v2                             // 00000000AAE4: 7D0804AC
  v_add_f32     v4, 0, v4                               // 00000000AAE8: 06080880
  v_mul_f32     v18, v45, v47                           // 00000000AAEC: 10245F2D
  v_mul_f32     v26, v45, v46                           // 00000000AAF0: 10345D2D
  v_cndmask_b32  v12, v12, v21, vcc                     // 00000000AAF4: 00182B0C
  v_add_f32     v4, v4, v10                             // 00000000AAF8: 06081504
  v_cmp_gt_i32  vcc, 43, v2                             // 00000000AAFC: 7D0804AB
  v_mul_f32     v10, v55, v53                           // 00000000AB00: 10146B37
  v_mul_f32     v21, v55, v54                           // 00000000AB04: 102A6D37
  v_add_f32     v4, v4, v7                              // 00000000AB08: 06080F04
  v_cndmask_b32  v7, v26, v18, vcc                      // 00000000AB0C: 000E251A
  v_cmp_gt_i32  vcc, 42, v2                             // 00000000AB10: 7D0804AA
  v_mul_f32     v18, v61, v63                           // 00000000AB14: 10247F3D
  v_mul_f32     v26, v61, v62                           // 00000000AB18: 10347D3D
  v_add_f32     v4, v4, v12                             // 00000000AB1C: 06081904
  v_cndmask_b32  v10, v21, v10, vcc                     // 00000000AB20: 00141515
  v_cmp_gt_i32  vcc, 36, v2                             // 00000000AB24: 7D0804A4
  v_mul_f32     v12, v71, v68                           // 00000000AB28: 10188947
  v_mul_f32     v21, v71, v69                           // 00000000AB2C: 102A8B47
  v_add_f32     v4, v4, v7                              // 00000000AB30: 06080F04
  v_cndmask_b32  v7, v26, v18, vcc                      // 00000000AB34: 000E251A
  v_cmp_gt_i32  vcc, 35, v2                             // 00000000AB38: 7D0804A3
  v_mul_f32     v8, v79, v8                             // 00000000AB3C: 1010114F
  v_mul_f32     v18, v79, v76                           // 00000000AB40: 1024994F
  v_add_f32     v4, v4, v10                             // 00000000AB44: 06081504
  v_cndmask_b32  v10, v21, v12, vcc                     // 00000000AB48: 00141915
  v_cmp_gt_i32  vcc, 34, v2                             // 00000000AB4C: 7D0804A2
  v_add_f32     v4, v4, v7                              // 00000000AB50: 06080F04
  v_cndmask_b32  v7, v18, v8, vcc                       // 00000000AB54: 000E1112
  v_add_f32     v4, v4, v10                             // 00000000AB58: 06081504
  v_add_f32     v4, v4, v7                              // 00000000AB5C: 06080F04
  v_mul_lo_u32  v7, v1, s4                              // 00000000AB60: D2D20007 00000901
  v_add_i32     v7, vcc, v7, v0                         // 00000000AB68: 4A0E0107
  v_ashrrev_i32  v8, 31, v7                             // 00000000AB6C: 30100E9F
  v_lshl_b64    v[7:8], v[7:8], 2                       // 00000000AB70: D2C20007 00010507
  s_waitcnt     lgkmcnt(0)                              // 00000000AB78: BF8C007F
  v_add_i32     v7, vcc, s6, v7                         // 00000000AB7C: 4A0E0E06
  v_mov_b32     v10, s7                                 // 00000000AB80: 7E140207
  v_addc_u32    v8, vcc, v10, v8, vcc                   // 00000000AB84: 5010110A
  flat_store_dword  v[7:8], v4                          // 00000000AB88: DC700000 00000407
  label_2AE4:
  s_mov_b64     exec, s[8:9]                            // 00000000AB90: BEFE0408
  v_cmp_lt_i32  s[2:3], v2, 24                          // 00000000AB94: D1020002 00013102
  v_add_i32     v4, vcc, 8, v1                          // 00000000AB9C: 4A080288
  v_cmp_gt_i32  vcc, s0, v4                             // 00000000ABA0: 7D080800
  s_and_b64     s[8:9], s[10:11], vcc                   // 00000000ABA4: 87886A0A
  s_and_saveexec_b64  s[8:9], s[8:9]                    // 00000000ABA8: BE882408
  v_mul_f32     v7, v11, v15                            // 00000000ABAC: 100E1F0B
  s_cbranch_execz  label_2B25                           // 00000000ABB0: BF880038
  v_mul_f32     v8, v11, v13                            // 00000000ABB4: 10101B0B
  v_cmp_gt_i32  vcc, 40, v2                             // 00000000ABB8: 7D0804A8
  v_mul_f32     v10, v20, v24                           // 00000000ABBC: 10143114
  v_mul_f32     v12, v20, v23                           // 00000000ABC0: 10182F14
  v_cndmask_b32  v7, v8, v7, vcc                        // 00000000ABC4: 000E0F08
  v_cmp_gt_i32  vcc, 39, v2                             // 00000000ABC8: 7D0804A7
  v_mul_f32     v8, v30, v27                            // 00000000ABCC: 1010371E
  v_mul_f32     v13, v30, v32                           // 00000000ABD0: 101A411E
  v_cndmask_b32  v10, v12, v10, vcc                     // 00000000ABD4: 0014150C
  v_cmp_gt_i32  vcc, 38, v2                             // 00000000ABD8: 7D0804A6
  v_mul_f32     v12, v38, v41                           // 00000000ABDC: 10185326
  v_mul_f32     v15, v38, v42                           // 00000000ABE0: 101E5526
  v_cndmask_b32  v8, v8, v13, vcc                       // 00000000ABE4: 00101B08
  v_cmp_gt_i32  vcc, 32, v2                             // 00000000ABE8: 7D0804A0
  v_add_f32     v7, 0, v7                               // 00000000ABEC: 060E0E80
  v_mul_f32     v13, v45, v50                           // 00000000ABF0: 101A652D
  v_mul_f32     v18, v45, v48                           // 00000000ABF4: 1024612D
  v_cndmask_b32  v12, v12, v15, vcc                     // 00000000ABF8: 00181F0C
  v_add_f32     v7, v7, v10                             // 00000000ABFC: 060E1507
  v_cmp_gt_i32  vcc, 31, v2                             // 00000000AC00: 7D08049F
  v_mul_f32     v10, v55, v58                           // 00000000AC04: 10147537
  v_mul_f32     v15, v55, v56                           // 00000000AC08: 101E7137
  v_add_f32     v7, v7, v8                              // 00000000AC0C: 060E1107
  v_cndmask_b32  v8, v18, v13, vcc                      // 00000000AC10: 00101B12
  v_cmp_gt_i32  vcc, 30, v2                             // 00000000AC14: 7D08049E
  v_mul_f32     v13, v61, v65                           // 00000000AC18: 101A833D
  v_mul_f32     v18, v61, v64                           // 00000000AC1C: 1024813D
  v_add_f32     v7, v7, v12                             // 00000000AC20: 060E1907
  v_cndmask_b32  v10, v15, v10, vcc                     // 00000000AC24: 0014150F
  v_mul_f32     v12, v71, v73                           // 00000000AC28: 10189347
  v_mul_f32     v15, v71, v72                           // 00000000AC2C: 101E9147
  v_add_f32     v7, v7, v8                              // 00000000AC30: 060E1107
  v_cndmask_b32  v8, v18, v13, s[2:3]                   // 00000000AC34: D2000008 000A1B12
  v_cmp_gt_i32  vcc, 23, v2                             // 00000000AC3C: 7D080497
  v_mul_f32     v5, v79, v5                             // 00000000AC40: 100A0B4F
  v_mul_f32     v13, v79, v77                           // 00000000AC44: 101A9B4F
  v_add_f32     v7, v7, v10                             // 00000000AC48: 060E1507
  v_cndmask_b32  v10, v15, v12, vcc                     // 00000000AC4C: 0014190F
  v_cmp_gt_i32  vcc, 22, v2                             // 00000000AC50: 7D080496
  v_add_f32     v7, v7, v8                              // 00000000AC54: 060E1107
  v_cndmask_b32  v5, v13, v5, vcc                       // 00000000AC58: 000A0B0D
  v_add_f32     v7, v7, v10                             // 00000000AC5C: 060E1507
  v_add_f32     v5, v7, v5                              // 00000000AC60: 060A0B07
  v_mul_lo_u32  v4, v4, s4                              // 00000000AC64: D2D20004 00000904
  v_add_i32     v7, vcc, v4, v0                         // 00000000AC6C: 4A0E0104
  v_ashrrev_i32  v8, 31, v7                             // 00000000AC70: 30100E9F
  v_lshl_b64    v[7:8], v[7:8], 2                       // 00000000AC74: D2C20007 00010507
  s_waitcnt     lgkmcnt(0)                              // 00000000AC7C: BF8C007F
  v_add_i32     v12, vcc, s6, v7                        // 00000000AC80: 4A180E06
  v_mov_b32     v7, s7                                  // 00000000AC84: 7E0E0207
  v_addc_u32    v13, vcc, v7, v8, vcc                   // 00000000AC88: 501A1107
  flat_store_dword  v[12:13], v5                        // 00000000AC8C: DC700000 0000050C
  label_2B25:
  s_mov_b64     exec, s[8:9]                            // 00000000AC94: BEFE0408
  v_add_i32     v4, vcc, 16, v1                         // 00000000AC98: 4A080290
  v_cmp_gt_i32  vcc, s0, v4                             // 00000000AC9C: 7D080800
  s_and_b64     s[8:9], s[10:11], vcc                   // 00000000ACA0: 87886A0A
  s_and_saveexec_b64  s[8:9], s[8:9]                    // 00000000ACA4: BE882408
  v_mul_f32     v5, v11, v16                            // 00000000ACA8: 100A210B
  s_cbranch_execz  label_2B58                           // 00000000ACAC: BF88002C
  v_mul_f32     v7, v11, v14                            // 00000000ACB0: 100E1D0B
  v_cmp_gt_i32  vcc, 26, v2                             // 00000000ACB4: 7D08049A
  v_mul_f32     v8, v20, v25                            // 00000000ACB8: 10103314
  v_mul_f32     v10, v20, v22                           // 00000000ACBC: 10142D14
  v_cndmask_b32  v5, v7, v5, vcc                        // 00000000ACC0: 000A0B07
  v_cmp_gt_i32  vcc, 25, v2                             // 00000000ACC4: 7D080499
  v_mul_f32     v7, v30, v35                            // 00000000ACC8: 100E471E
  v_mul_f32     v12, v30, v36                           // 00000000ACCC: 1018491E
  v_cndmask_b32  v8, v10, v8, vcc                       // 00000000ACD0: 0010110A
  v_mul_f32     v10, v38, v40                           // 00000000ACD4: 10145126
  v_mul_f32     v13, v38, v43                           // 00000000ACD8: 101A5726
  v_cmp_gt_i32  vcc, 18, v2                             // 00000000ACDC: 7D080492
  v_cndmask_b32  v7, v7, v12, s[2:3]                    // 00000000ACE0: D2000007 000A1907
  v_add_f32     v5, 0, v5                               // 00000000ACE8: 060A0A80
  v_mul_f32     v12, v45, v51                           // 00000000ACEC: 1018672D
  v_mul_f32     v14, v45, v49                           // 00000000ACF0: 101C632D
  v_cndmask_b32  v10, v10, v13, vcc                     // 00000000ACF4: 00141B0A
  v_add_f32     v5, v5, v8                              // 00000000ACF8: 060A1105
  v_cmp_gt_i32  vcc, 17, v2                             // 00000000ACFC: 7D080491
  v_mul_f32     v8, v55, v59                            // 00000000AD00: 10107737
  v_mul_f32     v13, v55, v57                           // 00000000AD04: 101A7337
  v_add_f32     v5, v5, v7                              // 00000000AD08: 060A0F05
  v_cndmask_b32  v7, v14, v12, vcc                      // 00000000AD0C: 000E190E
  v_cmp_gt_i32  vcc, 16, v2                             // 00000000AD10: 7D080490
  v_add_f32     v5, v5, v10                             // 00000000AD14: 060A1505
  v_cndmask_b32  v8, v13, v8, vcc                       // 00000000AD18: 0010110D
  v_add_f32     v5, v5, v7                              // 00000000AD1C: 060A0F05
  v_add_f32     v5, v5, v8                              // 00000000AD20: 060A1105
  v_add_f32     v5, v5, v67                             // 00000000AD24: 060A8705
  v_add_f32     v5, v5, v75                             // 00000000AD28: 060A9705
  v_add_f32     v3, v5, v3                              // 00000000AD2C: 06060705
  v_mul_lo_u32  v4, v4, s4                              // 00000000AD30: D2D20004 00000904
  v_add_i32     v4, vcc, v4, v0                         // 00000000AD38: 4A080104
  v_ashrrev_i32  v5, 31, v4                             // 00000000AD3C: 300A089F
  v_lshl_b64    v[4:5], v[4:5], 2                       // 00000000AD40: D2C20004 00010504
  s_waitcnt     lgkmcnt(0)                              // 00000000AD48: BF8C007F
  v_add_i32     v4, vcc, s6, v4                         // 00000000AD4C: 4A080806
  v_mov_b32     v7, s7                                  // 00000000AD50: 7E0E0207
  v_addc_u32    v5, vcc, v7, v5, vcc                    // 00000000AD54: 500A0B07
  flat_store_dword  v[4:5], v3                          // 00000000AD58: DC700000 00000304
  label_2B58:
  s_mov_b64     exec, s[8:9]                            // 00000000AD60: BEFE0408
  v_add_i32     v1, vcc, 24, v1                         // 00000000AD64: 4A020298
  v_cmp_gt_i32  vcc, s0, v1                             // 00000000AD68: 7D080200
  s_and_b64     s[0:1], s[10:11], vcc                   // 00000000AD6C: 87806A0A
  s_and_saveexec_b64  s[0:1], s[0:1]                    // 00000000AD70: BE802400
  v_mul_f32     v3, v11, v19                            // 00000000AD74: 1006270B
  s_cbranch_execz  label_2B89                           // 00000000AD78: BF88002A
  v_mul_f32     v4, v11, v17                            // 00000000AD7C: 1008230B
  v_cmp_gt_i32  vcc, 14, v2                             // 00000000AD80: 7D08048E
  v_mul_f32     v5, v20, v29                            // 00000000AD84: 100A3B14
  v_mul_f32     v7, v20, v28                            // 00000000AD88: 100E3914
  v_cndmask_b32  v3, v4, v3, vcc                        // 00000000AD8C: 00060704
  v_cmp_gt_i32  vcc, 13, v2                             // 00000000AD90: 7D08048D
  v_mul_f32     v4, v30, v33                            // 00000000AD94: 1008431E
  v_mul_f32     v8, v30, v37                            // 00000000AD98: 10104B1E
  v_cndmask_b32  v5, v7, v5, vcc                        // 00000000AD9C: 000A0B07
  v_cmp_gt_i32  vcc, 12, v2                             // 00000000ADA0: 7D08048C
  v_cndmask_b32  v4, v4, v8, vcc                        // 00000000ADA4: 00081104
  v_add_f32     v3, 0, v3                               // 00000000ADA8: 06060680
  v_add_f32     v3, v3, v5                              // 00000000ADAC: 06060B03
  v_add_f32     v3, v3, v4                              // 00000000ADB0: 06060903
  v_mul_f32     v4, v61, v70                            // 00000000ADB4: 10088D3D
  v_mul_f32     v5, v61, v66                            // 00000000ADB8: 100A853D
  v_add_f32     v3, v3, v44                             // 00000000ADBC: 06065903
  v_cmp_gt_i32  vcc, 48, v2                             // 00000000ADC0: 7D0804B0
  v_mul_f32     v2, v71, v78                            // 00000000ADC4: 10049D47
  v_mul_f32     v7, v71, v74                            // 00000000ADC8: 100E9547
  v_add_f32     v3, v3, v52                             // 00000000ADCC: 06066903
  v_cndmask_b32  v4, v5, v4, vcc                        // 00000000ADD0: 00080905
  v_mul_f32     v5, v79, v9                             // 00000000ADD4: 100A134F
  v_mul_f32     v6, v79, v6                             // 00000000ADD8: 100C0D4F
  v_add_f32     v3, v3, v60                             // 00000000ADDC: 06067903
  v_cndmask_b32  v2, v7, v2, vcc                        // 00000000ADE0: 00040507
  v_add_f32     v3, v3, v4                              // 00000000ADE4: 06060903
  v_cndmask_b32  v4, v6, v5, vcc                        // 00000000ADE8: 00080B06
  v_add_f32     v2, v3, v2                              // 00000000ADEC: 06040503
  v_add_f32     v2, v2, v4                              // 00000000ADF0: 06040902
  v_mul_lo_u32  v1, v1, s4                              // 00000000ADF4: D2D20001 00000901
  v_add_i32     v0, vcc, v1, v0                         // 00000000ADFC: 4A000101
  v_ashrrev_i32  v1, 31, v0                             // 00000000AE00: 3002009F
  v_lshl_b64    v[0:1], v[0:1], 2                       // 00000000AE04: D2C20000 00010500
  s_waitcnt     lgkmcnt(0)                              // 00000000AE0C: BF8C007F
  v_add_i32     v0, vcc, s6, v0                         // 00000000AE10: 4A000006
  v_mov_b32     v3, s7                                  // 00000000AE14: 7E060207
  v_addc_u32    v1, vcc, v3, v1, vcc                    // 00000000AE18: 50020303
  flat_store_dword  v[0:1], v2                          // 00000000AE1C: DC700000 00000200
  label_2B89:
  s_endpgm                                              // 00000000AE24: BF810000
  //
  // padding (00000000ae28 - 00000000af00)
  //
  //
  // amd_kernel_code_t for &ZZ18Stencil_Hcc_Shfl4xRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__519__cxxamp_trampolineEPfiiS4_iiS4_iiiii (00000000af00 - 00000000b000)
  //
  //
  // &ZZ18Stencil_Hcc_Shfl4xRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__519__cxxamp_trampolineEPfiiS4_iiS4_iiiii:
  //
  s_load_dword  s0, s[4:5], 0x01                        // 00000000B000: C0000501
  v_mbcnt_lo_u32_b32  v2, -1, 0                         // 00000000B004: D2460002 000100C1
  v_mbcnt_hi_u32_b32  v2, -1, v2                        // 00000000B00C: 480404C1
  s_waitcnt     lgkmcnt(0)                              // 00000000B010: BF8C007F
  s_and_b32     s1, s0, 0x0000ffff                      // 00000000B014: 8701FF00 0000FFFF
  s_bfe_u32     s0, s0, 0x00100010                      // 00000000B01C: 9380FF00 00100010
  s_mul_i32     s1, s1, s8                              // 00000000B024: 93010801
  v_add_i32     v0, vcc, s1, v0                         // 00000000B028: 4A000001
  s_mul_i32     s0, s0, s9                              // 00000000B02C: 93000900
  v_add_i32     v1, vcc, s0, v1                         // 00000000B030: 4A020200
  v_add_i32     v3, vcc, 2, v2                          // 00000000B034: 4A060482
  v_add_i32     v4, vcc, 6, v2                          // 00000000B038: 4A080486
  v_add_i32     v5, vcc, 4, v2                          // 00000000B03C: 4A0A0484
  v_add_i32     v6, vcc, 8, v2                          // 00000000B040: 4A0C0488
  s_load_dwordx2  s[0:1], s[6:7], 0x0c                  // 00000000B044: C040070C
  v_ashrrev_i32  v7, 31, v2                             // 00000000B048: 300E049F
  s_mov_b32     s2, 0x66666667                          // 00000000B04C: BE8203FF 66666667
  v_ashrrev_i32  v8, 31, v3                             // 00000000B054: 3010069F
  v_ashrrev_i32  v9, 31, v4                             // 00000000B058: 3012089F
  v_ashrrev_i32  v10, 31, v5                            // 00000000B05C: 30140A9F
  v_ashrrev_i32  v11, 31, v6                            // 00000000B060: 30160C9F
  v_mul_hi_u32  v12, v2, s2                             // 00000000B064: D2D4000C 00000502
  v_mul_lo_u32  v7, v7, s2                              // 00000000B06C: D2D20007 00000507
  v_lshlrev_b32  v1, 2, v1                              // 00000000B074: 34020282
  v_mul_hi_u32  v13, v3, s2                             // 00000000B078: D2D4000D 00000503
  v_mul_lo_u32  v8, v8, s2                              // 00000000B080: D2D20008 00000508
  v_mul_hi_u32  v14, v4, s2                             // 00000000B088: D2D4000E 00000504
  v_mul_lo_u32  v9, v9, s2                              // 00000000B090: D2D20009 00000509
  v_mul_hi_u32  v15, v5, s2                             // 00000000B098: D2D4000F 00000505
  v_mul_lo_u32  v10, v10, s2                            // 00000000B0A0: D2D2000A 0000050A
  v_mul_hi_u32  v16, v6, s2                             // 00000000B0A8: D2D40010 00000506
  v_mul_lo_u32  v11, v11, s2                            // 00000000B0B0: D2D2000B 0000050B
  v_add_i32     v7, vcc, v7, v12                        // 00000000B0B8: 4A0E1907
  v_ashrrev_i32  v12, 3, v2                             // 00000000B0BC: 30180483
  v_and_b32     v1, 0xffffffe0, v1                      // 00000000B0C0: 360202FF FFFFFFE0
  v_add_i32     v8, vcc, v8, v13                        // 00000000B0C8: 4A101B08
  v_add_i32     v9, vcc, v9, v14                        // 00000000B0CC: 4A121D09
  v_add_i32     v10, vcc, v10, v15                      // 00000000B0D0: 4A141F0A
  v_add_i32     v11, vcc, v11, v16                      // 00000000B0D4: 4A16210B
  v_lshrrev_b32  v13, 31, v7                            // 00000000B0D8: 2C1A0E9F
  v_ashrrev_i32  v7, 2, v7                              // 00000000B0DC: 300E0E82
  v_add_i32     v1, vcc, v12, v1                        // 00000000B0E0: 4A02030C
  v_lshrrev_b32  v14, 31, v8                            // 00000000B0E4: 2C1C109F
  v_ashrrev_i32  v8, 2, v8                              // 00000000B0E8: 30101082
  v_lshrrev_b32  v15, 31, v9                            // 00000000B0EC: 2C1E129F
  v_ashrrev_i32  v9, 2, v9                              // 00000000B0F0: 30121282
  v_lshrrev_b32  v16, 31, v10                           // 00000000B0F4: 2C20149F
  v_ashrrev_i32  v10, 2, v10                            // 00000000B0F8: 30141482
  v_lshrrev_b32  v17, 31, v11                           // 00000000B0FC: 2C22169F
  v_ashrrev_i32  v11, 2, v11                            // 00000000B100: 30161682
  v_add_i32     v7, vcc, v7, v13                        // 00000000B104: 4A0E1B07
  v_and_b32     v13, -8, v1                             // 00000000B108: 361A02C8
  v_add_i32     v8, vcc, v8, v14                        // 00000000B10C: 4A101D08
  v_add_i32     v9, vcc, v9, v15                        // 00000000B110: 4A121F09
  v_add_i32     v10, vcc, v10, v16                      // 00000000B114: 4A14210A
  v_add_i32     v11, vcc, v11, v17                      // 00000000B118: 4A16230B
  s_load_dword  s2, s[6:7], 0x0e                        // 00000000B11C: C001070E
  s_waitcnt     lgkmcnt(0)                              // 00000000B120: BF8C007F
  s_lshl_b32    s3, s0, 1                               // 00000000B124: 8F038100
  v_mul_lo_u32  v14, v7, 10                             // 00000000B128: D2D2000E 00011507
  v_add_i32     v15, vcc, v13, v8                       // 00000000B130: 4A1E110D
  v_add_i32     v16, vcc, v13, v9                       // 00000000B134: 4A20130D
  v_mul_lo_u32  v8, v8, 10                              // 00000000B138: D2D20008 00011508
  v_or_b32      v17, 6, v13                             // 00000000B140: 38221A86
  v_mul_lo_u32  v9, v9, 10                              // 00000000B144: D2D20009 00011509
  v_mul_lo_u32  v18, v10, 10                            // 00000000B14C: D2D20012 0001150A
  v_add_i32     v19, vcc, v13, v11                      // 00000000B154: 4A26170D
  v_mul_lo_u32  v11, v11, 10                            // 00000000B158: D2D2000B 0001150B
  v_add_i32     v7, vcc, v7, v13                        // 00000000B160: 4A0E1B07
  s_add_u32     s4, s3, s1                              // 00000000B164: 80040103
  v_and_b32     v13, -8, v0                             // 00000000B168: 361A00C8
  v_sub_i32     v14, vcc, v2, v14                       // 00000000B16C: 4C1C1D02
  v_add_i32     v15, vcc, 19, v15                       // 00000000B170: 4A1E1E93
  v_sub_i32     v3, vcc, v3, v8                         // 00000000B174: 4C061103
  v_add_i32     v8, vcc, 25, v16                        // 00000000B178: 4A102099
  v_add_i32     v10, vcc, v10, v17                      // 00000000B17C: 4A14230A
  v_sub_i32     v4, vcc, v4, v9                         // 00000000B180: 4C081304
  v_sub_i32     v5, vcc, v5, v18                        // 00000000B184: 4C0A2505
  v_add_i32     v9, vcc, 12, v19                        // 00000000B188: 4A12268C
  v_sub_i32     v6, vcc, v6, v11                        // 00000000B18C: 4C0C1706
  s_load_dwordx2  s[8:9], s[6:7], 0x00                  // 00000000B190: C0440700
  v_add_i32     v11, vcc, v14, v13                      // 00000000B194: 4A161B0E
  v_mul_lo_u32  v14, v15, s4                            // 00000000B198: D2D2000E 0000090F
  v_add_i32     v3, vcc, v3, v13                        // 00000000B1A0: 4A061B03
  v_mul_lo_u32  v10, v10, s4                            // 00000000B1A4: D2D2000A 0000090A
  v_mul_lo_u32  v8, v8, s4                              // 00000000B1AC: D2D20008 00000908
  v_add_i32     v4, vcc, v4, v13                        // 00000000B1B4: 4A081B04
  v_add_i32     v5, vcc, v5, v13                        // 00000000B1B8: 4A0A1B05
  v_mul_lo_u32  v15, v7, s4                             // 00000000B1BC: D2D2000F 00000907
  v_mul_lo_u32  v9, v9, s4                              // 00000000B1C4: D2D20009 00000909
  v_add_i32     v6, vcc, v6, v13                        // 00000000B1CC: 4A0C1B06
  v_add_i32     v3, vcc, v3, v14                        // 00000000B1D0: 4A061D03
  v_add_i32     v16, vcc, v4, v8                        // 00000000B1D4: 4A201104
  v_add_i32     v13, vcc, v5, v10                       // 00000000B1D8: 4A1A1505
  v_add_i32     v8, vcc, v15, v11                       // 00000000B1DC: 4A10170F
  v_add_i32     v5, vcc, v6, v9                         // 00000000B1E0: 4A0A1306
  v_ashrrev_i32  v4, 31, v3                             // 00000000B1E4: 3008069F
  v_ashrrev_i32  v17, 31, v16                           // 00000000B1E8: 3022209F
  v_ashrrev_i32  v14, 31, v13                           // 00000000B1EC: 301C1A9F
  v_ashrrev_i32  v9, 31, v8                             // 00000000B1F0: 3012109F
  v_ashrrev_i32  v6, 31, v5                             // 00000000B1F4: 300C0A9F
  v_add_i32     v48, vcc, 32, v7                        // 00000000B1F8: 4A600EA0
  s_add_u32     s3, s3, s2                              // 00000000B1FC: 80030203
  v_cmp_lt_i32  s[10:11], v48, s3                       // 00000000B200: D102000A 00000730
  v_cmp_lt_i32  s[12:13], v11, s4                       // 00000000B208: D102000C 0000090B
  v_lshl_b64    v[16:17], v[16:17], 2                   // 00000000B210: D2C20010 00010510
  v_lshl_b64    v[3:4], v[3:4], 2                       // 00000000B218: D2C20003 00010503
  v_lshl_b64    v[8:9], v[8:9], 2                       // 00000000B220: D2C20008 00010508
  v_lshl_b64    v[13:14], v[13:14], 2                   // 00000000B228: D2C2000D 0001050D
  v_lshl_b64    v[5:6], v[5:6], 2                       // 00000000B230: D2C20005 00010505
  s_waitcnt     lgkmcnt(0)                              // 00000000B238: BF8C007F
  v_add_i32     v3, vcc, s8, v3                         // 00000000B23C: 4A060608
  v_mov_b32     v10, s9                                 // 00000000B240: 7E140209
  v_addc_u32    v4, vcc, v10, v4, vcc                   // 00000000B244: 5008090A
  v_add_i32     v15, vcc, s8, v16                       // 00000000B248: 4A1E2008
  v_addc_u32    v16, vcc, v10, v17, vcc                 // 00000000B24C: 5020230A
  v_add_i32     v8, vcc, s8, v8                         // 00000000B250: 4A101008
  v_addc_u32    v9, vcc, v10, v9, vcc                   // 00000000B254: 5012130A
  v_add_i32     v5, vcc, s8, v5                         // 00000000B258: 4A0A0A08
  v_addc_u32    v6, vcc, v10, v6, vcc                   // 00000000B25C: 500C0D0A
  v_add_i32     v13, vcc, s8, v13                       // 00000000B260: 4A1A1A08
  v_addc_u32    v14, vcc, v10, v14, vcc                 // 00000000B264: 501C1D0A
  s_and_b64     s[10:11], s[12:13], s[10:11]            // 00000000B268: 878A0A0C
  flat_load_dword  v8, v[8:9]                           // 00000000B26C: DC300000 08000008
  flat_load_dword  v9, v[15:16]                         // 00000000B274: DC300000 0900000F
  flat_load_dword  v3, v[3:4]                           // 00000000B27C: DC300000 03000003
  flat_load_dword  v4, v[5:6]                           // 00000000B284: DC300000 04000005
  flat_load_dword  v5, v[13:14]                         // 00000000B28C: DC300000 0500000D
  v_add_i32     v0, vcc, s0, v0                         // 00000000B294: 4A000000
  v_add_i32     v1, vcc, s0, v1                         // 00000000B298: 4A020200
  s_and_saveexec_b64  s[10:11], s[10:11]                // 00000000B29C: BE8A240A
  v_mul_lo_u32  v6, v48, s4                             // 00000000B2A0: D2D20006 00000930
  s_cbranch_execz  label_2CB4                           // 00000000B2A8: BF880009
  v_add_i32     v6, vcc, v6, v11                        // 00000000B2AC: 4A0C1706
  v_ashrrev_i32  v7, 31, v6                             // 00000000B2B0: 300E0C9F
  v_lshl_b64    v[6:7], v[6:7], 2                       // 00000000B2B4: D2C20006 00010506
  v_add_i32     v6, vcc, s8, v6                         // 00000000B2BC: 4A0C0C08
  v_mov_b32     v10, s9                                 // 00000000B2C0: 7E140209
  v_addc_u32    v7, vcc, v10, v7, vcc                   // 00000000B2C4: 500E0F0A
  flat_load_dword  v48, v[6:7]                          // 00000000B2C8: DC300000 30000006
  label_2CB4:
  s_mov_b64     exec, s[10:11]                          // 00000000B2D0: BEFE040A
  s_add_u32     s1, s1, s0                              // 00000000B2D4: 80010001
  s_add_u32     s0, s2, s0                              // 00000000B2D8: 80000002
  v_cmp_lt_i32  s[2:3], v1, s0                          // 00000000B2DC: D1020002 00000101
  v_cmp_lt_i32  s[8:9], v0, s1                          // 00000000B2E4: D1020008 00000300
  v_lshlrev_b32  v7, 1, v12                             // 00000000B2EC: 340E1881
  v_add_i32     v7, vcc, v7, v2                         // 00000000B2F0: 4A0E0507
  v_and_b32     v10, 63, v7                             // 00000000B2F4: 36140EBF
  s_and_b64     s[2:3], s[8:9], s[2:3]                  // 00000000B2F8: 87820208
  v_lshl_b64    v[11:12], 1, v10                        // 00000000B2FC: D2C2000B 00021481
  v_and_b32     v11, exec_lo, v11                       // 00000000B304: 3616167E
  v_and_b32     v12, exec_hi, v12                       // 00000000B308: 3618187F
  v_cmp_ne_u64  s[10:11], 0, v[11:12]                   // 00000000B30C: D1CA000A 00021680
  s_mov_b64     s[12:13], exec                          // 00000000B314: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B318: BE8E047E
  s_nop         0x0000                                  // 00000000B31C: BF800000
  label_2CC8:
  v_readfirstlane_b32  s1, v10                          // 00000000B320: 7E02050A
  v_cmp_eq_u32  vcc, s1, v10                            // 00000000B324: 7D841401
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B328: BE90246A
  s_cbranch_execz  label_2CD1                           // 00000000B32C: BF880005
  s_waitcnt     vmcnt(4) & lgkmcnt(4)                   // 00000000B330: BF8C0474
  v_readlane_b32  s1, v8, s1                            // 00000000B334: 02020308
  v_mov_b32     v11, s1                                 // 00000000B338: 7E160201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B33C: 8A8E7E0E
  s_cbranch_scc0  label_2CD3                            // 00000000B340: BF840002
  label_2CD1:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B344: 87FE0E10
  s_branch      label_2CC8                              // 00000000B348: BF82FFF5
  label_2CD3:
  s_mov_b64     exec, s[12:13]                          // 00000000B34C: BEFE040C
  v_cndmask_b32  v11, 0, v11, s[10:11]                  // 00000000B350: D200000B 002A1680
  v_lshl_b64    v[12:13], 1, v10                        // 00000000B358: D2C2000C 00021481
  v_and_b32     v12, exec_lo, v12                       // 00000000B360: 3618187E
  v_and_b32     v13, exec_hi, v13                       // 00000000B364: 361A1A7F
  v_cmp_ne_u64  s[10:11], 0, v[12:13]                   // 00000000B368: D1CA000A 00021880
  s_mov_b64     s[12:13], exec                          // 00000000B370: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B374: BE8E047E
  s_nop         0x0000                                  // 00000000B378: BF800000
  s_nop         0x0000                                  // 00000000B37C: BF800000
  label_2CE0:
  v_readfirstlane_b32  s1, v10                          // 00000000B380: 7E02050A
  v_cmp_eq_u32  vcc, s1, v10                            // 00000000B384: 7D841401
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B388: BE90246A
  s_cbranch_execz  label_2CE9                           // 00000000B38C: BF880005
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000B390: BF8C0070
  v_readlane_b32  s1, v5, s1                            // 00000000B394: 02020305
  v_mov_b32     v10, s1                                 // 00000000B398: 7E140201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B39C: 8A8E7E0E
  s_cbranch_scc0  label_2CEB                            // 00000000B3A0: BF840002
  label_2CE9:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B3A4: 87FE0E10
  s_branch      label_2CE0                              // 00000000B3A8: BF82FFF5
  label_2CEB:
  s_mov_b64     exec, s[12:13]                          // 00000000B3AC: BEFE040C
  v_cndmask_b32  v10, 0, v10, s[10:11]                  // 00000000B3B0: D200000A 002A1480
  v_add_i32     v12, vcc, 1, v7                         // 00000000B3B8: 4A180E81
  v_and_b32     v12, 63, v12                            // 00000000B3BC: 361818BF
  v_add_i32     v13, vcc, 12, v7                        // 00000000B3C0: 4A1A0E8C
  v_add_i32     v14, vcc, 10, v7                        // 00000000B3C4: 4A1C0E8A
  v_lshl_b64    v[15:16], 1, v12                        // 00000000B3C8: D2C2000F 00021881
  v_and_b32     v15, exec_lo, v15                       // 00000000B3D0: 361E1E7E
  v_and_b32     v16, exec_hi, v16                       // 00000000B3D4: 3620207F
  v_cmp_ne_u64  s[10:11], 0, v[15:16]                   // 00000000B3D8: D1CA000A 00021E80
  s_mov_b64     s[12:13], exec                          // 00000000B3E0: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B3E4: BE8E047E
  s_nop         0x0000                                  // 00000000B3E8: BF800000
  s_nop         0x0000                                  // 00000000B3EC: BF800000
  s_nop         0x0000                                  // 00000000B3F0: BF800000
  s_nop         0x0000                                  // 00000000B3F4: BF800000
  s_nop         0x0000                                  // 00000000B3F8: BF800000
  s_nop         0x0000                                  // 00000000B3FC: BF800000
  label_2D00:
  v_readfirstlane_b32  s1, v12                          // 00000000B400: 7E02050C
  v_cmp_eq_u32  vcc, s1, v12                            // 00000000B404: 7D841801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B408: BE90246A
  s_cbranch_execz  label_2D08                           // 00000000B40C: BF880004
  v_readlane_b32  s1, v8, s1                            // 00000000B410: 02020308
  v_mov_b32     v15, s1                                 // 00000000B414: 7E1E0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B418: 8A8E7E0E
  s_cbranch_scc0  label_2D0A                            // 00000000B41C: BF840002
  label_2D08:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B420: 87FE0E10
  s_branch      label_2D00                              // 00000000B424: BF82FFF6
  label_2D0A:
  s_mov_b64     exec, s[12:13]                          // 00000000B428: BEFE040C
  v_cndmask_b32  v15, 0, v15, s[10:11]                  // 00000000B42C: D200000F 002A1E80
  v_add_i32     v16, vcc, 22, v7                        // 00000000B434: 4A200E96
  v_add_i32     v17, vcc, 21, v7                        // 00000000B438: 4A220E95
  v_add_i32     v18, vcc, 20, v7                        // 00000000B43C: 4A240E94
  v_add_i32     v19, vcc, 11, v7                        // 00000000B440: 4A260E8B
  v_add_i32     v20, vcc, 2, v7                         // 00000000B444: 4A280E82
  v_and_b32     v20, 63, v20                            // 00000000B448: 362828BF
  v_and_b32     v14, 63, v14                            // 00000000B44C: 361C1CBF
  v_and_b32     v19, 63, v19                            // 00000000B450: 362626BF
  v_and_b32     v13, 63, v13                            // 00000000B454: 361A1ABF
  v_and_b32     v18, 63, v18                            // 00000000B458: 362424BF
  v_and_b32     v17, 63, v17                            // 00000000B45C: 362222BF
  v_and_b32     v16, 63, v16                            // 00000000B460: 362020BF
  s_xor_b64     s[2:3], s[2:3], -1                      // 00000000B464: 8982C102
  v_lshl_b64    v[21:22], 1, v12                        // 00000000B468: D2C20015 00021881
  v_and_b32     v21, exec_lo, v21                       // 00000000B470: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 00000000B474: 362C2C7F
  v_cmp_ne_u64  s[10:11], 0, v[21:22]                   // 00000000B478: D1CA000A 00022A80
  s_mov_b64     s[12:13], exec                          // 00000000B480: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B484: BE8E047E
  s_nop         0x0000                                  // 00000000B488: BF800000
  s_nop         0x0000                                  // 00000000B48C: BF800000
  s_nop         0x0000                                  // 00000000B490: BF800000
  s_nop         0x0000                                  // 00000000B494: BF800000
  s_nop         0x0000                                  // 00000000B498: BF800000
  s_nop         0x0000                                  // 00000000B49C: BF800000
  label_2D28:
  v_readfirstlane_b32  s1, v12                          // 00000000B4A0: 7E02050C
  v_cmp_eq_u32  vcc, s1, v12                            // 00000000B4A4: 7D841801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B4A8: BE90246A
  s_cbranch_execz  label_2D30                           // 00000000B4AC: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000B4B0: 02020305
  v_mov_b32     v12, s1                                 // 00000000B4B4: 7E180201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B4B8: 8A8E7E0E
  s_cbranch_scc0  label_2D32                            // 00000000B4BC: BF840002
  label_2D30:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B4C0: 87FE0E10
  s_branch      label_2D28                              // 00000000B4C4: BF82FFF6
  label_2D32:
  s_mov_b64     exec, s[12:13]                          // 00000000B4C8: BEFE040C
  v_cndmask_b32  v12, 0, v12, s[10:11]                  // 00000000B4CC: D200000C 002A1880
  v_lshl_b64    v[21:22], 1, v20                        // 00000000B4D4: D2C20015 00022881
  v_and_b32     v21, exec_lo, v21                       // 00000000B4DC: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 00000000B4E0: 362C2C7F
  v_cmp_ne_u64  s[10:11], 0, v[21:22]                   // 00000000B4E4: D1CA000A 00022A80
  s_mov_b64     s[12:13], exec                          // 00000000B4EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B4F0: BE8E047E
  s_nop         0x0000                                  // 00000000B4F4: BF800000
  s_nop         0x0000                                  // 00000000B4F8: BF800000
  s_nop         0x0000                                  // 00000000B4FC: BF800000
  label_2D40:
  v_readfirstlane_b32  s1, v20                          // 00000000B500: 7E020514
  v_cmp_eq_u32  vcc, s1, v20                            // 00000000B504: 7D842801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B508: BE90246A
  s_cbranch_execz  label_2D48                           // 00000000B50C: BF880004
  v_readlane_b32  s1, v8, s1                            // 00000000B510: 02020308
  v_mov_b32     v21, s1                                 // 00000000B514: 7E2A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B518: 8A8E7E0E
  s_cbranch_scc0  label_2D4A                            // 00000000B51C: BF840002
  label_2D48:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B520: 87FE0E10
  s_branch      label_2D40                              // 00000000B524: BF82FFF6
  label_2D4A:
  s_mov_b64     exec, s[12:13]                          // 00000000B528: BEFE040C
  v_cndmask_b32  v21, 0, v21, s[10:11]                  // 00000000B52C: D2000015 002A2A80
  v_lshl_b64    v[22:23], 1, v20                        // 00000000B534: D2C20016 00022881
  v_and_b32     v22, exec_lo, v22                       // 00000000B53C: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000B540: 362E2E7F
  v_cmp_ne_u64  s[10:11], 0, v[22:23]                   // 00000000B544: D1CA000A 00022C80
  s_mov_b64     s[12:13], exec                          // 00000000B54C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B550: BE8E047E
  s_nop         0x0000                                  // 00000000B554: BF800000
  s_nop         0x0000                                  // 00000000B558: BF800000
  s_nop         0x0000                                  // 00000000B55C: BF800000
  label_2D58:
  v_readfirstlane_b32  s1, v20                          // 00000000B560: 7E020514
  v_cmp_eq_u32  vcc, s1, v20                            // 00000000B564: 7D842801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B568: BE90246A
  s_cbranch_execz  label_2D60                           // 00000000B56C: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000B570: 02020305
  v_mov_b32     v20, s1                                 // 00000000B574: 7E280201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B578: 8A8E7E0E
  s_cbranch_scc0  label_2D62                            // 00000000B57C: BF840002
  label_2D60:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B580: 87FE0E10
  s_branch      label_2D58                              // 00000000B584: BF82FFF6
  label_2D62:
  s_mov_b64     exec, s[12:13]                          // 00000000B588: BEFE040C
  v_cndmask_b32  v20, 0, v20, s[10:11]                  // 00000000B58C: D2000014 002A2880
  v_lshl_b64    v[22:23], 1, v14                        // 00000000B594: D2C20016 00021C81
  v_and_b32     v22, exec_lo, v22                       // 00000000B59C: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000B5A0: 362E2E7F
  v_cmp_ne_u64  s[10:11], 0, v[22:23]                   // 00000000B5A4: D1CA000A 00022C80
  s_mov_b64     s[12:13], exec                          // 00000000B5AC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B5B0: BE8E047E
  s_nop         0x0000                                  // 00000000B5B4: BF800000
  s_nop         0x0000                                  // 00000000B5B8: BF800000
  s_nop         0x0000                                  // 00000000B5BC: BF800000
  label_2D70:
  v_readfirstlane_b32  s1, v14                          // 00000000B5C0: 7E02050E
  v_cmp_eq_u32  vcc, s1, v14                            // 00000000B5C4: 7D841C01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B5C8: BE90246A
  s_cbranch_execz  label_2D78                           // 00000000B5CC: BF880004
  v_readlane_b32  s1, v8, s1                            // 00000000B5D0: 02020308
  v_mov_b32     v22, s1                                 // 00000000B5D4: 7E2C0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B5D8: 8A8E7E0E
  s_cbranch_scc0  label_2D7A                            // 00000000B5DC: BF840002
  label_2D78:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B5E0: 87FE0E10
  s_branch      label_2D70                              // 00000000B5E4: BF82FFF6
  label_2D7A:
  s_mov_b64     exec, s[12:13]                          // 00000000B5E8: BEFE040C
  v_cndmask_b32  v22, 0, v22, s[10:11]                  // 00000000B5EC: D2000016 002A2C80
  v_lshl_b64    v[23:24], 1, v14                        // 00000000B5F4: D2C20017 00021C81
  v_and_b32     v23, exec_lo, v23                       // 00000000B5FC: 362E2E7E
  v_and_b32     v24, exec_hi, v24                       // 00000000B600: 3630307F
  v_cmp_ne_u64  s[10:11], 0, v[23:24]                   // 00000000B604: D1CA000A 00022E80
  s_mov_b64     s[12:13], exec                          // 00000000B60C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B610: BE8E047E
  s_nop         0x0000                                  // 00000000B614: BF800000
  s_nop         0x0000                                  // 00000000B618: BF800000
  s_nop         0x0000                                  // 00000000B61C: BF800000
  label_2D88:
  v_readfirstlane_b32  s1, v14                          // 00000000B620: 7E02050E
  v_cmp_eq_u32  vcc, s1, v14                            // 00000000B624: 7D841C01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B628: BE90246A
  s_cbranch_execz  label_2D90                           // 00000000B62C: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000B630: 02020305
  v_mov_b32     v14, s1                                 // 00000000B634: 7E1C0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B638: 8A8E7E0E
  s_cbranch_scc0  label_2D92                            // 00000000B63C: BF840002
  label_2D90:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B640: 87FE0E10
  s_branch      label_2D88                              // 00000000B644: BF82FFF6
  label_2D92:
  s_mov_b64     exec, s[12:13]                          // 00000000B648: BEFE040C
  v_cndmask_b32  v14, 0, v14, s[10:11]                  // 00000000B64C: D200000E 002A1C80
  v_lshl_b64    v[23:24], 1, v19                        // 00000000B654: D2C20017 00022681
  v_and_b32     v23, exec_lo, v23                       // 00000000B65C: 362E2E7E
  v_and_b32     v24, exec_hi, v24                       // 00000000B660: 3630307F
  v_cmp_ne_u64  s[10:11], 0, v[23:24]                   // 00000000B664: D1CA000A 00022E80
  s_mov_b64     s[12:13], exec                          // 00000000B66C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B670: BE8E047E
  s_nop         0x0000                                  // 00000000B674: BF800000
  s_nop         0x0000                                  // 00000000B678: BF800000
  s_nop         0x0000                                  // 00000000B67C: BF800000
  label_2DA0:
  v_readfirstlane_b32  s1, v19                          // 00000000B680: 7E020513
  v_cmp_eq_u32  vcc, s1, v19                            // 00000000B684: 7D842601
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B688: BE90246A
  s_cbranch_execz  label_2DA8                           // 00000000B68C: BF880004
  v_readlane_b32  s1, v8, s1                            // 00000000B690: 02020308
  v_mov_b32     v23, s1                                 // 00000000B694: 7E2E0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B698: 8A8E7E0E
  s_cbranch_scc0  label_2DAA                            // 00000000B69C: BF840002
  label_2DA8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B6A0: 87FE0E10
  s_branch      label_2DA0                              // 00000000B6A4: BF82FFF6
  label_2DAA:
  s_mov_b64     exec, s[12:13]                          // 00000000B6A8: BEFE040C
  v_cndmask_b32  v23, 0, v23, s[10:11]                  // 00000000B6AC: D2000017 002A2E80
  v_lshl_b64    v[24:25], 1, v19                        // 00000000B6B4: D2C20018 00022681
  v_and_b32     v24, exec_lo, v24                       // 00000000B6BC: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 00000000B6C0: 3632327F
  v_cmp_ne_u64  s[10:11], 0, v[24:25]                   // 00000000B6C4: D1CA000A 00023080
  s_mov_b64     s[12:13], exec                          // 00000000B6CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B6D0: BE8E047E
  s_nop         0x0000                                  // 00000000B6D4: BF800000
  s_nop         0x0000                                  // 00000000B6D8: BF800000
  s_nop         0x0000                                  // 00000000B6DC: BF800000
  label_2DB8:
  v_readfirstlane_b32  s1, v19                          // 00000000B6E0: 7E020513
  v_cmp_eq_u32  vcc, s1, v19                            // 00000000B6E4: 7D842601
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B6E8: BE90246A
  s_cbranch_execz  label_2DC0                           // 00000000B6EC: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000B6F0: 02020305
  v_mov_b32     v19, s1                                 // 00000000B6F4: 7E260201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B6F8: 8A8E7E0E
  s_cbranch_scc0  label_2DC2                            // 00000000B6FC: BF840002
  label_2DC0:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B700: 87FE0E10
  s_branch      label_2DB8                              // 00000000B704: BF82FFF6
  label_2DC2:
  s_mov_b64     exec, s[12:13]                          // 00000000B708: BEFE040C
  v_cndmask_b32  v19, 0, v19, s[10:11]                  // 00000000B70C: D2000013 002A2680
  v_lshl_b64    v[24:25], 1, v13                        // 00000000B714: D2C20018 00021A81
  v_and_b32     v24, exec_lo, v24                       // 00000000B71C: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 00000000B720: 3632327F
  v_cmp_ne_u64  s[10:11], 0, v[24:25]                   // 00000000B724: D1CA000A 00023080
  s_mov_b64     s[12:13], exec                          // 00000000B72C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B730: BE8E047E
  s_nop         0x0000                                  // 00000000B734: BF800000
  s_nop         0x0000                                  // 00000000B738: BF800000
  s_nop         0x0000                                  // 00000000B73C: BF800000
  label_2DD0:
  v_readfirstlane_b32  s1, v13                          // 00000000B740: 7E02050D
  v_cmp_eq_u32  vcc, s1, v13                            // 00000000B744: 7D841A01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B748: BE90246A
  s_cbranch_execz  label_2DD8                           // 00000000B74C: BF880004
  v_readlane_b32  s1, v8, s1                            // 00000000B750: 02020308
  v_mov_b32     v24, s1                                 // 00000000B754: 7E300201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B758: 8A8E7E0E
  s_cbranch_scc0  label_2DDA                            // 00000000B75C: BF840002
  label_2DD8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B760: 87FE0E10
  s_branch      label_2DD0                              // 00000000B764: BF82FFF6
  label_2DDA:
  s_mov_b64     exec, s[12:13]                          // 00000000B768: BEFE040C
  v_cndmask_b32  v24, 0, v24, s[10:11]                  // 00000000B76C: D2000018 002A3080
  v_lshl_b64    v[25:26], 1, v13                        // 00000000B774: D2C20019 00021A81
  v_and_b32     v25, exec_lo, v25                       // 00000000B77C: 3632327E
  v_and_b32     v26, exec_hi, v26                       // 00000000B780: 3634347F
  v_cmp_ne_u64  s[10:11], 0, v[25:26]                   // 00000000B784: D1CA000A 00023280
  s_mov_b64     s[12:13], exec                          // 00000000B78C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B790: BE8E047E
  s_nop         0x0000                                  // 00000000B794: BF800000
  s_nop         0x0000                                  // 00000000B798: BF800000
  s_nop         0x0000                                  // 00000000B79C: BF800000
  label_2DE8:
  v_readfirstlane_b32  s1, v13                          // 00000000B7A0: 7E02050D
  v_cmp_eq_u32  vcc, s1, v13                            // 00000000B7A4: 7D841A01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B7A8: BE90246A
  s_cbranch_execz  label_2DF0                           // 00000000B7AC: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000B7B0: 02020305
  v_mov_b32     v13, s1                                 // 00000000B7B4: 7E1A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B7B8: 8A8E7E0E
  s_cbranch_scc0  label_2DF2                            // 00000000B7BC: BF840002
  label_2DF0:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B7C0: 87FE0E10
  s_branch      label_2DE8                              // 00000000B7C4: BF82FFF6
  label_2DF2:
  s_mov_b64     exec, s[12:13]                          // 00000000B7C8: BEFE040C
  v_cndmask_b32  v13, 0, v13, s[10:11]                  // 00000000B7CC: D200000D 002A1A80
  v_lshl_b64    v[25:26], 1, v18                        // 00000000B7D4: D2C20019 00022481
  v_and_b32     v25, exec_lo, v25                       // 00000000B7DC: 3632327E
  v_and_b32     v26, exec_hi, v26                       // 00000000B7E0: 3634347F
  v_cmp_ne_u64  s[10:11], 0, v[25:26]                   // 00000000B7E4: D1CA000A 00023280
  s_mov_b64     s[12:13], exec                          // 00000000B7EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B7F0: BE8E047E
  s_nop         0x0000                                  // 00000000B7F4: BF800000
  s_nop         0x0000                                  // 00000000B7F8: BF800000
  s_nop         0x0000                                  // 00000000B7FC: BF800000
  label_2E00:
  v_readfirstlane_b32  s1, v18                          // 00000000B800: 7E020512
  v_cmp_eq_u32  vcc, s1, v18                            // 00000000B804: 7D842401
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B808: BE90246A
  s_cbranch_execz  label_2E08                           // 00000000B80C: BF880004
  v_readlane_b32  s1, v8, s1                            // 00000000B810: 02020308
  v_mov_b32     v25, s1                                 // 00000000B814: 7E320201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B818: 8A8E7E0E
  s_cbranch_scc0  label_2E0A                            // 00000000B81C: BF840002
  label_2E08:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B820: 87FE0E10
  s_branch      label_2E00                              // 00000000B824: BF82FFF6
  label_2E0A:
  s_mov_b64     exec, s[12:13]                          // 00000000B828: BEFE040C
  v_cndmask_b32  v25, 0, v25, s[10:11]                  // 00000000B82C: D2000019 002A3280
  v_lshl_b64    v[26:27], 1, v18                        // 00000000B834: D2C2001A 00022481
  v_and_b32     v26, exec_lo, v26                       // 00000000B83C: 3634347E
  v_and_b32     v27, exec_hi, v27                       // 00000000B840: 3636367F
  v_cmp_ne_u64  s[10:11], 0, v[26:27]                   // 00000000B844: D1CA000A 00023480
  s_mov_b64     s[12:13], exec                          // 00000000B84C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B850: BE8E047E
  s_nop         0x0000                                  // 00000000B854: BF800000
  s_nop         0x0000                                  // 00000000B858: BF800000
  s_nop         0x0000                                  // 00000000B85C: BF800000
  label_2E18:
  v_readfirstlane_b32  s1, v18                          // 00000000B860: 7E020512
  v_cmp_eq_u32  vcc, s1, v18                            // 00000000B864: 7D842401
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B868: BE90246A
  s_cbranch_execz  label_2E20                           // 00000000B86C: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000B870: 02020305
  v_mov_b32     v18, s1                                 // 00000000B874: 7E240201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B878: 8A8E7E0E
  s_cbranch_scc0  label_2E22                            // 00000000B87C: BF840002
  label_2E20:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B880: 87FE0E10
  s_branch      label_2E18                              // 00000000B884: BF82FFF6
  label_2E22:
  s_mov_b64     exec, s[12:13]                          // 00000000B888: BEFE040C
  v_cndmask_b32  v18, 0, v18, s[10:11]                  // 00000000B88C: D2000012 002A2480
  v_lshl_b64    v[26:27], 1, v17                        // 00000000B894: D2C2001A 00022281
  v_and_b32     v26, exec_lo, v26                       // 00000000B89C: 3634347E
  v_and_b32     v27, exec_hi, v27                       // 00000000B8A0: 3636367F
  v_cmp_ne_u64  s[10:11], 0, v[26:27]                   // 00000000B8A4: D1CA000A 00023480
  s_mov_b64     s[12:13], exec                          // 00000000B8AC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B8B0: BE8E047E
  s_nop         0x0000                                  // 00000000B8B4: BF800000
  s_nop         0x0000                                  // 00000000B8B8: BF800000
  s_nop         0x0000                                  // 00000000B8BC: BF800000
  label_2E30:
  v_readfirstlane_b32  s1, v17                          // 00000000B8C0: 7E020511
  v_cmp_eq_u32  vcc, s1, v17                            // 00000000B8C4: 7D842201
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B8C8: BE90246A
  s_cbranch_execz  label_2E38                           // 00000000B8CC: BF880004
  v_readlane_b32  s1, v8, s1                            // 00000000B8D0: 02020308
  v_mov_b32     v26, s1                                 // 00000000B8D4: 7E340201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B8D8: 8A8E7E0E
  s_cbranch_scc0  label_2E3A                            // 00000000B8DC: BF840002
  label_2E38:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B8E0: 87FE0E10
  s_branch      label_2E30                              // 00000000B8E4: BF82FFF6
  label_2E3A:
  s_mov_b64     exec, s[12:13]                          // 00000000B8E8: BEFE040C
  v_cndmask_b32  v26, 0, v26, s[10:11]                  // 00000000B8EC: D200001A 002A3480
  v_lshl_b64    v[27:28], 1, v17                        // 00000000B8F4: D2C2001B 00022281
  v_and_b32     v27, exec_lo, v27                       // 00000000B8FC: 3636367E
  v_and_b32     v28, exec_hi, v28                       // 00000000B900: 3638387F
  v_cmp_ne_u64  s[10:11], 0, v[27:28]                   // 00000000B904: D1CA000A 00023680
  s_mov_b64     s[12:13], exec                          // 00000000B90C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B910: BE8E047E
  s_nop         0x0000                                  // 00000000B914: BF800000
  s_nop         0x0000                                  // 00000000B918: BF800000
  s_nop         0x0000                                  // 00000000B91C: BF800000
  label_2E48:
  v_readfirstlane_b32  s1, v17                          // 00000000B920: 7E020511
  v_cmp_eq_u32  vcc, s1, v17                            // 00000000B924: 7D842201
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B928: BE90246A
  s_cbranch_execz  label_2E50                           // 00000000B92C: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000B930: 02020305
  v_mov_b32     v17, s1                                 // 00000000B934: 7E220201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B938: 8A8E7E0E
  s_cbranch_scc0  label_2E52                            // 00000000B93C: BF840002
  label_2E50:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B940: 87FE0E10
  s_branch      label_2E48                              // 00000000B944: BF82FFF6
  label_2E52:
  s_mov_b64     exec, s[12:13]                          // 00000000B948: BEFE040C
  v_cndmask_b32  v17, 0, v17, s[10:11]                  // 00000000B94C: D2000011 002A2280
  v_lshl_b64    v[27:28], 1, v16                        // 00000000B954: D2C2001B 00022081
  v_and_b32     v27, exec_lo, v27                       // 00000000B95C: 3636367E
  v_and_b32     v28, exec_hi, v28                       // 00000000B960: 3638387F
  v_cmp_ne_u64  s[10:11], 0, v[27:28]                   // 00000000B964: D1CA000A 00023680
  s_mov_b64     s[12:13], exec                          // 00000000B96C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B970: BE8E047E
  s_nop         0x0000                                  // 00000000B974: BF800000
  s_nop         0x0000                                  // 00000000B978: BF800000
  s_nop         0x0000                                  // 00000000B97C: BF800000
  label_2E60:
  v_readfirstlane_b32  s1, v16                          // 00000000B980: 7E020510
  v_cmp_eq_u32  vcc, s1, v16                            // 00000000B984: 7D842001
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B988: BE90246A
  s_cbranch_execz  label_2E68                           // 00000000B98C: BF880004
  v_readlane_b32  s1, v8, s1                            // 00000000B990: 02020308
  v_mov_b32     v27, s1                                 // 00000000B994: 7E360201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B998: 8A8E7E0E
  s_cbranch_scc0  label_2E6A                            // 00000000B99C: BF840002
  label_2E68:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000B9A0: 87FE0E10
  s_branch      label_2E60                              // 00000000B9A4: BF82FFF6
  label_2E6A:
  s_mov_b64     exec, s[12:13]                          // 00000000B9A8: BEFE040C
  v_cndmask_b32  v8, 0, v27, s[10:11]                   // 00000000B9AC: D2000008 002A3680
  v_lshl_b64    v[27:28], 1, v16                        // 00000000B9B4: D2C2001B 00022081
  v_and_b32     v27, exec_lo, v27                       // 00000000B9BC: 3636367E
  v_and_b32     v28, exec_hi, v28                       // 00000000B9C0: 3638387F
  v_cmp_ne_u64  s[10:11], 0, v[27:28]                   // 00000000B9C4: D1CA000A 00023680
  s_mov_b64     s[12:13], exec                          // 00000000B9CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000B9D0: BE8E047E
  s_nop         0x0000                                  // 00000000B9D4: BF800000
  s_nop         0x0000                                  // 00000000B9D8: BF800000
  s_nop         0x0000                                  // 00000000B9DC: BF800000
  label_2E78:
  v_readfirstlane_b32  s1, v16                          // 00000000B9E0: 7E020510
  v_cmp_eq_u32  vcc, s1, v16                            // 00000000B9E4: 7D842001
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000B9E8: BE90246A
  s_cbranch_execz  label_2E80                           // 00000000B9EC: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000B9F0: 02020305
  v_mov_b32     v16, s1                                 // 00000000B9F4: 7E200201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000B9F8: 8A8E7E0E
  s_cbranch_scc0  label_2E82                            // 00000000B9FC: BF840002
  label_2E80:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000BA00: 87FE0E10
  s_branch      label_2E78                              // 00000000BA04: BF82FFF6
  label_2E82:
  s_mov_b64     exec, s[12:13]                          // 00000000BA08: BEFE040C
  v_cndmask_b32  v16, 0, v16, s[10:11]                  // 00000000BA0C: D2000010 002A2080
  s_load_dwordx2  s[10:11], s[6:7], 0x08                // 00000000BA14: C0450708
  s_load_dwordx2  s[6:7], s[6:7], 0x04                  // 00000000BA18: C0430704
  s_mov_b64     s[12:13], exec                          // 00000000BA1C: BE8C047E
  s_andn2_b64   exec, s[12:13], s[2:3]                  // 00000000BA20: 8AFE020C
  s_waitcnt     lgkmcnt(0)                              // 00000000BA24: BF8C007F
  v_mov_b32     v27, s10                                // 00000000BA28: 7E36020A
  s_cbranch_execz  label_2F08                           // 00000000BA2C: BF88007C
  v_mov_b32     v28, s11                                // 00000000BA30: 7E38020B
  s_add_u32     s2, s10, 4                              // 00000000BA34: 8002840A
  s_addc_u32    s3, s11, 0                              // 00000000BA38: 8203800B
  v_mov_b32     v29, s2                                 // 00000000BA3C: 7E3A0202
  v_mov_b32     v30, s3                                 // 00000000BA40: 7E3C0203
  s_add_u32     s2, s10, 8                              // 00000000BA44: 8002880A
  s_addc_u32    s3, s11, 0                              // 00000000BA48: 8203800B
  v_mov_b32     v31, s2                                 // 00000000BA4C: 7E3E0202
  v_mov_b32     v32, s3                                 // 00000000BA50: 7E400203
  s_add_u32     s2, s10, 12                             // 00000000BA54: 80028C0A
  s_addc_u32    s3, s11, 0                              // 00000000BA58: 8203800B
  flat_load_dword  v27, v[27:28]                        // 00000000BA5C: DC300000 1B00001B
  v_mov_b32     v36, s2                                 // 00000000BA64: 7E480202
  v_mov_b32     v37, s3                                 // 00000000BA68: 7E4A0203
  s_add_u32     s2, s10, 16                             // 00000000BA6C: 8002900A
  s_addc_u32    s3, s11, 0                              // 00000000BA70: 8203800B
  flat_load_dword  v29, v[29:30]                        // 00000000BA74: DC300000 1D00001D
  v_mov_b32     v38, s2                                 // 00000000BA7C: 7E4C0202
  v_mov_b32     v39, s3                                 // 00000000BA80: 7E4E0203
  s_add_u32     s2, s10, 20                             // 00000000BA84: 8002940A
  s_addc_u32    s3, s11, 0                              // 00000000BA88: 8203800B
  flat_load_dword  v31, v[31:32]                        // 00000000BA8C: DC300000 1F00001F
  v_mov_b32     v40, s2                                 // 00000000BA94: 7E500202
  v_mov_b32     v41, s3                                 // 00000000BA98: 7E520203
  s_add_u32     s2, s10, 24                             // 00000000BA9C: 8002980A
  s_addc_u32    s3, s11, 0                              // 00000000BAA0: 8203800B
  flat_load_dword  v28, v[36:37]                        // 00000000BAA4: DC300000 1C000024
  v_mov_b32     v42, s2                                 // 00000000BAAC: 7E540202
  v_mov_b32     v43, s3                                 // 00000000BAB0: 7E560203
  s_add_u32     s2, s10, 28                             // 00000000BAB4: 80029C0A
  s_addc_u32    s3, s11, 0                              // 00000000BAB8: 8203800B
  flat_load_dword  v30, v[38:39]                        // 00000000BABC: DC300000 1E000026
  v_mov_b32     v36, s2                                 // 00000000BAC4: 7E480202
  v_mov_b32     v37, s3                                 // 00000000BAC8: 7E4A0203
  s_add_u32     s2, s10, 32                             // 00000000BACC: 8002A00A
  s_addc_u32    s3, s11, 0                              // 00000000BAD0: 8203800B
  flat_load_dword  v32, v[40:41]                        // 00000000BAD4: DC300000 20000028
  v_mov_b32     v38, s2                                 // 00000000BADC: 7E4C0202
  v_mov_b32     v39, s3                                 // 00000000BAE0: 7E4E0203
  flat_load_dword  v33, v[42:43]                        // 00000000BAE4: DC300000 2100002A
  flat_load_dword  v34, v[36:37]                        // 00000000BAEC: DC300000 22000024
  flat_load_dword  v35, v[38:39]                        // 00000000BAF4: DC300000 23000026
  s_waitcnt     vmcnt(8) & lgkmcnt(8)                   // 00000000BAFC: BF8C0878
  v_mul_f32     v10, v27, v10                           // 00000000BB00: 1014151B
  v_mul_f32     v11, v27, v11                           // 00000000BB04: 1016171B
  v_cmp_gt_i32  vcc, 52, v2                             // 00000000BB08: 7D0804B4
  v_cndmask_b32  v10, v10, v11, vcc                     // 00000000BB0C: 0014170A
  s_waitcnt     vmcnt(7) & lgkmcnt(7)                   // 00000000BB10: BF8C0777
  v_mul_f32     v11, v29, v12                           // 00000000BB14: 1016191D
  v_mul_f32     v12, v29, v15                           // 00000000BB18: 10181F1D
  v_cmp_lt_i32  s[2:3], v2, 51                          // 00000000BB1C: D1020002 00016702
  s_waitcnt     vmcnt(6) & lgkmcnt(6)                   // 00000000BB24: BF8C0676
  v_mul_f32     v15, v31, v20                           // 00000000BB28: 101E291F
  v_mul_f32     v20, v31, v21                           // 00000000BB2C: 10282B1F
  v_cmp_gt_i32  vcc, 50, v2                             // 00000000BB30: 7D0804B2
  v_cndmask_b32  v11, v11, v12, s[2:3]                  // 00000000BB34: D200000B 000A190B
  v_add_f32     v10, 0, v10                             // 00000000BB3C: 06141480
  v_cndmask_b32  v12, v15, v20, vcc                     // 00000000BB40: 0018290F
  s_waitcnt     vmcnt(5) & lgkmcnt(5)                   // 00000000BB44: BF8C0575
  v_mul_f32     v14, v28, v14                           // 00000000BB48: 101C1D1C
  v_mul_f32     v15, v28, v22                           // 00000000BB4C: 101E2D1C
  v_cmp_gt_i32  vcc, 44, v2                             // 00000000BB50: 7D0804AC
  v_add_f32     v10, v10, v11                           // 00000000BB54: 0614170A
  s_waitcnt     vmcnt(4) & lgkmcnt(4)                   // 00000000BB58: BF8C0474
  v_mul_f32     v11, v30, v19                           // 00000000BB5C: 1016271E
  v_mul_f32     v19, v30, v23                           // 00000000BB60: 10262F1E
  v_cmp_lt_i32  s[2:3], v2, 43                          // 00000000BB64: D1020002 00015702
  v_cndmask_b32  v14, v14, v15, vcc                     // 00000000BB6C: 001C1F0E
  v_add_f32     v10, v10, v12                           // 00000000BB70: 0614190A
  s_waitcnt     vmcnt(3) & lgkmcnt(3)                   // 00000000BB74: BF8C0373
  v_mul_f32     v12, v32, v13                           // 00000000BB78: 10181B20
  v_mul_f32     v13, v32, v24                           // 00000000BB7C: 101A3120
  v_cmp_lt_i32  s[14:15], v2, 42                        // 00000000BB80: D102000E 00015502
  v_cndmask_b32  v11, v11, v19, s[2:3]                  // 00000000BB88: D200000B 000A270B
  v_add_f32     v10, v10, v14                           // 00000000BB90: 06141D0A
  v_mul_lo_u32  v14, v1, s4                             // 00000000BB94: D2D2000E 00000901
  s_waitcnt     vmcnt(2) & lgkmcnt(2)                   // 00000000BB9C: BF8C0272
  v_mul_f32     v15, v33, v18                           // 00000000BBA0: 101E2521
  v_mul_f32     v18, v33, v25                           // 00000000BBA4: 10243321
  v_cmp_lt_i32  s[2:3], v2, 36                          // 00000000BBA8: D1020002 00014902
  v_cndmask_b32  v12, v12, v13, s[14:15]                // 00000000BBB0: D200000C 003A1B0C
  v_add_f32     v10, v10, v11                           // 00000000BBB8: 0614170A
  v_add_i32     v11, vcc, v14, v0                       // 00000000BBBC: 4A16010E
  v_cndmask_b32  v13, v15, v18, s[2:3]                  // 00000000BBC0: D200000D 000A250F
  s_waitcnt     vmcnt(1) & lgkmcnt(1)                   // 00000000BBC8: BF8C0171
  v_mul_f32     v14, v34, v17                           // 00000000BBCC: 101C2322
  v_mul_f32     v15, v34, v26                           // 00000000BBD0: 101E3522
  v_cmp_gt_i32  vcc, 35, v2                             // 00000000BBD4: 7D0804A3
  v_add_f32     v10, v10, v12                           // 00000000BBD8: 0614190A
  v_ashrrev_i32  v12, 31, v11                           // 00000000BBDC: 3018169F
  v_cndmask_b32  v14, v14, v15, vcc                     // 00000000BBE0: 001C1F0E
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000BBE4: BF8C0070
  v_mul_f32     v15, v35, v16                           // 00000000BBE8: 101E2123
  v_mul_f32     v8, v35, v8                             // 00000000BBEC: 10101123
  v_cmp_gt_i32  vcc, 34, v2                             // 00000000BBF0: 7D0804A2
  v_add_f32     v10, v10, v13                           // 00000000BBF4: 06141B0A
  v_cndmask_b32  v8, v15, v8, vcc                       // 00000000BBF8: 0010110F
  v_lshl_b64    v[11:12], v[11:12], 2                   // 00000000BBFC: D2C2000B 0001050B
  v_add_f32     v10, v10, v14                           // 00000000BC04: 06141D0A
  v_add_i32     v11, vcc, s6, v11                       // 00000000BC08: 4A161606
  v_mov_b32     v13, s7                                 // 00000000BC0C: 7E1A0207
  v_addc_u32    v12, vcc, v13, v12, vcc                 // 00000000BC10: 5018190D
  v_add_f32     v8, v10, v8                             // 00000000BC14: 0610110A
  flat_store_dword  v[11:12], v8                        // 00000000BC18: DC700000 0000080B
  label_2F08:
  s_mov_b64     exec, s[12:13]                          // 00000000BC20: BEFE040C
  v_add_i32     v8, vcc, 8, v1                          // 00000000BC24: 4A100288
  v_cmp_lt_i32  s[2:3], v8, s0                          // 00000000BC28: D1020002 00000108
  v_add_i32     v10, vcc, 16, v7                        // 00000000BC30: 4A140E90
  v_and_b32     v10, 63, v10                            // 00000000BC34: 361414BF
  s_and_b64     s[2:3], s[8:9], s[2:3]                  // 00000000BC38: 87820208
  v_cmp_lt_i32  s[12:13], v2, 24                        // 00000000BC3C: D102000C 00013102
  v_lshl_b64    v[11:12], 1, v10                        // 00000000BC44: D2C2000B 00021481
  v_and_b32     v11, exec_lo, v11                       // 00000000BC4C: 3616167E
  v_and_b32     v12, exec_hi, v12                       // 00000000BC50: 3618187F
  v_cmp_ne_u64  s[14:15], 0, v[11:12]                   // 00000000BC54: D1CA000E 00021680
  s_mov_b64     s[16:17], exec                          // 00000000BC5C: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000BC60: BE92047E
  s_nop         0x0000                                  // 00000000BC64: BF800000
  s_nop         0x0000                                  // 00000000BC68: BF800000
  s_nop         0x0000                                  // 00000000BC6C: BF800000
  s_nop         0x0000                                  // 00000000BC70: BF800000
  s_nop         0x0000                                  // 00000000BC74: BF800000
  s_nop         0x0000                                  // 00000000BC78: BF800000
  s_nop         0x0000                                  // 00000000BC7C: BF800000
  label_2F20:
  v_readfirstlane_b32  s1, v10                          // 00000000BC80: 7E02050A
  v_cmp_eq_u32  vcc, s1, v10                            // 00000000BC84: 7D841401
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000BC88: BE94246A
  s_cbranch_execz  label_2F28                           // 00000000BC8C: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000BC90: 02020305
  v_mov_b32     v11, s1                                 // 00000000BC94: 7E160201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000BC98: 8A927E12
  s_cbranch_scc0  label_2F2A                            // 00000000BC9C: BF840002
  label_2F28:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000BCA0: 87FE1214
  s_branch      label_2F20                              // 00000000BCA4: BF82FFF6
  label_2F2A:
  s_mov_b64     exec, s[16:17]                          // 00000000BCA8: BEFE0410
  v_cndmask_b32  v11, 0, v11, s[14:15]                  // 00000000BCAC: D200000B 003A1680
  v_lshl_b64    v[12:13], 1, v10                        // 00000000BCB4: D2C2000C 00021481
  v_and_b32     v12, exec_lo, v12                       // 00000000BCBC: 3618187E
  v_and_b32     v13, exec_hi, v13                       // 00000000BCC0: 361A1A7F
  v_cmp_ne_u64  s[14:15], 0, v[12:13]                   // 00000000BCC4: D1CA000E 00021880
  s_mov_b64     s[16:17], exec                          // 00000000BCCC: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000BCD0: BE92047E
  s_nop         0x0000                                  // 00000000BCD4: BF800000
  s_nop         0x0000                                  // 00000000BCD8: BF800000
  s_nop         0x0000                                  // 00000000BCDC: BF800000
  label_2F38:
  v_readfirstlane_b32  s1, v10                          // 00000000BCE0: 7E02050A
  v_cmp_eq_u32  vcc, s1, v10                            // 00000000BCE4: 7D841401
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000BCE8: BE94246A
  s_cbranch_execz  label_2F40                           // 00000000BCEC: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000BCF0: 02020304
  v_mov_b32     v10, s1                                 // 00000000BCF4: 7E140201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000BCF8: 8A927E12
  s_cbranch_scc0  label_2F42                            // 00000000BCFC: BF840002
  label_2F40:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000BD00: 87FE1214
  s_branch      label_2F38                              // 00000000BD04: BF82FFF6
  label_2F42:
  s_mov_b64     exec, s[16:17]                          // 00000000BD08: BEFE0410
  v_cndmask_b32  v10, 0, v10, s[14:15]                  // 00000000BD0C: D200000A 003A1480
  v_add_i32     v12, vcc, 17, v7                        // 00000000BD14: 4A180E91
  v_and_b32     v12, 63, v12                            // 00000000BD18: 361818BF
  v_add_i32     v13, vcc, 28, v7                        // 00000000BD1C: 4A1A0E9C
  v_add_i32     v14, vcc, 26, v7                        // 00000000BD20: 4A1C0E9A
  v_lshl_b64    v[15:16], 1, v12                        // 00000000BD24: D2C2000F 00021881
  v_and_b32     v15, exec_lo, v15                       // 00000000BD2C: 361E1E7E
  v_and_b32     v16, exec_hi, v16                       // 00000000BD30: 3620207F
  v_cmp_ne_u64  s[14:15], 0, v[15:16]                   // 00000000BD34: D1CA000E 00021E80
  s_mov_b64     s[16:17], exec                          // 00000000BD3C: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000BD40: BE92047E
  s_nop         0x0000                                  // 00000000BD44: BF800000
  s_nop         0x0000                                  // 00000000BD48: BF800000
  s_nop         0x0000                                  // 00000000BD4C: BF800000
  s_nop         0x0000                                  // 00000000BD50: BF800000
  s_nop         0x0000                                  // 00000000BD54: BF800000
  s_nop         0x0000                                  // 00000000BD58: BF800000
  s_nop         0x0000                                  // 00000000BD5C: BF800000
  label_2F58:
  v_readfirstlane_b32  s1, v12                          // 00000000BD60: 7E02050C
  v_cmp_eq_u32  vcc, s1, v12                            // 00000000BD64: 7D841801
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000BD68: BE94246A
  s_cbranch_execz  label_2F60                           // 00000000BD6C: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000BD70: 02020305
  v_mov_b32     v15, s1                                 // 00000000BD74: 7E1E0201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000BD78: 8A927E12
  s_cbranch_scc0  label_2F62                            // 00000000BD7C: BF840002
  label_2F60:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000BD80: 87FE1214
  s_branch      label_2F58                              // 00000000BD84: BF82FFF6
  label_2F62:
  s_mov_b64     exec, s[16:17]                          // 00000000BD88: BEFE0410
  v_cndmask_b32  v15, 0, v15, s[14:15]                  // 00000000BD8C: D200000F 003A1E80
  v_add_i32     v16, vcc, 38, v7                        // 00000000BD94: 4A200EA6
  v_add_i32     v17, vcc, 37, v7                        // 00000000BD98: 4A220EA5
  v_add_i32     v18, vcc, 36, v7                        // 00000000BD9C: 4A240EA4
  v_add_i32     v19, vcc, 27, v7                        // 00000000BDA0: 4A260E9B
  v_add_i32     v20, vcc, 18, v7                        // 00000000BDA4: 4A280E92
  v_and_b32     v20, 63, v20                            // 00000000BDA8: 362828BF
  v_and_b32     v14, 63, v14                            // 00000000BDAC: 361C1CBF
  v_and_b32     v19, 63, v19                            // 00000000BDB0: 362626BF
  v_and_b32     v13, 63, v13                            // 00000000BDB4: 361A1ABF
  v_and_b32     v18, 63, v18                            // 00000000BDB8: 362424BF
  v_and_b32     v17, 63, v17                            // 00000000BDBC: 362222BF
  v_and_b32     v16, 63, v16                            // 00000000BDC0: 362020BF
  s_xor_b64     s[2:3], s[2:3], -1                      // 00000000BDC4: 8982C102
  v_lshl_b64    v[21:22], 1, v12                        // 00000000BDC8: D2C20015 00021881
  v_and_b32     v21, exec_lo, v21                       // 00000000BDD0: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 00000000BDD4: 362C2C7F
  v_cmp_ne_u64  s[14:15], 0, v[21:22]                   // 00000000BDD8: D1CA000E 00022A80
  s_mov_b64     s[16:17], exec                          // 00000000BDE0: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000BDE4: BE92047E
  s_nop         0x0000                                  // 00000000BDE8: BF800000
  s_nop         0x0000                                  // 00000000BDEC: BF800000
  s_nop         0x0000                                  // 00000000BDF0: BF800000
  s_nop         0x0000                                  // 00000000BDF4: BF800000
  s_nop         0x0000                                  // 00000000BDF8: BF800000
  s_nop         0x0000                                  // 00000000BDFC: BF800000
  label_2F80:
  v_readfirstlane_b32  s1, v12                          // 00000000BE00: 7E02050C
  v_cmp_eq_u32  vcc, s1, v12                            // 00000000BE04: 7D841801
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000BE08: BE94246A
  s_cbranch_execz  label_2F88                           // 00000000BE0C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000BE10: 02020304
  v_mov_b32     v12, s1                                 // 00000000BE14: 7E180201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000BE18: 8A927E12
  s_cbranch_scc0  label_2F8A                            // 00000000BE1C: BF840002
  label_2F88:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000BE20: 87FE1214
  s_branch      label_2F80                              // 00000000BE24: BF82FFF6
  label_2F8A:
  s_mov_b64     exec, s[16:17]                          // 00000000BE28: BEFE0410
  v_cndmask_b32  v12, 0, v12, s[14:15]                  // 00000000BE2C: D200000C 003A1880
  v_lshl_b64    v[21:22], 1, v20                        // 00000000BE34: D2C20015 00022881
  v_and_b32     v21, exec_lo, v21                       // 00000000BE3C: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 00000000BE40: 362C2C7F
  v_cmp_ne_u64  s[14:15], 0, v[21:22]                   // 00000000BE44: D1CA000E 00022A80
  s_mov_b64     s[16:17], exec                          // 00000000BE4C: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000BE50: BE92047E
  s_nop         0x0000                                  // 00000000BE54: BF800000
  s_nop         0x0000                                  // 00000000BE58: BF800000
  s_nop         0x0000                                  // 00000000BE5C: BF800000
  label_2F98:
  v_readfirstlane_b32  s1, v20                          // 00000000BE60: 7E020514
  v_cmp_eq_u32  vcc, s1, v20                            // 00000000BE64: 7D842801
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000BE68: BE94246A
  s_cbranch_execz  label_2FA0                           // 00000000BE6C: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000BE70: 02020305
  v_mov_b32     v21, s1                                 // 00000000BE74: 7E2A0201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000BE78: 8A927E12
  s_cbranch_scc0  label_2FA2                            // 00000000BE7C: BF840002
  label_2FA0:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000BE80: 87FE1214
  s_branch      label_2F98                              // 00000000BE84: BF82FFF6
  label_2FA2:
  s_mov_b64     exec, s[16:17]                          // 00000000BE88: BEFE0410
  v_cndmask_b32  v21, 0, v21, s[14:15]                  // 00000000BE8C: D2000015 003A2A80
  v_lshl_b64    v[22:23], 1, v20                        // 00000000BE94: D2C20016 00022881
  v_and_b32     v22, exec_lo, v22                       // 00000000BE9C: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000BEA0: 362E2E7F
  v_cmp_ne_u64  s[14:15], 0, v[22:23]                   // 00000000BEA4: D1CA000E 00022C80
  s_mov_b64     s[16:17], exec                          // 00000000BEAC: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000BEB0: BE92047E
  s_nop         0x0000                                  // 00000000BEB4: BF800000
  s_nop         0x0000                                  // 00000000BEB8: BF800000
  s_nop         0x0000                                  // 00000000BEBC: BF800000
  label_2FB0:
  v_readfirstlane_b32  s1, v20                          // 00000000BEC0: 7E020514
  v_cmp_eq_u32  vcc, s1, v20                            // 00000000BEC4: 7D842801
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000BEC8: BE94246A
  s_cbranch_execz  label_2FB8                           // 00000000BECC: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000BED0: 02020304
  v_mov_b32     v20, s1                                 // 00000000BED4: 7E280201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000BED8: 8A927E12
  s_cbranch_scc0  label_2FBA                            // 00000000BEDC: BF840002
  label_2FB8:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000BEE0: 87FE1214
  s_branch      label_2FB0                              // 00000000BEE4: BF82FFF6
  label_2FBA:
  s_mov_b64     exec, s[16:17]                          // 00000000BEE8: BEFE0410
  v_cndmask_b32  v20, 0, v20, s[14:15]                  // 00000000BEEC: D2000014 003A2880
  v_lshl_b64    v[22:23], 1, v14                        // 00000000BEF4: D2C20016 00021C81
  v_and_b32     v22, exec_lo, v22                       // 00000000BEFC: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000BF00: 362E2E7F
  v_cmp_ne_u64  s[14:15], 0, v[22:23]                   // 00000000BF04: D1CA000E 00022C80
  s_mov_b64     s[16:17], exec                          // 00000000BF0C: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000BF10: BE92047E
  s_nop         0x0000                                  // 00000000BF14: BF800000
  s_nop         0x0000                                  // 00000000BF18: BF800000
  s_nop         0x0000                                  // 00000000BF1C: BF800000
  label_2FC8:
  v_readfirstlane_b32  s1, v14                          // 00000000BF20: 7E02050E
  v_cmp_eq_u32  vcc, s1, v14                            // 00000000BF24: 7D841C01
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000BF28: BE94246A
  s_cbranch_execz  label_2FD0                           // 00000000BF2C: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000BF30: 02020305
  v_mov_b32     v22, s1                                 // 00000000BF34: 7E2C0201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000BF38: 8A927E12
  s_cbranch_scc0  label_2FD2                            // 00000000BF3C: BF840002
  label_2FD0:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000BF40: 87FE1214
  s_branch      label_2FC8                              // 00000000BF44: BF82FFF6
  label_2FD2:
  s_mov_b64     exec, s[16:17]                          // 00000000BF48: BEFE0410
  v_cndmask_b32  v22, 0, v22, s[14:15]                  // 00000000BF4C: D2000016 003A2C80
  v_lshl_b64    v[23:24], 1, v14                        // 00000000BF54: D2C20017 00021C81
  v_and_b32     v23, exec_lo, v23                       // 00000000BF5C: 362E2E7E
  v_and_b32     v24, exec_hi, v24                       // 00000000BF60: 3630307F
  v_cmp_ne_u64  s[14:15], 0, v[23:24]                   // 00000000BF64: D1CA000E 00022E80
  s_mov_b64     s[16:17], exec                          // 00000000BF6C: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000BF70: BE92047E
  s_nop         0x0000                                  // 00000000BF74: BF800000
  s_nop         0x0000                                  // 00000000BF78: BF800000
  s_nop         0x0000                                  // 00000000BF7C: BF800000
  label_2FE0:
  v_readfirstlane_b32  s1, v14                          // 00000000BF80: 7E02050E
  v_cmp_eq_u32  vcc, s1, v14                            // 00000000BF84: 7D841C01
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000BF88: BE94246A
  s_cbranch_execz  label_2FE8                           // 00000000BF8C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000BF90: 02020304
  v_mov_b32     v14, s1                                 // 00000000BF94: 7E1C0201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000BF98: 8A927E12
  s_cbranch_scc0  label_2FEA                            // 00000000BF9C: BF840002
  label_2FE8:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000BFA0: 87FE1214
  s_branch      label_2FE0                              // 00000000BFA4: BF82FFF6
  label_2FEA:
  s_mov_b64     exec, s[16:17]                          // 00000000BFA8: BEFE0410
  v_cndmask_b32  v14, 0, v14, s[14:15]                  // 00000000BFAC: D200000E 003A1C80
  v_lshl_b64    v[23:24], 1, v19                        // 00000000BFB4: D2C20017 00022681
  v_and_b32     v23, exec_lo, v23                       // 00000000BFBC: 362E2E7E
  v_and_b32     v24, exec_hi, v24                       // 00000000BFC0: 3630307F
  v_cmp_ne_u64  s[14:15], 0, v[23:24]                   // 00000000BFC4: D1CA000E 00022E80
  s_mov_b64     s[16:17], exec                          // 00000000BFCC: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000BFD0: BE92047E
  s_nop         0x0000                                  // 00000000BFD4: BF800000
  s_nop         0x0000                                  // 00000000BFD8: BF800000
  s_nop         0x0000                                  // 00000000BFDC: BF800000
  label_2FF8:
  v_readfirstlane_b32  s1, v19                          // 00000000BFE0: 7E020513
  v_cmp_eq_u32  vcc, s1, v19                            // 00000000BFE4: 7D842601
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000BFE8: BE94246A
  s_cbranch_execz  label_3000                           // 00000000BFEC: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000BFF0: 02020305
  v_mov_b32     v23, s1                                 // 00000000BFF4: 7E2E0201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000BFF8: 8A927E12
  s_cbranch_scc0  label_3002                            // 00000000BFFC: BF840002
  label_3000:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000C000: 87FE1214
  s_branch      label_2FF8                              // 00000000C004: BF82FFF6
  label_3002:
  s_mov_b64     exec, s[16:17]                          // 00000000C008: BEFE0410
  v_cndmask_b32  v23, 0, v23, s[14:15]                  // 00000000C00C: D2000017 003A2E80
  v_lshl_b64    v[24:25], 1, v19                        // 00000000C014: D2C20018 00022681
  v_and_b32     v24, exec_lo, v24                       // 00000000C01C: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 00000000C020: 3632327F
  v_cmp_ne_u64  s[14:15], 0, v[24:25]                   // 00000000C024: D1CA000E 00023080
  s_mov_b64     s[16:17], exec                          // 00000000C02C: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000C030: BE92047E
  s_nop         0x0000                                  // 00000000C034: BF800000
  s_nop         0x0000                                  // 00000000C038: BF800000
  s_nop         0x0000                                  // 00000000C03C: BF800000
  label_3010:
  v_readfirstlane_b32  s1, v19                          // 00000000C040: 7E020513
  v_cmp_eq_u32  vcc, s1, v19                            // 00000000C044: 7D842601
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000C048: BE94246A
  s_cbranch_execz  label_3018                           // 00000000C04C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000C050: 02020304
  v_mov_b32     v19, s1                                 // 00000000C054: 7E260201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000C058: 8A927E12
  s_cbranch_scc0  label_301A                            // 00000000C05C: BF840002
  label_3018:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000C060: 87FE1214
  s_branch      label_3010                              // 00000000C064: BF82FFF6
  label_301A:
  s_mov_b64     exec, s[16:17]                          // 00000000C068: BEFE0410
  v_cndmask_b32  v19, 0, v19, s[14:15]                  // 00000000C06C: D2000013 003A2680
  v_lshl_b64    v[24:25], 1, v13                        // 00000000C074: D2C20018 00021A81
  v_and_b32     v24, exec_lo, v24                       // 00000000C07C: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 00000000C080: 3632327F
  v_cmp_ne_u64  s[14:15], 0, v[24:25]                   // 00000000C084: D1CA000E 00023080
  s_mov_b64     s[16:17], exec                          // 00000000C08C: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000C090: BE92047E
  s_nop         0x0000                                  // 00000000C094: BF800000
  s_nop         0x0000                                  // 00000000C098: BF800000
  s_nop         0x0000                                  // 00000000C09C: BF800000
  label_3028:
  v_readfirstlane_b32  s1, v13                          // 00000000C0A0: 7E02050D
  v_cmp_eq_u32  vcc, s1, v13                            // 00000000C0A4: 7D841A01
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000C0A8: BE94246A
  s_cbranch_execz  label_3030                           // 00000000C0AC: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000C0B0: 02020305
  v_mov_b32     v24, s1                                 // 00000000C0B4: 7E300201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000C0B8: 8A927E12
  s_cbranch_scc0  label_3032                            // 00000000C0BC: BF840002
  label_3030:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000C0C0: 87FE1214
  s_branch      label_3028                              // 00000000C0C4: BF82FFF6
  label_3032:
  s_mov_b64     exec, s[16:17]                          // 00000000C0C8: BEFE0410
  v_cndmask_b32  v24, 0, v24, s[14:15]                  // 00000000C0CC: D2000018 003A3080
  v_lshl_b64    v[25:26], 1, v13                        // 00000000C0D4: D2C20019 00021A81
  v_and_b32     v25, exec_lo, v25                       // 00000000C0DC: 3632327E
  v_and_b32     v26, exec_hi, v26                       // 00000000C0E0: 3634347F
  v_cmp_ne_u64  s[14:15], 0, v[25:26]                   // 00000000C0E4: D1CA000E 00023280
  s_mov_b64     s[16:17], exec                          // 00000000C0EC: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000C0F0: BE92047E
  s_nop         0x0000                                  // 00000000C0F4: BF800000
  s_nop         0x0000                                  // 00000000C0F8: BF800000
  s_nop         0x0000                                  // 00000000C0FC: BF800000
  label_3040:
  v_readfirstlane_b32  s1, v13                          // 00000000C100: 7E02050D
  v_cmp_eq_u32  vcc, s1, v13                            // 00000000C104: 7D841A01
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000C108: BE94246A
  s_cbranch_execz  label_3048                           // 00000000C10C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000C110: 02020304
  v_mov_b32     v13, s1                                 // 00000000C114: 7E1A0201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000C118: 8A927E12
  s_cbranch_scc0  label_304A                            // 00000000C11C: BF840002
  label_3048:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000C120: 87FE1214
  s_branch      label_3040                              // 00000000C124: BF82FFF6
  label_304A:
  s_mov_b64     exec, s[16:17]                          // 00000000C128: BEFE0410
  v_cndmask_b32  v13, 0, v13, s[14:15]                  // 00000000C12C: D200000D 003A1A80
  v_lshl_b64    v[25:26], 1, v18                        // 00000000C134: D2C20019 00022481
  v_and_b32     v25, exec_lo, v25                       // 00000000C13C: 3632327E
  v_and_b32     v26, exec_hi, v26                       // 00000000C140: 3634347F
  v_cmp_ne_u64  s[14:15], 0, v[25:26]                   // 00000000C144: D1CA000E 00023280
  s_mov_b64     s[16:17], exec                          // 00000000C14C: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000C150: BE92047E
  s_nop         0x0000                                  // 00000000C154: BF800000
  s_nop         0x0000                                  // 00000000C158: BF800000
  s_nop         0x0000                                  // 00000000C15C: BF800000
  label_3058:
  v_readfirstlane_b32  s1, v18                          // 00000000C160: 7E020512
  v_cmp_eq_u32  vcc, s1, v18                            // 00000000C164: 7D842401
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000C168: BE94246A
  s_cbranch_execz  label_3060                           // 00000000C16C: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000C170: 02020305
  v_mov_b32     v25, s1                                 // 00000000C174: 7E320201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000C178: 8A927E12
  s_cbranch_scc0  label_3062                            // 00000000C17C: BF840002
  label_3060:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000C180: 87FE1214
  s_branch      label_3058                              // 00000000C184: BF82FFF6
  label_3062:
  s_mov_b64     exec, s[16:17]                          // 00000000C188: BEFE0410
  v_cndmask_b32  v25, 0, v25, s[14:15]                  // 00000000C18C: D2000019 003A3280
  v_lshl_b64    v[26:27], 1, v18                        // 00000000C194: D2C2001A 00022481
  v_and_b32     v26, exec_lo, v26                       // 00000000C19C: 3634347E
  v_and_b32     v27, exec_hi, v27                       // 00000000C1A0: 3636367F
  v_cmp_ne_u64  s[14:15], 0, v[26:27]                   // 00000000C1A4: D1CA000E 00023480
  s_mov_b64     s[16:17], exec                          // 00000000C1AC: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000C1B0: BE92047E
  s_nop         0x0000                                  // 00000000C1B4: BF800000
  s_nop         0x0000                                  // 00000000C1B8: BF800000
  s_nop         0x0000                                  // 00000000C1BC: BF800000
  label_3070:
  v_readfirstlane_b32  s1, v18                          // 00000000C1C0: 7E020512
  v_cmp_eq_u32  vcc, s1, v18                            // 00000000C1C4: 7D842401
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000C1C8: BE94246A
  s_cbranch_execz  label_3078                           // 00000000C1CC: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000C1D0: 02020304
  v_mov_b32     v18, s1                                 // 00000000C1D4: 7E240201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000C1D8: 8A927E12
  s_cbranch_scc0  label_307A                            // 00000000C1DC: BF840002
  label_3078:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000C1E0: 87FE1214
  s_branch      label_3070                              // 00000000C1E4: BF82FFF6
  label_307A:
  s_mov_b64     exec, s[16:17]                          // 00000000C1E8: BEFE0410
  v_cndmask_b32  v18, 0, v18, s[14:15]                  // 00000000C1EC: D2000012 003A2480
  v_lshl_b64    v[26:27], 1, v17                        // 00000000C1F4: D2C2001A 00022281
  v_and_b32     v26, exec_lo, v26                       // 00000000C1FC: 3634347E
  v_and_b32     v27, exec_hi, v27                       // 00000000C200: 3636367F
  v_cmp_ne_u64  s[14:15], 0, v[26:27]                   // 00000000C204: D1CA000E 00023480
  s_mov_b64     s[16:17], exec                          // 00000000C20C: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000C210: BE92047E
  s_nop         0x0000                                  // 00000000C214: BF800000
  s_nop         0x0000                                  // 00000000C218: BF800000
  s_nop         0x0000                                  // 00000000C21C: BF800000
  label_3088:
  v_readfirstlane_b32  s1, v17                          // 00000000C220: 7E020511
  v_cmp_eq_u32  vcc, s1, v17                            // 00000000C224: 7D842201
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000C228: BE94246A
  s_cbranch_execz  label_3090                           // 00000000C22C: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000C230: 02020305
  v_mov_b32     v26, s1                                 // 00000000C234: 7E340201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000C238: 8A927E12
  s_cbranch_scc0  label_3092                            // 00000000C23C: BF840002
  label_3090:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000C240: 87FE1214
  s_branch      label_3088                              // 00000000C244: BF82FFF6
  label_3092:
  s_mov_b64     exec, s[16:17]                          // 00000000C248: BEFE0410
  v_cndmask_b32  v26, 0, v26, s[14:15]                  // 00000000C24C: D200001A 003A3480
  v_lshl_b64    v[27:28], 1, v17                        // 00000000C254: D2C2001B 00022281
  v_and_b32     v27, exec_lo, v27                       // 00000000C25C: 3636367E
  v_and_b32     v28, exec_hi, v28                       // 00000000C260: 3638387F
  v_cmp_ne_u64  s[14:15], 0, v[27:28]                   // 00000000C264: D1CA000E 00023680
  s_mov_b64     s[16:17], exec                          // 00000000C26C: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000C270: BE92047E
  s_nop         0x0000                                  // 00000000C274: BF800000
  s_nop         0x0000                                  // 00000000C278: BF800000
  s_nop         0x0000                                  // 00000000C27C: BF800000
  label_30A0:
  v_readfirstlane_b32  s1, v17                          // 00000000C280: 7E020511
  v_cmp_eq_u32  vcc, s1, v17                            // 00000000C284: 7D842201
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000C288: BE94246A
  s_cbranch_execz  label_30A8                           // 00000000C28C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000C290: 02020304
  v_mov_b32     v17, s1                                 // 00000000C294: 7E220201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000C298: 8A927E12
  s_cbranch_scc0  label_30AA                            // 00000000C29C: BF840002
  label_30A8:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000C2A0: 87FE1214
  s_branch      label_30A0                              // 00000000C2A4: BF82FFF6
  label_30AA:
  s_mov_b64     exec, s[16:17]                          // 00000000C2A8: BEFE0410
  v_cndmask_b32  v17, 0, v17, s[14:15]                  // 00000000C2AC: D2000011 003A2280
  v_lshl_b64    v[27:28], 1, v16                        // 00000000C2B4: D2C2001B 00022081
  v_and_b32     v27, exec_lo, v27                       // 00000000C2BC: 3636367E
  v_and_b32     v28, exec_hi, v28                       // 00000000C2C0: 3638387F
  v_cmp_ne_u64  s[14:15], 0, v[27:28]                   // 00000000C2C4: D1CA000E 00023680
  s_mov_b64     s[16:17], exec                          // 00000000C2CC: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000C2D0: BE92047E
  s_nop         0x0000                                  // 00000000C2D4: BF800000
  s_nop         0x0000                                  // 00000000C2D8: BF800000
  s_nop         0x0000                                  // 00000000C2DC: BF800000
  label_30B8:
  v_readfirstlane_b32  s1, v16                          // 00000000C2E0: 7E020510
  v_cmp_eq_u32  vcc, s1, v16                            // 00000000C2E4: 7D842001
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000C2E8: BE94246A
  s_cbranch_execz  label_30C0                           // 00000000C2EC: BF880004
  v_readlane_b32  s1, v5, s1                            // 00000000C2F0: 02020305
  v_mov_b32     v27, s1                                 // 00000000C2F4: 7E360201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000C2F8: 8A927E12
  s_cbranch_scc0  label_30C2                            // 00000000C2FC: BF840002
  label_30C0:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000C300: 87FE1214
  s_branch      label_30B8                              // 00000000C304: BF82FFF6
  label_30C2:
  s_mov_b64     exec, s[16:17]                          // 00000000C308: BEFE0410
  v_cndmask_b32  v5, 0, v27, s[14:15]                   // 00000000C30C: D2000005 003A3680
  v_lshl_b64    v[27:28], 1, v16                        // 00000000C314: D2C2001B 00022081
  v_and_b32     v27, exec_lo, v27                       // 00000000C31C: 3636367E
  v_and_b32     v28, exec_hi, v28                       // 00000000C320: 3638387F
  v_cmp_ne_u64  s[14:15], 0, v[27:28]                   // 00000000C324: D1CA000E 00023680
  s_mov_b64     s[16:17], exec                          // 00000000C32C: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000C330: BE92047E
  s_nop         0x0000                                  // 00000000C334: BF800000
  s_nop         0x0000                                  // 00000000C338: BF800000
  s_nop         0x0000                                  // 00000000C33C: BF800000
  label_30D0:
  v_readfirstlane_b32  s1, v16                          // 00000000C340: 7E020510
  v_cmp_eq_u32  vcc, s1, v16                            // 00000000C344: 7D842001
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000C348: BE94246A
  s_cbranch_execz  label_30D8                           // 00000000C34C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000C350: 02020304
  v_mov_b32     v16, s1                                 // 00000000C354: 7E200201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000C358: 8A927E12
  s_cbranch_scc0  label_30DA                            // 00000000C35C: BF840002
  label_30D8:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000C360: 87FE1214
  s_branch      label_30D0                              // 00000000C364: BF82FFF6
  label_30DA:
  s_mov_b64     exec, s[16:17]                          // 00000000C368: BEFE0410
  v_cndmask_b32  v16, 0, v16, s[14:15]                  // 00000000C36C: D2000010 003A2080
  s_mov_b64     s[14:15], exec                          // 00000000C374: BE8E047E
  s_andn2_b64   exec, s[14:15], s[2:3]                  // 00000000C378: 8AFE020E
  v_mov_b32     v27, s10                                // 00000000C37C: 7E36020A
  s_cbranch_execz  label_316A                           // 00000000C380: BF880089
  v_mov_b32     v28, s11                                // 00000000C384: 7E38020B
  s_add_u32     s2, s10, 4                              // 00000000C388: 8002840A
  s_addc_u32    s3, s11, 0                              // 00000000C38C: 8203800B
  v_mov_b32     v29, s2                                 // 00000000C390: 7E3A0202
  v_mov_b32     v30, s3                                 // 00000000C394: 7E3C0203
  s_add_u32     s2, s10, 8                              // 00000000C398: 8002880A
  s_addc_u32    s3, s11, 0                              // 00000000C39C: 8203800B
  v_mov_b32     v31, s2                                 // 00000000C3A0: 7E3E0202
  v_mov_b32     v32, s3                                 // 00000000C3A4: 7E400203
  s_add_u32     s2, s10, 12                             // 00000000C3A8: 80028C0A
  s_addc_u32    s3, s11, 0                              // 00000000C3AC: 8203800B
  flat_load_dword  v33, v[27:28]                        // 00000000C3B0: DC300000 2100001B
  flat_load_dword  v27, v[27:28]                        // 00000000C3B8: DC300000 1B00001B
  v_mov_b32     v40, s2                                 // 00000000C3C0: 7E500202
  v_mov_b32     v41, s3                                 // 00000000C3C4: 7E520203
  s_add_u32     s2, s10, 16                             // 00000000C3C8: 8002900A
  s_addc_u32    s3, s11, 0                              // 00000000C3CC: 8203800B
  flat_load_dword  v35, v[29:30]                        // 00000000C3D0: DC300000 2300001D
  flat_load_dword  v29, v[29:30]                        // 00000000C3D8: DC300000 1D00001D
  v_mov_b32     v42, s2                                 // 00000000C3E0: 7E540202
  v_mov_b32     v43, s3                                 // 00000000C3E4: 7E560203
  s_add_u32     s2, s10, 20                             // 00000000C3E8: 8002940A
  s_addc_u32    s3, s11, 0                              // 00000000C3EC: 8203800B
  flat_load_dword  v37, v[31:32]                        // 00000000C3F0: DC300000 2500001F
  flat_load_dword  v31, v[31:32]                        // 00000000C3F8: DC300000 1F00001F
  v_mov_b32     v44, s2                                 // 00000000C400: 7E580202
  v_mov_b32     v45, s3                                 // 00000000C404: 7E5A0203
  s_add_u32     s2, s10, 24                             // 00000000C408: 8002980A
  s_addc_u32    s3, s11, 0                              // 00000000C40C: 8203800B
  flat_load_dword  v39, v[40:41]                        // 00000000C410: DC300000 27000028
  flat_load_dword  v28, v[40:41]                        // 00000000C418: DC300000 1C000028
  v_mov_b32     v46, s2                                 // 00000000C420: 7E5C0202
  v_mov_b32     v47, s3                                 // 00000000C424: 7E5E0203
  s_add_u32     s2, s10, 28                             // 00000000C428: 80029C0A
  s_addc_u32    s3, s11, 0                              // 00000000C42C: 8203800B
  flat_load_dword  v41, v[42:43]                        // 00000000C430: DC300000 2900002A
  flat_load_dword  v30, v[42:43]                        // 00000000C438: DC300000 1E00002A
  v_mov_b32     v49, s2                                 // 00000000C440: 7E620202
  v_mov_b32     v50, s3                                 // 00000000C444: 7E640203
  s_add_u32     s2, s10, 32                             // 00000000C448: 8002A00A
  s_addc_u32    s3, s11, 0                              // 00000000C44C: 8203800B
  flat_load_dword  v43, v[44:45]                        // 00000000C450: DC300000 2B00002C
  flat_load_dword  v32, v[44:45]                        // 00000000C458: DC300000 2000002C
  v_mov_b32     v51, s2                                 // 00000000C460: 7E660202
  v_mov_b32     v52, s3                                 // 00000000C464: 7E680203
  flat_load_dword  v45, v[46:47]                        // 00000000C468: DC300000 2D00002E
  flat_load_dword  v34, v[46:47]                        // 00000000C470: DC300000 2200002E
  flat_load_dword  v40, v[49:50]                        // 00000000C478: DC300000 28000031
  flat_load_dword  v36, v[49:50]                        // 00000000C480: DC300000 24000031
  flat_load_dword  v42, v[51:52]                        // 00000000C488: DC300000 2A000033
  flat_load_dword  v38, v[51:52]                        // 00000000C490: DC300000 26000033
  v_mul_f32     v10, v27, v10                           // 00000000C498: 1014151B
  v_mul_f32     v11, v33, v11                           // 00000000C49C: 10161721
  v_cmp_gt_i32  vcc, 40, v2                             // 00000000C4A0: 7D0804A8
  v_cndmask_b32  v10, v10, v11, vcc                     // 00000000C4A4: 0014170A
  s_waitcnt     vmcnt(14) & lgkmcnt(14)                 // 00000000C4A8: BF8C0E7E
  v_mul_f32     v11, v29, v12                           // 00000000C4AC: 1016191D
  v_mul_f32     v12, v35, v15                           // 00000000C4B0: 10181F23
  v_cmp_lt_i32  s[2:3], v2, 39                          // 00000000C4B4: D1020002 00014F02
  s_waitcnt     vmcnt(12) & lgkmcnt(12)                 // 00000000C4BC: BF8C0C7C
  v_mul_f32     v15, v31, v20                           // 00000000C4C0: 101E291F
  v_mul_f32     v20, v37, v21                           // 00000000C4C4: 10282B25
  v_cmp_gt_i32  vcc, 38, v2                             // 00000000C4C8: 7D0804A6
  v_cndmask_b32  v11, v11, v12, s[2:3]                  // 00000000C4CC: D200000B 000A190B
  v_add_f32     v10, 0, v10                             // 00000000C4D4: 06141480
  v_cndmask_b32  v12, v15, v20, vcc                     // 00000000C4D8: 0018290F
  s_waitcnt     vmcnt(10) & lgkmcnt(10)                 // 00000000C4DC: BF8C0A7A
  v_mul_f32     v14, v28, v14                           // 00000000C4E0: 101C1D1C
  v_mul_f32     v15, v39, v22                           // 00000000C4E4: 101E2D27
  v_cmp_gt_i32  vcc, 32, v2                             // 00000000C4E8: 7D0804A0
  v_add_f32     v10, v10, v11                           // 00000000C4EC: 0614170A
  s_waitcnt     vmcnt(8) & lgkmcnt(8)                   // 00000000C4F0: BF8C0878
  v_mul_f32     v11, v30, v19                           // 00000000C4F4: 1016271E
  v_mul_f32     v19, v41, v23                           // 00000000C4F8: 10262F29
  v_cmp_lt_i32  s[2:3], v2, 31                          // 00000000C4FC: D1020002 00013F02
  v_cndmask_b32  v14, v14, v15, vcc                     // 00000000C504: 001C1F0E
  v_add_f32     v10, v10, v12                           // 00000000C508: 0614190A
  s_waitcnt     vmcnt(6) & lgkmcnt(6)                   // 00000000C50C: BF8C0676
  v_mul_f32     v12, v32, v13                           // 00000000C510: 10181B20
  v_mul_f32     v13, v43, v24                           // 00000000C514: 101A312B
  v_cmp_gt_i32  vcc, 30, v2                             // 00000000C518: 7D08049E
  v_cndmask_b32  v11, v11, v19, s[2:3]                  // 00000000C51C: D200000B 000A270B
  v_add_f32     v10, v10, v14                           // 00000000C524: 06141D0A
  v_mul_lo_u32  v8, v8, s4                              // 00000000C528: D2D20008 00000908
  s_waitcnt     vmcnt(4) & lgkmcnt(4)                   // 00000000C530: BF8C0474
  v_mul_f32     v14, v34, v18                           // 00000000C534: 101C2522
  v_mul_f32     v15, v45, v25                           // 00000000C538: 101E332D
  v_cndmask_b32  v12, v12, v13, vcc                     // 00000000C53C: 00181B0C
  v_add_f32     v10, v10, v11                           // 00000000C540: 0614170A
  v_add_i32     v18, vcc, v8, v0                        // 00000000C544: 4A240108
  v_cndmask_b32  v11, v14, v15, s[12:13]                // 00000000C548: D200000B 00321F0E
  s_waitcnt     vmcnt(2) & lgkmcnt(2)                   // 00000000C550: BF8C0272
  v_mul_f32     v13, v36, v17                           // 00000000C554: 101A2324
  v_mul_f32     v14, v40, v26                           // 00000000C558: 101C3528
  v_cmp_gt_i32  vcc, 23, v2                             // 00000000C55C: 7D080497
  v_add_f32     v10, v10, v12                           // 00000000C560: 0614190A
  v_ashrrev_i32  v19, 31, v18                           // 00000000C564: 3026249F
  v_cndmask_b32  v13, v13, v14, vcc                     // 00000000C568: 001A1D0D
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000C56C: BF8C0070
  v_mul_f32     v14, v38, v16                           // 00000000C570: 101C2126
  v_mul_f32     v5, v42, v5                             // 00000000C574: 100A0B2A
  v_cmp_gt_i32  vcc, 22, v2                             // 00000000C578: 7D080496
  v_add_f32     v10, v10, v11                           // 00000000C57C: 0614170A
  v_cndmask_b32  v5, v14, v5, vcc                       // 00000000C580: 000A0B0E
  v_lshl_b64    v[11:12], v[18:19], 2                   // 00000000C584: D2C2000B 00010512
  v_add_f32     v8, v10, v13                            // 00000000C58C: 06101B0A
  v_add_i32     v10, vcc, s6, v11                       // 00000000C590: 4A141606
  v_mov_b32     v11, s7                                 // 00000000C594: 7E160207
  v_addc_u32    v11, vcc, v11, v12, vcc                 // 00000000C598: 5016190B
  v_add_f32     v5, v8, v5                              // 00000000C59C: 060A0B08
  flat_store_dword  v[10:11], v5                        // 00000000C5A0: DC700000 0000050A
  label_316A:
  s_mov_b64     exec, s[14:15]                          // 00000000C5A8: BEFE040E
  v_mov_b32     v11, s10                                // 00000000C5AC: 7E16020A
  v_mov_b32     v12, s11                                // 00000000C5B0: 7E18020B
  v_add_i32     v10, vcc, 32, v7                        // 00000000C5B4: 4A140EA0
  v_and_b32     v10, 63, v10                            // 00000000C5B8: 361414BF
  flat_load_dword  v5, v[11:12]                         // 00000000C5BC: DC300000 0500000B
  v_lshl_b64    v[11:12], 1, v10                        // 00000000C5C4: D2C2000B 00021481
  v_and_b32     v11, exec_lo, v11                       // 00000000C5CC: 3616167E
  v_and_b32     v12, exec_hi, v12                       // 00000000C5D0: 3618187F
  v_cmp_ne_u64  s[2:3], 0, v[11:12]                     // 00000000C5D4: D1CA0002 00021680
  s_mov_b64     s[14:15], exec                          // 00000000C5DC: BE8E047E
  s_mov_b64     s[16:17], exec                          // 00000000C5E0: BE90047E
  s_nop         0x0000                                  // 00000000C5E4: BF800000
  s_nop         0x0000                                  // 00000000C5E8: BF800000
  s_nop         0x0000                                  // 00000000C5EC: BF800000
  s_nop         0x0000                                  // 00000000C5F0: BF800000
  s_nop         0x0000                                  // 00000000C5F4: BF800000
  s_nop         0x0000                                  // 00000000C5F8: BF800000
  s_nop         0x0000                                  // 00000000C5FC: BF800000
  label_3180:
  v_readfirstlane_b32  s1, v10                          // 00000000C600: 7E02050A
  v_cmp_eq_u32  vcc, s1, v10                            // 00000000C604: 7D841401
  s_and_saveexec_b64  s[18:19], vcc                     // 00000000C608: BE92246A
  s_cbranch_execz  label_3188                           // 00000000C60C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000C610: 02020304
  v_mov_b32     v8, s1                                  // 00000000C614: 7E100201
  s_andn2_b64   s[16:17], s[16:17], exec                // 00000000C618: 8A907E10
  s_cbranch_scc0  label_318A                            // 00000000C61C: BF840002
  label_3188:
  s_and_b64     exec, s[18:19], s[16:17]                // 00000000C620: 87FE1012
  s_branch      label_3180                              // 00000000C624: BF82FFF6
  label_318A:
  s_mov_b64     exec, s[14:15]                          // 00000000C628: BEFE040E
  v_mov_b32     v11, s10                                // 00000000C62C: 7E16020A
  v_mov_b32     v12, s11                                // 00000000C630: 7E18020B
  flat_load_dword  v11, v[11:12]                        // 00000000C634: DC300000 0B00000B
  v_cndmask_b32  v8, 0, v8, s[2:3]                      // 00000000C63C: D2000008 000A1080
  v_lshl_b64    v[12:13], 1, v10                        // 00000000C644: D2C2000C 00021481
  v_and_b32     v12, exec_lo, v12                       // 00000000C64C: 3618187E
  v_and_b32     v13, exec_hi, v13                       // 00000000C650: 361A1A7F
  v_cmp_ne_u64  s[2:3], 0, v[12:13]                     // 00000000C654: D1CA0002 00021880
  s_mov_b64     s[14:15], exec                          // 00000000C65C: BE8E047E
  s_mov_b64     s[16:17], exec                          // 00000000C660: BE90047E
  s_nop         0x0000                                  // 00000000C664: BF800000
  s_nop         0x0000                                  // 00000000C668: BF800000
  s_nop         0x0000                                  // 00000000C66C: BF800000
  s_nop         0x0000                                  // 00000000C670: BF800000
  s_nop         0x0000                                  // 00000000C674: BF800000
  s_nop         0x0000                                  // 00000000C678: BF800000
  s_nop         0x0000                                  // 00000000C67C: BF800000
  label_31A0:
  v_readfirstlane_b32  s1, v10                          // 00000000C680: 7E02050A
  v_cmp_eq_u32  vcc, s1, v10                            // 00000000C684: 7D841401
  s_and_saveexec_b64  s[18:19], vcc                     // 00000000C688: BE92246A
  s_cbranch_execz  label_31A8                           // 00000000C68C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000C690: 02020303
  v_mov_b32     v10, s1                                 // 00000000C694: 7E140201
  s_andn2_b64   s[16:17], s[16:17], exec                // 00000000C698: 8A907E10
  s_cbranch_scc0  label_31AA                            // 00000000C69C: BF840002
  label_31A8:
  s_and_b64     exec, s[18:19], s[16:17]                // 00000000C6A0: 87FE1012
  s_branch      label_31A0                              // 00000000C6A4: BF82FFF6
  label_31AA:
  s_mov_b64     exec, s[14:15]                          // 00000000C6A8: BEFE040E
  s_add_u32     s14, s10, 4                             // 00000000C6AC: 800E840A
  s_addc_u32    s15, s11, 0                             // 00000000C6B0: 820F800B
  v_mov_b32     v12, s14                                // 00000000C6B4: 7E18020E
  v_mov_b32     v13, s15                                // 00000000C6B8: 7E1A020F
  v_add_i32     v14, vcc, 33, v7                        // 00000000C6BC: 4A1C0EA1
  v_add_i32     v15, vcc, 34, v7                        // 00000000C6C0: 4A1E0EA2
  v_and_b32     v14, 63, v14                            // 00000000C6C4: 361C1CBF
  flat_load_dword  v12, v[12:13]                        // 00000000C6C8: DC300000 0C00000C
  v_cndmask_b32  v10, 0, v10, s[2:3]                    // 00000000C6D0: D200000A 000A1480
  v_and_b32     v13, 63, v15                            // 00000000C6D8: 361A1EBF
  v_lshl_b64    v[15:16], 1, v14                        // 00000000C6DC: D2C2000F 00021C81
  v_and_b32     v15, exec_lo, v15                       // 00000000C6E4: 361E1E7E
  v_and_b32     v16, exec_hi, v16                       // 00000000C6E8: 3620207F
  v_cmp_ne_u64  s[2:3], 0, v[15:16]                     // 00000000C6EC: D1CA0002 00021E80
  s_mov_b64     s[16:17], exec                          // 00000000C6F4: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000C6F8: BE92047E
  s_nop         0x0000                                  // 00000000C6FC: BF800000
  label_31C0:
  v_readfirstlane_b32  s1, v14                          // 00000000C700: 7E02050E
  v_cmp_eq_u32  vcc, s1, v14                            // 00000000C704: 7D841C01
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000C708: BE94246A
  s_cbranch_execz  label_31C8                           // 00000000C70C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000C710: 02020304
  v_mov_b32     v15, s1                                 // 00000000C714: 7E1E0201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000C718: 8A927E12
  s_cbranch_scc0  label_31CA                            // 00000000C71C: BF840002
  label_31C8:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000C720: 87FE1214
  s_branch      label_31C0                              // 00000000C724: BF82FFF6
  label_31CA:
  s_mov_b64     exec, s[16:17]                          // 00000000C728: BEFE0410
  v_mov_b32     v16, s14                                // 00000000C72C: 7E20020E
  v_mov_b32     v17, s15                                // 00000000C730: 7E22020F
  flat_load_dword  v16, v[16:17]                        // 00000000C734: DC300000 10000010
  v_cndmask_b32  v15, 0, v15, s[2:3]                    // 00000000C73C: D200000F 000A1E80
  v_lshl_b64    v[17:18], 1, v14                        // 00000000C744: D2C20011 00021C81
  v_and_b32     v17, exec_lo, v17                       // 00000000C74C: 3622227E
  v_and_b32     v18, exec_hi, v18                       // 00000000C750: 3624247F
  v_cmp_ne_u64  s[2:3], 0, v[17:18]                     // 00000000C754: D1CA0002 00022280
  s_mov_b64     s[16:17], exec                          // 00000000C75C: BE90047E
  s_mov_b64     s[18:19], exec                          // 00000000C760: BE92047E
  s_nop         0x0000                                  // 00000000C764: BF800000
  s_nop         0x0000                                  // 00000000C768: BF800000
  s_nop         0x0000                                  // 00000000C76C: BF800000
  s_nop         0x0000                                  // 00000000C770: BF800000
  s_nop         0x0000                                  // 00000000C774: BF800000
  s_nop         0x0000                                  // 00000000C778: BF800000
  s_nop         0x0000                                  // 00000000C77C: BF800000
  label_31E0:
  v_readfirstlane_b32  s1, v14                          // 00000000C780: 7E02050E
  v_cmp_eq_u32  vcc, s1, v14                            // 00000000C784: 7D841C01
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000C788: BE94246A
  s_cbranch_execz  label_31E8                           // 00000000C78C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000C790: 02020303
  v_mov_b32     v14, s1                                 // 00000000C794: 7E1C0201
  s_andn2_b64   s[18:19], s[18:19], exec                // 00000000C798: 8A927E12
  s_cbranch_scc0  label_31EA                            // 00000000C79C: BF840002
  label_31E8:
  s_and_b64     exec, s[20:21], s[18:19]                // 00000000C7A0: 87FE1214
  s_branch      label_31E0                              // 00000000C7A4: BF82FFF6
  label_31EA:
  s_mov_b64     exec, s[16:17]                          // 00000000C7A8: BEFE0410
  s_add_u32     s16, s10, 8                             // 00000000C7AC: 8010880A
  s_addc_u32    s17, s11, 0                             // 00000000C7B0: 8211800B
  v_mov_b32     v17, s16                                // 00000000C7B4: 7E220210
  v_mov_b32     v18, s17                                // 00000000C7B8: 7E240211
  flat_load_dword  v17, v[17:18]                        // 00000000C7BC: DC300000 11000011
  v_cndmask_b32  v14, 0, v14, s[2:3]                    // 00000000C7C4: D200000E 000A1C80
  v_lshl_b64    v[18:19], 1, v13                        // 00000000C7CC: D2C20012 00021A81
  v_and_b32     v18, exec_lo, v18                       // 00000000C7D4: 3624247E
  v_and_b32     v19, exec_hi, v19                       // 00000000C7D8: 3626267F
  v_cmp_ne_u64  s[2:3], 0, v[18:19]                     // 00000000C7DC: D1CA0002 00022480
  s_mov_b64     s[18:19], exec                          // 00000000C7E4: BE92047E
  s_mov_b64     s[20:21], exec                          // 00000000C7E8: BE94047E
  s_nop         0x0000                                  // 00000000C7EC: BF800000
  s_nop         0x0000                                  // 00000000C7F0: BF800000
  s_nop         0x0000                                  // 00000000C7F4: BF800000
  s_nop         0x0000                                  // 00000000C7F8: BF800000
  s_nop         0x0000                                  // 00000000C7FC: BF800000
  label_3200:
  v_readfirstlane_b32  s1, v13                          // 00000000C800: 7E02050D
  v_cmp_eq_u32  vcc, s1, v13                            // 00000000C804: 7D841A01
  s_and_saveexec_b64  s[22:23], vcc                     // 00000000C808: BE96246A
  s_cbranch_execz  label_3208                           // 00000000C80C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000C810: 02020304
  v_mov_b32     v18, s1                                 // 00000000C814: 7E240201
  s_andn2_b64   s[20:21], s[20:21], exec                // 00000000C818: 8A947E14
  s_cbranch_scc0  label_320A                            // 00000000C81C: BF840002
  label_3208:
  s_and_b64     exec, s[22:23], s[20:21]                // 00000000C820: 87FE1416
  s_branch      label_3200                              // 00000000C824: BF82FFF6
  label_320A:
  s_mov_b64     exec, s[18:19]                          // 00000000C828: BEFE0412
  v_mov_b32     v19, s16                                // 00000000C82C: 7E260210
  v_mov_b32     v20, s17                                // 00000000C830: 7E280211
  flat_load_dword  v19, v[19:20]                        // 00000000C834: DC300000 13000013
  v_cndmask_b32  v18, 0, v18, s[2:3]                    // 00000000C83C: D2000012 000A2480
  v_lshl_b64    v[20:21], 1, v13                        // 00000000C844: D2C20014 00021A81
  v_and_b32     v20, exec_lo, v20                       // 00000000C84C: 3628287E
  v_and_b32     v21, exec_hi, v21                       // 00000000C850: 362A2A7F
  v_cmp_ne_u64  s[2:3], 0, v[20:21]                     // 00000000C854: D1CA0002 00022880
  s_mov_b64     s[18:19], exec                          // 00000000C85C: BE92047E
  s_mov_b64     s[20:21], exec                          // 00000000C860: BE94047E
  s_nop         0x0000                                  // 00000000C864: BF800000
  s_nop         0x0000                                  // 00000000C868: BF800000
  s_nop         0x0000                                  // 00000000C86C: BF800000
  s_nop         0x0000                                  // 00000000C870: BF800000
  s_nop         0x0000                                  // 00000000C874: BF800000
  s_nop         0x0000                                  // 00000000C878: BF800000
  s_nop         0x0000                                  // 00000000C87C: BF800000
  label_3220:
  v_readfirstlane_b32  s1, v13                          // 00000000C880: 7E02050D
  v_cmp_eq_u32  vcc, s1, v13                            // 00000000C884: 7D841A01
  s_and_saveexec_b64  s[22:23], vcc                     // 00000000C888: BE96246A
  s_cbranch_execz  label_3228                           // 00000000C88C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000C890: 02020303
  v_mov_b32     v13, s1                                 // 00000000C894: 7E1A0201
  s_andn2_b64   s[20:21], s[20:21], exec                // 00000000C898: 8A947E14
  s_cbranch_scc0  label_322A                            // 00000000C89C: BF840002
  label_3228:
  s_and_b64     exec, s[22:23], s[20:21]                // 00000000C8A0: 87FE1416
  s_branch      label_3220                              // 00000000C8A4: BF82FFF6
  label_322A:
  s_mov_b64     exec, s[18:19]                          // 00000000C8A8: BEFE0412
  s_add_u32     s18, s10, 12                            // 00000000C8AC: 80128C0A
  s_addc_u32    s19, s11, 0                             // 00000000C8B0: 8213800B
  v_mov_b32     v20, s18                                // 00000000C8B4: 7E280212
  v_mov_b32     v21, s19                                // 00000000C8B8: 7E2A0213
  v_add_i32     v22, vcc, 42, v7                        // 00000000C8BC: 4A2C0EAA
  v_add_i32     v23, vcc, 43, v7                        // 00000000C8C0: 4A2E0EAB
  v_add_i32     v24, vcc, 44, v7                        // 00000000C8C4: 4A300EAC
  v_and_b32     v22, 63, v22                            // 00000000C8C8: 362C2CBF
  flat_load_dword  v20, v[20:21]                        // 00000000C8CC: DC300000 14000014
  v_cndmask_b32  v13, 0, v13, s[2:3]                    // 00000000C8D4: D200000D 000A1A80
  v_and_b32     v21, 63, v24                            // 00000000C8DC: 362A30BF
  v_and_b32     v23, 63, v23                            // 00000000C8E0: 362E2EBF
  v_lshl_b64    v[24:25], 1, v22                        // 00000000C8E4: D2C20018 00022C81
  v_and_b32     v24, exec_lo, v24                       // 00000000C8EC: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 00000000C8F0: 3632327F
  v_cmp_ne_u64  s[2:3], 0, v[24:25]                     // 00000000C8F4: D1CA0002 00023080
  s_mov_b64     s[20:21], exec                          // 00000000C8FC: BE94047E
  s_mov_b64     s[22:23], exec                          // 00000000C900: BE96047E
  s_nop         0x0000                                  // 00000000C904: BF800000
  s_nop         0x0000                                  // 00000000C908: BF800000
  s_nop         0x0000                                  // 00000000C90C: BF800000
  s_nop         0x0000                                  // 00000000C910: BF800000
  s_nop         0x0000                                  // 00000000C914: BF800000
  s_nop         0x0000                                  // 00000000C918: BF800000
  s_nop         0x0000                                  // 00000000C91C: BF800000
  label_3248:
  v_readfirstlane_b32  s1, v22                          // 00000000C920: 7E020516
  v_cmp_eq_u32  vcc, s1, v22                            // 00000000C924: 7D842C01
  s_and_saveexec_b64  s[24:25], vcc                     // 00000000C928: BE98246A
  s_cbranch_execz  label_3250                           // 00000000C92C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000C930: 02020304
  v_mov_b32     v24, s1                                 // 00000000C934: 7E300201
  s_andn2_b64   s[22:23], s[22:23], exec                // 00000000C938: 8A967E16
  s_cbranch_scc0  label_3252                            // 00000000C93C: BF840002
  label_3250:
  s_and_b64     exec, s[24:25], s[22:23]                // 00000000C940: 87FE1618
  s_branch      label_3248                              // 00000000C944: BF82FFF6
  label_3252:
  s_mov_b64     exec, s[20:21]                          // 00000000C948: BEFE0414
  v_mov_b32     v25, s18                                // 00000000C94C: 7E320212
  v_mov_b32     v26, s19                                // 00000000C950: 7E340213
  flat_load_dword  v25, v[25:26]                        // 00000000C954: DC300000 19000019
  v_cndmask_b32  v24, 0, v24, s[2:3]                    // 00000000C95C: D2000018 000A3080
  v_lshl_b64    v[26:27], 1, v22                        // 00000000C964: D2C2001A 00022C81
  v_and_b32     v26, exec_lo, v26                       // 00000000C96C: 3634347E
  v_and_b32     v27, exec_hi, v27                       // 00000000C970: 3636367F
  v_cmp_ne_u64  s[2:3], 0, v[26:27]                     // 00000000C974: D1CA0002 00023480
  s_mov_b64     s[20:21], exec                          // 00000000C97C: BE94047E
  s_mov_b64     s[22:23], exec                          // 00000000C980: BE96047E
  s_nop         0x0000                                  // 00000000C984: BF800000
  s_nop         0x0000                                  // 00000000C988: BF800000
  s_nop         0x0000                                  // 00000000C98C: BF800000
  s_nop         0x0000                                  // 00000000C990: BF800000
  s_nop         0x0000                                  // 00000000C994: BF800000
  s_nop         0x0000                                  // 00000000C998: BF800000
  s_nop         0x0000                                  // 00000000C99C: BF800000
  label_3268:
  v_readfirstlane_b32  s1, v22                          // 00000000C9A0: 7E020516
  v_cmp_eq_u32  vcc, s1, v22                            // 00000000C9A4: 7D842C01
  s_and_saveexec_b64  s[24:25], vcc                     // 00000000C9A8: BE98246A
  s_cbranch_execz  label_3270                           // 00000000C9AC: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000C9B0: 02020303
  v_mov_b32     v22, s1                                 // 00000000C9B4: 7E2C0201
  s_andn2_b64   s[22:23], s[22:23], exec                // 00000000C9B8: 8A967E16
  s_cbranch_scc0  label_3272                            // 00000000C9BC: BF840002
  label_3270:
  s_and_b64     exec, s[24:25], s[22:23]                // 00000000C9C0: 87FE1618
  s_branch      label_3268                              // 00000000C9C4: BF82FFF6
  label_3272:
  s_mov_b64     exec, s[20:21]                          // 00000000C9C8: BEFE0414
  s_add_u32     s20, s10, 16                            // 00000000C9CC: 8014900A
  s_addc_u32    s21, s11, 0                             // 00000000C9D0: 8215800B
  v_mov_b32     v26, s20                                // 00000000C9D4: 7E340214
  v_mov_b32     v27, s21                                // 00000000C9D8: 7E360215
  flat_load_dword  v26, v[26:27]                        // 00000000C9DC: DC300000 1A00001A
  v_cndmask_b32  v22, 0, v22, s[2:3]                    // 00000000C9E4: D2000016 000A2C80
  v_lshl_b64    v[27:28], 1, v23                        // 00000000C9EC: D2C2001B 00022E81
  v_and_b32     v27, exec_lo, v27                       // 00000000C9F4: 3636367E
  v_and_b32     v28, exec_hi, v28                       // 00000000C9F8: 3638387F
  v_cmp_ne_u64  s[2:3], 0, v[27:28]                     // 00000000C9FC: D1CA0002 00023680
  s_mov_b64     s[22:23], exec                          // 00000000CA04: BE96047E
  s_mov_b64     s[24:25], exec                          // 00000000CA08: BE98047E
  s_nop         0x0000                                  // 00000000CA0C: BF800000
  s_nop         0x0000                                  // 00000000CA10: BF800000
  s_nop         0x0000                                  // 00000000CA14: BF800000
  s_nop         0x0000                                  // 00000000CA18: BF800000
  s_nop         0x0000                                  // 00000000CA1C: BF800000
  label_3288:
  v_readfirstlane_b32  s1, v23                          // 00000000CA20: 7E020517
  v_cmp_eq_u32  vcc, s1, v23                            // 00000000CA24: 7D842E01
  s_and_saveexec_b64  s[26:27], vcc                     // 00000000CA28: BE9A246A
  s_cbranch_execz  label_3290                           // 00000000CA2C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000CA30: 02020304
  v_mov_b32     v27, s1                                 // 00000000CA34: 7E360201
  s_andn2_b64   s[24:25], s[24:25], exec                // 00000000CA38: 8A987E18
  s_cbranch_scc0  label_3292                            // 00000000CA3C: BF840002
  label_3290:
  s_and_b64     exec, s[26:27], s[24:25]                // 00000000CA40: 87FE181A
  s_branch      label_3288                              // 00000000CA44: BF82FFF6
  label_3292:
  s_mov_b64     exec, s[22:23]                          // 00000000CA48: BEFE0416
  v_mov_b32     v28, s20                                // 00000000CA4C: 7E380214
  v_mov_b32     v29, s21                                // 00000000CA50: 7E3A0215
  flat_load_dword  v28, v[28:29]                        // 00000000CA54: DC300000 1C00001C
  v_cndmask_b32  v27, 0, v27, s[2:3]                    // 00000000CA5C: D200001B 000A3680
  v_lshl_b64    v[29:30], 1, v23                        // 00000000CA64: D2C2001D 00022E81
  v_and_b32     v29, exec_lo, v29                       // 00000000CA6C: 363A3A7E
  v_and_b32     v30, exec_hi, v30                       // 00000000CA70: 363C3C7F
  v_cmp_ne_u64  s[2:3], 0, v[29:30]                     // 00000000CA74: D1CA0002 00023A80
  s_mov_b64     s[22:23], exec                          // 00000000CA7C: BE96047E
  s_mov_b64     s[24:25], exec                          // 00000000CA80: BE98047E
  s_nop         0x0000                                  // 00000000CA84: BF800000
  s_nop         0x0000                                  // 00000000CA88: BF800000
  s_nop         0x0000                                  // 00000000CA8C: BF800000
  s_nop         0x0000                                  // 00000000CA90: BF800000
  s_nop         0x0000                                  // 00000000CA94: BF800000
  s_nop         0x0000                                  // 00000000CA98: BF800000
  s_nop         0x0000                                  // 00000000CA9C: BF800000
  label_32A8:
  v_readfirstlane_b32  s1, v23                          // 00000000CAA0: 7E020517
  v_cmp_eq_u32  vcc, s1, v23                            // 00000000CAA4: 7D842E01
  s_and_saveexec_b64  s[26:27], vcc                     // 00000000CAA8: BE9A246A
  s_cbranch_execz  label_32B0                           // 00000000CAAC: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000CAB0: 02020303
  v_mov_b32     v23, s1                                 // 00000000CAB4: 7E2E0201
  s_andn2_b64   s[24:25], s[24:25], exec                // 00000000CAB8: 8A987E18
  s_cbranch_scc0  label_32B2                            // 00000000CABC: BF840002
  label_32B0:
  s_and_b64     exec, s[26:27], s[24:25]                // 00000000CAC0: 87FE181A
  s_branch      label_32A8                              // 00000000CAC4: BF82FFF6
  label_32B2:
  s_mov_b64     exec, s[22:23]                          // 00000000CAC8: BEFE0416
  s_add_u32     s22, s10, 20                            // 00000000CACC: 8016940A
  s_addc_u32    s23, s11, 0                             // 00000000CAD0: 8217800B
  v_mov_b32     v29, s22                                // 00000000CAD4: 7E3A0216
  v_mov_b32     v30, s23                                // 00000000CAD8: 7E3C0217
  flat_load_dword  v29, v[29:30]                        // 00000000CADC: DC300000 1D00001D
  v_cndmask_b32  v23, 0, v23, s[2:3]                    // 00000000CAE4: D2000017 000A2E80
  v_lshl_b64    v[30:31], 1, v21                        // 00000000CAEC: D2C2001E 00022A81
  v_and_b32     v30, exec_lo, v30                       // 00000000CAF4: 363C3C7E
  v_and_b32     v31, exec_hi, v31                       // 00000000CAF8: 363E3E7F
  v_cmp_ne_u64  s[2:3], 0, v[30:31]                     // 00000000CAFC: D1CA0002 00023C80
  s_mov_b64     s[24:25], exec                          // 00000000CB04: BE98047E
  s_mov_b64     s[26:27], exec                          // 00000000CB08: BE9A047E
  s_nop         0x0000                                  // 00000000CB0C: BF800000
  s_nop         0x0000                                  // 00000000CB10: BF800000
  s_nop         0x0000                                  // 00000000CB14: BF800000
  s_nop         0x0000                                  // 00000000CB18: BF800000
  s_nop         0x0000                                  // 00000000CB1C: BF800000
  label_32C8:
  v_readfirstlane_b32  s1, v21                          // 00000000CB20: 7E020515
  v_cmp_eq_u32  vcc, s1, v21                            // 00000000CB24: 7D842A01
  s_and_saveexec_b64  s[28:29], vcc                     // 00000000CB28: BE9C246A
  s_cbranch_execz  label_32D0                           // 00000000CB2C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000CB30: 02020304
  v_mov_b32     v30, s1                                 // 00000000CB34: 7E3C0201
  s_andn2_b64   s[26:27], s[26:27], exec                // 00000000CB38: 8A9A7E1A
  s_cbranch_scc0  label_32D2                            // 00000000CB3C: BF840002
  label_32D0:
  s_and_b64     exec, s[28:29], s[26:27]                // 00000000CB40: 87FE1A1C
  s_branch      label_32C8                              // 00000000CB44: BF82FFF6
  label_32D2:
  s_mov_b64     exec, s[24:25]                          // 00000000CB48: BEFE0418
  v_mov_b32     v31, s22                                // 00000000CB4C: 7E3E0216
  v_mov_b32     v32, s23                                // 00000000CB50: 7E400217
  flat_load_dword  v31, v[31:32]                        // 00000000CB54: DC300000 1F00001F
  v_cndmask_b32  v30, 0, v30, s[2:3]                    // 00000000CB5C: D200001E 000A3C80
  v_lshl_b64    v[32:33], 1, v21                        // 00000000CB64: D2C20020 00022A81
  v_and_b32     v32, exec_lo, v32                       // 00000000CB6C: 3640407E
  v_and_b32     v33, exec_hi, v33                       // 00000000CB70: 3642427F
  v_cmp_ne_u64  s[2:3], 0, v[32:33]                     // 00000000CB74: D1CA0002 00024080
  s_mov_b64     s[24:25], exec                          // 00000000CB7C: BE98047E
  s_mov_b64     s[26:27], exec                          // 00000000CB80: BE9A047E
  s_nop         0x0000                                  // 00000000CB84: BF800000
  s_nop         0x0000                                  // 00000000CB88: BF800000
  s_nop         0x0000                                  // 00000000CB8C: BF800000
  s_nop         0x0000                                  // 00000000CB90: BF800000
  s_nop         0x0000                                  // 00000000CB94: BF800000
  s_nop         0x0000                                  // 00000000CB98: BF800000
  s_nop         0x0000                                  // 00000000CB9C: BF800000
  label_32E8:
  v_readfirstlane_b32  s1, v21                          // 00000000CBA0: 7E020515
  v_cmp_eq_u32  vcc, s1, v21                            // 00000000CBA4: 7D842A01
  s_and_saveexec_b64  s[28:29], vcc                     // 00000000CBA8: BE9C246A
  s_cbranch_execz  label_32F0                           // 00000000CBAC: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000CBB0: 02020303
  v_mov_b32     v21, s1                                 // 00000000CBB4: 7E2A0201
  s_andn2_b64   s[26:27], s[26:27], exec                // 00000000CBB8: 8A9A7E1A
  s_cbranch_scc0  label_32F2                            // 00000000CBBC: BF840002
  label_32F0:
  s_and_b64     exec, s[28:29], s[26:27]                // 00000000CBC0: 87FE1A1C
  s_branch      label_32E8                              // 00000000CBC4: BF82FFF6
  label_32F2:
  s_mov_b64     exec, s[24:25]                          // 00000000CBC8: BEFE0418
  v_cndmask_b32  v21, 0, v21, s[2:3]                    // 00000000CBCC: D2000015 000A2A80
  v_add_i32     v32, vcc, 52, v7                        // 00000000CBD4: 4A400EB4
  v_and_b32     v32, 63, v32                            // 00000000CBD8: 364040BF
  v_lshl_b64    v[33:34], 1, v32                        // 00000000CBDC: D2C20021 00024081
  v_and_b32     v33, exec_lo, v33                       // 00000000CBE4: 3642427E
  v_and_b32     v34, exec_hi, v34                       // 00000000CBE8: 3644447F
  v_cmp_ne_u64  s[2:3], 0, v[33:34]                     // 00000000CBEC: D1CA0002 00024280
  s_mov_b64     s[24:25], exec                          // 00000000CBF4: BE98047E
  s_mov_b64     s[26:27], exec                          // 00000000CBF8: BE9A047E
  s_nop         0x0000                                  // 00000000CBFC: BF800000
  label_3300:
  v_readfirstlane_b32  s1, v32                          // 00000000CC00: 7E020520
  v_cmp_eq_u32  vcc, s1, v32                            // 00000000CC04: 7D844001
  s_and_saveexec_b64  s[28:29], vcc                     // 00000000CC08: BE9C246A
  s_cbranch_execz  label_3308                           // 00000000CC0C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000CC10: 02020304
  v_mov_b32     v33, s1                                 // 00000000CC14: 7E420201
  s_andn2_b64   s[26:27], s[26:27], exec                // 00000000CC18: 8A9A7E1A
  s_cbranch_scc0  label_330A                            // 00000000CC1C: BF840002
  label_3308:
  s_and_b64     exec, s[28:29], s[26:27]                // 00000000CC20: 87FE1A1C
  s_branch      label_3300                              // 00000000CC24: BF82FFF6
  label_330A:
  s_mov_b64     exec, s[24:25]                          // 00000000CC28: BEFE0418
  v_cndmask_b32  v33, 0, v33, s[2:3]                    // 00000000CC2C: D2000021 000A4280
  v_lshl_b64    v[34:35], 1, v32                        // 00000000CC34: D2C20022 00024081
  v_and_b32     v34, exec_lo, v34                       // 00000000CC3C: 3644447E
  v_and_b32     v35, exec_hi, v35                       // 00000000CC40: 3646467F
  v_cmp_ne_u64  s[2:3], 0, v[34:35]                     // 00000000CC44: D1CA0002 00024480
  s_mov_b64     s[24:25], exec                          // 00000000CC4C: BE98047E
  s_mov_b64     s[26:27], exec                          // 00000000CC50: BE9A047E
  s_nop         0x0000                                  // 00000000CC54: BF800000
  s_nop         0x0000                                  // 00000000CC58: BF800000
  s_nop         0x0000                                  // 00000000CC5C: BF800000
  label_3318:
  v_readfirstlane_b32  s1, v32                          // 00000000CC60: 7E020520
  v_cmp_eq_u32  vcc, s1, v32                            // 00000000CC64: 7D844001
  s_and_saveexec_b64  s[28:29], vcc                     // 00000000CC68: BE9C246A
  s_cbranch_execz  label_3320                           // 00000000CC6C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000CC70: 02020303
  v_mov_b32     v34, s1                                 // 00000000CC74: 7E440201
  s_andn2_b64   s[26:27], s[26:27], exec                // 00000000CC78: 8A9A7E1A
  s_cbranch_scc0  label_3322                            // 00000000CC7C: BF840002
  label_3320:
  s_and_b64     exec, s[28:29], s[26:27]                // 00000000CC80: 87FE1A1C
  s_branch      label_3318                              // 00000000CC84: BF82FFF6
  label_3322:
  s_mov_b64     exec, s[24:25]                          // 00000000CC88: BEFE0418
  v_cndmask_b32  v34, 0, v34, s[2:3]                    // 00000000CC8C: D2000022 000A4480
  v_lshl_b64    v[35:36], 1, v32                        // 00000000CC94: D2C20023 00024081
  v_and_b32     v35, exec_lo, v35                       // 00000000CC9C: 3646467E
  v_and_b32     v36, exec_hi, v36                       // 00000000CCA0: 3648487F
  v_cmp_ne_u64  s[2:3], 0, v[35:36]                     // 00000000CCA4: D1CA0002 00024680
  s_mov_b64     s[24:25], exec                          // 00000000CCAC: BE98047E
  s_mov_b64     s[26:27], exec                          // 00000000CCB0: BE9A047E
  s_nop         0x0000                                  // 00000000CCB4: BF800000
  s_nop         0x0000                                  // 00000000CCB8: BF800000
  s_nop         0x0000                                  // 00000000CCBC: BF800000
  label_3330:
  v_readfirstlane_b32  s1, v32                          // 00000000CCC0: 7E020520
  v_cmp_eq_u32  vcc, s1, v32                            // 00000000CCC4: 7D844001
  s_and_saveexec_b64  s[28:29], vcc                     // 00000000CCC8: BE9C246A
  s_cbranch_execz  label_3338                           // 00000000CCCC: BF880004
  v_readlane_b32  s1, v9, s1                            // 00000000CCD0: 02020309
  v_mov_b32     v32, s1                                 // 00000000CCD4: 7E400201
  s_andn2_b64   s[26:27], s[26:27], exec                // 00000000CCD8: 8A9A7E1A
  s_cbranch_scc0  label_333A                            // 00000000CCDC: BF840002
  label_3338:
  s_and_b64     exec, s[28:29], s[26:27]                // 00000000CCE0: 87FE1A1C
  s_branch      label_3330                              // 00000000CCE4: BF82FFF6
  label_333A:
  s_mov_b64     exec, s[24:25]                          // 00000000CCE8: BEFE0418
  v_cndmask_b32  v32, 0, v32, s[2:3]                    // 00000000CCEC: D2000020 000A4080
  v_cmp_ge_i32  vcc, 9, v2                              // 00000000CCF4: 7D0C0489
  s_and_saveexec_b64  s[2:3], vcc                       // 00000000CCF8: BE82246A
  s_cbranch_execz  label_3348                           // 00000000CCFC: BF880008
  s_add_u32     s24, s10, 24                            // 00000000CD00: 8018980A
  s_addc_u32    s25, s11, 0                             // 00000000CD04: 8219800B
  v_mov_b32     v34, s24                                // 00000000CD08: 7E440218
  v_mov_b32     v35, s25                                // 00000000CD0C: 7E460219
  flat_load_dword  v32, v[34:35]                        // 00000000CD10: DC300000 20000022
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000CD18: BF8C0070
  v_mul_f32     v32, v32, v33                           // 00000000CD1C: 10404320
  label_3348:
  s_andn2_b64   exec, s[2:3], exec                      // 00000000CD20: 8AFE7E02
  s_cbranch_execz  label_3357                           // 00000000CD24: BF88000D
  s_add_u32     s24, s10, 24                            // 00000000CD28: 8018980A
  s_addc_u32    s25, s11, 0                             // 00000000CD2C: 8219800B
  v_mov_b32     v37, s24                                // 00000000CD30: 7E4A0218
  v_mov_b32     v38, s25                                // 00000000CD34: 7E4C0219
  flat_load_dword  v36, v[37:38]                        // 00000000CD38: DC300000 24000025
  flat_load_dword  v33, v[37:38]                        // 00000000CD40: DC300000 21000025
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000CD48: BF8C0070
  v_mul_f32     v32, v33, v32                           // 00000000CD4C: 10404121
  v_mul_f32     v33, v36, v34                           // 00000000CD50: 10424524
  v_cmp_gt_i32  vcc, 62, v2                             // 00000000CD54: 7D0804BE
  v_cndmask_b32  v32, v32, v33, vcc                     // 00000000CD58: 00404320
  label_3357:
  s_mov_b64     exec, s[2:3]                            // 00000000CD5C: BEFE0402
  v_add_i32     v33, vcc, 53, v7                        // 00000000CD60: 4A420EB5
  v_and_b32     v33, 63, v33                            // 00000000CD64: 364242BF
  v_lshl_b64    v[34:35], 1, v33                        // 00000000CD68: D2C20022 00024281
  v_and_b32     v34, exec_lo, v34                       // 00000000CD70: 3644447E
  v_and_b32     v35, exec_hi, v35                       // 00000000CD74: 3646467F
  v_cmp_ne_u64  s[2:3], 0, v[34:35]                     // 00000000CD78: D1CA0002 00024480
  s_mov_b64     s[24:25], exec                          // 00000000CD80: BE98047E
  s_mov_b64     s[26:27], exec                          // 00000000CD84: BE9A047E
  s_nop         0x0000                                  // 00000000CD88: BF800000
  s_nop         0x0000                                  // 00000000CD8C: BF800000
  s_nop         0x0000                                  // 00000000CD90: BF800000
  s_nop         0x0000                                  // 00000000CD94: BF800000
  s_nop         0x0000                                  // 00000000CD98: BF800000
  s_nop         0x0000                                  // 00000000CD9C: BF800000
  label_3368:
  v_readfirstlane_b32  s1, v33                          // 00000000CDA0: 7E020521
  v_cmp_eq_u32  vcc, s1, v33                            // 00000000CDA4: 7D844201
  s_and_saveexec_b64  s[28:29], vcc                     // 00000000CDA8: BE9C246A
  s_cbranch_execz  label_3370                           // 00000000CDAC: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000CDB0: 02020304
  v_mov_b32     v34, s1                                 // 00000000CDB4: 7E440201
  s_andn2_b64   s[26:27], s[26:27], exec                // 00000000CDB8: 8A9A7E1A
  s_cbranch_scc0  label_3372                            // 00000000CDBC: BF840002
  label_3370:
  s_and_b64     exec, s[28:29], s[26:27]                // 00000000CDC0: 87FE1A1C
  s_branch      label_3368                              // 00000000CDC4: BF82FFF6
  label_3372:
  s_mov_b64     exec, s[24:25]                          // 00000000CDC8: BEFE0418
  v_cndmask_b32  v34, 0, v34, s[2:3]                    // 00000000CDCC: D2000022 000A4480
  v_lshl_b64    v[35:36], 1, v33                        // 00000000CDD4: D2C20023 00024281
  v_and_b32     v35, exec_lo, v35                       // 00000000CDDC: 3646467E
  v_and_b32     v36, exec_hi, v36                       // 00000000CDE0: 3648487F
  v_cmp_ne_u64  s[2:3], 0, v[35:36]                     // 00000000CDE4: D1CA0002 00024680
  s_mov_b64     s[24:25], exec                          // 00000000CDEC: BE98047E
  s_mov_b64     s[26:27], exec                          // 00000000CDF0: BE9A047E
  s_nop         0x0000                                  // 00000000CDF4: BF800000
  s_nop         0x0000                                  // 00000000CDF8: BF800000
  s_nop         0x0000                                  // 00000000CDFC: BF800000
  label_3380:
  v_readfirstlane_b32  s1, v33                          // 00000000CE00: 7E020521
  v_cmp_eq_u32  vcc, s1, v33                            // 00000000CE04: 7D844201
  s_and_saveexec_b64  s[28:29], vcc                     // 00000000CE08: BE9C246A
  s_cbranch_execz  label_3388                           // 00000000CE0C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000CE10: 02020303
  v_mov_b32     v35, s1                                 // 00000000CE14: 7E460201
  s_andn2_b64   s[26:27], s[26:27], exec                // 00000000CE18: 8A9A7E1A
  s_cbranch_scc0  label_338A                            // 00000000CE1C: BF840002
  label_3388:
  s_and_b64     exec, s[28:29], s[26:27]                // 00000000CE20: 87FE1A1C
  s_branch      label_3380                              // 00000000CE24: BF82FFF6
  label_338A:
  s_mov_b64     exec, s[24:25]                          // 00000000CE28: BEFE0418
  v_cndmask_b32  v35, 0, v35, s[2:3]                    // 00000000CE2C: D2000023 000A4680
  v_lshl_b64    v[36:37], 1, v33                        // 00000000CE34: D2C20024 00024281
  v_and_b32     v36, exec_lo, v36                       // 00000000CE3C: 3648487E
  v_and_b32     v37, exec_hi, v37                       // 00000000CE40: 364A4A7F
  v_cmp_ne_u64  s[2:3], 0, v[36:37]                     // 00000000CE44: D1CA0002 00024880
  s_mov_b64     s[24:25], exec                          // 00000000CE4C: BE98047E
  s_mov_b64     s[26:27], exec                          // 00000000CE50: BE9A047E
  s_nop         0x0000                                  // 00000000CE54: BF800000
  s_nop         0x0000                                  // 00000000CE58: BF800000
  s_nop         0x0000                                  // 00000000CE5C: BF800000
  label_3398:
  v_readfirstlane_b32  s1, v33                          // 00000000CE60: 7E020521
  v_cmp_eq_u32  vcc, s1, v33                            // 00000000CE64: 7D844201
  s_and_saveexec_b64  s[28:29], vcc                     // 00000000CE68: BE9C246A
  s_cbranch_execz  label_33A0                           // 00000000CE6C: BF880004
  v_readlane_b32  s1, v9, s1                            // 00000000CE70: 02020309
  v_mov_b32     v33, s1                                 // 00000000CE74: 7E420201
  s_andn2_b64   s[26:27], s[26:27], exec                // 00000000CE78: 8A9A7E1A
  s_cbranch_scc0  label_33A2                            // 00000000CE7C: BF840002
  label_33A0:
  s_and_b64     exec, s[28:29], s[26:27]                // 00000000CE80: 87FE1A1C
  s_branch      label_3398                              // 00000000CE84: BF82FFF6
  label_33A2:
  s_mov_b64     exec, s[24:25]                          // 00000000CE88: BEFE0418
  v_cndmask_b32  v33, 0, v33, s[2:3]                    // 00000000CE8C: D2000021 000A4280
  v_cmp_ge_i32  vcc, 8, v2                              // 00000000CE94: 7D0C0488
  s_and_saveexec_b64  s[2:3], vcc                       // 00000000CE98: BE82246A
  s_cbranch_execz  label_33B0                           // 00000000CE9C: BF880008
  s_add_u32     s24, s10, 28                            // 00000000CEA0: 80189C0A
  s_addc_u32    s25, s11, 0                             // 00000000CEA4: 8219800B
  v_mov_b32     v35, s24                                // 00000000CEA8: 7E460218
  v_mov_b32     v36, s25                                // 00000000CEAC: 7E480219
  flat_load_dword  v33, v[35:36]                        // 00000000CEB0: DC300000 21000023
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000CEB8: BF8C0070
  v_mul_f32     v33, v33, v34                           // 00000000CEBC: 10424521
  label_33B0:
  s_andn2_b64   exec, s[2:3], exec                      // 00000000CEC0: 8AFE7E02
  s_cbranch_execz  label_33BF                           // 00000000CEC4: BF88000D
  s_add_u32     s24, s10, 28                            // 00000000CEC8: 80189C0A
  s_addc_u32    s25, s11, 0                             // 00000000CECC: 8219800B
  v_mov_b32     v38, s24                                // 00000000CED0: 7E4C0218
  v_mov_b32     v39, s25                                // 00000000CED4: 7E4E0219
  flat_load_dword  v37, v[38:39]                        // 00000000CED8: DC300000 25000026
  flat_load_dword  v34, v[38:39]                        // 00000000CEE0: DC300000 22000026
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000CEE8: BF8C0070
  v_mul_f32     v33, v34, v33                           // 00000000CEEC: 10424322
  v_mul_f32     v34, v37, v35                           // 00000000CEF0: 10444725
  v_cmp_gt_i32  vcc, 61, v2                             // 00000000CEF4: 7D0804BD
  v_cndmask_b32  v33, v33, v34, vcc                     // 00000000CEF8: 00424521
  label_33BF:
  s_mov_b64     exec, s[2:3]                            // 00000000CEFC: BEFE0402
  v_add_i32     v34, vcc, 54, v7                        // 00000000CF00: 4A440EB6
  v_and_b32     v34, 63, v34                            // 00000000CF04: 364444BF
  v_lshl_b64    v[35:36], 1, v34                        // 00000000CF08: D2C20023 00024481
  v_and_b32     v35, exec_lo, v35                       // 00000000CF10: 3646467E
  v_and_b32     v36, exec_hi, v36                       // 00000000CF14: 3648487F
  v_cmp_ne_u64  s[2:3], 0, v[35:36]                     // 00000000CF18: D1CA0002 00024680
  s_mov_b64     s[24:25], exec                          // 00000000CF20: BE98047E
  s_mov_b64     s[26:27], exec                          // 00000000CF24: BE9A047E
  s_nop         0x0000                                  // 00000000CF28: BF800000
  s_nop         0x0000                                  // 00000000CF2C: BF800000
  s_nop         0x0000                                  // 00000000CF30: BF800000
  s_nop         0x0000                                  // 00000000CF34: BF800000
  s_nop         0x0000                                  // 00000000CF38: BF800000
  s_nop         0x0000                                  // 00000000CF3C: BF800000
  label_33D0:
  v_readfirstlane_b32  s1, v34                          // 00000000CF40: 7E020522
  v_cmp_eq_u32  vcc, s1, v34                            // 00000000CF44: 7D844401
  s_and_saveexec_b64  s[28:29], vcc                     // 00000000CF48: BE9C246A
  s_cbranch_execz  label_33D8                           // 00000000CF4C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000CF50: 02020304
  v_mov_b32     v35, s1                                 // 00000000CF54: 7E460201
  s_andn2_b64   s[26:27], s[26:27], exec                // 00000000CF58: 8A9A7E1A
  s_cbranch_scc0  label_33DA                            // 00000000CF5C: BF840002
  label_33D8:
  s_and_b64     exec, s[28:29], s[26:27]                // 00000000CF60: 87FE1A1C
  s_branch      label_33D0                              // 00000000CF64: BF82FFF6
  label_33DA:
  s_mov_b64     exec, s[24:25]                          // 00000000CF68: BEFE0418
  v_cndmask_b32  v4, 0, v35, s[2:3]                     // 00000000CF6C: D2000004 000A4680
  v_lshl_b64    v[35:36], 1, v34                        // 00000000CF74: D2C20023 00024481
  v_and_b32     v35, exec_lo, v35                       // 00000000CF7C: 3646467E
  v_and_b32     v36, exec_hi, v36                       // 00000000CF80: 3648487F
  v_cmp_ne_u64  s[2:3], 0, v[35:36]                     // 00000000CF84: D1CA0002 00024680
  s_mov_b64     s[24:25], exec                          // 00000000CF8C: BE98047E
  s_mov_b64     s[26:27], exec                          // 00000000CF90: BE9A047E
  s_nop         0x0000                                  // 00000000CF94: BF800000
  s_nop         0x0000                                  // 00000000CF98: BF800000
  s_nop         0x0000                                  // 00000000CF9C: BF800000
  label_33E8:
  v_readfirstlane_b32  s1, v34                          // 00000000CFA0: 7E020522
  v_cmp_eq_u32  vcc, s1, v34                            // 00000000CFA4: 7D844401
  s_and_saveexec_b64  s[28:29], vcc                     // 00000000CFA8: BE9C246A
  s_cbranch_execz  label_33F0                           // 00000000CFAC: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000CFB0: 02020303
  v_mov_b32     v35, s1                                 // 00000000CFB4: 7E460201
  s_andn2_b64   s[26:27], s[26:27], exec                // 00000000CFB8: 8A9A7E1A
  s_cbranch_scc0  label_33F2                            // 00000000CFBC: BF840002
  label_33F0:
  s_and_b64     exec, s[28:29], s[26:27]                // 00000000CFC0: 87FE1A1C
  s_branch      label_33E8                              // 00000000CFC4: BF82FFF6
  label_33F2:
  s_mov_b64     exec, s[24:25]                          // 00000000CFC8: BEFE0418
  v_cndmask_b32  v35, 0, v35, s[2:3]                    // 00000000CFCC: D2000023 000A4680
  v_lshl_b64    v[36:37], 1, v34                        // 00000000CFD4: D2C20024 00024481
  v_and_b32     v36, exec_lo, v36                       // 00000000CFDC: 3648487E
  v_and_b32     v37, exec_hi, v37                       // 00000000CFE0: 364A4A7F
  v_cmp_ne_u64  s[2:3], 0, v[36:37]                     // 00000000CFE4: D1CA0002 00024880
  s_mov_b64     s[24:25], exec                          // 00000000CFEC: BE98047E
  s_mov_b64     s[26:27], exec                          // 00000000CFF0: BE9A047E
  s_nop         0x0000                                  // 00000000CFF4: BF800000
  s_nop         0x0000                                  // 00000000CFF8: BF800000
  s_nop         0x0000                                  // 00000000CFFC: BF800000
  label_3400:
  v_readfirstlane_b32  s1, v34                          // 00000000D000: 7E020522
  v_cmp_eq_u32  vcc, s1, v34                            // 00000000D004: 7D844401
  s_and_saveexec_b64  s[28:29], vcc                     // 00000000D008: BE9C246A
  s_cbranch_execz  label_3408                           // 00000000D00C: BF880004
  v_readlane_b32  s1, v9, s1                            // 00000000D010: 02020309
  v_mov_b32     v34, s1                                 // 00000000D014: 7E440201
  s_andn2_b64   s[26:27], s[26:27], exec                // 00000000D018: 8A9A7E1A
  s_cbranch_scc0  label_340A                            // 00000000D01C: BF840002
  label_3408:
  s_and_b64     exec, s[28:29], s[26:27]                // 00000000D020: 87FE1A1C
  s_branch      label_3400                              // 00000000D024: BF82FFF6
  label_340A:
  s_mov_b64     exec, s[24:25]                          // 00000000D028: BEFE0418
  v_cndmask_b32  v34, 0, v34, s[2:3]                    // 00000000D02C: D2000022 000A4480
  v_cmp_ge_i32  vcc, 7, v2                              // 00000000D034: 7D0C0487
  s_and_saveexec_b64  s[2:3], vcc                       // 00000000D038: BE82246A
  s_cbranch_execz  label_3418                           // 00000000D03C: BF880008
  s_add_u32     s24, s10, 32                            // 00000000D040: 8018A00A
  s_addc_u32    s25, s11, 0                             // 00000000D044: 8219800B
  v_mov_b32     v34, s24                                // 00000000D048: 7E440218
  v_mov_b32     v35, s25                                // 00000000D04C: 7E460219
  flat_load_dword  v34, v[34:35]                        // 00000000D050: DC300000 22000022
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000D058: BF8C0070
  v_mul_f32     v4, v34, v4                             // 00000000D05C: 10080922
  label_3418:
  s_andn2_b64   exec, s[2:3], exec                      // 00000000D060: 8AFE7E02
  s_cbranch_execz  label_3427                           // 00000000D064: BF88000D
  s_add_u32     s24, s10, 32                            // 00000000D068: 8018A00A
  s_addc_u32    s25, s11, 0                             // 00000000D06C: 8219800B
  v_mov_b32     v38, s24                                // 00000000D070: 7E4C0218
  v_mov_b32     v39, s25                                // 00000000D074: 7E4E0219
  flat_load_dword  v37, v[38:39]                        // 00000000D078: DC300000 25000026
  flat_load_dword  v4, v[38:39]                         // 00000000D080: DC300000 04000026
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000D088: BF8C0070
  v_mul_f32     v4, v4, v34                             // 00000000D08C: 10084504
  v_mul_f32     v34, v37, v35                           // 00000000D090: 10444725
  v_cmp_gt_i32  vcc, 60, v2                             // 00000000D094: 7D0804BC
  v_cndmask_b32  v4, v4, v34, vcc                       // 00000000D098: 00084504
  label_3427:
  s_mov_b64     exec, s[2:3]                            // 00000000D09C: BEFE0402
  v_add_i32     v34, vcc, 16, v1                        // 00000000D0A0: 4A440290
  v_cmp_gt_i32  vcc, s0, v34                            // 00000000D0A4: 7D084400
  s_and_b64     s[2:3], s[8:9], vcc                     // 00000000D0A8: 87826A08
  s_and_saveexec_b64  s[2:3], s[2:3]                    // 00000000D0AC: BE822402
  v_mul_f32     v5, v5, v8                              // 00000000D0B0: 100A1105
  s_cbranch_execz  label_345D                           // 00000000D0B4: BF88002F
  v_mul_f32     v8, v11, v10                            // 00000000D0B8: 1010150B
  v_cmp_gt_i32  vcc, 26, v2                             // 00000000D0BC: 7D08049A
  v_mul_f32     v10, v12, v15                           // 00000000D0C0: 10141F0C
  v_mul_f32     v11, v16, v14                           // 00000000D0C4: 10161D10
  v_cndmask_b32  v5, v8, v5, vcc                        // 00000000D0C8: 000A0B08
  v_mul_f32     v8, v17, v18                            // 00000000D0CC: 10102511
  v_mul_f32     v12, v19, v13                           // 00000000D0D0: 10181B13
  v_cmp_gt_i32  vcc, 25, v2                             // 00000000D0D4: 7D080499
  v_cndmask_b32  v10, v11, v10, vcc                     // 00000000D0D8: 0014150B
  v_mul_f32     v11, v20, v24                           // 00000000D0DC: 10163114
  v_mul_f32     v13, v25, v22                           // 00000000D0E0: 101A2D19
  v_cndmask_b32  v8, v12, v8, s[12:13]                  // 00000000D0E4: D2000008 0032110C
  v_mul_f32     v12, v26, v27                           // 00000000D0EC: 1018371A
  v_mul_f32     v14, v28, v23                           // 00000000D0F0: 101C2F1C
  v_cmp_lt_i32  s[12:13], v2, 18                        // 00000000D0F4: D102000C 00012502
  v_add_f32     v5, 0, v5                               // 00000000D0FC: 060A0A80
  v_mul_f32     v15, v29, v30                           // 00000000D100: 101E3D1D
  v_mul_f32     v16, v31, v21                           // 00000000D104: 10202B1F
  v_cmp_lt_i32  s[24:25], v2, 17                        // 00000000D108: D1020018 00012302
  v_cndmask_b32  v11, v13, v11, s[12:13]                // 00000000D110: D200000B 0032170D
  v_add_f32     v5, v5, v10                             // 00000000D118: 060A1505
  v_cmp_gt_i32  vcc, 16, v2                             // 00000000D11C: 7D080490
  v_cndmask_b32  v10, v14, v12, s[24:25]                // 00000000D120: D200000A 0062190E
  v_add_f32     v5, v5, v8                              // 00000000D128: 060A1105
  v_cndmask_b32  v8, v16, v15, vcc                      // 00000000D12C: 00101F10
  v_add_f32     v5, v5, v11                             // 00000000D130: 060A1705
  v_add_f32     v5, v5, v10                             // 00000000D134: 060A1505
  v_add_f32     v5, v5, v8                              // 00000000D138: 060A1105
  v_add_f32     v5, v5, v32                             // 00000000D13C: 060A4105
  v_add_f32     v5, v5, v33                             // 00000000D140: 060A4305
  v_add_f32     v4, v5, v4                              // 00000000D144: 06080905
  v_mul_lo_u32  v5, v34, s4                             // 00000000D148: D2D20005 00000922
  v_add_i32     v10, vcc, v5, v0                        // 00000000D150: 4A140105
  v_ashrrev_i32  v11, 31, v10                           // 00000000D154: 3016149F
  v_lshl_b64    v[10:11], v[10:11], 2                   // 00000000D158: D2C2000A 0001050A
  v_add_i32     v10, vcc, s6, v10                       // 00000000D160: 4A141406
  v_mov_b32     v8, s7                                  // 00000000D164: 7E100207
  v_addc_u32    v11, vcc, v8, v11, vcc                  // 00000000D168: 50161708
  flat_store_dword  v[10:11], v4                        // 00000000D16C: DC700000 0000040A
  label_345D:
  s_mov_b64     exec, s[2:3]                            // 00000000D174: BEFE0402
  v_mov_b32     v4, s10                                 // 00000000D178: 7E08020A
  v_mov_b32     v5, s11                                 // 00000000D17C: 7E0A020B
  v_add_i32     v8, vcc, 48, v7                         // 00000000D180: 4A100EB0
  v_and_b32     v8, 63, v8                              // 00000000D184: 361010BF
  flat_load_dword  v4, v[4:5]                           // 00000000D188: DC300000 04000004
  v_lshl_b64    v[10:11], 1, v8                         // 00000000D190: D2C2000A 00021081
  v_and_b32     v10, exec_lo, v10                       // 00000000D198: 3614147E
  v_and_b32     v11, exec_hi, v11                       // 00000000D19C: 3616167F
  v_cmp_ne_u64  s[2:3], 0, v[10:11]                     // 00000000D1A0: D1CA0002 00021480
  s_mov_b64     s[12:13], exec                          // 00000000D1A8: BE8C047E
  s_mov_b64     s[24:25], exec                          // 00000000D1AC: BE98047E
  s_nop         0x0000                                  // 00000000D1B0: BF800000
  s_nop         0x0000                                  // 00000000D1B4: BF800000
  s_nop         0x0000                                  // 00000000D1B8: BF800000
  s_nop         0x0000                                  // 00000000D1BC: BF800000
  label_3470:
  v_readfirstlane_b32  s1, v8                           // 00000000D1C0: 7E020508
  v_cmp_eq_u32  vcc, s1, v8                             // 00000000D1C4: 7D841001
  s_and_saveexec_b64  s[26:27], vcc                     // 00000000D1C8: BE9A246A
  s_cbranch_execz  label_3478                           // 00000000D1CC: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000D1D0: 02020303
  v_mov_b32     v5, s1                                  // 00000000D1D4: 7E0A0201
  s_andn2_b64   s[24:25], s[24:25], exec                // 00000000D1D8: 8A987E18
  s_cbranch_scc0  label_347A                            // 00000000D1DC: BF840002
  label_3478:
  s_and_b64     exec, s[26:27], s[24:25]                // 00000000D1E0: 87FE181A
  s_branch      label_3470                              // 00000000D1E4: BF82FFF6
  label_347A:
  s_mov_b64     exec, s[12:13]                          // 00000000D1E8: BEFE040C
  v_mov_b32     v10, s10                                // 00000000D1EC: 7E14020A
  v_mov_b32     v11, s11                                // 00000000D1F0: 7E16020B
  flat_load_dword  v10, v[10:11]                        // 00000000D1F4: DC300000 0A00000A
  v_cndmask_b32  v5, 0, v5, s[2:3]                      // 00000000D1FC: D2000005 000A0A80
  v_lshl_b64    v[11:12], 1, v8                         // 00000000D204: D2C2000B 00021081
  v_and_b32     v11, exec_lo, v11                       // 00000000D20C: 3616167E
  v_and_b32     v12, exec_hi, v12                       // 00000000D210: 3618187F
  v_cmp_ne_u64  s[2:3], 0, v[11:12]                     // 00000000D214: D1CA0002 00021680
  s_mov_b64     s[12:13], exec                          // 00000000D21C: BE8C047E
  s_mov_b64     s[24:25], exec                          // 00000000D220: BE98047E
  s_nop         0x0000                                  // 00000000D224: BF800000
  s_nop         0x0000                                  // 00000000D228: BF800000
  s_nop         0x0000                                  // 00000000D22C: BF800000
  s_nop         0x0000                                  // 00000000D230: BF800000
  s_nop         0x0000                                  // 00000000D234: BF800000
  s_nop         0x0000                                  // 00000000D238: BF800000
  s_nop         0x0000                                  // 00000000D23C: BF800000
  label_3490:
  v_readfirstlane_b32  s1, v8                           // 00000000D240: 7E020508
  v_cmp_eq_u32  vcc, s1, v8                             // 00000000D244: 7D841001
  s_and_saveexec_b64  s[26:27], vcc                     // 00000000D248: BE9A246A
  s_cbranch_execz  label_3498                           // 00000000D24C: BF880004
  v_readlane_b32  s1, v9, s1                            // 00000000D250: 02020309
  v_mov_b32     v8, s1                                  // 00000000D254: 7E100201
  s_andn2_b64   s[24:25], s[24:25], exec                // 00000000D258: 8A987E18
  s_cbranch_scc0  label_349A                            // 00000000D25C: BF840002
  label_3498:
  s_and_b64     exec, s[26:27], s[24:25]                // 00000000D260: 87FE181A
  s_branch      label_3490                              // 00000000D264: BF82FFF6
  label_349A:
  s_mov_b64     exec, s[12:13]                          // 00000000D268: BEFE040C
  v_mov_b32     v11, s14                                // 00000000D26C: 7E16020E
  v_mov_b32     v12, s15                                // 00000000D270: 7E18020F
  v_add_i32     v13, vcc, 49, v7                        // 00000000D274: 4A1A0EB1
  v_and_b32     v13, 63, v13                            // 00000000D278: 361A1ABF
  flat_load_dword  v11, v[11:12]                        // 00000000D27C: DC300000 0B00000B
  v_cndmask_b32  v8, 0, v8, s[2:3]                      // 00000000D284: D2000008 000A1080
  v_lshl_b64    v[14:15], 1, v13                        // 00000000D28C: D2C2000E 00021A81
  v_and_b32     v14, exec_lo, v14                       // 00000000D294: 361C1C7E
  v_and_b32     v15, exec_hi, v15                       // 00000000D298: 361E1E7F
  v_cmp_ne_u64  s[2:3], 0, v[14:15]                     // 00000000D29C: D1CA0002 00021C80
  s_mov_b64     s[12:13], exec                          // 00000000D2A4: BE8C047E
  s_mov_b64     s[24:25], exec                          // 00000000D2A8: BE98047E
  s_nop         0x0000                                  // 00000000D2AC: BF800000
  s_nop         0x0000                                  // 00000000D2B0: BF800000
  s_nop         0x0000                                  // 00000000D2B4: BF800000
  s_nop         0x0000                                  // 00000000D2B8: BF800000
  s_nop         0x0000                                  // 00000000D2BC: BF800000
  label_34B0:
  v_readfirstlane_b32  s1, v13                          // 00000000D2C0: 7E02050D
  v_cmp_eq_u32  vcc, s1, v13                            // 00000000D2C4: 7D841A01
  s_and_saveexec_b64  s[26:27], vcc                     // 00000000D2C8: BE9A246A
  s_cbranch_execz  label_34B8                           // 00000000D2CC: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000D2D0: 02020303
  v_mov_b32     v12, s1                                 // 00000000D2D4: 7E180201
  s_andn2_b64   s[24:25], s[24:25], exec                // 00000000D2D8: 8A987E18
  s_cbranch_scc0  label_34BA                            // 00000000D2DC: BF840002
  label_34B8:
  s_and_b64     exec, s[26:27], s[24:25]                // 00000000D2E0: 87FE181A
  s_branch      label_34B0                              // 00000000D2E4: BF82FFF6
  label_34BA:
  s_mov_b64     exec, s[12:13]                          // 00000000D2E8: BEFE040C
  v_mov_b32     v14, s14                                // 00000000D2EC: 7E1C020E
  v_mov_b32     v15, s15                                // 00000000D2F0: 7E1E020F
  v_add_i32     v16, vcc, 50, v7                        // 00000000D2F4: 4A200EB2
  flat_load_dword  v14, v[14:15]                        // 00000000D2F8: DC300000 0E00000E
  v_cndmask_b32  v12, 0, v12, s[2:3]                    // 00000000D300: D200000C 000A1880
  v_and_b32     v15, 63, v16                            // 00000000D308: 361E20BF
  v_lshl_b64    v[16:17], 1, v13                        // 00000000D30C: D2C20010 00021A81
  v_and_b32     v16, exec_lo, v16                       // 00000000D314: 3620207E
  v_and_b32     v17, exec_hi, v17                       // 00000000D318: 3622227F
  v_cmp_ne_u64  s[2:3], 0, v[16:17]                     // 00000000D31C: D1CA0002 00022080
  s_mov_b64     s[12:13], exec                          // 00000000D324: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000D328: BE8E047E
  s_nop         0x0000                                  // 00000000D32C: BF800000
  s_nop         0x0000                                  // 00000000D330: BF800000
  s_nop         0x0000                                  // 00000000D334: BF800000
  s_nop         0x0000                                  // 00000000D338: BF800000
  s_nop         0x0000                                  // 00000000D33C: BF800000
  label_34D0:
  v_readfirstlane_b32  s1, v13                          // 00000000D340: 7E02050D
  v_cmp_eq_u32  vcc, s1, v13                            // 00000000D344: 7D841A01
  s_and_saveexec_b64  s[24:25], vcc                     // 00000000D348: BE98246A
  s_cbranch_execz  label_34D8                           // 00000000D34C: BF880004
  v_readlane_b32  s1, v9, s1                            // 00000000D350: 02020309
  v_mov_b32     v13, s1                                 // 00000000D354: 7E1A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000D358: 8A8E7E0E
  s_cbranch_scc0  label_34DA                            // 00000000D35C: BF840002
  label_34D8:
  s_and_b64     exec, s[24:25], s[14:15]                // 00000000D360: 87FE0E18
  s_branch      label_34D0                              // 00000000D364: BF82FFF6
  label_34DA:
  s_mov_b64     exec, s[12:13]                          // 00000000D368: BEFE040C
  v_mov_b32     v16, s16                                // 00000000D36C: 7E200210
  v_mov_b32     v17, s17                                // 00000000D370: 7E220211
  flat_load_dword  v16, v[16:17]                        // 00000000D374: DC300000 10000010
  v_cndmask_b32  v13, 0, v13, s[2:3]                    // 00000000D37C: D200000D 000A1A80
  v_lshl_b64    v[17:18], 1, v15                        // 00000000D384: D2C20011 00021E81
  v_and_b32     v17, exec_lo, v17                       // 00000000D38C: 3622227E
  v_and_b32     v18, exec_hi, v18                       // 00000000D390: 3624247F
  v_cmp_ne_u64  s[2:3], 0, v[17:18]                     // 00000000D394: D1CA0002 00022280
  s_mov_b64     s[12:13], exec                          // 00000000D39C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000D3A0: BE8E047E
  s_nop         0x0000                                  // 00000000D3A4: BF800000
  s_nop         0x0000                                  // 00000000D3A8: BF800000
  s_nop         0x0000                                  // 00000000D3AC: BF800000
  s_nop         0x0000                                  // 00000000D3B0: BF800000
  s_nop         0x0000                                  // 00000000D3B4: BF800000
  s_nop         0x0000                                  // 00000000D3B8: BF800000
  s_nop         0x0000                                  // 00000000D3BC: BF800000
  label_34F0:
  v_readfirstlane_b32  s1, v15                          // 00000000D3C0: 7E02050F
  v_cmp_eq_u32  vcc, s1, v15                            // 00000000D3C4: 7D841E01
  s_and_saveexec_b64  s[24:25], vcc                     // 00000000D3C8: BE98246A
  s_cbranch_execz  label_34F8                           // 00000000D3CC: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000D3D0: 02020303
  v_mov_b32     v17, s1                                 // 00000000D3D4: 7E220201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000D3D8: 8A8E7E0E
  s_cbranch_scc0  label_34FA                            // 00000000D3DC: BF840002
  label_34F8:
  s_and_b64     exec, s[24:25], s[14:15]                // 00000000D3E0: 87FE0E18
  s_branch      label_34F0                              // 00000000D3E4: BF82FFF6
  label_34FA:
  s_mov_b64     exec, s[12:13]                          // 00000000D3E8: BEFE040C
  v_mov_b32     v18, s16                                // 00000000D3EC: 7E240210
  v_mov_b32     v19, s17                                // 00000000D3F0: 7E260211
  flat_load_dword  v18, v[18:19]                        // 00000000D3F4: DC300000 12000012
  v_cndmask_b32  v17, 0, v17, s[2:3]                    // 00000000D3FC: D2000011 000A2280
  v_lshl_b64    v[19:20], 1, v15                        // 00000000D404: D2C20013 00021E81
  v_and_b32     v19, exec_lo, v19                       // 00000000D40C: 3626267E
  v_and_b32     v20, exec_hi, v20                       // 00000000D410: 3628287F
  v_cmp_ne_u64  s[2:3], 0, v[19:20]                     // 00000000D414: D1CA0002 00022680
  s_mov_b64     s[12:13], exec                          // 00000000D41C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000D420: BE8E047E
  s_nop         0x0000                                  // 00000000D424: BF800000
  s_nop         0x0000                                  // 00000000D428: BF800000
  s_nop         0x0000                                  // 00000000D42C: BF800000
  s_nop         0x0000                                  // 00000000D430: BF800000
  s_nop         0x0000                                  // 00000000D434: BF800000
  s_nop         0x0000                                  // 00000000D438: BF800000
  s_nop         0x0000                                  // 00000000D43C: BF800000
  label_3510:
  v_readfirstlane_b32  s1, v15                          // 00000000D440: 7E02050F
  v_cmp_eq_u32  vcc, s1, v15                            // 00000000D444: 7D841E01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000D448: BE90246A
  s_cbranch_execz  label_3518                           // 00000000D44C: BF880004
  v_readlane_b32  s1, v9, s1                            // 00000000D450: 02020309
  v_mov_b32     v15, s1                                 // 00000000D454: 7E1E0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000D458: 8A8E7E0E
  s_cbranch_scc0  label_351A                            // 00000000D45C: BF840002
  label_3518:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000D460: 87FE0E10
  s_branch      label_3510                              // 00000000D464: BF82FFF6
  label_351A:
  s_mov_b64     exec, s[12:13]                          // 00000000D468: BEFE040C
  v_cndmask_b32  v15, 0, v15, s[2:3]                    // 00000000D46C: D200000F 000A1E80
  v_add_i32     v19, vcc, 58, v7                        // 00000000D474: 4A260EBA
  v_and_b32     v19, 63, v19                            // 00000000D478: 362626BF
  v_lshl_b64    v[20:21], 1, v19                        // 00000000D47C: D2C20014 00022681
  v_and_b32     v20, exec_lo, v20                       // 00000000D484: 3628287E
  v_and_b32     v21, exec_hi, v21                       // 00000000D488: 362A2A7F
  v_cmp_ne_u64  s[2:3], 0, v[20:21]                     // 00000000D48C: D1CA0002 00022880
  s_mov_b64     s[12:13], exec                          // 00000000D494: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000D498: BE8E047E
  s_nop         0x0000                                  // 00000000D49C: BF800000
  label_3528:
  v_readfirstlane_b32  s1, v19                          // 00000000D4A0: 7E020513
  v_cmp_eq_u32  vcc, s1, v19                            // 00000000D4A4: 7D842601
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000D4A8: BE90246A
  s_cbranch_execz  label_3530                           // 00000000D4AC: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000D4B0: 02020303
  v_mov_b32     v20, s1                                 // 00000000D4B4: 7E280201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000D4B8: 8A8E7E0E
  s_cbranch_scc0  label_3532                            // 00000000D4BC: BF840002
  label_3530:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000D4C0: 87FE0E10
  s_branch      label_3528                              // 00000000D4C4: BF82FFF6
  label_3532:
  s_mov_b64     exec, s[12:13]                          // 00000000D4C8: BEFE040C
  v_cndmask_b32  v20, 0, v20, s[2:3]                    // 00000000D4CC: D2000014 000A2880
  v_lshl_b64    v[21:22], 1, v19                        // 00000000D4D4: D2C20015 00022681
  v_and_b32     v21, exec_lo, v21                       // 00000000D4DC: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 00000000D4E0: 362C2C7F
  v_cmp_ne_u64  s[2:3], 0, v[21:22]                     // 00000000D4E4: D1CA0002 00022A80
  s_mov_b64     s[12:13], exec                          // 00000000D4EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000D4F0: BE8E047E
  s_nop         0x0000                                  // 00000000D4F4: BF800000
  s_nop         0x0000                                  // 00000000D4F8: BF800000
  s_nop         0x0000                                  // 00000000D4FC: BF800000
  label_3540:
  v_readfirstlane_b32  s1, v19                          // 00000000D500: 7E020513
  v_cmp_eq_u32  vcc, s1, v19                            // 00000000D504: 7D842601
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000D508: BE90246A
  s_cbranch_execz  label_3548                           // 00000000D50C: BF880004
  v_readlane_b32  s1, v9, s1                            // 00000000D510: 02020309
  v_mov_b32     v21, s1                                 // 00000000D514: 7E2A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000D518: 8A8E7E0E
  s_cbranch_scc0  label_354A                            // 00000000D51C: BF840002
  label_3548:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000D520: 87FE0E10
  s_branch      label_3540                              // 00000000D524: BF82FFF6
  label_354A:
  s_mov_b64     exec, s[12:13]                          // 00000000D528: BEFE040C
  v_cndmask_b32  v21, 0, v21, s[2:3]                    // 00000000D52C: D2000015 000A2A80
  v_lshl_b64    v[22:23], 1, v19                        // 00000000D534: D2C20016 00022681
  v_and_b32     v22, exec_lo, v22                       // 00000000D53C: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000D540: 362E2E7F
  v_cmp_ne_u64  s[2:3], 0, v[22:23]                     // 00000000D544: D1CA0002 00022C80
  s_mov_b64     s[12:13], exec                          // 00000000D54C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000D550: BE8E047E
  s_nop         0x0000                                  // 00000000D554: BF800000
  s_nop         0x0000                                  // 00000000D558: BF800000
  s_nop         0x0000                                  // 00000000D55C: BF800000
  label_3558:
  v_readfirstlane_b32  s1, v19                          // 00000000D560: 7E020513
  v_cmp_eq_u32  vcc, s1, v19                            // 00000000D564: 7D842601
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000D568: BE90246A
  s_cbranch_execz  label_3560                           // 00000000D56C: BF880004
  v_readlane_b32  s1, v48, s1                           // 00000000D570: 02020330
  v_mov_b32     v19, s1                                 // 00000000D574: 7E260201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000D578: 8A8E7E0E
  s_cbranch_scc0  label_3562                            // 00000000D57C: BF840002
  label_3560:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000D580: 87FE0E10
  s_branch      label_3558                              // 00000000D584: BF82FFF6
  label_3562:
  s_mov_b64     exec, s[12:13]                          // 00000000D588: BEFE040C
  v_cndmask_b32  v19, 0, v19, s[2:3]                    // 00000000D58C: D2000013 000A2680
  v_cmp_ge_i32  vcc, 5, v2                              // 00000000D594: 7D0C0485
  s_and_saveexec_b64  s[2:3], vcc                       // 00000000D598: BE82246A
  v_mov_b32     v21, s18                                // 00000000D59C: 7E2A0212
  s_cbranch_execz  label_356E                           // 00000000D5A0: BF880005
  v_mov_b32     v22, s19                                // 00000000D5A4: 7E2C0213
  flat_load_dword  v19, v[21:22]                        // 00000000D5A8: DC300000 13000015
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000D5B0: BF8C0070
  v_mul_f32     v19, v19, v20                           // 00000000D5B4: 10262913
  label_356E:
  s_andn2_b64   exec, s[2:3], exec                      // 00000000D5B8: 8AFE7E02
  v_mov_b32     v24, s18                                // 00000000D5BC: 7E300212
  s_cbranch_execz  label_357B                           // 00000000D5C0: BF88000A
  v_mov_b32     v25, s19                                // 00000000D5C4: 7E320213
  flat_load_dword  v23, v[24:25]                        // 00000000D5C8: DC300000 17000018
  flat_load_dword  v20, v[24:25]                        // 00000000D5D0: DC300000 14000018
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000D5D8: BF8C0070
  v_mul_f32     v19, v20, v19                           // 00000000D5DC: 10262714
  v_mul_f32     v20, v23, v21                           // 00000000D5E0: 10282B17
  v_cmp_gt_i32  vcc, 56, v2                             // 00000000D5E4: 7D0804B8
  v_cndmask_b32  v19, v19, v20, vcc                     // 00000000D5E8: 00262913
  label_357B:
  s_mov_b64     exec, s[2:3]                            // 00000000D5EC: BEFE0402
  v_add_i32     v20, vcc, 59, v7                        // 00000000D5F0: 4A280EBB
  v_and_b32     v20, 63, v20                            // 00000000D5F4: 362828BF
  v_lshl_b64    v[21:22], 1, v20                        // 00000000D5F8: D2C20015 00022881
  v_and_b32     v21, exec_lo, v21                       // 00000000D600: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 00000000D604: 362C2C7F
  v_cmp_ne_u64  s[2:3], 0, v[21:22]                     // 00000000D608: D1CA0002 00022A80
  s_mov_b64     s[12:13], exec                          // 00000000D610: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000D614: BE8E047E
  s_nop         0x0000                                  // 00000000D618: BF800000
  s_nop         0x0000                                  // 00000000D61C: BF800000
  label_3588:
  v_readfirstlane_b32  s1, v20                          // 00000000D620: 7E020514
  v_cmp_eq_u32  vcc, s1, v20                            // 00000000D624: 7D842801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000D628: BE90246A
  s_cbranch_execz  label_3590                           // 00000000D62C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000D630: 02020303
  v_mov_b32     v21, s1                                 // 00000000D634: 7E2A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000D638: 8A8E7E0E
  s_cbranch_scc0  label_3592                            // 00000000D63C: BF840002
  label_3590:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000D640: 87FE0E10
  s_branch      label_3588                              // 00000000D644: BF82FFF6
  label_3592:
  s_mov_b64     exec, s[12:13]                          // 00000000D648: BEFE040C
  v_cndmask_b32  v21, 0, v21, s[2:3]                    // 00000000D64C: D2000015 000A2A80
  v_lshl_b64    v[22:23], 1, v20                        // 00000000D654: D2C20016 00022881
  v_and_b32     v22, exec_lo, v22                       // 00000000D65C: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000D660: 362E2E7F
  v_cmp_ne_u64  s[2:3], 0, v[22:23]                     // 00000000D664: D1CA0002 00022C80
  s_mov_b64     s[12:13], exec                          // 00000000D66C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000D670: BE8E047E
  s_nop         0x0000                                  // 00000000D674: BF800000
  s_nop         0x0000                                  // 00000000D678: BF800000
  s_nop         0x0000                                  // 00000000D67C: BF800000
  label_35A0:
  v_readfirstlane_b32  s1, v20                          // 00000000D680: 7E020514
  v_cmp_eq_u32  vcc, s1, v20                            // 00000000D684: 7D842801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000D688: BE90246A
  s_cbranch_execz  label_35A8                           // 00000000D68C: BF880004
  v_readlane_b32  s1, v9, s1                            // 00000000D690: 02020309
  v_mov_b32     v22, s1                                 // 00000000D694: 7E2C0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000D698: 8A8E7E0E
  s_cbranch_scc0  label_35AA                            // 00000000D69C: BF840002
  label_35A8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000D6A0: 87FE0E10
  s_branch      label_35A0                              // 00000000D6A4: BF82FFF6
  label_35AA:
  s_mov_b64     exec, s[12:13]                          // 00000000D6A8: BEFE040C
  v_cndmask_b32  v22, 0, v22, s[2:3]                    // 00000000D6AC: D2000016 000A2C80
  v_lshl_b64    v[23:24], 1, v20                        // 00000000D6B4: D2C20017 00022881
  v_and_b32     v23, exec_lo, v23                       // 00000000D6BC: 362E2E7E
  v_and_b32     v24, exec_hi, v24                       // 00000000D6C0: 3630307F
  v_cmp_ne_u64  s[2:3], 0, v[23:24]                     // 00000000D6C4: D1CA0002 00022E80
  s_mov_b64     s[12:13], exec                          // 00000000D6CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000D6D0: BE8E047E
  s_nop         0x0000                                  // 00000000D6D4: BF800000
  s_nop         0x0000                                  // 00000000D6D8: BF800000
  s_nop         0x0000                                  // 00000000D6DC: BF800000
  label_35B8:
  v_readfirstlane_b32  s1, v20                          // 00000000D6E0: 7E020514
  v_cmp_eq_u32  vcc, s1, v20                            // 00000000D6E4: 7D842801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000D6E8: BE90246A
  s_cbranch_execz  label_35C0                           // 00000000D6EC: BF880004
  v_readlane_b32  s1, v48, s1                           // 00000000D6F0: 02020330
  v_mov_b32     v20, s1                                 // 00000000D6F4: 7E280201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000D6F8: 8A8E7E0E
  s_cbranch_scc0  label_35C2                            // 00000000D6FC: BF840002
  label_35C0:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000D700: 87FE0E10
  s_branch      label_35B8                              // 00000000D704: BF82FFF6
  label_35C2:
  s_mov_b64     exec, s[12:13]                          // 00000000D708: BEFE040C
  v_cndmask_b32  v20, 0, v20, s[2:3]                    // 00000000D70C: D2000014 000A2880
  v_cmp_ge_i32  vcc, 4, v2                              // 00000000D714: 7D0C0484
  s_and_saveexec_b64  s[2:3], vcc                       // 00000000D718: BE82246A
  v_mov_b32     v22, s20                                // 00000000D71C: 7E2C0214
  s_cbranch_execz  label_35CE                           // 00000000D720: BF880005
  v_mov_b32     v23, s21                                // 00000000D724: 7E2E0215
  flat_load_dword  v20, v[22:23]                        // 00000000D728: DC300000 14000016
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000D730: BF8C0070
  v_mul_f32     v20, v20, v21                           // 00000000D734: 10282B14
  label_35CE:
  s_andn2_b64   exec, s[2:3], exec                      // 00000000D738: 8AFE7E02
  v_mov_b32     v25, s20                                // 00000000D73C: 7E320214
  s_cbranch_execz  label_35DB                           // 00000000D740: BF88000A
  v_mov_b32     v26, s21                                // 00000000D744: 7E340215
  flat_load_dword  v24, v[25:26]                        // 00000000D748: DC300000 18000019
  flat_load_dword  v21, v[25:26]                        // 00000000D750: DC300000 15000019
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000D758: BF8C0070
  v_mul_f32     v20, v21, v20                           // 00000000D75C: 10282915
  v_mul_f32     v21, v24, v22                           // 00000000D760: 102A2D18
  v_cmp_gt_i32  vcc, 56, v2                             // 00000000D764: 7D0804B8
  v_cndmask_b32  v20, v20, v21, vcc                     // 00000000D768: 00282B14
  label_35DB:
  s_mov_b64     exec, s[2:3]                            // 00000000D76C: BEFE0402
  v_add_i32     v21, vcc, 60, v7                        // 00000000D770: 4A2A0EBC
  v_and_b32     v21, 63, v21                            // 00000000D774: 362A2ABF
  v_lshl_b64    v[22:23], 1, v21                        // 00000000D778: D2C20016 00022A81
  v_and_b32     v22, exec_lo, v22                       // 00000000D780: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000D784: 362E2E7F
  v_cmp_ne_u64  s[2:3], 0, v[22:23]                     // 00000000D788: D1CA0002 00022C80
  s_mov_b64     s[12:13], exec                          // 00000000D790: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000D794: BE8E047E
  s_nop         0x0000                                  // 00000000D798: BF800000
  s_nop         0x0000                                  // 00000000D79C: BF800000
  label_35E8:
  v_readfirstlane_b32  s1, v21                          // 00000000D7A0: 7E020515
  v_cmp_eq_u32  vcc, s1, v21                            // 00000000D7A4: 7D842A01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000D7A8: BE90246A
  s_cbranch_execz  label_35F0                           // 00000000D7AC: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000D7B0: 02020303
  v_mov_b32     v22, s1                                 // 00000000D7B4: 7E2C0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000D7B8: 8A8E7E0E
  s_cbranch_scc0  label_35F2                            // 00000000D7BC: BF840002
  label_35F0:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000D7C0: 87FE0E10
  s_branch      label_35E8                              // 00000000D7C4: BF82FFF6
  label_35F2:
  s_mov_b64     exec, s[12:13]                          // 00000000D7C8: BEFE040C
  v_cndmask_b32  v3, 0, v22, s[2:3]                     // 00000000D7CC: D2000003 000A2C80
  v_lshl_b64    v[22:23], 1, v21                        // 00000000D7D4: D2C20016 00022A81
  v_and_b32     v22, exec_lo, v22                       // 00000000D7DC: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000D7E0: 362E2E7F
  v_cmp_ne_u64  s[2:3], 0, v[22:23]                     // 00000000D7E4: D1CA0002 00022C80
  s_mov_b64     s[12:13], exec                          // 00000000D7EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000D7F0: BE8E047E
  s_nop         0x0000                                  // 00000000D7F4: BF800000
  s_nop         0x0000                                  // 00000000D7F8: BF800000
  s_nop         0x0000                                  // 00000000D7FC: BF800000
  label_3600:
  v_readfirstlane_b32  s1, v21                          // 00000000D800: 7E020515
  v_cmp_eq_u32  vcc, s1, v21                            // 00000000D804: 7D842A01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000D808: BE90246A
  s_cbranch_execz  label_3608                           // 00000000D80C: BF880004
  v_readlane_b32  s1, v9, s1                            // 00000000D810: 02020309
  v_mov_b32     v22, s1                                 // 00000000D814: 7E2C0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000D818: 8A8E7E0E
  s_cbranch_scc0  label_360A                            // 00000000D81C: BF840002
  label_3608:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000D820: 87FE0E10
  s_branch      label_3600                              // 00000000D824: BF82FFF6
  label_360A:
  s_mov_b64     exec, s[12:13]                          // 00000000D828: BEFE040C
  v_cndmask_b32  v22, 0, v22, s[2:3]                    // 00000000D82C: D2000016 000A2C80
  v_lshl_b64    v[23:24], 1, v21                        // 00000000D834: D2C20017 00022A81
  v_and_b32     v23, exec_lo, v23                       // 00000000D83C: 362E2E7E
  v_and_b32     v24, exec_hi, v24                       // 00000000D840: 3630307F
  v_cmp_ne_u64  s[2:3], 0, v[23:24]                     // 00000000D844: D1CA0002 00022E80
  s_mov_b64     s[12:13], exec                          // 00000000D84C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000D850: BE8E047E
  s_nop         0x0000                                  // 00000000D854: BF800000
  s_nop         0x0000                                  // 00000000D858: BF800000
  s_nop         0x0000                                  // 00000000D85C: BF800000
  label_3618:
  v_readfirstlane_b32  s1, v21                          // 00000000D860: 7E020515
  v_cmp_eq_u32  vcc, s1, v21                            // 00000000D864: 7D842A01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000D868: BE90246A
  s_cbranch_execz  label_3620                           // 00000000D86C: BF880004
  v_readlane_b32  s1, v48, s1                           // 00000000D870: 02020330
  v_mov_b32     v21, s1                                 // 00000000D874: 7E2A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000D878: 8A8E7E0E
  s_cbranch_scc0  label_3622                            // 00000000D87C: BF840002
  label_3620:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000D880: 87FE0E10
  s_branch      label_3618                              // 00000000D884: BF82FFF6
  label_3622:
  s_mov_b64     exec, s[12:13]                          // 00000000D888: BEFE040C
  v_cndmask_b32  v21, 0, v21, s[2:3]                    // 00000000D88C: D2000015 000A2A80
  v_cmp_ge_i32  vcc, 3, v2                              // 00000000D894: 7D0C0483
  s_and_saveexec_b64  s[2:3], vcc                       // 00000000D898: BE82246A
  v_mov_b32     v21, s22                                // 00000000D89C: 7E2A0216
  s_cbranch_execz  label_362E                           // 00000000D8A0: BF880005
  v_mov_b32     v22, s23                                // 00000000D8A4: 7E2C0217
  flat_load_dword  v21, v[21:22]                        // 00000000D8A8: DC300000 15000015
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000D8B0: BF8C0070
  v_mul_f32     v3, v21, v3                             // 00000000D8B4: 10060715
  label_362E:
  s_andn2_b64   exec, s[2:3], exec                      // 00000000D8B8: 8AFE7E02
  v_mov_b32     v25, s22                                // 00000000D8BC: 7E320216
  s_cbranch_execz  label_363B                           // 00000000D8C0: BF88000A
  v_mov_b32     v26, s23                                // 00000000D8C4: 7E340217
  flat_load_dword  v24, v[25:26]                        // 00000000D8C8: DC300000 18000019
  flat_load_dword  v3, v[25:26]                         // 00000000D8D0: DC300000 03000019
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000D8D8: BF8C0070
  v_mul_f32     v3, v3, v21                             // 00000000D8DC: 10062B03
  v_mul_f32     v21, v24, v22                           // 00000000D8E0: 102A2D18
  v_cmp_gt_i32  vcc, 56, v2                             // 00000000D8E4: 7D0804B8
  v_cndmask_b32  v3, v3, v21, vcc                       // 00000000D8E8: 00062B03
  label_363B:
  s_mov_b64     exec, s[2:3]                            // 00000000D8EC: BEFE0402
  v_add_i32     v1, vcc, 24, v1                         // 00000000D8F0: 4A020298
  v_cmp_lt_i32  s[0:1], v1, s0                          // 00000000D8F4: D1020000 00000101
  v_add_i32     v21, vcc, 0x00000044, v7                // 00000000D8FC: 4A2A0EFF 00000044
  v_and_b32     v21, 63, v21                            // 00000000D904: 362A2ABF
  s_and_b64     s[0:1], s[8:9], s[0:1]                  // 00000000D908: 87800008
  v_lshl_b64    v[22:23], 1, v21                        // 00000000D90C: D2C20016 00022A81
  v_and_b32     v22, exec_lo, v22                       // 00000000D914: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000D918: 362E2E7F
  v_cmp_ne_u64  s[2:3], 0, v[22:23]                     // 00000000D91C: D1CA0002 00022C80
  s_mov_b64     s[8:9], exec                            // 00000000D924: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000D928: BE8C047E
  s_nop         0x0000                                  // 00000000D92C: BF800000
  s_nop         0x0000                                  // 00000000D930: BF800000
  s_nop         0x0000                                  // 00000000D934: BF800000
  s_nop         0x0000                                  // 00000000D938: BF800000
  s_nop         0x0000                                  // 00000000D93C: BF800000
  label_3650:
  v_readfirstlane_b32  s5, v21                          // 00000000D940: 7E0A0515
  v_cmp_eq_u32  vcc, s5, v21                            // 00000000D944: 7D842A05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000D948: BE8E246A
  s_cbranch_execz  label_3658                           // 00000000D94C: BF880004
  v_readlane_b32  s5, v9, s5                            // 00000000D950: 020A0B09
  v_mov_b32     v22, s5                                 // 00000000D954: 7E2C0205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000D958: 8A8C7E0C
  s_cbranch_scc0  label_365A                            // 00000000D95C: BF840002
  label_3658:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000D960: 87FE0C0E
  s_branch      label_3650                              // 00000000D964: BF82FFF6
  label_365A:
  s_mov_b64     exec, s[8:9]                            // 00000000D968: BEFE0408
  v_cndmask_b32  v22, 0, v22, s[2:3]                    // 00000000D96C: D2000016 000A2C80
  v_lshl_b64    v[23:24], 1, v21                        // 00000000D974: D2C20017 00022A81
  v_and_b32     v23, exec_lo, v23                       // 00000000D97C: 362E2E7E
  v_and_b32     v24, exec_hi, v24                       // 00000000D980: 3630307F
  v_cmp_ne_u64  s[2:3], 0, v[23:24]                     // 00000000D984: D1CA0002 00022E80
  s_mov_b64     s[8:9], exec                            // 00000000D98C: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000D990: BE8C047E
  s_nop         0x0000                                  // 00000000D994: BF800000
  s_nop         0x0000                                  // 00000000D998: BF800000
  s_nop         0x0000                                  // 00000000D99C: BF800000
  label_3668:
  v_readfirstlane_b32  s5, v21                          // 00000000D9A0: 7E0A0515
  v_cmp_eq_u32  vcc, s5, v21                            // 00000000D9A4: 7D842A05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000D9A8: BE8E246A
  s_cbranch_execz  label_3670                           // 00000000D9AC: BF880004
  v_readlane_b32  s5, v48, s5                           // 00000000D9B0: 020A0B30
  v_mov_b32     v21, s5                                 // 00000000D9B4: 7E2A0205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000D9B8: 8A8C7E0C
  s_cbranch_scc0  label_3672                            // 00000000D9BC: BF840002
  label_3670:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000D9C0: 87FE0C0E
  s_branch      label_3668                              // 00000000D9C4: BF82FFF6
  label_3672:
  s_mov_b64     exec, s[8:9]                            // 00000000D9C8: BEFE0408
  v_cndmask_b32  v21, 0, v21, s[2:3]                    // 00000000D9CC: D2000015 000A2A80
  v_add_i32     v23, vcc, 0x00000045, v7                // 00000000D9D4: 4A2E0EFF 00000045
  v_and_b32     v23, 63, v23                            // 00000000D9DC: 362E2EBF
  v_lshl_b64    v[24:25], 1, v23                        // 00000000D9E0: D2C20018 00022E81
  v_and_b32     v24, exec_lo, v24                       // 00000000D9E8: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 00000000D9EC: 3632327F
  v_cmp_ne_u64  s[2:3], 0, v[24:25]                     // 00000000D9F0: D1CA0002 00023080
  s_mov_b64     s[8:9], exec                            // 00000000D9F8: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000D9FC: BE8C047E
  label_3680:
  v_readfirstlane_b32  s5, v23                          // 00000000DA00: 7E0A0517
  v_cmp_eq_u32  vcc, s5, v23                            // 00000000DA04: 7D842E05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000DA08: BE8E246A
  s_cbranch_execz  label_3688                           // 00000000DA0C: BF880004
  v_readlane_b32  s5, v9, s5                            // 00000000DA10: 020A0B09
  v_mov_b32     v24, s5                                 // 00000000DA14: 7E300205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000DA18: 8A8C7E0C
  s_cbranch_scc0  label_368A                            // 00000000DA1C: BF840002
  label_3688:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000DA20: 87FE0C0E
  s_branch      label_3680                              // 00000000DA24: BF82FFF6
  label_368A:
  s_mov_b64     exec, s[8:9]                            // 00000000DA28: BEFE0408
  v_cndmask_b32  v24, 0, v24, s[2:3]                    // 00000000DA2C: D2000018 000A3080
  v_add_i32     v7, vcc, 0x00000046, v7                 // 00000000DA34: 4A0E0EFF 00000046
  v_and_b32     v7, 63, v7                              // 00000000DA3C: 360E0EBF
  s_xor_b64     s[0:1], s[0:1], -1                      // 00000000DA40: 8980C100
  v_lshl_b64    v[25:26], 1, v23                        // 00000000DA44: D2C20019 00022E81
  v_and_b32     v25, exec_lo, v25                       // 00000000DA4C: 3632327E
  v_and_b32     v26, exec_hi, v26                       // 00000000DA50: 3634347F
  v_cmp_ne_u64  s[2:3], 0, v[25:26]                     // 00000000DA54: D1CA0002 00023280
  s_mov_b64     s[8:9], exec                            // 00000000DA5C: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000DA60: BE8C047E
  s_nop         0x0000                                  // 00000000DA64: BF800000
  s_nop         0x0000                                  // 00000000DA68: BF800000
  s_nop         0x0000                                  // 00000000DA6C: BF800000
  s_nop         0x0000                                  // 00000000DA70: BF800000
  s_nop         0x0000                                  // 00000000DA74: BF800000
  s_nop         0x0000                                  // 00000000DA78: BF800000
  s_nop         0x0000                                  // 00000000DA7C: BF800000
  label_36A0:
  v_readfirstlane_b32  s5, v23                          // 00000000DA80: 7E0A0517
  v_cmp_eq_u32  vcc, s5, v23                            // 00000000DA84: 7D842E05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000DA88: BE8E246A
  s_cbranch_execz  label_36A8                           // 00000000DA8C: BF880004
  v_readlane_b32  s5, v48, s5                           // 00000000DA90: 020A0B30
  v_mov_b32     v23, s5                                 // 00000000DA94: 7E2E0205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000DA98: 8A8C7E0C
  s_cbranch_scc0  label_36AA                            // 00000000DA9C: BF840002
  label_36A8:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000DAA0: 87FE0C0E
  s_branch      label_36A0                              // 00000000DAA4: BF82FFF6
  label_36AA:
  s_mov_b64     exec, s[8:9]                            // 00000000DAA8: BEFE0408
  v_cndmask_b32  v23, 0, v23, s[2:3]                    // 00000000DAAC: D2000017 000A2E80
  v_lshl_b64    v[25:26], 1, v7                         // 00000000DAB4: D2C20019 00020E81
  v_and_b32     v25, exec_lo, v25                       // 00000000DABC: 3632327E
  v_and_b32     v26, exec_hi, v26                       // 00000000DAC0: 3634347F
  v_cmp_ne_u64  s[2:3], 0, v[25:26]                     // 00000000DAC4: D1CA0002 00023280
  s_mov_b64     s[8:9], exec                            // 00000000DACC: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000DAD0: BE8C047E
  s_nop         0x0000                                  // 00000000DAD4: BF800000
  s_nop         0x0000                                  // 00000000DAD8: BF800000
  s_nop         0x0000                                  // 00000000DADC: BF800000
  label_36B8:
  v_readfirstlane_b32  s5, v7                           // 00000000DAE0: 7E0A0507
  v_cmp_eq_u32  vcc, s5, v7                             // 00000000DAE4: 7D840E05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000DAE8: BE8E246A
  s_cbranch_execz  label_36C0                           // 00000000DAEC: BF880004
  v_readlane_b32  s5, v9, s5                            // 00000000DAF0: 020A0B09
  v_mov_b32     v25, s5                                 // 00000000DAF4: 7E320205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000DAF8: 8A8C7E0C
  s_cbranch_scc0  label_36C2                            // 00000000DAFC: BF840002
  label_36C0:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000DB00: 87FE0C0E
  s_branch      label_36B8                              // 00000000DB04: BF82FFF6
  label_36C2:
  s_mov_b64     exec, s[8:9]                            // 00000000DB08: BEFE0408
  v_cndmask_b32  v9, 0, v25, s[2:3]                     // 00000000DB0C: D2000009 000A3280
  v_lshl_b64    v[25:26], 1, v7                         // 00000000DB14: D2C20019 00020E81
  v_and_b32     v25, exec_lo, v25                       // 00000000DB1C: 3632327E
  v_and_b32     v26, exec_hi, v26                       // 00000000DB20: 3634347F
  v_cmp_ne_u64  s[2:3], 0, v[25:26]                     // 00000000DB24: D1CA0002 00023280
  s_mov_b64     s[8:9], exec                            // 00000000DB2C: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000DB30: BE8C047E
  s_nop         0x0000                                  // 00000000DB34: BF800000
  s_nop         0x0000                                  // 00000000DB38: BF800000
  s_nop         0x0000                                  // 00000000DB3C: BF800000
  label_36D0:
  v_readfirstlane_b32  s5, v7                           // 00000000DB40: 7E0A0507
  v_cmp_eq_u32  vcc, s5, v7                             // 00000000DB44: 7D840E05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000DB48: BE8E246A
  s_cbranch_execz  label_36D8                           // 00000000DB4C: BF880004
  v_readlane_b32  s5, v48, s5                           // 00000000DB50: 020A0B30
  v_mov_b32     v7, s5                                  // 00000000DB54: 7E0E0205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000DB58: 8A8C7E0C
  s_cbranch_scc0  label_36DA                            // 00000000DB5C: BF840002
  label_36D8:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000DB60: 87FE0C0E
  s_branch      label_36D0                              // 00000000DB64: BF82FFF6
  label_36DA:
  s_mov_b64     exec, s[8:9]                            // 00000000DB68: BEFE0408
  v_cndmask_b32  v6, 0, v7, s[2:3]                      // 00000000DB6C: D2000006 000A0E80
  s_mov_b64     s[2:3], exec                            // 00000000DB74: BE82047E
  s_andn2_b64   exec, s[2:3], s[0:1]                    // 00000000DB78: 8AFE0002
  s_cbranch_execz  label_372C                           // 00000000DB7C: BF88004C
  s_add_u32     s0, s10, 24                             // 00000000DB80: 8000980A
  s_addc_u32    s1, s11, 0                              // 00000000DB84: 8201800B
  v_mov_b32     v31, s0                                 // 00000000DB88: 7E3E0200
  v_mov_b32     v32, s1                                 // 00000000DB8C: 7E400201
  s_add_u32     s0, s10, 28                             // 00000000DB90: 80009C0A
  s_addc_u32    s1, s11, 0                              // 00000000DB94: 8201800B
  v_mov_b32     v26, s0                                 // 00000000DB98: 7E340200
  v_mov_b32     v27, s1                                 // 00000000DB9C: 7E360201
  s_add_u32     s0, s10, 32                             // 00000000DBA0: 8000A00A
  s_addc_u32    s1, s11, 0                              // 00000000DBA4: 8201800B
  v_mov_b32     v28, s0                                 // 00000000DBA8: 7E380200
  v_mov_b32     v29, s1                                 // 00000000DBAC: 7E3A0201
  flat_load_dword  v30, v[31:32]                        // 00000000DBB0: DC300000 1E00001F
  flat_load_dword  v7, v[31:32]                         // 00000000DBB8: DC300000 0700001F
  flat_load_dword  v25, v[26:27]                        // 00000000DBC0: DC300000 1900001A
  flat_load_dword  v26, v[26:27]                        // 00000000DBC8: DC300000 1A00001A
  flat_load_dword  v27, v[28:29]                        // 00000000DBD0: DC300000 1B00001C
  flat_load_dword  v28, v[28:29]                        // 00000000DBD8: DC300000 1C00001C
  v_mul_f32     v4, v4, v5                              // 00000000DBE0: 10080B04
  v_mul_f32     v5, v10, v8                             // 00000000DBE4: 100A110A
  v_cmp_gt_i32  vcc, 14, v2                             // 00000000DBE8: 7D08048E
  v_mul_f32     v8, v11, v12                            // 00000000DBEC: 1010190B
  v_mul_f32     v10, v14, v13                           // 00000000DBF0: 10141B0E
  v_cndmask_b32  v4, v5, v4, vcc                        // 00000000DBF4: 00080905
  v_cmp_lt_i32  s[0:1], v2, 13                          // 00000000DBF8: D1020000 00011B02
  v_mul_f32     v5, v16, v17                            // 00000000DC00: 100A2310
  v_mul_f32     v11, v18, v15                           // 00000000DC04: 10161F12
  v_cmp_gt_i32  vcc, 12, v2                             // 00000000DC08: 7D08048C
  v_cndmask_b32  v8, v10, v8, s[0:1]                    // 00000000DC0C: D2000008 0002110A
  v_add_f32     v4, 0, v4                               // 00000000DC14: 06080880
  v_cndmask_b32  v5, v11, v5, vcc                       // 00000000DC18: 000A0B0B
  v_add_f32     v4, v4, v8                              // 00000000DC1C: 06081104
  v_add_f32     v4, v4, v5                              // 00000000DC20: 06080B04
  v_add_f32     v4, v4, v19                             // 00000000DC24: 06082704
  v_mul_lo_u32  v1, v1, s4                              // 00000000DC28: D2D20001 00000901
  v_add_f32     v4, v4, v20                             // 00000000DC30: 06082904
  v_cmp_lt_i32  s[0:1], v2, 48                          // 00000000DC34: D1020000 00016102
  s_waitcnt     vmcnt(5) & lgkmcnt(5)                   // 00000000DC3C: BF8C0575
  v_mul_f32     v2, v30, v22                            // 00000000DC40: 10042D1E
  s_waitcnt     vmcnt(4) & lgkmcnt(4)                   // 00000000DC44: BF8C0474
  v_mul_f32     v5, v7, v21                             // 00000000DC48: 100A2B07
  v_add_i32     v10, vcc, v1, v0                        // 00000000DC4C: 4A140101
  s_waitcnt     vmcnt(2) & lgkmcnt(2)                   // 00000000DC50: BF8C0272
  v_mul_f32     v1, v26, v23                            // 00000000DC54: 10022F1A
  v_mul_f32     v7, v25, v24                            // 00000000DC58: 100E3119
  v_cndmask_b32  v2, v5, v2, s[0:1]                     // 00000000DC5C: D2000002 00020505
  v_add_f32     v3, v4, v3                              // 00000000DC64: 06060704
  v_ashrrev_i32  v11, 31, v10                           // 00000000DC68: 3016149F
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000DC6C: BF8C0070
  v_mul_f32     v5, v28, v6                             // 00000000DC70: 100A0D1C
  v_cndmask_b32  v1, v1, v7, s[0:1]                     // 00000000DC74: D2000001 00020F01
  v_mul_f32     v6, v27, v9                             // 00000000DC7C: 100C131B
  v_add_f32     v2, v3, v2                              // 00000000DC80: 06040503
  v_cndmask_b32  v3, v5, v6, s[0:1]                     // 00000000DC84: D2000003 00020D05
  v_add_f32     v1, v2, v1                              // 00000000DC8C: 06020302
  v_lshl_b64    v[4:5], v[10:11], 2                     // 00000000DC90: D2C20004 0001050A
  v_add_f32     v0, v1, v3                              // 00000000DC98: 06000701
  v_add_i32     v1, vcc, s6, v4                         // 00000000DC9C: 4A020806
  v_mov_b32     v2, s7                                  // 00000000DCA0: 7E040207
  v_addc_u32    v2, vcc, v2, v5, vcc                    // 00000000DCA4: 50040B02
  flat_store_dword  v[1:2], v0                          // 00000000DCA8: DC700000 00000001
  label_372C:
  s_endpgm                                              // 00000000DCB0: BF810000
  //
  // padding (00000000dcb4 - 00000000dd00)
  //
  //
  // amd_kernel_code_t for &ZZ18Stencil_Hcc_Shfl2xRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__419__cxxamp_trampolineEPfiiS4_iiS4_iiiii (00000000dd00 - 00000000de00)
  //
  //
  // &ZZ18Stencil_Hcc_Shfl2xRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__419__cxxamp_trampolineEPfiiS4_iiS4_iiiii:
  //
  s_load_dword  s0, s[4:5], 0x01                        // 00000000DE00: C0000501
  v_mbcnt_lo_u32_b32  v2, -1, 0                         // 00000000DE04: D2460002 000100C1
  v_mbcnt_hi_u32_b32  v2, -1, v2                        // 00000000DE0C: 480404C1
  s_waitcnt     lgkmcnt(0)                              // 00000000DE10: BF8C007F
  s_and_b32     s1, s0, 0x0000ffff                      // 00000000DE14: 8701FF00 0000FFFF
  s_bfe_u32     s0, s0, 0x00100010                      // 00000000DE1C: 9380FF00 00100010
  s_mul_i32     s1, s1, s8                              // 00000000DE24: 93010801
  v_add_i32     v0, vcc, s1, v0                         // 00000000DE28: 4A000001
  s_mul_i32     s0, s0, s9                              // 00000000DE2C: 93000900
  v_add_i32     v1, vcc, s0, v1                         // 00000000DE30: 4A020200
  v_add_i32     v3, vcc, 4, v2                          // 00000000DE34: 4A060484
  s_mov_b32     s0, 0x66666667                          // 00000000DE38: BE8003FF 66666667
  v_ashrrev_i32  v4, 31, v2                             // 00000000DE40: 3008049F
  v_ashrrev_i32  v5, 31, v3                             // 00000000DE44: 300A069F
  s_load_dwordx2  s[2:3], s[6:7], 0x0c                  // 00000000DE48: C041070C
  v_mul_lo_u32  v16, v2, s0                             // 00000000DE4C: D2D20010 00000102
  v_mul_hi_u32  v7, v2, s0                              // 00000000DE54: D2D40007 00000102
  v_mul_lo_u32  v4, v4, s0                              // 00000000DE5C: D2D20004 00000104
  v_mul_hi_u32  v8, v3, s0                              // 00000000DE64: D2D40008 00000103
  v_mul_lo_u32  v5, v5, s0                              // 00000000DE6C: D2D20005 00000105
  v_add_i32     v9, vcc, 8, v2                          // 00000000DE74: 4A120488
  v_lshlrev_b32  v1, 1, v1                              // 00000000DE78: 34020281
  v_add_i32     v17, vcc, v4, v7                        // 00000000DE7C: 4A220F04
  v_add_i32     v6, vcc, v5, v8                         // 00000000DE80: 4A0C1105
  v_add_i32     v5, vcc, 0x9999999c, v16                // 00000000DE84: 4A0A20FF 9999999C
  v_ashrrev_i32  v8, 31, v9                             // 00000000DE8C: 3010129F
  v_ashrrev_i32  v10, 3, v2                             // 00000000DE90: 30140483
  v_and_b32     v1, -16, v1                             // 00000000DE94: 360202D0
  v_mul_hi_u32  v11, v9, s0                             // 00000000DE98: D2D4000B 00000109
  v_mul_lo_u32  v8, v8, s0                              // 00000000DEA0: D2D20008 00000108
  v_add_i32     v1, vcc, v10, v1                        // 00000000DEA8: 4A02030A
  v_lshrrev_b32  v12, 31, v17                           // 00000000DEAC: 2C18229F
  v_ashr_i64    v[13:14], v[16:17], 34                  // 00000000DEB0: D2C6000D 00014510
  v_lshrrev_b32  v4, 31, v6                             // 00000000DEB8: 2C080C9F
  v_ashr_i64    v[14:15], v[5:6], 34                    // 00000000DEBC: D2C6000E 00014505
  v_add_i32     v6, vcc, v8, v11                        // 00000000DEC4: 4A0C1708
  v_add_i32     v5, vcc, 0x33333338, v16                // 00000000DEC8: 4A0A20FF 33333338
  v_and_b32     v7, -8, v1                              // 00000000DED0: 360E02C8
  v_add_i32     v8, vcc, v13, v12                       // 00000000DED4: 4A10190D
  v_add_i32     v4, vcc, v14, v4                        // 00000000DED8: 4A08090E
  s_load_dword  s0, s[6:7], 0x0e                        // 00000000DEDC: C000070E
  s_waitcnt     lgkmcnt(0)                              // 00000000DEE0: BF8C007F
  s_lshl_b32    s1, s2, 1                               // 00000000DEE4: 8F018102
  v_mul_lo_u32  v11, v8, 10                             // 00000000DEE8: D2D2000B 00011508
  v_or_b32      v12, 6, v7                              // 00000000DEF0: 38180E86
  v_mul_lo_u32  v38, v4, 10                             // 00000000DEF4: D2D20026 00011504
  v_lshrrev_b32  v14, 31, v6                            // 00000000DEFC: 2C1C0C9F
  v_ashr_i64    v[5:6], v[5:6], 34                      // 00000000DF00: D2C60005 00014505
  s_add_u32     s4, s1, s3                              // 00000000DF08: 80040301
  v_and_b32     v6, -8, v0                              // 00000000DF0C: 360C00C8
  v_add_i32     v8, vcc, v7, v8                         // 00000000DF10: 4A101107
  v_sub_i32     v11, vcc, v2, v11                       // 00000000DF14: 4C161702
  v_add_i32     v4, vcc, v4, v12                        // 00000000DF18: 4A081904
  v_sub_i32     v3, vcc, v3, v38                        // 00000000DF1C: 4C064D03
  s_load_dwordx2  s[8:9], s[6:7], 0x00                  // 00000000DF20: C0440700
  v_add_i32     v5, vcc, v5, v14                        // 00000000DF24: 4A0A1D05
  v_mul_lo_u32  v8, v8, s4                              // 00000000DF28: D2D20008 00000908
  v_add_i32     v11, vcc, v11, v6                       // 00000000DF30: 4A160D0B
  v_mul_lo_u32  v4, v4, s4                              // 00000000DF34: D2D20004 00000904
  v_add_i32     v3, vcc, v3, v6                         // 00000000DF3C: 4A060D03
  v_mul_lo_u32  v12, v5, 10                             // 00000000DF40: D2D2000C 00011505
  v_add_i32     v11, vcc, v11, v8                       // 00000000DF48: 4A16110B
  v_add_i32     v8, vcc, v3, v4                         // 00000000DF4C: 4A100903
  v_add_i32     v4, vcc, v7, v5                         // 00000000DF50: 4A080B07
  v_sub_i32     v5, vcc, v9, v12                        // 00000000DF54: 4C0A1909
  v_ashrrev_i32  v12, 31, v11                           // 00000000DF58: 3018169F
  v_ashrrev_i32  v9, 31, v8                             // 00000000DF5C: 3012109F
  v_add_i32     v4, vcc, 12, v4                         // 00000000DF60: 4A08088C
  s_add_u32     s1, s1, s0                              // 00000000DF64: 80010001
  v_add_i32     v5, vcc, v5, v6                         // 00000000DF68: 4A0A0D05
  v_cmp_lt_i32  s[10:11], v4, s1                        // 00000000DF6C: D102000A 00000304
  v_cmp_lt_i32  s[12:13], v5, s4                        // 00000000DF74: D102000C 00000905
  v_lshl_b64    v[6:7], v[11:12], 2                     // 00000000DF7C: D2C20006 0001050B
  v_lshl_b64    v[8:9], v[8:9], 2                       // 00000000DF84: D2C20008 00010508
  s_waitcnt     lgkmcnt(0)                              // 00000000DF8C: BF8C007F
  v_add_i32     v11, vcc, s8, v6                        // 00000000DF90: 4A160C08
  v_mov_b32     v6, s9                                  // 00000000DF94: 7E0C0209
  v_addc_u32    v12, vcc, v6, v7, vcc                   // 00000000DF98: 50180F06
  v_add_i32     v7, vcc, s8, v8                         // 00000000DF9C: 4A0E1008
  v_addc_u32    v8, vcc, v6, v9, vcc                    // 00000000DFA0: 50101306
  s_and_b64     s[10:11], s[12:13], s[10:11]            // 00000000DFA4: 878A0A0C
  flat_load_dword  v3, v[11:12]                         // 00000000DFA8: DC300000 0300000B
  flat_load_dword  v6, v[7:8]                           // 00000000DFB0: DC300000 06000007
  v_add_i32     v0, vcc, s2, v0                         // 00000000DFB8: 4A000002
  v_add_i32     v1, vcc, s2, v1                         // 00000000DFBC: 4A020202
  s_and_saveexec_b64  s[10:11], s[10:11]                // 00000000DFC0: BE8A240A
  v_mul_lo_u32  v4, v4, s4                              // 00000000DFC4: D2D20004 00000904
  s_cbranch_execz  label_37FD                           // 00000000DFCC: BF880009
  v_add_i32     v4, vcc, v4, v5                         // 00000000DFD0: 4A080B04
  v_ashrrev_i32  v5, 31, v4                             // 00000000DFD4: 300A089F
  v_lshl_b64    v[4:5], v[4:5], 2                       // 00000000DFD8: D2C20004 00010504
  v_add_i32     v4, vcc, s8, v4                         // 00000000DFE0: 4A080808
  v_mov_b32     v7, s9                                  // 00000000DFE4: 7E0E0209
  v_addc_u32    v5, vcc, v7, v5, vcc                    // 00000000DFE8: 500A0B07
  flat_load_dword  v38, v[4:5]                          // 00000000DFEC: DC300000 26000004
  label_37FD:
  s_mov_b64     exec, s[10:11]                          // 00000000DFF4: BEFE040A
  s_add_u32     s1, s3, s2                              // 00000000DFF8: 80010203
  s_add_u32     s0, s0, s2                              // 00000000DFFC: 80000200
  v_cmp_lt_i32  s[2:3], v1, s0                          // 00000000E000: D1020002 00000101
  v_cmp_lt_i32  s[8:9], v0, s1                          // 00000000E008: D1020008 00000300
  v_lshlrev_b32  v5, 1, v10                             // 00000000E010: 340A1481
  v_add_i32     v5, vcc, v5, v2                         // 00000000E014: 4A0A0505
  v_and_b32     v7, 63, v5                              // 00000000E018: 360E0ABF
  s_and_b64     s[2:3], s[8:9], s[2:3]                  // 00000000E01C: 87820208
  v_lshl_b64    v[8:9], 1, v7                           // 00000000E020: D2C20008 00020E81
  v_and_b32     v8, exec_lo, v8                         // 00000000E028: 3610107E
  v_and_b32     v9, exec_hi, v9                         // 00000000E02C: 3612127F
  v_cmp_ne_u64  s[10:11], 0, v[8:9]                     // 00000000E030: D1CA000A 00021080
  s_mov_b64     s[12:13], exec                          // 00000000E038: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E03C: BE8E047E
  label_3810:
  v_readfirstlane_b32  s1, v7                           // 00000000E040: 7E020507
  v_cmp_eq_u32  vcc, s1, v7                             // 00000000E044: 7D840E01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E048: BE90246A
  s_cbranch_execz  label_3819                           // 00000000E04C: BF880005
  s_waitcnt     vmcnt(1) & lgkmcnt(1)                   // 00000000E050: BF8C0171
  v_readlane_b32  s1, v3, s1                            // 00000000E054: 02020303
  v_mov_b32     v8, s1                                  // 00000000E058: 7E100201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E05C: 8A8E7E0E
  s_cbranch_scc0  label_381B                            // 00000000E060: BF840002
  label_3819:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E064: 87FE0E10
  s_branch      label_3810                              // 00000000E068: BF82FFF5
  label_381B:
  s_mov_b64     exec, s[12:13]                          // 00000000E06C: BEFE040C
  v_cndmask_b32  v8, 0, v8, s[10:11]                    // 00000000E070: D2000008 002A1080
  v_lshl_b64    v[9:10], 1, v7                          // 00000000E078: D2C20009 00020E81
  v_and_b32     v9, exec_lo, v9                         // 00000000E080: 3612127E
  v_and_b32     v10, exec_hi, v10                       // 00000000E084: 3614147F
  v_cmp_ne_u64  s[10:11], 0, v[9:10]                    // 00000000E088: D1CA000A 00021280
  s_mov_b64     s[12:13], exec                          // 00000000E090: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E094: BE8E047E
  s_nop         0x0000                                  // 00000000E098: BF800000
  s_nop         0x0000                                  // 00000000E09C: BF800000
  label_3828:
  v_readfirstlane_b32  s1, v7                           // 00000000E0A0: 7E020507
  v_cmp_eq_u32  vcc, s1, v7                             // 00000000E0A4: 7D840E01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E0A8: BE90246A
  s_cbranch_execz  label_3831                           // 00000000E0AC: BF880005
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000E0B0: BF8C0070
  v_readlane_b32  s1, v6, s1                            // 00000000E0B4: 02020306
  v_mov_b32     v7, s1                                  // 00000000E0B8: 7E0E0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E0BC: 8A8E7E0E
  s_cbranch_scc0  label_3833                            // 00000000E0C0: BF840002
  label_3831:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E0C4: 87FE0E10
  s_branch      label_3828                              // 00000000E0C8: BF82FFF5
  label_3833:
  s_mov_b64     exec, s[12:13]                          // 00000000E0CC: BEFE040C
  v_cndmask_b32  v7, 0, v7, s[10:11]                    // 00000000E0D0: D2000007 002A0E80
  v_add_i32     v9, vcc, 1, v5                          // 00000000E0D8: 4A120A81
  v_and_b32     v9, 63, v9                              // 00000000E0DC: 361212BF
  v_lshl_b64    v[10:11], 1, v9                         // 00000000E0E0: D2C2000A 00021281
  v_and_b32     v10, exec_lo, v10                       // 00000000E0E8: 3614147E
  v_and_b32     v11, exec_hi, v11                       // 00000000E0EC: 3616167F
  v_cmp_ne_u64  s[10:11], 0, v[10:11]                   // 00000000E0F0: D1CA000A 00021480
  s_mov_b64     s[12:13], exec                          // 00000000E0F8: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E0FC: BE8E047E
  label_3840:
  v_readfirstlane_b32  s1, v9                           // 00000000E100: 7E020509
  v_cmp_eq_u32  vcc, s1, v9                             // 00000000E104: 7D841201
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E108: BE90246A
  s_cbranch_execz  label_3848                           // 00000000E10C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000E110: 02020303
  v_mov_b32     v10, s1                                 // 00000000E114: 7E140201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E118: 8A8E7E0E
  s_cbranch_scc0  label_384A                            // 00000000E11C: BF840002
  label_3848:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E120: 87FE0E10
  s_branch      label_3840                              // 00000000E124: BF82FFF6
  label_384A:
  s_mov_b64     exec, s[12:13]                          // 00000000E128: BEFE040C
  v_cndmask_b32  v10, 0, v10, s[10:11]                  // 00000000E12C: D200000A 002A1480
  v_add_i32     v11, vcc, 22, v5                        // 00000000E134: 4A160A96
  v_add_i32     v12, vcc, 21, v5                        // 00000000E138: 4A180A95
  v_add_i32     v13, vcc, 20, v5                        // 00000000E13C: 4A1A0A94
  v_add_i32     v14, vcc, 12, v5                        // 00000000E140: 4A1C0A8C
  v_add_i32     v15, vcc, 11, v5                        // 00000000E144: 4A1E0A8B
  v_add_i32     v16, vcc, 10, v5                        // 00000000E148: 4A200A8A
  v_add_i32     v17, vcc, 2, v5                         // 00000000E14C: 4A220A82
  v_and_b32     v17, 63, v17                            // 00000000E150: 362222BF
  v_and_b32     v16, 63, v16                            // 00000000E154: 362020BF
  v_and_b32     v15, 63, v15                            // 00000000E158: 361E1EBF
  v_and_b32     v14, 63, v14                            // 00000000E15C: 361C1CBF
  v_and_b32     v13, 63, v13                            // 00000000E160: 361A1ABF
  v_and_b32     v12, 63, v12                            // 00000000E164: 361818BF
  v_and_b32     v11, 63, v11                            // 00000000E168: 361616BF
  s_xor_b64     s[2:3], s[2:3], -1                      // 00000000E16C: 8982C102
  v_lshl_b64    v[18:19], 1, v9                         // 00000000E170: D2C20012 00021281
  v_and_b32     v18, exec_lo, v18                       // 00000000E178: 3624247E
  v_and_b32     v19, exec_hi, v19                       // 00000000E17C: 3626267F
  v_cmp_ne_u64  s[10:11], 0, v[18:19]                   // 00000000E180: D1CA000A 00022480
  s_mov_b64     s[12:13], exec                          // 00000000E188: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E18C: BE8E047E
  s_nop         0x0000                                  // 00000000E190: BF800000
  s_nop         0x0000                                  // 00000000E194: BF800000
  s_nop         0x0000                                  // 00000000E198: BF800000
  s_nop         0x0000                                  // 00000000E19C: BF800000
  label_3868:
  v_readfirstlane_b32  s1, v9                           // 00000000E1A0: 7E020509
  v_cmp_eq_u32  vcc, s1, v9                             // 00000000E1A4: 7D841201
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E1A8: BE90246A
  s_cbranch_execz  label_3870                           // 00000000E1AC: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000E1B0: 02020306
  v_mov_b32     v9, s1                                  // 00000000E1B4: 7E120201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E1B8: 8A8E7E0E
  s_cbranch_scc0  label_3872                            // 00000000E1BC: BF840002
  label_3870:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E1C0: 87FE0E10
  s_branch      label_3868                              // 00000000E1C4: BF82FFF6
  label_3872:
  s_mov_b64     exec, s[12:13]                          // 00000000E1C8: BEFE040C
  v_cndmask_b32  v9, 0, v9, s[10:11]                    // 00000000E1CC: D2000009 002A1280
  v_lshl_b64    v[18:19], 1, v17                        // 00000000E1D4: D2C20012 00022281
  v_and_b32     v18, exec_lo, v18                       // 00000000E1DC: 3624247E
  v_and_b32     v19, exec_hi, v19                       // 00000000E1E0: 3626267F
  v_cmp_ne_u64  s[10:11], 0, v[18:19]                   // 00000000E1E4: D1CA000A 00022480
  s_mov_b64     s[12:13], exec                          // 00000000E1EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E1F0: BE8E047E
  s_nop         0x0000                                  // 00000000E1F4: BF800000
  s_nop         0x0000                                  // 00000000E1F8: BF800000
  s_nop         0x0000                                  // 00000000E1FC: BF800000
  label_3880:
  v_readfirstlane_b32  s1, v17                          // 00000000E200: 7E020511
  v_cmp_eq_u32  vcc, s1, v17                            // 00000000E204: 7D842201
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E208: BE90246A
  s_cbranch_execz  label_3888                           // 00000000E20C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000E210: 02020303
  v_mov_b32     v18, s1                                 // 00000000E214: 7E240201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E218: 8A8E7E0E
  s_cbranch_scc0  label_388A                            // 00000000E21C: BF840002
  label_3888:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E220: 87FE0E10
  s_branch      label_3880                              // 00000000E224: BF82FFF6
  label_388A:
  s_mov_b64     exec, s[12:13]                          // 00000000E228: BEFE040C
  v_cndmask_b32  v18, 0, v18, s[10:11]                  // 00000000E22C: D2000012 002A2480
  v_lshl_b64    v[19:20], 1, v17                        // 00000000E234: D2C20013 00022281
  v_and_b32     v19, exec_lo, v19                       // 00000000E23C: 3626267E
  v_and_b32     v20, exec_hi, v20                       // 00000000E240: 3628287F
  v_cmp_ne_u64  s[10:11], 0, v[19:20]                   // 00000000E244: D1CA000A 00022680
  s_mov_b64     s[12:13], exec                          // 00000000E24C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E250: BE8E047E
  s_nop         0x0000                                  // 00000000E254: BF800000
  s_nop         0x0000                                  // 00000000E258: BF800000
  s_nop         0x0000                                  // 00000000E25C: BF800000
  label_3898:
  v_readfirstlane_b32  s1, v17                          // 00000000E260: 7E020511
  v_cmp_eq_u32  vcc, s1, v17                            // 00000000E264: 7D842201
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E268: BE90246A
  s_cbranch_execz  label_38A0                           // 00000000E26C: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000E270: 02020306
  v_mov_b32     v17, s1                                 // 00000000E274: 7E220201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E278: 8A8E7E0E
  s_cbranch_scc0  label_38A2                            // 00000000E27C: BF840002
  label_38A0:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E280: 87FE0E10
  s_branch      label_3898                              // 00000000E284: BF82FFF6
  label_38A2:
  s_mov_b64     exec, s[12:13]                          // 00000000E288: BEFE040C
  v_cndmask_b32  v17, 0, v17, s[10:11]                  // 00000000E28C: D2000011 002A2280
  v_lshl_b64    v[19:20], 1, v16                        // 00000000E294: D2C20013 00022081
  v_and_b32     v19, exec_lo, v19                       // 00000000E29C: 3626267E
  v_and_b32     v20, exec_hi, v20                       // 00000000E2A0: 3628287F
  v_cmp_ne_u64  s[10:11], 0, v[19:20]                   // 00000000E2A4: D1CA000A 00022680
  s_mov_b64     s[12:13], exec                          // 00000000E2AC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E2B0: BE8E047E
  s_nop         0x0000                                  // 00000000E2B4: BF800000
  s_nop         0x0000                                  // 00000000E2B8: BF800000
  s_nop         0x0000                                  // 00000000E2BC: BF800000
  label_38B0:
  v_readfirstlane_b32  s1, v16                          // 00000000E2C0: 7E020510
  v_cmp_eq_u32  vcc, s1, v16                            // 00000000E2C4: 7D842001
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E2C8: BE90246A
  s_cbranch_execz  label_38B8                           // 00000000E2CC: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000E2D0: 02020303
  v_mov_b32     v19, s1                                 // 00000000E2D4: 7E260201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E2D8: 8A8E7E0E
  s_cbranch_scc0  label_38BA                            // 00000000E2DC: BF840002
  label_38B8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E2E0: 87FE0E10
  s_branch      label_38B0                              // 00000000E2E4: BF82FFF6
  label_38BA:
  s_mov_b64     exec, s[12:13]                          // 00000000E2E8: BEFE040C
  v_cndmask_b32  v19, 0, v19, s[10:11]                  // 00000000E2EC: D2000013 002A2680
  v_lshl_b64    v[20:21], 1, v16                        // 00000000E2F4: D2C20014 00022081
  v_and_b32     v20, exec_lo, v20                       // 00000000E2FC: 3628287E
  v_and_b32     v21, exec_hi, v21                       // 00000000E300: 362A2A7F
  v_cmp_ne_u64  s[10:11], 0, v[20:21]                   // 00000000E304: D1CA000A 00022880
  s_mov_b64     s[12:13], exec                          // 00000000E30C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E310: BE8E047E
  s_nop         0x0000                                  // 00000000E314: BF800000
  s_nop         0x0000                                  // 00000000E318: BF800000
  s_nop         0x0000                                  // 00000000E31C: BF800000
  label_38C8:
  v_readfirstlane_b32  s1, v16                          // 00000000E320: 7E020510
  v_cmp_eq_u32  vcc, s1, v16                            // 00000000E324: 7D842001
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E328: BE90246A
  s_cbranch_execz  label_38D0                           // 00000000E32C: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000E330: 02020306
  v_mov_b32     v16, s1                                 // 00000000E334: 7E200201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E338: 8A8E7E0E
  s_cbranch_scc0  label_38D2                            // 00000000E33C: BF840002
  label_38D0:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E340: 87FE0E10
  s_branch      label_38C8                              // 00000000E344: BF82FFF6
  label_38D2:
  s_mov_b64     exec, s[12:13]                          // 00000000E348: BEFE040C
  v_cndmask_b32  v16, 0, v16, s[10:11]                  // 00000000E34C: D2000010 002A2080
  v_lshl_b64    v[20:21], 1, v15                        // 00000000E354: D2C20014 00021E81
  v_and_b32     v20, exec_lo, v20                       // 00000000E35C: 3628287E
  v_and_b32     v21, exec_hi, v21                       // 00000000E360: 362A2A7F
  v_cmp_ne_u64  s[10:11], 0, v[20:21]                   // 00000000E364: D1CA000A 00022880
  s_mov_b64     s[12:13], exec                          // 00000000E36C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E370: BE8E047E
  s_nop         0x0000                                  // 00000000E374: BF800000
  s_nop         0x0000                                  // 00000000E378: BF800000
  s_nop         0x0000                                  // 00000000E37C: BF800000
  label_38E0:
  v_readfirstlane_b32  s1, v15                          // 00000000E380: 7E02050F
  v_cmp_eq_u32  vcc, s1, v15                            // 00000000E384: 7D841E01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E388: BE90246A
  s_cbranch_execz  label_38E8                           // 00000000E38C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000E390: 02020303
  v_mov_b32     v20, s1                                 // 00000000E394: 7E280201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E398: 8A8E7E0E
  s_cbranch_scc0  label_38EA                            // 00000000E39C: BF840002
  label_38E8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E3A0: 87FE0E10
  s_branch      label_38E0                              // 00000000E3A4: BF82FFF6
  label_38EA:
  s_mov_b64     exec, s[12:13]                          // 00000000E3A8: BEFE040C
  v_cndmask_b32  v20, 0, v20, s[10:11]                  // 00000000E3AC: D2000014 002A2880
  v_lshl_b64    v[21:22], 1, v15                        // 00000000E3B4: D2C20015 00021E81
  v_and_b32     v21, exec_lo, v21                       // 00000000E3BC: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 00000000E3C0: 362C2C7F
  v_cmp_ne_u64  s[10:11], 0, v[21:22]                   // 00000000E3C4: D1CA000A 00022A80
  s_mov_b64     s[12:13], exec                          // 00000000E3CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E3D0: BE8E047E
  s_nop         0x0000                                  // 00000000E3D4: BF800000
  s_nop         0x0000                                  // 00000000E3D8: BF800000
  s_nop         0x0000                                  // 00000000E3DC: BF800000
  label_38F8:
  v_readfirstlane_b32  s1, v15                          // 00000000E3E0: 7E02050F
  v_cmp_eq_u32  vcc, s1, v15                            // 00000000E3E4: 7D841E01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E3E8: BE90246A
  s_cbranch_execz  label_3900                           // 00000000E3EC: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000E3F0: 02020306
  v_mov_b32     v15, s1                                 // 00000000E3F4: 7E1E0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E3F8: 8A8E7E0E
  s_cbranch_scc0  label_3902                            // 00000000E3FC: BF840002
  label_3900:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E400: 87FE0E10
  s_branch      label_38F8                              // 00000000E404: BF82FFF6
  label_3902:
  s_mov_b64     exec, s[12:13]                          // 00000000E408: BEFE040C
  v_cndmask_b32  v15, 0, v15, s[10:11]                  // 00000000E40C: D200000F 002A1E80
  v_lshl_b64    v[21:22], 1, v14                        // 00000000E414: D2C20015 00021C81
  v_and_b32     v21, exec_lo, v21                       // 00000000E41C: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 00000000E420: 362C2C7F
  v_cmp_ne_u64  s[10:11], 0, v[21:22]                   // 00000000E424: D1CA000A 00022A80
  s_mov_b64     s[12:13], exec                          // 00000000E42C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E430: BE8E047E
  s_nop         0x0000                                  // 00000000E434: BF800000
  s_nop         0x0000                                  // 00000000E438: BF800000
  s_nop         0x0000                                  // 00000000E43C: BF800000
  label_3910:
  v_readfirstlane_b32  s1, v14                          // 00000000E440: 7E02050E
  v_cmp_eq_u32  vcc, s1, v14                            // 00000000E444: 7D841C01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E448: BE90246A
  s_cbranch_execz  label_3918                           // 00000000E44C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000E450: 02020303
  v_mov_b32     v21, s1                                 // 00000000E454: 7E2A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E458: 8A8E7E0E
  s_cbranch_scc0  label_391A                            // 00000000E45C: BF840002
  label_3918:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E460: 87FE0E10
  s_branch      label_3910                              // 00000000E464: BF82FFF6
  label_391A:
  s_mov_b64     exec, s[12:13]                          // 00000000E468: BEFE040C
  v_cndmask_b32  v21, 0, v21, s[10:11]                  // 00000000E46C: D2000015 002A2A80
  v_lshl_b64    v[22:23], 1, v14                        // 00000000E474: D2C20016 00021C81
  v_and_b32     v22, exec_lo, v22                       // 00000000E47C: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000E480: 362E2E7F
  v_cmp_ne_u64  s[10:11], 0, v[22:23]                   // 00000000E484: D1CA000A 00022C80
  s_mov_b64     s[12:13], exec                          // 00000000E48C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E490: BE8E047E
  s_nop         0x0000                                  // 00000000E494: BF800000
  s_nop         0x0000                                  // 00000000E498: BF800000
  s_nop         0x0000                                  // 00000000E49C: BF800000
  label_3928:
  v_readfirstlane_b32  s1, v14                          // 00000000E4A0: 7E02050E
  v_cmp_eq_u32  vcc, s1, v14                            // 00000000E4A4: 7D841C01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E4A8: BE90246A
  s_cbranch_execz  label_3930                           // 00000000E4AC: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000E4B0: 02020306
  v_mov_b32     v14, s1                                 // 00000000E4B4: 7E1C0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E4B8: 8A8E7E0E
  s_cbranch_scc0  label_3932                            // 00000000E4BC: BF840002
  label_3930:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E4C0: 87FE0E10
  s_branch      label_3928                              // 00000000E4C4: BF82FFF6
  label_3932:
  s_mov_b64     exec, s[12:13]                          // 00000000E4C8: BEFE040C
  v_cndmask_b32  v14, 0, v14, s[10:11]                  // 00000000E4CC: D200000E 002A1C80
  v_lshl_b64    v[22:23], 1, v13                        // 00000000E4D4: D2C20016 00021A81
  v_and_b32     v22, exec_lo, v22                       // 00000000E4DC: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000E4E0: 362E2E7F
  v_cmp_ne_u64  s[10:11], 0, v[22:23]                   // 00000000E4E4: D1CA000A 00022C80
  s_mov_b64     s[12:13], exec                          // 00000000E4EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E4F0: BE8E047E
  s_nop         0x0000                                  // 00000000E4F4: BF800000
  s_nop         0x0000                                  // 00000000E4F8: BF800000
  s_nop         0x0000                                  // 00000000E4FC: BF800000
  label_3940:
  v_readfirstlane_b32  s1, v13                          // 00000000E500: 7E02050D
  v_cmp_eq_u32  vcc, s1, v13                            // 00000000E504: 7D841A01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E508: BE90246A
  s_cbranch_execz  label_3948                           // 00000000E50C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000E510: 02020303
  v_mov_b32     v22, s1                                 // 00000000E514: 7E2C0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E518: 8A8E7E0E
  s_cbranch_scc0  label_394A                            // 00000000E51C: BF840002
  label_3948:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E520: 87FE0E10
  s_branch      label_3940                              // 00000000E524: BF82FFF6
  label_394A:
  s_mov_b64     exec, s[12:13]                          // 00000000E528: BEFE040C
  v_cndmask_b32  v22, 0, v22, s[10:11]                  // 00000000E52C: D2000016 002A2C80
  v_lshl_b64    v[23:24], 1, v13                        // 00000000E534: D2C20017 00021A81
  v_and_b32     v23, exec_lo, v23                       // 00000000E53C: 362E2E7E
  v_and_b32     v24, exec_hi, v24                       // 00000000E540: 3630307F
  v_cmp_ne_u64  s[10:11], 0, v[23:24]                   // 00000000E544: D1CA000A 00022E80
  s_mov_b64     s[12:13], exec                          // 00000000E54C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E550: BE8E047E
  s_nop         0x0000                                  // 00000000E554: BF800000
  s_nop         0x0000                                  // 00000000E558: BF800000
  s_nop         0x0000                                  // 00000000E55C: BF800000
  label_3958:
  v_readfirstlane_b32  s1, v13                          // 00000000E560: 7E02050D
  v_cmp_eq_u32  vcc, s1, v13                            // 00000000E564: 7D841A01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E568: BE90246A
  s_cbranch_execz  label_3960                           // 00000000E56C: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000E570: 02020306
  v_mov_b32     v13, s1                                 // 00000000E574: 7E1A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E578: 8A8E7E0E
  s_cbranch_scc0  label_3962                            // 00000000E57C: BF840002
  label_3960:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E580: 87FE0E10
  s_branch      label_3958                              // 00000000E584: BF82FFF6
  label_3962:
  s_mov_b64     exec, s[12:13]                          // 00000000E588: BEFE040C
  v_cndmask_b32  v13, 0, v13, s[10:11]                  // 00000000E58C: D200000D 002A1A80
  v_lshl_b64    v[23:24], 1, v12                        // 00000000E594: D2C20017 00021881
  v_and_b32     v23, exec_lo, v23                       // 00000000E59C: 362E2E7E
  v_and_b32     v24, exec_hi, v24                       // 00000000E5A0: 3630307F
  v_cmp_ne_u64  s[10:11], 0, v[23:24]                   // 00000000E5A4: D1CA000A 00022E80
  s_mov_b64     s[12:13], exec                          // 00000000E5AC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E5B0: BE8E047E
  s_nop         0x0000                                  // 00000000E5B4: BF800000
  s_nop         0x0000                                  // 00000000E5B8: BF800000
  s_nop         0x0000                                  // 00000000E5BC: BF800000
  label_3970:
  v_readfirstlane_b32  s1, v12                          // 00000000E5C0: 7E02050C
  v_cmp_eq_u32  vcc, s1, v12                            // 00000000E5C4: 7D841801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E5C8: BE90246A
  s_cbranch_execz  label_3978                           // 00000000E5CC: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000E5D0: 02020303
  v_mov_b32     v23, s1                                 // 00000000E5D4: 7E2E0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E5D8: 8A8E7E0E
  s_cbranch_scc0  label_397A                            // 00000000E5DC: BF840002
  label_3978:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E5E0: 87FE0E10
  s_branch      label_3970                              // 00000000E5E4: BF82FFF6
  label_397A:
  s_mov_b64     exec, s[12:13]                          // 00000000E5E8: BEFE040C
  v_cndmask_b32  v23, 0, v23, s[10:11]                  // 00000000E5EC: D2000017 002A2E80
  v_lshl_b64    v[24:25], 1, v12                        // 00000000E5F4: D2C20018 00021881
  v_and_b32     v24, exec_lo, v24                       // 00000000E5FC: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 00000000E600: 3632327F
  v_cmp_ne_u64  s[10:11], 0, v[24:25]                   // 00000000E604: D1CA000A 00023080
  s_mov_b64     s[12:13], exec                          // 00000000E60C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E610: BE8E047E
  s_nop         0x0000                                  // 00000000E614: BF800000
  s_nop         0x0000                                  // 00000000E618: BF800000
  s_nop         0x0000                                  // 00000000E61C: BF800000
  label_3988:
  v_readfirstlane_b32  s1, v12                          // 00000000E620: 7E02050C
  v_cmp_eq_u32  vcc, s1, v12                            // 00000000E624: 7D841801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E628: BE90246A
  s_cbranch_execz  label_3990                           // 00000000E62C: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000E630: 02020306
  v_mov_b32     v12, s1                                 // 00000000E634: 7E180201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E638: 8A8E7E0E
  s_cbranch_scc0  label_3992                            // 00000000E63C: BF840002
  label_3990:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E640: 87FE0E10
  s_branch      label_3988                              // 00000000E644: BF82FFF6
  label_3992:
  s_mov_b64     exec, s[12:13]                          // 00000000E648: BEFE040C
  v_cndmask_b32  v12, 0, v12, s[10:11]                  // 00000000E64C: D200000C 002A1880
  v_lshl_b64    v[24:25], 1, v11                        // 00000000E654: D2C20018 00021681
  v_and_b32     v24, exec_lo, v24                       // 00000000E65C: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 00000000E660: 3632327F
  v_cmp_ne_u64  s[10:11], 0, v[24:25]                   // 00000000E664: D1CA000A 00023080
  s_mov_b64     s[12:13], exec                          // 00000000E66C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E670: BE8E047E
  s_nop         0x0000                                  // 00000000E674: BF800000
  s_nop         0x0000                                  // 00000000E678: BF800000
  s_nop         0x0000                                  // 00000000E67C: BF800000
  label_39A0:
  v_readfirstlane_b32  s1, v11                          // 00000000E680: 7E02050B
  v_cmp_eq_u32  vcc, s1, v11                            // 00000000E684: 7D841601
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E688: BE90246A
  s_cbranch_execz  label_39A8                           // 00000000E68C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000E690: 02020303
  v_mov_b32     v24, s1                                 // 00000000E694: 7E300201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E698: 8A8E7E0E
  s_cbranch_scc0  label_39AA                            // 00000000E69C: BF840002
  label_39A8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E6A0: 87FE0E10
  s_branch      label_39A0                              // 00000000E6A4: BF82FFF6
  label_39AA:
  s_mov_b64     exec, s[12:13]                          // 00000000E6A8: BEFE040C
  v_cndmask_b32  v3, 0, v24, s[10:11]                   // 00000000E6AC: D2000003 002A3080
  v_lshl_b64    v[24:25], 1, v11                        // 00000000E6B4: D2C20018 00021681
  v_and_b32     v24, exec_lo, v24                       // 00000000E6BC: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 00000000E6C0: 3632327F
  v_cmp_ne_u64  s[10:11], 0, v[24:25]                   // 00000000E6C4: D1CA000A 00023080
  s_mov_b64     s[12:13], exec                          // 00000000E6CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000E6D0: BE8E047E
  s_nop         0x0000                                  // 00000000E6D4: BF800000
  s_nop         0x0000                                  // 00000000E6D8: BF800000
  s_nop         0x0000                                  // 00000000E6DC: BF800000
  label_39B8:
  v_readfirstlane_b32  s1, v11                          // 00000000E6E0: 7E02050B
  v_cmp_eq_u32  vcc, s1, v11                            // 00000000E6E4: 7D841601
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000E6E8: BE90246A
  s_cbranch_execz  label_39C0                           // 00000000E6EC: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000E6F0: 02020306
  v_mov_b32     v11, s1                                 // 00000000E6F4: 7E160201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000E6F8: 8A8E7E0E
  s_cbranch_scc0  label_39C2                            // 00000000E6FC: BF840002
  label_39C0:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000E700: 87FE0E10
  s_branch      label_39B8                              // 00000000E704: BF82FFF6
  label_39C2:
  s_mov_b64     exec, s[12:13]                          // 00000000E708: BEFE040C
  v_cndmask_b32  v11, 0, v11, s[10:11]                  // 00000000E70C: D200000B 002A1680
  s_load_dwordx2  s[10:11], s[6:7], 0x08                // 00000000E714: C0450708
  s_load_dwordx2  s[6:7], s[6:7], 0x04                  // 00000000E718: C0430704
  s_mov_b64     s[12:13], exec                          // 00000000E71C: BE8C047E
  s_andn2_b64   exec, s[12:13], s[2:3]                  // 00000000E720: 8AFE020C
  s_waitcnt     lgkmcnt(0)                              // 00000000E724: BF8C007F
  v_mov_b32     v24, s10                                // 00000000E728: 7E30020A
  s_cbranch_execz  label_3A48                           // 00000000E72C: BF88007C
  v_mov_b32     v25, s11                                // 00000000E730: 7E32020B
  s_add_u32     s2, s10, 4                              // 00000000E734: 8002840A
  s_addc_u32    s3, s11, 0                              // 00000000E738: 8203800B
  v_mov_b32     v26, s2                                 // 00000000E73C: 7E340202
  v_mov_b32     v27, s3                                 // 00000000E740: 7E360203
  s_add_u32     s2, s10, 8                              // 00000000E744: 8002880A
  s_addc_u32    s3, s11, 0                              // 00000000E748: 8203800B
  v_mov_b32     v28, s2                                 // 00000000E74C: 7E380202
  v_mov_b32     v29, s3                                 // 00000000E750: 7E3A0203
  s_add_u32     s2, s10, 12                             // 00000000E754: 80028C0A
  s_addc_u32    s3, s11, 0                              // 00000000E758: 8203800B
  flat_load_dword  v24, v[24:25]                        // 00000000E75C: DC300000 18000018
  v_mov_b32     v33, s2                                 // 00000000E764: 7E420202
  v_mov_b32     v34, s3                                 // 00000000E768: 7E440203
  s_add_u32     s2, s10, 16                             // 00000000E76C: 8002900A
  s_addc_u32    s3, s11, 0                              // 00000000E770: 8203800B
  flat_load_dword  v26, v[26:27]                        // 00000000E774: DC300000 1A00001A
  v_mov_b32     v35, s2                                 // 00000000E77C: 7E460202
  v_mov_b32     v36, s3                                 // 00000000E780: 7E480203
  s_add_u32     s2, s10, 20                             // 00000000E784: 8002940A
  s_addc_u32    s3, s11, 0                              // 00000000E788: 8203800B
  flat_load_dword  v28, v[28:29]                        // 00000000E78C: DC300000 1C00001C
  v_mov_b32     v39, s2                                 // 00000000E794: 7E4E0202
  v_mov_b32     v40, s3                                 // 00000000E798: 7E500203
  s_add_u32     s2, s10, 24                             // 00000000E79C: 8002980A
  s_addc_u32    s3, s11, 0                              // 00000000E7A0: 8203800B
  flat_load_dword  v25, v[33:34]                        // 00000000E7A4: DC300000 19000021
  v_mov_b32     v41, s2                                 // 00000000E7AC: 7E520202
  v_mov_b32     v42, s3                                 // 00000000E7B0: 7E540203
  s_add_u32     s2, s10, 28                             // 00000000E7B4: 80029C0A
  s_addc_u32    s3, s11, 0                              // 00000000E7B8: 8203800B
  flat_load_dword  v27, v[35:36]                        // 00000000E7BC: DC300000 1B000023
  v_mov_b32     v33, s2                                 // 00000000E7C4: 7E420202
  v_mov_b32     v34, s3                                 // 00000000E7C8: 7E440203
  s_add_u32     s2, s10, 32                             // 00000000E7CC: 8002A00A
  s_addc_u32    s3, s11, 0                              // 00000000E7D0: 8203800B
  flat_load_dword  v29, v[39:40]                        // 00000000E7D4: DC300000 1D000027
  v_mov_b32     v35, s2                                 // 00000000E7DC: 7E460202
  v_mov_b32     v36, s3                                 // 00000000E7E0: 7E480203
  flat_load_dword  v30, v[41:42]                        // 00000000E7E4: DC300000 1E000029
  flat_load_dword  v31, v[33:34]                        // 00000000E7EC: DC300000 1F000021
  flat_load_dword  v32, v[35:36]                        // 00000000E7F4: DC300000 20000023
  s_waitcnt     vmcnt(8) & lgkmcnt(8)                   // 00000000E7FC: BF8C0878
  v_mul_f32     v7, v24, v7                             // 00000000E800: 100E0F18
  v_mul_f32     v8, v24, v8                             // 00000000E804: 10101118
  v_cmp_gt_i32  vcc, 52, v2                             // 00000000E808: 7D0804B4
  v_cndmask_b32  v7, v7, v8, vcc                        // 00000000E80C: 000E1107
  s_waitcnt     vmcnt(7) & lgkmcnt(7)                   // 00000000E810: BF8C0777
  v_mul_f32     v8, v26, v9                             // 00000000E814: 1010131A
  v_mul_f32     v9, v26, v10                            // 00000000E818: 1012151A
  v_cmp_lt_i32  s[2:3], v2, 51                          // 00000000E81C: D1020002 00016702
  s_waitcnt     vmcnt(6) & lgkmcnt(6)                   // 00000000E824: BF8C0676
  v_mul_f32     v10, v28, v17                           // 00000000E828: 1014231C
  v_mul_f32     v17, v28, v18                           // 00000000E82C: 1022251C
  v_cmp_gt_i32  vcc, 50, v2                             // 00000000E830: 7D0804B2
  v_cndmask_b32  v8, v8, v9, s[2:3]                     // 00000000E834: D2000008 000A1308
  v_add_f32     v7, 0, v7                               // 00000000E83C: 060E0E80
  v_cndmask_b32  v9, v10, v17, vcc                      // 00000000E840: 0012230A
  s_waitcnt     vmcnt(5) & lgkmcnt(5)                   // 00000000E844: BF8C0575
  v_mul_f32     v10, v25, v16                           // 00000000E848: 10142119
  v_mul_f32     v16, v25, v19                           // 00000000E84C: 10202719
  v_cmp_gt_i32  vcc, 44, v2                             // 00000000E850: 7D0804AC
  v_add_f32     v7, v7, v8                              // 00000000E854: 060E1107
  s_waitcnt     vmcnt(4) & lgkmcnt(4)                   // 00000000E858: BF8C0474
  v_mul_f32     v8, v27, v15                            // 00000000E85C: 10101F1B
  v_mul_f32     v15, v27, v20                           // 00000000E860: 101E291B
  v_cmp_lt_i32  s[2:3], v2, 43                          // 00000000E864: D1020002 00015702
  v_cndmask_b32  v10, v10, v16, vcc                     // 00000000E86C: 0014210A
  v_add_f32     v7, v7, v9                              // 00000000E870: 060E1307
  s_waitcnt     vmcnt(3) & lgkmcnt(3)                   // 00000000E874: BF8C0373
  v_mul_f32     v9, v29, v14                            // 00000000E878: 10121D1D
  v_mul_f32     v14, v29, v21                           // 00000000E87C: 101C2B1D
  v_cmp_lt_i32  s[14:15], v2, 42                        // 00000000E880: D102000E 00015502
  v_cndmask_b32  v8, v8, v15, s[2:3]                    // 00000000E888: D2000008 000A1F08
  v_add_f32     v7, v7, v10                             // 00000000E890: 060E1507
  v_mul_lo_u32  v10, v1, s4                             // 00000000E894: D2D2000A 00000901
  s_waitcnt     vmcnt(2) & lgkmcnt(2)                   // 00000000E89C: BF8C0272
  v_mul_f32     v13, v30, v13                           // 00000000E8A0: 101A1B1E
  v_mul_f32     v15, v30, v22                           // 00000000E8A4: 101E2D1E
  v_cmp_lt_i32  s[2:3], v2, 36                          // 00000000E8A8: D1020002 00014902
  v_cndmask_b32  v9, v9, v14, s[14:15]                  // 00000000E8B0: D2000009 003A1D09
  v_add_f32     v7, v7, v8                              // 00000000E8B8: 060E1107
  v_add_i32     v8, vcc, v10, v0                        // 00000000E8BC: 4A10010A
  v_cndmask_b32  v10, v13, v15, s[2:3]                  // 00000000E8C0: D200000A 000A1F0D
  s_waitcnt     vmcnt(1) & lgkmcnt(1)                   // 00000000E8C8: BF8C0171
  v_mul_f32     v12, v31, v12                           // 00000000E8CC: 1018191F
  v_mul_f32     v13, v31, v23                           // 00000000E8D0: 101A2F1F
  v_cmp_gt_i32  vcc, 35, v2                             // 00000000E8D4: 7D0804A3
  v_add_f32     v7, v7, v9                              // 00000000E8D8: 060E1307
  v_ashrrev_i32  v9, 31, v8                             // 00000000E8DC: 3012109F
  v_cndmask_b32  v12, v12, v13, vcc                     // 00000000E8E0: 00181B0C
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000E8E4: BF8C0070
  v_mul_f32     v11, v32, v11                           // 00000000E8E8: 10161720
  v_mul_f32     v3, v32, v3                             // 00000000E8EC: 10060720
  v_cmp_gt_i32  vcc, 34, v2                             // 00000000E8F0: 7D0804A2
  v_add_f32     v7, v7, v10                             // 00000000E8F4: 060E1507
  v_cndmask_b32  v3, v11, v3, vcc                       // 00000000E8F8: 0006070B
  v_lshl_b64    v[8:9], v[8:9], 2                       // 00000000E8FC: D2C20008 00010508
  v_add_f32     v7, v7, v12                             // 00000000E904: 060E1907
  v_add_i32     v8, vcc, s6, v8                         // 00000000E908: 4A101006
  v_mov_b32     v10, s7                                 // 00000000E90C: 7E140207
  v_addc_u32    v9, vcc, v10, v9, vcc                   // 00000000E910: 5012130A
  v_add_f32     v3, v7, v3                              // 00000000E914: 06060707
  flat_store_dword  v[8:9], v3                          // 00000000E918: DC700000 00000308
  label_3A48:
  s_mov_b64     exec, s[12:13]                          // 00000000E920: BEFE040C
  v_add_i32     v1, vcc, 8, v1                          // 00000000E924: 4A020288
  v_cmp_lt_i32  s[0:1], v1, s0                          // 00000000E928: D1020000 00000101
  v_add_i32     v3, vcc, 16, v5                         // 00000000E930: 4A060A90
  v_and_b32     v3, 63, v3                              // 00000000E934: 360606BF
  s_and_b64     s[0:1], s[8:9], s[0:1]                  // 00000000E938: 87800008
  v_lshl_b64    v[7:8], 1, v3                           // 00000000E93C: D2C20007 00020681
  v_and_b32     v7, exec_lo, v7                         // 00000000E944: 360E0E7E
  v_and_b32     v8, exec_hi, v8                         // 00000000E948: 3610107F
  v_cmp_ne_u64  s[2:3], 0, v[7:8]                       // 00000000E94C: D1CA0002 00020E80
  s_mov_b64     s[8:9], exec                            // 00000000E954: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000E958: BE8C047E
  s_nop         0x0000                                  // 00000000E95C: BF800000
  label_3A58:
  v_readfirstlane_b32  s5, v3                           // 00000000E960: 7E0A0503
  v_cmp_eq_u32  vcc, s5, v3                             // 00000000E964: 7D840605
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000E968: BE8E246A
  s_cbranch_execz  label_3A60                           // 00000000E96C: BF880004
  v_readlane_b32  s5, v6, s5                            // 00000000E970: 020A0B06
  v_mov_b32     v7, s5                                  // 00000000E974: 7E0E0205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000E978: 8A8C7E0C
  s_cbranch_scc0  label_3A62                            // 00000000E97C: BF840002
  label_3A60:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000E980: 87FE0C0E
  s_branch      label_3A58                              // 00000000E984: BF82FFF6
  label_3A62:
  s_mov_b64     exec, s[8:9]                            // 00000000E988: BEFE0408
  v_cndmask_b32  v7, 0, v7, s[2:3]                      // 00000000E98C: D2000007 000A0E80
  v_lshl_b64    v[8:9], 1, v3                           // 00000000E994: D2C20008 00020681
  v_and_b32     v8, exec_lo, v8                         // 00000000E99C: 3610107E
  v_and_b32     v9, exec_hi, v9                         // 00000000E9A0: 3612127F
  v_cmp_ne_u64  s[2:3], 0, v[8:9]                       // 00000000E9A4: D1CA0002 00021080
  s_mov_b64     s[8:9], exec                            // 00000000E9AC: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000E9B0: BE8C047E
  s_nop         0x0000                                  // 00000000E9B4: BF800000
  s_nop         0x0000                                  // 00000000E9B8: BF800000
  s_nop         0x0000                                  // 00000000E9BC: BF800000
  label_3A70:
  v_readfirstlane_b32  s5, v3                           // 00000000E9C0: 7E0A0503
  v_cmp_eq_u32  vcc, s5, v3                             // 00000000E9C4: 7D840605
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000E9C8: BE8E246A
  s_cbranch_execz  label_3A78                           // 00000000E9CC: BF880004
  v_readlane_b32  s5, v38, s5                           // 00000000E9D0: 020A0B26
  v_mov_b32     v3, s5                                  // 00000000E9D4: 7E060205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000E9D8: 8A8C7E0C
  s_cbranch_scc0  label_3A7A                            // 00000000E9DC: BF840002
  label_3A78:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000E9E0: 87FE0C0E
  s_branch      label_3A70                              // 00000000E9E4: BF82FFF6
  label_3A7A:
  s_mov_b64     exec, s[8:9]                            // 00000000E9E8: BEFE0408
  v_cndmask_b32  v3, 0, v3, s[2:3]                      // 00000000E9EC: D2000003 000A0680
  v_add_i32     v8, vcc, 17, v5                         // 00000000E9F4: 4A100A91
  v_and_b32     v8, 63, v8                              // 00000000E9F8: 361010BF
  v_lshl_b64    v[9:10], 1, v8                          // 00000000E9FC: D2C20009 00021081
  v_and_b32     v9, exec_lo, v9                         // 00000000EA04: 3612127E
  v_and_b32     v10, exec_hi, v10                       // 00000000EA08: 3614147F
  v_cmp_ne_u64  s[2:3], 0, v[9:10]                      // 00000000EA0C: D1CA0002 00021280
  s_mov_b64     s[8:9], exec                            // 00000000EA14: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EA18: BE8C047E
  s_nop         0x0000                                  // 00000000EA1C: BF800000
  label_3A88:
  v_readfirstlane_b32  s5, v8                           // 00000000EA20: 7E0A0508
  v_cmp_eq_u32  vcc, s5, v8                             // 00000000EA24: 7D841005
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000EA28: BE8E246A
  s_cbranch_execz  label_3A90                           // 00000000EA2C: BF880004
  v_readlane_b32  s5, v6, s5                            // 00000000EA30: 020A0B06
  v_mov_b32     v9, s5                                  // 00000000EA34: 7E120205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000EA38: 8A8C7E0C
  s_cbranch_scc0  label_3A92                            // 00000000EA3C: BF840002
  label_3A90:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000EA40: 87FE0C0E
  s_branch      label_3A88                              // 00000000EA44: BF82FFF6
  label_3A92:
  s_mov_b64     exec, s[8:9]                            // 00000000EA48: BEFE0408
  v_cndmask_b32  v9, 0, v9, s[2:3]                      // 00000000EA4C: D2000009 000A1280
  v_add_i32     v10, vcc, 38, v5                        // 00000000EA54: 4A140AA6
  v_add_i32     v11, vcc, 37, v5                        // 00000000EA58: 4A160AA5
  v_add_i32     v12, vcc, 36, v5                        // 00000000EA5C: 4A180AA4
  v_add_i32     v13, vcc, 28, v5                        // 00000000EA60: 4A1A0A9C
  v_add_i32     v14, vcc, 27, v5                        // 00000000EA64: 4A1C0A9B
  v_add_i32     v15, vcc, 26, v5                        // 00000000EA68: 4A1E0A9A
  v_add_i32     v5, vcc, 18, v5                         // 00000000EA6C: 4A0A0A92
  v_and_b32     v5, 63, v5                              // 00000000EA70: 360A0ABF
  v_and_b32     v15, 63, v15                            // 00000000EA74: 361E1EBF
  v_and_b32     v14, 63, v14                            // 00000000EA78: 361C1CBF
  v_and_b32     v13, 63, v13                            // 00000000EA7C: 361A1ABF
  v_and_b32     v12, 63, v12                            // 00000000EA80: 361818BF
  v_and_b32     v11, 63, v11                            // 00000000EA84: 361616BF
  v_and_b32     v10, 63, v10                            // 00000000EA88: 361414BF
  s_xor_b64     s[0:1], s[0:1], -1                      // 00000000EA8C: 8980C100
  v_lshl_b64    v[16:17], 1, v8                         // 00000000EA90: D2C20010 00021081
  v_and_b32     v16, exec_lo, v16                       // 00000000EA98: 3620207E
  v_and_b32     v17, exec_hi, v17                       // 00000000EA9C: 3622227F
  v_cmp_ne_u64  s[2:3], 0, v[16:17]                     // 00000000EAA0: D1CA0002 00022080
  s_mov_b64     s[8:9], exec                            // 00000000EAA8: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EAAC: BE8C047E
  s_nop         0x0000                                  // 00000000EAB0: BF800000
  s_nop         0x0000                                  // 00000000EAB4: BF800000
  s_nop         0x0000                                  // 00000000EAB8: BF800000
  s_nop         0x0000                                  // 00000000EABC: BF800000
  label_3AB0:
  v_readfirstlane_b32  s5, v8                           // 00000000EAC0: 7E0A0508
  v_cmp_eq_u32  vcc, s5, v8                             // 00000000EAC4: 7D841005
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000EAC8: BE8E246A
  s_cbranch_execz  label_3AB8                           // 00000000EACC: BF880004
  v_readlane_b32  s5, v38, s5                           // 00000000EAD0: 020A0B26
  v_mov_b32     v8, s5                                  // 00000000EAD4: 7E100205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000EAD8: 8A8C7E0C
  s_cbranch_scc0  label_3ABA                            // 00000000EADC: BF840002
  label_3AB8:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000EAE0: 87FE0C0E
  s_branch      label_3AB0                              // 00000000EAE4: BF82FFF6
  label_3ABA:
  s_mov_b64     exec, s[8:9]                            // 00000000EAE8: BEFE0408
  v_cndmask_b32  v8, 0, v8, s[2:3]                      // 00000000EAEC: D2000008 000A1080
  v_lshl_b64    v[16:17], 1, v5                         // 00000000EAF4: D2C20010 00020A81
  v_and_b32     v16, exec_lo, v16                       // 00000000EAFC: 3620207E
  v_and_b32     v17, exec_hi, v17                       // 00000000EB00: 3622227F
  v_cmp_ne_u64  s[2:3], 0, v[16:17]                     // 00000000EB04: D1CA0002 00022080
  s_mov_b64     s[8:9], exec                            // 00000000EB0C: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EB10: BE8C047E
  s_nop         0x0000                                  // 00000000EB14: BF800000
  s_nop         0x0000                                  // 00000000EB18: BF800000
  s_nop         0x0000                                  // 00000000EB1C: BF800000
  label_3AC8:
  v_readfirstlane_b32  s5, v5                           // 00000000EB20: 7E0A0505
  v_cmp_eq_u32  vcc, s5, v5                             // 00000000EB24: 7D840A05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000EB28: BE8E246A
  s_cbranch_execz  label_3AD0                           // 00000000EB2C: BF880004
  v_readlane_b32  s5, v6, s5                            // 00000000EB30: 020A0B06
  v_mov_b32     v16, s5                                 // 00000000EB34: 7E200205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000EB38: 8A8C7E0C
  s_cbranch_scc0  label_3AD2                            // 00000000EB3C: BF840002
  label_3AD0:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000EB40: 87FE0C0E
  s_branch      label_3AC8                              // 00000000EB44: BF82FFF6
  label_3AD2:
  s_mov_b64     exec, s[8:9]                            // 00000000EB48: BEFE0408
  v_cndmask_b32  v16, 0, v16, s[2:3]                    // 00000000EB4C: D2000010 000A2080
  v_lshl_b64    v[17:18], 1, v5                         // 00000000EB54: D2C20011 00020A81
  v_and_b32     v17, exec_lo, v17                       // 00000000EB5C: 3622227E
  v_and_b32     v18, exec_hi, v18                       // 00000000EB60: 3624247F
  v_cmp_ne_u64  s[2:3], 0, v[17:18]                     // 00000000EB64: D1CA0002 00022280
  s_mov_b64     s[8:9], exec                            // 00000000EB6C: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EB70: BE8C047E
  s_nop         0x0000                                  // 00000000EB74: BF800000
  s_nop         0x0000                                  // 00000000EB78: BF800000
  s_nop         0x0000                                  // 00000000EB7C: BF800000
  label_3AE0:
  v_readfirstlane_b32  s5, v5                           // 00000000EB80: 7E0A0505
  v_cmp_eq_u32  vcc, s5, v5                             // 00000000EB84: 7D840A05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000EB88: BE8E246A
  s_cbranch_execz  label_3AE8                           // 00000000EB8C: BF880004
  v_readlane_b32  s5, v38, s5                           // 00000000EB90: 020A0B26
  v_mov_b32     v5, s5                                  // 00000000EB94: 7E0A0205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000EB98: 8A8C7E0C
  s_cbranch_scc0  label_3AEA                            // 00000000EB9C: BF840002
  label_3AE8:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000EBA0: 87FE0C0E
  s_branch      label_3AE0                              // 00000000EBA4: BF82FFF6
  label_3AEA:
  s_mov_b64     exec, s[8:9]                            // 00000000EBA8: BEFE0408
  v_cndmask_b32  v5, 0, v5, s[2:3]                      // 00000000EBAC: D2000005 000A0A80
  v_lshl_b64    v[17:18], 1, v15                        // 00000000EBB4: D2C20011 00021E81
  v_and_b32     v17, exec_lo, v17                       // 00000000EBBC: 3622227E
  v_and_b32     v18, exec_hi, v18                       // 00000000EBC0: 3624247F
  v_cmp_ne_u64  s[2:3], 0, v[17:18]                     // 00000000EBC4: D1CA0002 00022280
  s_mov_b64     s[8:9], exec                            // 00000000EBCC: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EBD0: BE8C047E
  s_nop         0x0000                                  // 00000000EBD4: BF800000
  s_nop         0x0000                                  // 00000000EBD8: BF800000
  s_nop         0x0000                                  // 00000000EBDC: BF800000
  label_3AF8:
  v_readfirstlane_b32  s5, v15                          // 00000000EBE0: 7E0A050F
  v_cmp_eq_u32  vcc, s5, v15                            // 00000000EBE4: 7D841E05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000EBE8: BE8E246A
  s_cbranch_execz  label_3B00                           // 00000000EBEC: BF880004
  v_readlane_b32  s5, v6, s5                            // 00000000EBF0: 020A0B06
  v_mov_b32     v17, s5                                 // 00000000EBF4: 7E220205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000EBF8: 8A8C7E0C
  s_cbranch_scc0  label_3B02                            // 00000000EBFC: BF840002
  label_3B00:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000EC00: 87FE0C0E
  s_branch      label_3AF8                              // 00000000EC04: BF82FFF6
  label_3B02:
  s_mov_b64     exec, s[8:9]                            // 00000000EC08: BEFE0408
  v_cndmask_b32  v17, 0, v17, s[2:3]                    // 00000000EC0C: D2000011 000A2280
  v_lshl_b64    v[18:19], 1, v15                        // 00000000EC14: D2C20012 00021E81
  v_and_b32     v18, exec_lo, v18                       // 00000000EC1C: 3624247E
  v_and_b32     v19, exec_hi, v19                       // 00000000EC20: 3626267F
  v_cmp_ne_u64  s[2:3], 0, v[18:19]                     // 00000000EC24: D1CA0002 00022480
  s_mov_b64     s[8:9], exec                            // 00000000EC2C: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EC30: BE8C047E
  s_nop         0x0000                                  // 00000000EC34: BF800000
  s_nop         0x0000                                  // 00000000EC38: BF800000
  s_nop         0x0000                                  // 00000000EC3C: BF800000
  label_3B10:
  v_readfirstlane_b32  s5, v15                          // 00000000EC40: 7E0A050F
  v_cmp_eq_u32  vcc, s5, v15                            // 00000000EC44: 7D841E05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000EC48: BE8E246A
  s_cbranch_execz  label_3B18                           // 00000000EC4C: BF880004
  v_readlane_b32  s5, v38, s5                           // 00000000EC50: 020A0B26
  v_mov_b32     v15, s5                                 // 00000000EC54: 7E1E0205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000EC58: 8A8C7E0C
  s_cbranch_scc0  label_3B1A                            // 00000000EC5C: BF840002
  label_3B18:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000EC60: 87FE0C0E
  s_branch      label_3B10                              // 00000000EC64: BF82FFF6
  label_3B1A:
  s_mov_b64     exec, s[8:9]                            // 00000000EC68: BEFE0408
  v_cndmask_b32  v15, 0, v15, s[2:3]                    // 00000000EC6C: D200000F 000A1E80
  v_lshl_b64    v[18:19], 1, v14                        // 00000000EC74: D2C20012 00021C81
  v_and_b32     v18, exec_lo, v18                       // 00000000EC7C: 3624247E
  v_and_b32     v19, exec_hi, v19                       // 00000000EC80: 3626267F
  v_cmp_ne_u64  s[2:3], 0, v[18:19]                     // 00000000EC84: D1CA0002 00022480
  s_mov_b64     s[8:9], exec                            // 00000000EC8C: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EC90: BE8C047E
  s_nop         0x0000                                  // 00000000EC94: BF800000
  s_nop         0x0000                                  // 00000000EC98: BF800000
  s_nop         0x0000                                  // 00000000EC9C: BF800000
  label_3B28:
  v_readfirstlane_b32  s5, v14                          // 00000000ECA0: 7E0A050E
  v_cmp_eq_u32  vcc, s5, v14                            // 00000000ECA4: 7D841C05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000ECA8: BE8E246A
  s_cbranch_execz  label_3B30                           // 00000000ECAC: BF880004
  v_readlane_b32  s5, v6, s5                            // 00000000ECB0: 020A0B06
  v_mov_b32     v18, s5                                 // 00000000ECB4: 7E240205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000ECB8: 8A8C7E0C
  s_cbranch_scc0  label_3B32                            // 00000000ECBC: BF840002
  label_3B30:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000ECC0: 87FE0C0E
  s_branch      label_3B28                              // 00000000ECC4: BF82FFF6
  label_3B32:
  s_mov_b64     exec, s[8:9]                            // 00000000ECC8: BEFE0408
  v_cndmask_b32  v18, 0, v18, s[2:3]                    // 00000000ECCC: D2000012 000A2480
  v_lshl_b64    v[19:20], 1, v14                        // 00000000ECD4: D2C20013 00021C81
  v_and_b32     v19, exec_lo, v19                       // 00000000ECDC: 3626267E
  v_and_b32     v20, exec_hi, v20                       // 00000000ECE0: 3628287F
  v_cmp_ne_u64  s[2:3], 0, v[19:20]                     // 00000000ECE4: D1CA0002 00022680
  s_mov_b64     s[8:9], exec                            // 00000000ECEC: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000ECF0: BE8C047E
  s_nop         0x0000                                  // 00000000ECF4: BF800000
  s_nop         0x0000                                  // 00000000ECF8: BF800000
  s_nop         0x0000                                  // 00000000ECFC: BF800000
  label_3B40:
  v_readfirstlane_b32  s5, v14                          // 00000000ED00: 7E0A050E
  v_cmp_eq_u32  vcc, s5, v14                            // 00000000ED04: 7D841C05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000ED08: BE8E246A
  s_cbranch_execz  label_3B48                           // 00000000ED0C: BF880004
  v_readlane_b32  s5, v38, s5                           // 00000000ED10: 020A0B26
  v_mov_b32     v14, s5                                 // 00000000ED14: 7E1C0205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000ED18: 8A8C7E0C
  s_cbranch_scc0  label_3B4A                            // 00000000ED1C: BF840002
  label_3B48:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000ED20: 87FE0C0E
  s_branch      label_3B40                              // 00000000ED24: BF82FFF6
  label_3B4A:
  s_mov_b64     exec, s[8:9]                            // 00000000ED28: BEFE0408
  v_cndmask_b32  v14, 0, v14, s[2:3]                    // 00000000ED2C: D200000E 000A1C80
  v_lshl_b64    v[19:20], 1, v13                        // 00000000ED34: D2C20013 00021A81
  v_and_b32     v19, exec_lo, v19                       // 00000000ED3C: 3626267E
  v_and_b32     v20, exec_hi, v20                       // 00000000ED40: 3628287F
  v_cmp_ne_u64  s[2:3], 0, v[19:20]                     // 00000000ED44: D1CA0002 00022680
  s_mov_b64     s[8:9], exec                            // 00000000ED4C: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000ED50: BE8C047E
  s_nop         0x0000                                  // 00000000ED54: BF800000
  s_nop         0x0000                                  // 00000000ED58: BF800000
  s_nop         0x0000                                  // 00000000ED5C: BF800000
  label_3B58:
  v_readfirstlane_b32  s5, v13                          // 00000000ED60: 7E0A050D
  v_cmp_eq_u32  vcc, s5, v13                            // 00000000ED64: 7D841A05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000ED68: BE8E246A
  s_cbranch_execz  label_3B60                           // 00000000ED6C: BF880004
  v_readlane_b32  s5, v6, s5                            // 00000000ED70: 020A0B06
  v_mov_b32     v19, s5                                 // 00000000ED74: 7E260205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000ED78: 8A8C7E0C
  s_cbranch_scc0  label_3B62                            // 00000000ED7C: BF840002
  label_3B60:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000ED80: 87FE0C0E
  s_branch      label_3B58                              // 00000000ED84: BF82FFF6
  label_3B62:
  s_mov_b64     exec, s[8:9]                            // 00000000ED88: BEFE0408
  v_cndmask_b32  v19, 0, v19, s[2:3]                    // 00000000ED8C: D2000013 000A2680
  v_lshl_b64    v[20:21], 1, v13                        // 00000000ED94: D2C20014 00021A81
  v_and_b32     v20, exec_lo, v20                       // 00000000ED9C: 3628287E
  v_and_b32     v21, exec_hi, v21                       // 00000000EDA0: 362A2A7F
  v_cmp_ne_u64  s[2:3], 0, v[20:21]                     // 00000000EDA4: D1CA0002 00022880
  s_mov_b64     s[8:9], exec                            // 00000000EDAC: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EDB0: BE8C047E
  s_nop         0x0000                                  // 00000000EDB4: BF800000
  s_nop         0x0000                                  // 00000000EDB8: BF800000
  s_nop         0x0000                                  // 00000000EDBC: BF800000
  label_3B70:
  v_readfirstlane_b32  s5, v13                          // 00000000EDC0: 7E0A050D
  v_cmp_eq_u32  vcc, s5, v13                            // 00000000EDC4: 7D841A05
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000EDC8: BE8E246A
  s_cbranch_execz  label_3B78                           // 00000000EDCC: BF880004
  v_readlane_b32  s5, v38, s5                           // 00000000EDD0: 020A0B26
  v_mov_b32     v13, s5                                 // 00000000EDD4: 7E1A0205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000EDD8: 8A8C7E0C
  s_cbranch_scc0  label_3B7A                            // 00000000EDDC: BF840002
  label_3B78:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000EDE0: 87FE0C0E
  s_branch      label_3B70                              // 00000000EDE4: BF82FFF6
  label_3B7A:
  s_mov_b64     exec, s[8:9]                            // 00000000EDE8: BEFE0408
  v_cndmask_b32  v13, 0, v13, s[2:3]                    // 00000000EDEC: D200000D 000A1A80
  v_lshl_b64    v[20:21], 1, v12                        // 00000000EDF4: D2C20014 00021881
  v_and_b32     v20, exec_lo, v20                       // 00000000EDFC: 3628287E
  v_and_b32     v21, exec_hi, v21                       // 00000000EE00: 362A2A7F
  v_cmp_ne_u64  s[2:3], 0, v[20:21]                     // 00000000EE04: D1CA0002 00022880
  s_mov_b64     s[8:9], exec                            // 00000000EE0C: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EE10: BE8C047E
  s_nop         0x0000                                  // 00000000EE14: BF800000
  s_nop         0x0000                                  // 00000000EE18: BF800000
  s_nop         0x0000                                  // 00000000EE1C: BF800000
  label_3B88:
  v_readfirstlane_b32  s5, v12                          // 00000000EE20: 7E0A050C
  v_cmp_eq_u32  vcc, s5, v12                            // 00000000EE24: 7D841805
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000EE28: BE8E246A
  s_cbranch_execz  label_3B90                           // 00000000EE2C: BF880004
  v_readlane_b32  s5, v6, s5                            // 00000000EE30: 020A0B06
  v_mov_b32     v20, s5                                 // 00000000EE34: 7E280205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000EE38: 8A8C7E0C
  s_cbranch_scc0  label_3B92                            // 00000000EE3C: BF840002
  label_3B90:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000EE40: 87FE0C0E
  s_branch      label_3B88                              // 00000000EE44: BF82FFF6
  label_3B92:
  s_mov_b64     exec, s[8:9]                            // 00000000EE48: BEFE0408
  v_cndmask_b32  v20, 0, v20, s[2:3]                    // 00000000EE4C: D2000014 000A2880
  v_lshl_b64    v[21:22], 1, v12                        // 00000000EE54: D2C20015 00021881
  v_and_b32     v21, exec_lo, v21                       // 00000000EE5C: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 00000000EE60: 362C2C7F
  v_cmp_ne_u64  s[2:3], 0, v[21:22]                     // 00000000EE64: D1CA0002 00022A80
  s_mov_b64     s[8:9], exec                            // 00000000EE6C: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EE70: BE8C047E
  s_nop         0x0000                                  // 00000000EE74: BF800000
  s_nop         0x0000                                  // 00000000EE78: BF800000
  s_nop         0x0000                                  // 00000000EE7C: BF800000
  label_3BA0:
  v_readfirstlane_b32  s5, v12                          // 00000000EE80: 7E0A050C
  v_cmp_eq_u32  vcc, s5, v12                            // 00000000EE84: 7D841805
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000EE88: BE8E246A
  s_cbranch_execz  label_3BA8                           // 00000000EE8C: BF880004
  v_readlane_b32  s5, v38, s5                           // 00000000EE90: 020A0B26
  v_mov_b32     v12, s5                                 // 00000000EE94: 7E180205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000EE98: 8A8C7E0C
  s_cbranch_scc0  label_3BAA                            // 00000000EE9C: BF840002
  label_3BA8:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000EEA0: 87FE0C0E
  s_branch      label_3BA0                              // 00000000EEA4: BF82FFF6
  label_3BAA:
  s_mov_b64     exec, s[8:9]                            // 00000000EEA8: BEFE0408
  v_cndmask_b32  v12, 0, v12, s[2:3]                    // 00000000EEAC: D200000C 000A1880
  v_lshl_b64    v[21:22], 1, v11                        // 00000000EEB4: D2C20015 00021681
  v_and_b32     v21, exec_lo, v21                       // 00000000EEBC: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 00000000EEC0: 362C2C7F
  v_cmp_ne_u64  s[2:3], 0, v[21:22]                     // 00000000EEC4: D1CA0002 00022A80
  s_mov_b64     s[8:9], exec                            // 00000000EECC: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EED0: BE8C047E
  s_nop         0x0000                                  // 00000000EED4: BF800000
  s_nop         0x0000                                  // 00000000EED8: BF800000
  s_nop         0x0000                                  // 00000000EEDC: BF800000
  label_3BB8:
  v_readfirstlane_b32  s5, v11                          // 00000000EEE0: 7E0A050B
  v_cmp_eq_u32  vcc, s5, v11                            // 00000000EEE4: 7D841605
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000EEE8: BE8E246A
  s_cbranch_execz  label_3BC0                           // 00000000EEEC: BF880004
  v_readlane_b32  s5, v6, s5                            // 00000000EEF0: 020A0B06
  v_mov_b32     v21, s5                                 // 00000000EEF4: 7E2A0205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000EEF8: 8A8C7E0C
  s_cbranch_scc0  label_3BC2                            // 00000000EEFC: BF840002
  label_3BC0:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000EF00: 87FE0C0E
  s_branch      label_3BB8                              // 00000000EF04: BF82FFF6
  label_3BC2:
  s_mov_b64     exec, s[8:9]                            // 00000000EF08: BEFE0408
  v_cndmask_b32  v21, 0, v21, s[2:3]                    // 00000000EF0C: D2000015 000A2A80
  v_lshl_b64    v[22:23], 1, v11                        // 00000000EF14: D2C20016 00021681
  v_and_b32     v22, exec_lo, v22                       // 00000000EF1C: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000EF20: 362E2E7F
  v_cmp_ne_u64  s[2:3], 0, v[22:23]                     // 00000000EF24: D1CA0002 00022C80
  s_mov_b64     s[8:9], exec                            // 00000000EF2C: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EF30: BE8C047E
  s_nop         0x0000                                  // 00000000EF34: BF800000
  s_nop         0x0000                                  // 00000000EF38: BF800000
  s_nop         0x0000                                  // 00000000EF3C: BF800000
  label_3BD0:
  v_readfirstlane_b32  s5, v11                          // 00000000EF40: 7E0A050B
  v_cmp_eq_u32  vcc, s5, v11                            // 00000000EF44: 7D841605
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000EF48: BE8E246A
  s_cbranch_execz  label_3BD8                           // 00000000EF4C: BF880004
  v_readlane_b32  s5, v38, s5                           // 00000000EF50: 020A0B26
  v_mov_b32     v11, s5                                 // 00000000EF54: 7E160205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000EF58: 8A8C7E0C
  s_cbranch_scc0  label_3BDA                            // 00000000EF5C: BF840002
  label_3BD8:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000EF60: 87FE0C0E
  s_branch      label_3BD0                              // 00000000EF64: BF82FFF6
  label_3BDA:
  s_mov_b64     exec, s[8:9]                            // 00000000EF68: BEFE0408
  v_cndmask_b32  v11, 0, v11, s[2:3]                    // 00000000EF6C: D200000B 000A1680
  v_lshl_b64    v[22:23], 1, v10                        // 00000000EF74: D2C20016 00021481
  v_and_b32     v22, exec_lo, v22                       // 00000000EF7C: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000EF80: 362E2E7F
  v_cmp_ne_u64  s[2:3], 0, v[22:23]                     // 00000000EF84: D1CA0002 00022C80
  s_mov_b64     s[8:9], exec                            // 00000000EF8C: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EF90: BE8C047E
  s_nop         0x0000                                  // 00000000EF94: BF800000
  s_nop         0x0000                                  // 00000000EF98: BF800000
  s_nop         0x0000                                  // 00000000EF9C: BF800000
  label_3BE8:
  v_readfirstlane_b32  s5, v10                          // 00000000EFA0: 7E0A050A
  v_cmp_eq_u32  vcc, s5, v10                            // 00000000EFA4: 7D841405
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000EFA8: BE8E246A
  s_cbranch_execz  label_3BF0                           // 00000000EFAC: BF880004
  v_readlane_b32  s5, v6, s5                            // 00000000EFB0: 020A0B06
  v_mov_b32     v22, s5                                 // 00000000EFB4: 7E2C0205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000EFB8: 8A8C7E0C
  s_cbranch_scc0  label_3BF2                            // 00000000EFBC: BF840002
  label_3BF0:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000EFC0: 87FE0C0E
  s_branch      label_3BE8                              // 00000000EFC4: BF82FFF6
  label_3BF2:
  s_mov_b64     exec, s[8:9]                            // 00000000EFC8: BEFE0408
  v_cndmask_b32  v6, 0, v22, s[2:3]                     // 00000000EFCC: D2000006 000A2C80
  v_lshl_b64    v[22:23], 1, v10                        // 00000000EFD4: D2C20016 00021481
  v_and_b32     v22, exec_lo, v22                       // 00000000EFDC: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000EFE0: 362E2E7F
  v_cmp_ne_u64  s[2:3], 0, v[22:23]                     // 00000000EFE4: D1CA0002 00022C80
  s_mov_b64     s[8:9], exec                            // 00000000EFEC: BE88047E
  s_mov_b64     s[12:13], exec                          // 00000000EFF0: BE8C047E
  s_nop         0x0000                                  // 00000000EFF4: BF800000
  s_nop         0x0000                                  // 00000000EFF8: BF800000
  s_nop         0x0000                                  // 00000000EFFC: BF800000
  label_3C00:
  v_readfirstlane_b32  s5, v10                          // 00000000F000: 7E0A050A
  v_cmp_eq_u32  vcc, s5, v10                            // 00000000F004: 7D841405
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000F008: BE8E246A
  s_cbranch_execz  label_3C08                           // 00000000F00C: BF880004
  v_readlane_b32  s5, v38, s5                           // 00000000F010: 020A0B26
  v_mov_b32     v10, s5                                 // 00000000F014: 7E140205
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000F018: 8A8C7E0C
  s_cbranch_scc0  label_3C0A                            // 00000000F01C: BF840002
  label_3C08:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000F020: 87FE0C0E
  s_branch      label_3C00                              // 00000000F024: BF82FFF6
  label_3C0A:
  s_mov_b64     exec, s[8:9]                            // 00000000F028: BEFE0408
  v_cndmask_b32  v4, 0, v10, s[2:3]                     // 00000000F02C: D2000004 000A1480
  s_mov_b64     s[2:3], exec                            // 00000000F034: BE82047E
  s_andn2_b64   exec, s[2:3], s[0:1]                    // 00000000F038: 8AFE0002
  v_mov_b32     v28, s10                                // 00000000F03C: 7E38020A
  s_cbranch_execz  label_3CA0                           // 00000000F040: BF88008F
  v_mov_b32     v29, s11                                // 00000000F044: 7E3A020B
  s_add_u32     s0, s10, 4                              // 00000000F048: 8000840A
  s_addc_u32    s1, s11, 0                              // 00000000F04C: 8201800B
  v_mov_b32     v23, s0                                 // 00000000F050: 7E2E0200
  v_mov_b32     v24, s1                                 // 00000000F054: 7E300201
  s_add_u32     s0, s10, 8                              // 00000000F058: 8000880A
  s_addc_u32    s1, s11, 0                              // 00000000F05C: 8201800B
  v_mov_b32     v25, s0                                 // 00000000F060: 7E320200
  v_mov_b32     v26, s1                                 // 00000000F064: 7E340201
  s_add_u32     s0, s10, 12                             // 00000000F068: 80008C0A
  s_addc_u32    s1, s11, 0                              // 00000000F06C: 8201800B
  flat_load_dword  v27, v[28:29]                        // 00000000F070: DC300000 1B00001C
  flat_load_dword  v10, v[28:29]                        // 00000000F078: DC300000 0A00001C
  v_mov_b32     v34, s0                                 // 00000000F080: 7E440200
  v_mov_b32     v35, s1                                 // 00000000F084: 7E460201
  s_add_u32     s0, s10, 16                             // 00000000F088: 8000900A
  s_addc_u32    s1, s11, 0                              // 00000000F08C: 8201800B
  flat_load_dword  v29, v[23:24]                        // 00000000F090: DC300000 1D000017
  flat_load_dword  v23, v[23:24]                        // 00000000F098: DC300000 17000017
  v_mov_b32     v36, s0                                 // 00000000F0A0: 7E480200
  v_mov_b32     v37, s1                                 // 00000000F0A4: 7E4A0201
  s_add_u32     s0, s10, 20                             // 00000000F0A8: 8000940A
  s_addc_u32    s1, s11, 0                              // 00000000F0AC: 8201800B
  flat_load_dword  v31, v[25:26]                        // 00000000F0B0: DC300000 1F000019
  flat_load_dword  v25, v[25:26]                        // 00000000F0B8: DC300000 19000019
  v_mov_b32     v38, s0                                 // 00000000F0C0: 7E4C0200
  v_mov_b32     v39, s1                                 // 00000000F0C4: 7E4E0201
  s_add_u32     s0, s10, 24                             // 00000000F0C8: 8000980A
  s_addc_u32    s1, s11, 0                              // 00000000F0CC: 8201800B
  flat_load_dword  v33, v[34:35]                        // 00000000F0D0: DC300000 21000022
  flat_load_dword  v22, v[34:35]                        // 00000000F0D8: DC300000 16000022
  v_mov_b32     v40, s0                                 // 00000000F0E0: 7E500200
  v_mov_b32     v41, s1                                 // 00000000F0E4: 7E520201
  s_add_u32     s0, s10, 28                             // 00000000F0E8: 80009C0A
  s_addc_u32    s1, s11, 0                              // 00000000F0EC: 8201800B
  flat_load_dword  v35, v[36:37]                        // 00000000F0F0: DC300000 23000024
  flat_load_dword  v24, v[36:37]                        // 00000000F0F8: DC300000 18000024
  v_mov_b32     v42, s0                                 // 00000000F100: 7E540200
  v_mov_b32     v43, s1                                 // 00000000F104: 7E560201
  s_add_u32     s0, s10, 32                             // 00000000F108: 8000A00A
  s_addc_u32    s1, s11, 0                              // 00000000F10C: 8201800B
  flat_load_dword  v37, v[38:39]                        // 00000000F110: DC300000 25000026
  flat_load_dword  v26, v[38:39]                        // 00000000F118: DC300000 1A000026
  v_mov_b32     v44, s0                                 // 00000000F120: 7E580200
  v_mov_b32     v45, s1                                 // 00000000F124: 7E5A0201
  flat_load_dword  v39, v[40:41]                        // 00000000F128: DC300000 27000028
  flat_load_dword  v28, v[40:41]                        // 00000000F130: DC300000 1C000028
  flat_load_dword  v34, v[42:43]                        // 00000000F138: DC300000 2200002A
  flat_load_dword  v30, v[42:43]                        // 00000000F140: DC300000 1E00002A
  flat_load_dword  v36, v[44:45]                        // 00000000F148: DC300000 2400002C
  flat_load_dword  v32, v[44:45]                        // 00000000F150: DC300000 2000002C
  v_mul_f32     v3, v10, v3                             // 00000000F158: 1006070A
  v_mul_f32     v7, v27, v7                             // 00000000F15C: 100E0F1B
  v_cmp_gt_i32  vcc, 40, v2                             // 00000000F160: 7D0804A8
  s_waitcnt     vmcnt(14) & lgkmcnt(14)                 // 00000000F164: BF8C0E7E
  v_mul_f32     v8, v23, v8                             // 00000000F168: 10101117
  v_mul_f32     v9, v29, v9                             // 00000000F16C: 1012131D
  v_cmp_lt_i32  s[0:1], v2, 39                          // 00000000F170: D1020000 00014F02
  v_cndmask_b32  v3, v3, v7, vcc                        // 00000000F178: 00060F03
  v_add_f32     v7, 0, s4                               // 00000000F17C: D2060007 00000880
  s_waitcnt     vmcnt(12) & lgkmcnt(12)                 // 00000000F184: BF8C0C7C
  v_mul_f32     v5, v25, v5                             // 00000000F188: 100A0B19
  v_mul_f32     v10, v31, v16                           // 00000000F18C: 1014211F
  v_cmp_gt_i32  vcc, 38, v2                             // 00000000F190: 7D0804A6
  v_cndmask_b32  v8, v8, v9, s[0:1]                     // 00000000F194: D2000008 00021308
  v_add_f32     v3, v3, v7                              // 00000000F19C: 06060F03
  v_cmp_lt_i32  s[0:1], v2, 32                          // 00000000F1A0: D1020000 00014102
  v_cndmask_b32  v5, v5, v10, vcc                       // 00000000F1A8: 000A1505
  s_waitcnt     vmcnt(10) & lgkmcnt(10)                 // 00000000F1AC: BF8C0A7A
  v_mul_f32     v7, v22, v15                            // 00000000F1B0: 100E1F16
  v_mul_f32     v9, v33, v17                            // 00000000F1B4: 10122321
  v_add_f32     v3, v3, v8                              // 00000000F1B8: 06061103
  s_waitcnt     vmcnt(8) & lgkmcnt(8)                   // 00000000F1BC: BF8C0878
  v_mul_f32     v8, v24, v14                            // 00000000F1C0: 10101D18
  v_mul_f32     v10, v35, v18                           // 00000000F1C4: 10142523
  v_cmp_gt_i32  vcc, 31, v2                             // 00000000F1C8: 7D08049F
  v_cndmask_b32  v7, v7, v9, s[0:1]                     // 00000000F1CC: D2000007 00021307
  v_add_f32     v3, v3, v5                              // 00000000F1D4: 06060B03
  s_waitcnt     vmcnt(6) & lgkmcnt(6)                   // 00000000F1D8: BF8C0676
  v_mul_f32     v5, v26, v13                            // 00000000F1DC: 100A1B1A
  v_mul_f32     v9, v37, v19                            // 00000000F1E0: 10122725
  v_cmp_lt_i32  s[0:1], v2, 30                          // 00000000F1E4: D1020000 00013D02
  v_cndmask_b32  v8, v8, v10, vcc                       // 00000000F1EC: 00101508
  v_add_f32     v3, v3, v7                              // 00000000F1F0: 06060F03
  v_mul_lo_u32  v1, v1, s4                              // 00000000F1F4: D2D20001 00000901
  s_waitcnt     vmcnt(4) & lgkmcnt(4)                   // 00000000F1FC: BF8C0474
  v_mul_f32     v7, v28, v12                            // 00000000F200: 100E191C
  v_mul_f32     v10, v39, v20                           // 00000000F204: 10142927
  v_cmp_lt_i32  s[4:5], v2, 24                          // 00000000F208: D1020004 00013102
  v_cndmask_b32  v5, v5, v9, s[0:1]                     // 00000000F210: D2000005 00021305
  v_add_f32     v3, v3, v8                              // 00000000F218: 06061103
  v_add_i32     v9, vcc, v1, v0                         // 00000000F21C: 4A120101
  v_cndmask_b32  v1, v7, v10, s[4:5]                    // 00000000F220: D2000001 00121507
  s_waitcnt     vmcnt(2) & lgkmcnt(2)                   // 00000000F228: BF8C0272
  v_mul_f32     v7, v30, v11                            // 00000000F22C: 100E171E
  v_mul_f32     v8, v34, v21                            // 00000000F230: 10102B22
  v_cmp_gt_i32  vcc, 23, v2                             // 00000000F234: 7D080497
  v_add_f32     v3, v3, v5                              // 00000000F238: 06060B03
  v_ashrrev_i32  v10, 31, v9                            // 00000000F23C: 3014129F
  v_cndmask_b32  v7, v7, v8, vcc                        // 00000000F240: 000E1107
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000F244: BF8C0070
  v_mul_f32     v4, v32, v4                             // 00000000F248: 10080920
  v_mul_f32     v6, v36, v6                             // 00000000F24C: 100C0D24
  v_cmp_gt_i32  vcc, 22, v2                             // 00000000F250: 7D080496
  v_add_f32     v1, v3, v1                              // 00000000F254: 06020303
  v_cndmask_b32  v2, v4, v6, vcc                        // 00000000F258: 00040D04
  v_lshl_b64    v[3:4], v[9:10], 2                      // 00000000F25C: D2C20003 00010509
  v_add_f32     v0, v1, v7                              // 00000000F264: 06000F01
  v_add_i32     v5, vcc, s6, v3                         // 00000000F268: 4A0A0606
  v_mov_b32     v3, s7                                  // 00000000F26C: 7E060207
  v_addc_u32    v6, vcc, v3, v4, vcc                    // 00000000F270: 500C0903
  v_add_f32     v0, v0, v2                              // 00000000F274: 06000500
  flat_store_dword  v[5:6], v0                          // 00000000F278: DC700000 00000005
  label_3CA0:
  s_endpgm                                              // 00000000F280: BF810000
  //
  // padding (00000000f284 - 00000000f300)
  //
  //
  // amd_kernel_code_t for &ZZ17Stencil_Hcc_Shfl2RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__319__cxxamp_trampolineEPfiiS4_iiS4_iiiii (00000000f300 - 00000000f400)
  //
  //
  // &ZZ17Stencil_Hcc_Shfl2RN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__319__cxxamp_trampolineEPfiiS4_iiS4_iiiii:
  //
  s_load_dword  s0, s[4:5], 0x01                        // 00000000F400: C0000501
  v_mbcnt_lo_u32_b32  v2, -1, 0                         // 00000000F404: D2460002 000100C1
  v_mbcnt_hi_u32_b32  v2, -1, v2                        // 00000000F40C: 480404C1
  s_waitcnt     lgkmcnt(0)                              // 00000000F410: BF8C007F
  s_and_b32     s1, s0, 0x0000ffff                      // 00000000F414: 8701FF00 0000FFFF
  s_bfe_u32     s0, s0, 0x00100010                      // 00000000F41C: 9380FF00 00100010
  s_mul_i32     s1, s1, s8                              // 00000000F424: 93010801
  v_add_i32     v0, vcc, s1, v0                         // 00000000F428: 4A000001
  s_mul_i32     s0, s0, s9                              // 00000000F42C: 93000900
  v_add_i32     v1, vcc, s0, v1                         // 00000000F430: 4A020200
  v_add_i32     v3, vcc, 4, v2                          // 00000000F434: 4A060484
  s_mov_b32     s0, 0x66666667                          // 00000000F438: BE8003FF 66666667
  v_ashrrev_i32  v4, 31, v2                             // 00000000F440: 3008049F
  v_ashrrev_i32  v5, 31, v3                             // 00000000F444: 300A069F
  s_load_dwordx2  s[2:3], s[6:7], 0x0c                  // 00000000F448: C041070C
  v_mul_lo_u32  v16, v2, s0                             // 00000000F44C: D2D20010 00000102
  v_mul_hi_u32  v7, v2, s0                              // 00000000F454: D2D40007 00000102
  v_mul_lo_u32  v4, v4, s0                              // 00000000F45C: D2D20004 00000104
  v_mul_hi_u32  v8, v3, s0                              // 00000000F464: D2D40008 00000103
  v_mul_lo_u32  v5, v5, s0                              // 00000000F46C: D2D20005 00000105
  v_add_i32     v9, vcc, 8, v2                          // 00000000F474: 4A120488
  v_lshlrev_b32  v1, 1, v1                              // 00000000F478: 34020281
  v_add_i32     v17, vcc, v4, v7                        // 00000000F47C: 4A220F04
  v_add_i32     v6, vcc, v5, v8                         // 00000000F480: 4A0C1105
  v_add_i32     v5, vcc, 0x9999999c, v16                // 00000000F484: 4A0A20FF 9999999C
  v_ashrrev_i32  v8, 31, v9                             // 00000000F48C: 3010129F
  v_ashrrev_i32  v10, 3, v2                             // 00000000F490: 30140483
  v_and_b32     v1, -16, v1                             // 00000000F494: 360202D0
  v_mul_hi_u32  v11, v9, s0                             // 00000000F498: D2D4000B 00000109
  v_mul_lo_u32  v8, v8, s0                              // 00000000F4A0: D2D20008 00000108
  v_add_i32     v1, vcc, v10, v1                        // 00000000F4A8: 4A02030A
  v_lshrrev_b32  v12, 31, v17                           // 00000000F4AC: 2C18229F
  v_ashr_i64    v[13:14], v[16:17], 34                  // 00000000F4B0: D2C6000D 00014510
  v_lshrrev_b32  v4, 31, v6                             // 00000000F4B8: 2C080C9F
  v_ashr_i64    v[14:15], v[5:6], 34                    // 00000000F4BC: D2C6000E 00014505
  v_add_i32     v6, vcc, v8, v11                        // 00000000F4C4: 4A0C1708
  v_add_i32     v5, vcc, 0x33333338, v16                // 00000000F4C8: 4A0A20FF 33333338
  v_and_b32     v7, -8, v1                              // 00000000F4D0: 360E02C8
  v_add_i32     v8, vcc, v13, v12                       // 00000000F4D4: 4A10190D
  v_add_i32     v4, vcc, v14, v4                        // 00000000F4D8: 4A08090E
  s_load_dword  s0, s[6:7], 0x0e                        // 00000000F4DC: C000070E
  s_waitcnt     lgkmcnt(0)                              // 00000000F4E0: BF8C007F
  s_lshl_b32    s1, s2, 1                               // 00000000F4E4: 8F018102
  v_mul_lo_u32  v11, v8, 10                             // 00000000F4E8: D2D2000B 00011508
  v_or_b32      v12, 6, v7                              // 00000000F4F0: 38180E86
  v_mul_lo_u32  v13, v4, 10                             // 00000000F4F4: D2D2000D 00011504
  v_lshrrev_b32  v14, 31, v6                            // 00000000F4FC: 2C1C0C9F
  v_ashr_i64    v[5:6], v[5:6], 34                      // 00000000F500: D2C60005 00014505
  s_add_u32     s4, s1, s3                              // 00000000F508: 80040301
  v_and_b32     v6, -8, v0                              // 00000000F50C: 360C00C8
  v_add_i32     v8, vcc, v7, v8                         // 00000000F510: 4A101107
  v_sub_i32     v11, vcc, v2, v11                       // 00000000F514: 4C161702
  v_add_i32     v4, vcc, v4, v12                        // 00000000F518: 4A081904
  v_sub_i32     v3, vcc, v3, v13                        // 00000000F51C: 4C061B03
  s_load_dwordx2  s[8:9], s[6:7], 0x00                  // 00000000F520: C0440700
  v_add_i32     v5, vcc, v5, v14                        // 00000000F524: 4A0A1D05
  v_mul_lo_u32  v8, v8, s4                              // 00000000F528: D2D20008 00000908
  v_add_i32     v11, vcc, v11, v6                       // 00000000F530: 4A160D0B
  v_mul_lo_u32  v4, v4, s4                              // 00000000F534: D2D20004 00000904
  v_add_i32     v3, vcc, v3, v6                         // 00000000F53C: 4A060D03
  v_mul_lo_u32  v12, v5, 10                             // 00000000F540: D2D2000C 00011505
  v_add_i32     v11, vcc, v11, v8                       // 00000000F548: 4A16110B
  v_add_i32     v8, vcc, v3, v4                         // 00000000F54C: 4A100903
  v_add_i32     v4, vcc, v7, v5                         // 00000000F550: 4A080B07
  v_sub_i32     v5, vcc, v9, v12                        // 00000000F554: 4C0A1909
  v_ashrrev_i32  v12, 31, v11                           // 00000000F558: 3018169F
  v_ashrrev_i32  v9, 31, v8                             // 00000000F55C: 3012109F
  v_add_i32     v4, vcc, 12, v4                         // 00000000F560: 4A08088C
  s_add_u32     s1, s1, s0                              // 00000000F564: 80010001
  v_add_i32     v5, vcc, v5, v6                         // 00000000F568: 4A0A0D05
  v_cmp_lt_i32  s[10:11], v4, s1                        // 00000000F56C: D102000A 00000304
  v_cmp_lt_i32  s[12:13], v5, s4                        // 00000000F574: D102000C 00000905
  v_lshl_b64    v[6:7], v[11:12], 2                     // 00000000F57C: D2C20006 0001050B
  v_lshl_b64    v[8:9], v[8:9], 2                       // 00000000F584: D2C20008 00010508
  s_waitcnt     lgkmcnt(0)                              // 00000000F58C: BF8C007F
  v_add_i32     v11, vcc, s8, v6                        // 00000000F590: 4A160C08
  v_mov_b32     v6, s9                                  // 00000000F594: 7E0C0209
  v_addc_u32    v12, vcc, v6, v7, vcc                   // 00000000F598: 50180F06
  v_add_i32     v7, vcc, s8, v8                         // 00000000F59C: 4A0E1008
  v_addc_u32    v8, vcc, v6, v9, vcc                    // 00000000F5A0: 50101306
  s_and_b64     s[10:11], s[12:13], s[10:11]            // 00000000F5A4: 878A0A0C
  flat_load_dword  v3, v[11:12]                         // 00000000F5A8: DC300000 0300000B
  flat_load_dword  v6, v[7:8]                           // 00000000F5B0: DC300000 06000007
  v_add_i32     v0, vcc, s2, v0                         // 00000000F5B8: 4A000002
  v_add_i32     v1, vcc, s2, v1                         // 00000000F5BC: 4A020202
  s_and_saveexec_b64  s[10:11], s[10:11]                // 00000000F5C0: BE8A240A
  v_mul_lo_u32  v4, v4, s4                              // 00000000F5C4: D2D20004 00000904
  s_cbranch_execz  label_3D7D                           // 00000000F5CC: BF880009
  v_add_i32     v4, vcc, v4, v5                         // 00000000F5D0: 4A080B04
  v_ashrrev_i32  v5, 31, v4                             // 00000000F5D4: 300A089F
  v_lshl_b64    v[4:5], v[4:5], 2                       // 00000000F5D8: D2C20004 00010504
  v_add_i32     v4, vcc, s8, v4                         // 00000000F5E0: 4A080808
  v_mov_b32     v7, s9                                  // 00000000F5E4: 7E0E0209
  v_addc_u32    v5, vcc, v7, v5, vcc                    // 00000000F5E8: 500A0B07
  flat_load_dword  v4, v[4:5]                           // 00000000F5EC: DC300000 04000004
  label_3D7D:
  s_andn2_b64   exec, s[10:11], exec                    // 00000000F5F4: 8AFE7E0A
  s_cbranch_execz  label_3D7F                           // 00000000F5F8: BF880000
  label_3D7F:
  s_mov_b64     exec, s[10:11]                          // 00000000F5FC: BEFE040A
  v_lshlrev_b32  v5, 1, v10                             // 00000000F600: 340A1481
  v_add_i32     v5, vcc, v5, v2                         // 00000000F604: 4A0A0505
  v_and_b32     v7, 63, v5                              // 00000000F608: 360E0ABF
  v_lshl_b64    v[8:9], 1, v7                           // 00000000F60C: D2C20008 00020E81
  v_and_b32     v8, exec_lo, v8                         // 00000000F614: 3610107E
  v_and_b32     v9, exec_hi, v9                         // 00000000F618: 3612127F
  v_cmp_ne_u64  s[8:9], 0, v[8:9]                       // 00000000F61C: D1CA0008 00021080
  s_mov_b64     s[10:11], exec                          // 00000000F624: BE8A047E
  s_mov_b64     s[12:13], exec                          // 00000000F628: BE8C047E
  s_nop         0x0000                                  // 00000000F62C: BF800000
  s_nop         0x0000                                  // 00000000F630: BF800000
  s_nop         0x0000                                  // 00000000F634: BF800000
  s_nop         0x0000                                  // 00000000F638: BF800000
  s_nop         0x0000                                  // 00000000F63C: BF800000
  label_3D90:
  v_readfirstlane_b32  s1, v7                           // 00000000F640: 7E020507
  v_cmp_eq_u32  vcc, s1, v7                             // 00000000F644: 7D840E01
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000F648: BE8E246A
  s_cbranch_execz  label_3D99                           // 00000000F64C: BF880005
  s_waitcnt     vmcnt(1) & lgkmcnt(1)                   // 00000000F650: BF8C0171
  v_readlane_b32  s1, v3, s1                            // 00000000F654: 02020303
  v_mov_b32     v8, s1                                  // 00000000F658: 7E100201
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000F65C: 8A8C7E0C
  s_cbranch_scc0  label_3D9B                            // 00000000F660: BF840002
  label_3D99:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000F664: 87FE0C0E
  s_branch      label_3D90                              // 00000000F668: BF82FFF5
  label_3D9B:
  s_mov_b64     exec, s[10:11]                          // 00000000F66C: BEFE040A
  v_cndmask_b32  v8, 0, v8, s[8:9]                      // 00000000F670: D2000008 00221080
  v_lshl_b64    v[9:10], 1, v7                          // 00000000F678: D2C20009 00020E81
  v_and_b32     v9, exec_lo, v9                         // 00000000F680: 3612127E
  v_and_b32     v10, exec_hi, v10                       // 00000000F684: 3614147F
  v_cmp_ne_u64  s[8:9], 0, v[9:10]                      // 00000000F688: D1CA0008 00021280
  s_mov_b64     s[10:11], exec                          // 00000000F690: BE8A047E
  s_mov_b64     s[12:13], exec                          // 00000000F694: BE8C047E
  s_nop         0x0000                                  // 00000000F698: BF800000
  s_nop         0x0000                                  // 00000000F69C: BF800000
  label_3DA8:
  v_readfirstlane_b32  s1, v7                           // 00000000F6A0: 7E020507
  v_cmp_eq_u32  vcc, s1, v7                             // 00000000F6A4: 7D840E01
  s_and_saveexec_b64  s[14:15], vcc                     // 00000000F6A8: BE8E246A
  s_cbranch_execz  label_3DB1                           // 00000000F6AC: BF880005
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000F6B0: BF8C0070
  v_readlane_b32  s1, v6, s1                            // 00000000F6B4: 02020306
  v_mov_b32     v7, s1                                  // 00000000F6B8: 7E0E0201
  s_andn2_b64   s[12:13], s[12:13], exec                // 00000000F6BC: 8A8C7E0C
  s_cbranch_scc0  label_3DB3                            // 00000000F6C0: BF840002
  label_3DB1:
  s_and_b64     exec, s[14:15], s[12:13]                // 00000000F6C4: 87FE0C0E
  s_branch      label_3DA8                              // 00000000F6C8: BF82FFF5
  label_3DB3:
  s_mov_b64     exec, s[10:11]                          // 00000000F6CC: BEFE040A
  s_load_dwordx2  s[10:11], s[6:7], 0x08                // 00000000F6D0: C0450708
  v_cndmask_b32  v7, 0, v7, s[8:9]                      // 00000000F6D4: D2000007 00220E80
  v_add_i32     v9, vcc, 16, v5                         // 00000000F6DC: 4A120A90
  v_and_b32     v9, 63, v9                              // 00000000F6E0: 361212BF
  s_waitcnt     lgkmcnt(0)                              // 00000000F6E4: BF8C007F
  v_mov_b32     v10, s10                                // 00000000F6E8: 7E14020A
  v_mov_b32     v11, s11                                // 00000000F6EC: 7E16020B
  flat_load_dword  v10, v[10:11]                        // 00000000F6F0: DC300000 0A00000A
  v_lshl_b64    v[11:12], 1, v9                         // 00000000F6F8: D2C2000B 00021281
  v_and_b32     v11, exec_lo, v11                       // 00000000F700: 3616167E
  v_and_b32     v12, exec_hi, v12                       // 00000000F704: 3618187F
  v_cmp_ne_u64  s[8:9], 0, v[11:12]                     // 00000000F708: D1CA0008 00021680
  s_mov_b64     s[12:13], exec                          // 00000000F710: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000F714: BE8E047E
  s_nop         0x0000                                  // 00000000F718: BF800000
  s_nop         0x0000                                  // 00000000F71C: BF800000
  label_3DC8:
  v_readfirstlane_b32  s1, v9                           // 00000000F720: 7E020509
  v_cmp_eq_u32  vcc, s1, v9                             // 00000000F724: 7D841201
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000F728: BE90246A
  s_cbranch_execz  label_3DD0                           // 00000000F72C: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000F730: 02020306
  v_mov_b32     v11, s1                                 // 00000000F734: 7E160201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000F738: 8A8E7E0E
  s_cbranch_scc0  label_3DD2                            // 00000000F73C: BF840002
  label_3DD0:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000F740: 87FE0E10
  s_branch      label_3DC8                              // 00000000F744: BF82FFF6
  label_3DD2:
  s_mov_b64     exec, s[12:13]                          // 00000000F748: BEFE040C
  v_cndmask_b32  v11, 0, v11, s[8:9]                    // 00000000F74C: D200000B 00221680
  v_lshl_b64    v[12:13], 1, v9                         // 00000000F754: D2C2000C 00021281
  v_and_b32     v12, exec_lo, v12                       // 00000000F75C: 3618187E
  v_and_b32     v13, exec_hi, v13                       // 00000000F760: 361A1A7F
  v_cmp_ne_u64  s[8:9], 0, v[12:13]                     // 00000000F764: D1CA0008 00021880
  s_mov_b64     s[12:13], exec                          // 00000000F76C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000F770: BE8E047E
  s_nop         0x0000                                  // 00000000F774: BF800000
  s_nop         0x0000                                  // 00000000F778: BF800000
  s_nop         0x0000                                  // 00000000F77C: BF800000
  label_3DE0:
  v_readfirstlane_b32  s1, v9                           // 00000000F780: 7E020509
  v_cmp_eq_u32  vcc, s1, v9                             // 00000000F784: 7D841201
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000F788: BE90246A
  s_cbranch_execz  label_3DE8                           // 00000000F78C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000F790: 02020304
  v_mov_b32     v9, s1                                  // 00000000F794: 7E120201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000F798: 8A8E7E0E
  s_cbranch_scc0  label_3DEA                            // 00000000F79C: BF840002
  label_3DE8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000F7A0: 87FE0E10
  s_branch      label_3DE0                              // 00000000F7A4: BF82FFF6
  label_3DEA:
  s_mov_b64     exec, s[12:13]                          // 00000000F7A8: BEFE040C
  v_cndmask_b32  v9, 0, v9, s[8:9]                      // 00000000F7AC: D2000009 00221280
  v_add_i32     v12, vcc, 17, v5                        // 00000000F7B4: 4A180A91
  v_and_b32     v12, 63, v12                            // 00000000F7B8: 361818BF
  v_add_i32     v13, vcc, 1, v5                         // 00000000F7BC: 4A1A0A81
  v_and_b32     v13, 63, v13                            // 00000000F7C0: 361A1ABF
  v_lshl_b64    v[14:15], 1, v13                        // 00000000F7C4: D2C2000E 00021A81
  v_and_b32     v14, exec_lo, v14                       // 00000000F7CC: 361C1C7E
  v_and_b32     v15, exec_hi, v15                       // 00000000F7D0: 361E1E7F
  v_cmp_ne_u64  s[8:9], 0, v[14:15]                     // 00000000F7D4: D1CA0008 00021C80
  s_mov_b64     s[12:13], exec                          // 00000000F7DC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000F7E0: BE8E047E
  s_nop         0x0000                                  // 00000000F7E4: BF800000
  s_nop         0x0000                                  // 00000000F7E8: BF800000
  s_nop         0x0000                                  // 00000000F7EC: BF800000
  s_nop         0x0000                                  // 00000000F7F0: BF800000
  s_nop         0x0000                                  // 00000000F7F4: BF800000
  s_nop         0x0000                                  // 00000000F7F8: BF800000
  s_nop         0x0000                                  // 00000000F7FC: BF800000
  label_3E00:
  v_readfirstlane_b32  s1, v13                          // 00000000F800: 7E02050D
  v_cmp_eq_u32  vcc, s1, v13                            // 00000000F804: 7D841A01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000F808: BE90246A
  s_cbranch_execz  label_3E08                           // 00000000F80C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000F810: 02020303
  v_mov_b32     v14, s1                                 // 00000000F814: 7E1C0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000F818: 8A8E7E0E
  s_cbranch_scc0  label_3E0A                            // 00000000F81C: BF840002
  label_3E08:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000F820: 87FE0E10
  s_branch      label_3E00                              // 00000000F824: BF82FFF6
  label_3E0A:
  s_mov_b64     exec, s[12:13]                          // 00000000F828: BEFE040C
  v_cndmask_b32  v14, 0, v14, s[8:9]                    // 00000000F82C: D200000E 00221C80
  v_lshl_b64    v[15:16], 1, v13                        // 00000000F834: D2C2000F 00021A81
  v_and_b32     v15, exec_lo, v15                       // 00000000F83C: 361E1E7E
  v_and_b32     v16, exec_hi, v16                       // 00000000F840: 3620207F
  v_cmp_ne_u64  s[8:9], 0, v[15:16]                     // 00000000F844: D1CA0008 00021E80
  s_mov_b64     s[12:13], exec                          // 00000000F84C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000F850: BE8E047E
  s_nop         0x0000                                  // 00000000F854: BF800000
  s_nop         0x0000                                  // 00000000F858: BF800000
  s_nop         0x0000                                  // 00000000F85C: BF800000
  label_3E18:
  v_readfirstlane_b32  s1, v13                          // 00000000F860: 7E02050D
  v_cmp_eq_u32  vcc, s1, v13                            // 00000000F864: 7D841A01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000F868: BE90246A
  s_cbranch_execz  label_3E20                           // 00000000F86C: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000F870: 02020306
  v_mov_b32     v13, s1                                 // 00000000F874: 7E1A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000F878: 8A8E7E0E
  s_cbranch_scc0  label_3E22                            // 00000000F87C: BF840002
  label_3E20:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000F880: 87FE0E10
  s_branch      label_3E18                              // 00000000F884: BF82FFF6
  label_3E22:
  s_mov_b64     exec, s[12:13]                          // 00000000F888: BEFE040C
  s_add_u32     s12, s10, 4                             // 00000000F88C: 800C840A
  s_addc_u32    s13, s11, 0                             // 00000000F890: 820D800B
  v_mov_b32     v15, s12                                // 00000000F894: 7E1E020C
  v_mov_b32     v16, s13                                // 00000000F898: 7E20020D
  flat_load_dword  v15, v[15:16]                        // 00000000F89C: DC300000 0F00000F
  v_cndmask_b32  v13, 0, v13, s[8:9]                    // 00000000F8A4: D200000D 00221A80
  v_lshl_b64    v[16:17], 1, v12                        // 00000000F8AC: D2C20010 00021881
  v_and_b32     v16, exec_lo, v16                       // 00000000F8B4: 3620207E
  v_and_b32     v17, exec_hi, v17                       // 00000000F8B8: 3622227F
  v_cmp_ne_u64  s[8:9], 0, v[16:17]                     // 00000000F8BC: D1CA0008 00022080
  s_mov_b64     s[12:13], exec                          // 00000000F8C4: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000F8C8: BE8E047E
  s_nop         0x0000                                  // 00000000F8CC: BF800000
  s_nop         0x0000                                  // 00000000F8D0: BF800000
  s_nop         0x0000                                  // 00000000F8D4: BF800000
  s_nop         0x0000                                  // 00000000F8D8: BF800000
  s_nop         0x0000                                  // 00000000F8DC: BF800000
  label_3E38:
  v_readfirstlane_b32  s1, v12                          // 00000000F8E0: 7E02050C
  v_cmp_eq_u32  vcc, s1, v12                            // 00000000F8E4: 7D841801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000F8E8: BE90246A
  s_cbranch_execz  label_3E40                           // 00000000F8EC: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000F8F0: 02020306
  v_mov_b32     v16, s1                                 // 00000000F8F4: 7E200201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000F8F8: 8A8E7E0E
  s_cbranch_scc0  label_3E42                            // 00000000F8FC: BF840002
  label_3E40:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000F900: 87FE0E10
  s_branch      label_3E38                              // 00000000F904: BF82FFF6
  label_3E42:
  s_mov_b64     exec, s[12:13]                          // 00000000F908: BEFE040C
  v_cndmask_b32  v16, 0, v16, s[8:9]                    // 00000000F90C: D2000010 00222080
  v_lshl_b64    v[17:18], 1, v12                        // 00000000F914: D2C20011 00021881
  v_and_b32     v17, exec_lo, v17                       // 00000000F91C: 3622227E
  v_and_b32     v18, exec_hi, v18                       // 00000000F920: 3624247F
  v_cmp_ne_u64  s[8:9], 0, v[17:18]                     // 00000000F924: D1CA0008 00022280
  s_mov_b64     s[12:13], exec                          // 00000000F92C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000F930: BE8E047E
  s_nop         0x0000                                  // 00000000F934: BF800000
  s_nop         0x0000                                  // 00000000F938: BF800000
  s_nop         0x0000                                  // 00000000F93C: BF800000
  label_3E50:
  v_readfirstlane_b32  s1, v12                          // 00000000F940: 7E02050C
  v_cmp_eq_u32  vcc, s1, v12                            // 00000000F944: 7D841801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000F948: BE90246A
  s_cbranch_execz  label_3E58                           // 00000000F94C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000F950: 02020304
  v_mov_b32     v12, s1                                 // 00000000F954: 7E180201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000F958: 8A8E7E0E
  s_cbranch_scc0  label_3E5A                            // 00000000F95C: BF840002
  label_3E58:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000F960: 87FE0E10
  s_branch      label_3E50                              // 00000000F964: BF82FFF6
  label_3E5A:
  s_mov_b64     exec, s[12:13]                          // 00000000F968: BEFE040C
  v_cndmask_b32  v12, 0, v12, s[8:9]                    // 00000000F96C: D200000C 00221880
  v_add_i32     v17, vcc, 18, v5                        // 00000000F974: 4A220A92
  v_and_b32     v17, 63, v17                            // 00000000F978: 362222BF
  v_add_i32     v18, vcc, 2, v5                         // 00000000F97C: 4A240A82
  v_and_b32     v18, 63, v18                            // 00000000F980: 362424BF
  v_lshl_b64    v[19:20], 1, v18                        // 00000000F984: D2C20013 00022481
  v_and_b32     v19, exec_lo, v19                       // 00000000F98C: 3626267E
  v_and_b32     v20, exec_hi, v20                       // 00000000F990: 3628287F
  v_cmp_ne_u64  s[8:9], 0, v[19:20]                     // 00000000F994: D1CA0008 00022680
  s_mov_b64     s[12:13], exec                          // 00000000F99C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000F9A0: BE8E047E
  s_nop         0x0000                                  // 00000000F9A4: BF800000
  s_nop         0x0000                                  // 00000000F9A8: BF800000
  s_nop         0x0000                                  // 00000000F9AC: BF800000
  s_nop         0x0000                                  // 00000000F9B0: BF800000
  s_nop         0x0000                                  // 00000000F9B4: BF800000
  s_nop         0x0000                                  // 00000000F9B8: BF800000
  s_nop         0x0000                                  // 00000000F9BC: BF800000
  label_3E70:
  v_readfirstlane_b32  s1, v18                          // 00000000F9C0: 7E020512
  v_cmp_eq_u32  vcc, s1, v18                            // 00000000F9C4: 7D842401
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000F9C8: BE90246A
  s_cbranch_execz  label_3E78                           // 00000000F9CC: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000F9D0: 02020303
  v_mov_b32     v19, s1                                 // 00000000F9D4: 7E260201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000F9D8: 8A8E7E0E
  s_cbranch_scc0  label_3E7A                            // 00000000F9DC: BF840002
  label_3E78:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000F9E0: 87FE0E10
  s_branch      label_3E70                              // 00000000F9E4: BF82FFF6
  label_3E7A:
  s_mov_b64     exec, s[12:13]                          // 00000000F9E8: BEFE040C
  v_cndmask_b32  v19, 0, v19, s[8:9]                    // 00000000F9EC: D2000013 00222680
  v_lshl_b64    v[20:21], 1, v18                        // 00000000F9F4: D2C20014 00022481
  v_and_b32     v20, exec_lo, v20                       // 00000000F9FC: 3628287E
  v_and_b32     v21, exec_hi, v21                       // 00000000FA00: 362A2A7F
  v_cmp_ne_u64  s[8:9], 0, v[20:21]                     // 00000000FA04: D1CA0008 00022880
  s_mov_b64     s[12:13], exec                          // 00000000FA0C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FA10: BE8E047E
  s_nop         0x0000                                  // 00000000FA14: BF800000
  s_nop         0x0000                                  // 00000000FA18: BF800000
  s_nop         0x0000                                  // 00000000FA1C: BF800000
  label_3E88:
  v_readfirstlane_b32  s1, v18                          // 00000000FA20: 7E020512
  v_cmp_eq_u32  vcc, s1, v18                            // 00000000FA24: 7D842401
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FA28: BE90246A
  s_cbranch_execz  label_3E90                           // 00000000FA2C: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000FA30: 02020306
  v_mov_b32     v18, s1                                 // 00000000FA34: 7E240201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FA38: 8A8E7E0E
  s_cbranch_scc0  label_3E92                            // 00000000FA3C: BF840002
  label_3E90:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FA40: 87FE0E10
  s_branch      label_3E88                              // 00000000FA44: BF82FFF6
  label_3E92:
  s_mov_b64     exec, s[12:13]                          // 00000000FA48: BEFE040C
  s_add_u32     s12, s10, 8                             // 00000000FA4C: 800C880A
  s_addc_u32    s13, s11, 0                             // 00000000FA50: 820D800B
  v_mov_b32     v20, s12                                // 00000000FA54: 7E28020C
  v_mov_b32     v21, s13                                // 00000000FA58: 7E2A020D
  flat_load_dword  v20, v[20:21]                        // 00000000FA5C: DC300000 14000014
  v_cndmask_b32  v18, 0, v18, s[8:9]                    // 00000000FA64: D2000012 00222480
  v_lshl_b64    v[21:22], 1, v17                        // 00000000FA6C: D2C20015 00022281
  v_and_b32     v21, exec_lo, v21                       // 00000000FA74: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 00000000FA78: 362C2C7F
  v_cmp_ne_u64  s[8:9], 0, v[21:22]                     // 00000000FA7C: D1CA0008 00022A80
  s_mov_b64     s[12:13], exec                          // 00000000FA84: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FA88: BE8E047E
  s_nop         0x0000                                  // 00000000FA8C: BF800000
  s_nop         0x0000                                  // 00000000FA90: BF800000
  s_nop         0x0000                                  // 00000000FA94: BF800000
  s_nop         0x0000                                  // 00000000FA98: BF800000
  s_nop         0x0000                                  // 00000000FA9C: BF800000
  label_3EA8:
  v_readfirstlane_b32  s1, v17                          // 00000000FAA0: 7E020511
  v_cmp_eq_u32  vcc, s1, v17                            // 00000000FAA4: 7D842201
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FAA8: BE90246A
  s_cbranch_execz  label_3EB0                           // 00000000FAAC: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000FAB0: 02020306
  v_mov_b32     v21, s1                                 // 00000000FAB4: 7E2A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FAB8: 8A8E7E0E
  s_cbranch_scc0  label_3EB2                            // 00000000FABC: BF840002
  label_3EB0:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FAC0: 87FE0E10
  s_branch      label_3EA8                              // 00000000FAC4: BF82FFF6
  label_3EB2:
  s_mov_b64     exec, s[12:13]                          // 00000000FAC8: BEFE040C
  v_cndmask_b32  v21, 0, v21, s[8:9]                    // 00000000FACC: D2000015 00222A80
  v_lshl_b64    v[22:23], 1, v17                        // 00000000FAD4: D2C20016 00022281
  v_and_b32     v22, exec_lo, v22                       // 00000000FADC: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 00000000FAE0: 362E2E7F
  v_cmp_ne_u64  s[8:9], 0, v[22:23]                     // 00000000FAE4: D1CA0008 00022C80
  s_mov_b64     s[12:13], exec                          // 00000000FAEC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FAF0: BE8E047E
  s_nop         0x0000                                  // 00000000FAF4: BF800000
  s_nop         0x0000                                  // 00000000FAF8: BF800000
  s_nop         0x0000                                  // 00000000FAFC: BF800000
  label_3EC0:
  v_readfirstlane_b32  s1, v17                          // 00000000FB00: 7E020511
  v_cmp_eq_u32  vcc, s1, v17                            // 00000000FB04: 7D842201
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FB08: BE90246A
  s_cbranch_execz  label_3EC8                           // 00000000FB0C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000FB10: 02020304
  v_mov_b32     v17, s1                                 // 00000000FB14: 7E220201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FB18: 8A8E7E0E
  s_cbranch_scc0  label_3ECA                            // 00000000FB1C: BF840002
  label_3EC8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FB20: 87FE0E10
  s_branch      label_3EC0                              // 00000000FB24: BF82FFF6
  label_3ECA:
  s_mov_b64     exec, s[12:13]                          // 00000000FB28: BEFE040C
  v_cndmask_b32  v17, 0, v17, s[8:9]                    // 00000000FB2C: D2000011 00222280
  v_add_i32     v22, vcc, 26, v5                        // 00000000FB34: 4A2C0A9A
  v_and_b32     v22, 63, v22                            // 00000000FB38: 362C2CBF
  v_add_i32     v23, vcc, 10, v5                        // 00000000FB3C: 4A2E0A8A
  v_and_b32     v23, 63, v23                            // 00000000FB40: 362E2EBF
  v_lshl_b64    v[24:25], 1, v23                        // 00000000FB44: D2C20018 00022E81
  v_and_b32     v24, exec_lo, v24                       // 00000000FB4C: 3630307E
  v_and_b32     v25, exec_hi, v25                       // 00000000FB50: 3632327F
  v_cmp_ne_u64  s[8:9], 0, v[24:25]                     // 00000000FB54: D1CA0008 00023080
  s_mov_b64     s[12:13], exec                          // 00000000FB5C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FB60: BE8E047E
  s_nop         0x0000                                  // 00000000FB64: BF800000
  s_nop         0x0000                                  // 00000000FB68: BF800000
  s_nop         0x0000                                  // 00000000FB6C: BF800000
  s_nop         0x0000                                  // 00000000FB70: BF800000
  s_nop         0x0000                                  // 00000000FB74: BF800000
  s_nop         0x0000                                  // 00000000FB78: BF800000
  s_nop         0x0000                                  // 00000000FB7C: BF800000
  label_3EE0:
  v_readfirstlane_b32  s1, v23                          // 00000000FB80: 7E020517
  v_cmp_eq_u32  vcc, s1, v23                            // 00000000FB84: 7D842E01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FB88: BE90246A
  s_cbranch_execz  label_3EE8                           // 00000000FB8C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000FB90: 02020303
  v_mov_b32     v24, s1                                 // 00000000FB94: 7E300201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FB98: 8A8E7E0E
  s_cbranch_scc0  label_3EEA                            // 00000000FB9C: BF840002
  label_3EE8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FBA0: 87FE0E10
  s_branch      label_3EE0                              // 00000000FBA4: BF82FFF6
  label_3EEA:
  s_mov_b64     exec, s[12:13]                          // 00000000FBA8: BEFE040C
  v_cndmask_b32  v24, 0, v24, s[8:9]                    // 00000000FBAC: D2000018 00223080
  v_lshl_b64    v[25:26], 1, v23                        // 00000000FBB4: D2C20019 00022E81
  v_and_b32     v25, exec_lo, v25                       // 00000000FBBC: 3632327E
  v_and_b32     v26, exec_hi, v26                       // 00000000FBC0: 3634347F
  v_cmp_ne_u64  s[8:9], 0, v[25:26]                     // 00000000FBC4: D1CA0008 00023280
  s_mov_b64     s[12:13], exec                          // 00000000FBCC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FBD0: BE8E047E
  s_nop         0x0000                                  // 00000000FBD4: BF800000
  s_nop         0x0000                                  // 00000000FBD8: BF800000
  s_nop         0x0000                                  // 00000000FBDC: BF800000
  label_3EF8:
  v_readfirstlane_b32  s1, v23                          // 00000000FBE0: 7E020517
  v_cmp_eq_u32  vcc, s1, v23                            // 00000000FBE4: 7D842E01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FBE8: BE90246A
  s_cbranch_execz  label_3F00                           // 00000000FBEC: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000FBF0: 02020306
  v_mov_b32     v23, s1                                 // 00000000FBF4: 7E2E0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FBF8: 8A8E7E0E
  s_cbranch_scc0  label_3F02                            // 00000000FBFC: BF840002
  label_3F00:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FC00: 87FE0E10
  s_branch      label_3EF8                              // 00000000FC04: BF82FFF6
  label_3F02:
  s_mov_b64     exec, s[12:13]                          // 00000000FC08: BEFE040C
  s_add_u32     s12, s10, 12                            // 00000000FC0C: 800C8C0A
  s_addc_u32    s13, s11, 0                             // 00000000FC10: 820D800B
  v_mov_b32     v25, s12                                // 00000000FC14: 7E32020C
  v_mov_b32     v26, s13                                // 00000000FC18: 7E34020D
  flat_load_dword  v25, v[25:26]                        // 00000000FC1C: DC300000 19000019
  v_cndmask_b32  v23, 0, v23, s[8:9]                    // 00000000FC24: D2000017 00222E80
  v_lshl_b64    v[26:27], 1, v22                        // 00000000FC2C: D2C2001A 00022C81
  v_and_b32     v26, exec_lo, v26                       // 00000000FC34: 3634347E
  v_and_b32     v27, exec_hi, v27                       // 00000000FC38: 3636367F
  v_cmp_ne_u64  s[8:9], 0, v[26:27]                     // 00000000FC3C: D1CA0008 00023480
  s_mov_b64     s[12:13], exec                          // 00000000FC44: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FC48: BE8E047E
  s_nop         0x0000                                  // 00000000FC4C: BF800000
  s_nop         0x0000                                  // 00000000FC50: BF800000
  s_nop         0x0000                                  // 00000000FC54: BF800000
  s_nop         0x0000                                  // 00000000FC58: BF800000
  s_nop         0x0000                                  // 00000000FC5C: BF800000
  label_3F18:
  v_readfirstlane_b32  s1, v22                          // 00000000FC60: 7E020516
  v_cmp_eq_u32  vcc, s1, v22                            // 00000000FC64: 7D842C01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FC68: BE90246A
  s_cbranch_execz  label_3F20                           // 00000000FC6C: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000FC70: 02020306
  v_mov_b32     v26, s1                                 // 00000000FC74: 7E340201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FC78: 8A8E7E0E
  s_cbranch_scc0  label_3F22                            // 00000000FC7C: BF840002
  label_3F20:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FC80: 87FE0E10
  s_branch      label_3F18                              // 00000000FC84: BF82FFF6
  label_3F22:
  s_mov_b64     exec, s[12:13]                          // 00000000FC88: BEFE040C
  v_cndmask_b32  v26, 0, v26, s[8:9]                    // 00000000FC8C: D200001A 00223480
  v_lshl_b64    v[27:28], 1, v22                        // 00000000FC94: D2C2001B 00022C81
  v_and_b32     v27, exec_lo, v27                       // 00000000FC9C: 3636367E
  v_and_b32     v28, exec_hi, v28                       // 00000000FCA0: 3638387F
  v_cmp_ne_u64  s[8:9], 0, v[27:28]                     // 00000000FCA4: D1CA0008 00023680
  s_mov_b64     s[12:13], exec                          // 00000000FCAC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FCB0: BE8E047E
  s_nop         0x0000                                  // 00000000FCB4: BF800000
  s_nop         0x0000                                  // 00000000FCB8: BF800000
  s_nop         0x0000                                  // 00000000FCBC: BF800000
  label_3F30:
  v_readfirstlane_b32  s1, v22                          // 00000000FCC0: 7E020516
  v_cmp_eq_u32  vcc, s1, v22                            // 00000000FCC4: 7D842C01
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FCC8: BE90246A
  s_cbranch_execz  label_3F38                           // 00000000FCCC: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000FCD0: 02020304
  v_mov_b32     v22, s1                                 // 00000000FCD4: 7E2C0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FCD8: 8A8E7E0E
  s_cbranch_scc0  label_3F3A                            // 00000000FCDC: BF840002
  label_3F38:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FCE0: 87FE0E10
  s_branch      label_3F30                              // 00000000FCE4: BF82FFF6
  label_3F3A:
  s_mov_b64     exec, s[12:13]                          // 00000000FCE8: BEFE040C
  v_cndmask_b32  v22, 0, v22, s[8:9]                    // 00000000FCEC: D2000016 00222C80
  v_add_i32     v27, vcc, 27, v5                        // 00000000FCF4: 4A360A9B
  v_and_b32     v27, 63, v27                            // 00000000FCF8: 363636BF
  v_add_i32     v28, vcc, 11, v5                        // 00000000FCFC: 4A380A8B
  v_and_b32     v28, 63, v28                            // 00000000FD00: 363838BF
  v_lshl_b64    v[29:30], 1, v28                        // 00000000FD04: D2C2001D 00023881
  v_and_b32     v29, exec_lo, v29                       // 00000000FD0C: 363A3A7E
  v_and_b32     v30, exec_hi, v30                       // 00000000FD10: 363C3C7F
  v_cmp_ne_u64  s[8:9], 0, v[29:30]                     // 00000000FD14: D1CA0008 00023A80
  s_mov_b64     s[12:13], exec                          // 00000000FD1C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FD20: BE8E047E
  s_nop         0x0000                                  // 00000000FD24: BF800000
  s_nop         0x0000                                  // 00000000FD28: BF800000
  s_nop         0x0000                                  // 00000000FD2C: BF800000
  s_nop         0x0000                                  // 00000000FD30: BF800000
  s_nop         0x0000                                  // 00000000FD34: BF800000
  s_nop         0x0000                                  // 00000000FD38: BF800000
  s_nop         0x0000                                  // 00000000FD3C: BF800000
  label_3F50:
  v_readfirstlane_b32  s1, v28                          // 00000000FD40: 7E02051C
  v_cmp_eq_u32  vcc, s1, v28                            // 00000000FD44: 7D843801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FD48: BE90246A
  s_cbranch_execz  label_3F58                           // 00000000FD4C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000FD50: 02020303
  v_mov_b32     v29, s1                                 // 00000000FD54: 7E3A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FD58: 8A8E7E0E
  s_cbranch_scc0  label_3F5A                            // 00000000FD5C: BF840002
  label_3F58:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FD60: 87FE0E10
  s_branch      label_3F50                              // 00000000FD64: BF82FFF6
  label_3F5A:
  s_mov_b64     exec, s[12:13]                          // 00000000FD68: BEFE040C
  v_cndmask_b32  v29, 0, v29, s[8:9]                    // 00000000FD6C: D200001D 00223A80
  v_lshl_b64    v[30:31], 1, v28                        // 00000000FD74: D2C2001E 00023881
  v_and_b32     v30, exec_lo, v30                       // 00000000FD7C: 363C3C7E
  v_and_b32     v31, exec_hi, v31                       // 00000000FD80: 363E3E7F
  v_cmp_ne_u64  s[8:9], 0, v[30:31]                     // 00000000FD84: D1CA0008 00023C80
  s_mov_b64     s[12:13], exec                          // 00000000FD8C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FD90: BE8E047E
  s_nop         0x0000                                  // 00000000FD94: BF800000
  s_nop         0x0000                                  // 00000000FD98: BF800000
  s_nop         0x0000                                  // 00000000FD9C: BF800000
  label_3F68:
  v_readfirstlane_b32  s1, v28                          // 00000000FDA0: 7E02051C
  v_cmp_eq_u32  vcc, s1, v28                            // 00000000FDA4: 7D843801
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FDA8: BE90246A
  s_cbranch_execz  label_3F70                           // 00000000FDAC: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000FDB0: 02020306
  v_mov_b32     v28, s1                                 // 00000000FDB4: 7E380201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FDB8: 8A8E7E0E
  s_cbranch_scc0  label_3F72                            // 00000000FDBC: BF840002
  label_3F70:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FDC0: 87FE0E10
  s_branch      label_3F68                              // 00000000FDC4: BF82FFF6
  label_3F72:
  s_mov_b64     exec, s[12:13]                          // 00000000FDC8: BEFE040C
  s_add_u32     s12, s10, 16                            // 00000000FDCC: 800C900A
  s_addc_u32    s13, s11, 0                             // 00000000FDD0: 820D800B
  v_mov_b32     v30, s12                                // 00000000FDD4: 7E3C020C
  v_mov_b32     v31, s13                                // 00000000FDD8: 7E3E020D
  flat_load_dword  v30, v[30:31]                        // 00000000FDDC: DC300000 1E00001E
  v_cndmask_b32  v28, 0, v28, s[8:9]                    // 00000000FDE4: D200001C 00223880
  v_lshl_b64    v[31:32], 1, v27                        // 00000000FDEC: D2C2001F 00023681
  v_and_b32     v31, exec_lo, v31                       // 00000000FDF4: 363E3E7E
  v_and_b32     v32, exec_hi, v32                       // 00000000FDF8: 3640407F
  v_cmp_ne_u64  s[8:9], 0, v[31:32]                     // 00000000FDFC: D1CA0008 00023E80
  s_mov_b64     s[12:13], exec                          // 00000000FE04: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FE08: BE8E047E
  s_nop         0x0000                                  // 00000000FE0C: BF800000
  s_nop         0x0000                                  // 00000000FE10: BF800000
  s_nop         0x0000                                  // 00000000FE14: BF800000
  s_nop         0x0000                                  // 00000000FE18: BF800000
  s_nop         0x0000                                  // 00000000FE1C: BF800000
  label_3F88:
  v_readfirstlane_b32  s1, v27                          // 00000000FE20: 7E02051B
  v_cmp_eq_u32  vcc, s1, v27                            // 00000000FE24: 7D843601
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FE28: BE90246A
  s_cbranch_execz  label_3F90                           // 00000000FE2C: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000FE30: 02020306
  v_mov_b32     v31, s1                                 // 00000000FE34: 7E3E0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FE38: 8A8E7E0E
  s_cbranch_scc0  label_3F92                            // 00000000FE3C: BF840002
  label_3F90:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FE40: 87FE0E10
  s_branch      label_3F88                              // 00000000FE44: BF82FFF6
  label_3F92:
  s_mov_b64     exec, s[12:13]                          // 00000000FE48: BEFE040C
  v_cndmask_b32  v31, 0, v31, s[8:9]                    // 00000000FE4C: D200001F 00223E80
  v_lshl_b64    v[32:33], 1, v27                        // 00000000FE54: D2C20020 00023681
  v_and_b32     v32, exec_lo, v32                       // 00000000FE5C: 3640407E
  v_and_b32     v33, exec_hi, v33                       // 00000000FE60: 3642427F
  v_cmp_ne_u64  s[8:9], 0, v[32:33]                     // 00000000FE64: D1CA0008 00024080
  s_mov_b64     s[12:13], exec                          // 00000000FE6C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FE70: BE8E047E
  s_nop         0x0000                                  // 00000000FE74: BF800000
  s_nop         0x0000                                  // 00000000FE78: BF800000
  s_nop         0x0000                                  // 00000000FE7C: BF800000
  label_3FA0:
  v_readfirstlane_b32  s1, v27                          // 00000000FE80: 7E02051B
  v_cmp_eq_u32  vcc, s1, v27                            // 00000000FE84: 7D843601
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FE88: BE90246A
  s_cbranch_execz  label_3FA8                           // 00000000FE8C: BF880004
  v_readlane_b32  s1, v4, s1                            // 00000000FE90: 02020304
  v_mov_b32     v27, s1                                 // 00000000FE94: 7E360201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FE98: 8A8E7E0E
  s_cbranch_scc0  label_3FAA                            // 00000000FE9C: BF840002
  label_3FA8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FEA0: 87FE0E10
  s_branch      label_3FA0                              // 00000000FEA4: BF82FFF6
  label_3FAA:
  s_mov_b64     exec, s[12:13]                          // 00000000FEA8: BEFE040C
  v_cndmask_b32  v27, 0, v27, s[8:9]                    // 00000000FEAC: D200001B 00223680
  v_add_i32     v32, vcc, 28, v5                        // 00000000FEB4: 4A400A9C
  v_and_b32     v32, 63, v32                            // 00000000FEB8: 364040BF
  v_add_i32     v33, vcc, 12, v5                        // 00000000FEBC: 4A420A8C
  v_and_b32     v33, 63, v33                            // 00000000FEC0: 364242BF
  v_lshl_b64    v[34:35], 1, v33                        // 00000000FEC4: D2C20022 00024281
  v_and_b32     v34, exec_lo, v34                       // 00000000FECC: 3644447E
  v_and_b32     v35, exec_hi, v35                       // 00000000FED0: 3646467F
  v_cmp_ne_u64  s[8:9], 0, v[34:35]                     // 00000000FED4: D1CA0008 00024480
  s_mov_b64     s[12:13], exec                          // 00000000FEDC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FEE0: BE8E047E
  s_nop         0x0000                                  // 00000000FEE4: BF800000
  s_nop         0x0000                                  // 00000000FEE8: BF800000
  s_nop         0x0000                                  // 00000000FEEC: BF800000
  s_nop         0x0000                                  // 00000000FEF0: BF800000
  s_nop         0x0000                                  // 00000000FEF4: BF800000
  s_nop         0x0000                                  // 00000000FEF8: BF800000
  s_nop         0x0000                                  // 00000000FEFC: BF800000
  label_3FC0:
  v_readfirstlane_b32  s1, v33                          // 00000000FF00: 7E020521
  v_cmp_eq_u32  vcc, s1, v33                            // 00000000FF04: 7D844201
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FF08: BE90246A
  s_cbranch_execz  label_3FC8                           // 00000000FF0C: BF880004
  v_readlane_b32  s1, v3, s1                            // 00000000FF10: 02020303
  v_mov_b32     v34, s1                                 // 00000000FF14: 7E440201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FF18: 8A8E7E0E
  s_cbranch_scc0  label_3FCA                            // 00000000FF1C: BF840002
  label_3FC8:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FF20: 87FE0E10
  s_branch      label_3FC0                              // 00000000FF24: BF82FFF6
  label_3FCA:
  s_mov_b64     exec, s[12:13]                          // 00000000FF28: BEFE040C
  v_cndmask_b32  v34, 0, v34, s[8:9]                    // 00000000FF2C: D2000022 00224480
  v_lshl_b64    v[35:36], 1, v33                        // 00000000FF34: D2C20023 00024281
  v_and_b32     v35, exec_lo, v35                       // 00000000FF3C: 3646467E
  v_and_b32     v36, exec_hi, v36                       // 00000000FF40: 3648487F
  v_cmp_ne_u64  s[8:9], 0, v[35:36]                     // 00000000FF44: D1CA0008 00024680
  s_mov_b64     s[12:13], exec                          // 00000000FF4C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FF50: BE8E047E
  s_nop         0x0000                                  // 00000000FF54: BF800000
  s_nop         0x0000                                  // 00000000FF58: BF800000
  s_nop         0x0000                                  // 00000000FF5C: BF800000
  label_3FD8:
  v_readfirstlane_b32  s1, v33                          // 00000000FF60: 7E020521
  v_cmp_eq_u32  vcc, s1, v33                            // 00000000FF64: 7D844201
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FF68: BE90246A
  s_cbranch_execz  label_3FE0                           // 00000000FF6C: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000FF70: 02020306
  v_mov_b32     v33, s1                                 // 00000000FF74: 7E420201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FF78: 8A8E7E0E
  s_cbranch_scc0  label_3FE2                            // 00000000FF7C: BF840002
  label_3FE0:
  s_and_b64     exec, s[16:17], s[14:15]                // 00000000FF80: 87FE0E10
  s_branch      label_3FD8                              // 00000000FF84: BF82FFF6
  label_3FE2:
  s_mov_b64     exec, s[12:13]                          // 00000000FF88: BEFE040C
  s_add_u32     s12, s10, 20                            // 00000000FF8C: 800C940A
  s_addc_u32    s13, s11, 0                             // 00000000FF90: 820D800B
  v_mov_b32     v35, s12                                // 00000000FF94: 7E46020C
  v_mov_b32     v36, s13                                // 00000000FF98: 7E48020D
  flat_load_dword  v35, v[35:36]                        // 00000000FF9C: DC300000 23000023
  v_cndmask_b32  v33, 0, v33, s[8:9]                    // 00000000FFA4: D2000021 00224280
  v_lshl_b64    v[36:37], 1, v32                        // 00000000FFAC: D2C20024 00024081
  v_and_b32     v36, exec_lo, v36                       // 00000000FFB4: 3648487E
  v_and_b32     v37, exec_hi, v37                       // 00000000FFB8: 364A4A7F
  v_cmp_ne_u64  s[8:9], 0, v[36:37]                     // 00000000FFBC: D1CA0008 00024880
  s_mov_b64     s[12:13], exec                          // 00000000FFC4: BE8C047E
  s_mov_b64     s[14:15], exec                          // 00000000FFC8: BE8E047E
  s_nop         0x0000                                  // 00000000FFCC: BF800000
  s_nop         0x0000                                  // 00000000FFD0: BF800000
  s_nop         0x0000                                  // 00000000FFD4: BF800000
  s_nop         0x0000                                  // 00000000FFD8: BF800000
  s_nop         0x0000                                  // 00000000FFDC: BF800000
  label_3FF8:
  v_readfirstlane_b32  s1, v32                          // 00000000FFE0: 7E020520
  v_cmp_eq_u32  vcc, s1, v32                            // 00000000FFE4: 7D844001
  s_and_saveexec_b64  s[16:17], vcc                     // 00000000FFE8: BE90246A
  s_cbranch_execz  label_4000                           // 00000000FFEC: BF880004
  v_readlane_b32  s1, v6, s1                            // 00000000FFF0: 02020306
  v_mov_b32     v36, s1                                 // 00000000FFF4: 7E480201
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000FFF8: 8A8E7E0E
  s_cbranch_scc0  label_4002                            // 00000000FFFC: BF840002
  label_4000:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000010000: 87FE0E10
  s_branch      label_3FF8                              // 000000010004: BF82FFF6
  label_4002:
  s_mov_b64     exec, s[12:13]                          // 000000010008: BEFE040C
  v_cndmask_b32  v36, 0, v36, s[8:9]                    // 00000001000C: D2000024 00224880
  v_lshl_b64    v[37:38], 1, v32                        // 000000010014: D2C20025 00024081
  v_and_b32     v37, exec_lo, v37                       // 00000001001C: 364A4A7E
  v_and_b32     v38, exec_hi, v38                       // 000000010020: 364C4C7F
  v_cmp_ne_u64  s[8:9], 0, v[37:38]                     // 000000010024: D1CA0008 00024A80
  s_mov_b64     s[12:13], exec                          // 00000001002C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000010030: BE8E047E
  s_nop         0x0000                                  // 000000010034: BF800000
  s_nop         0x0000                                  // 000000010038: BF800000
  s_nop         0x0000                                  // 00000001003C: BF800000
  label_4010:
  v_readfirstlane_b32  s1, v32                          // 000000010040: 7E020520
  v_cmp_eq_u32  vcc, s1, v32                            // 000000010044: 7D844001
  s_and_saveexec_b64  s[16:17], vcc                     // 000000010048: BE90246A
  s_cbranch_execz  label_4018                           // 00000001004C: BF880004
  v_readlane_b32  s1, v4, s1                            // 000000010050: 02020304
  v_mov_b32     v32, s1                                 // 000000010054: 7E400201
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000010058: 8A8E7E0E
  s_cbranch_scc0  label_401A                            // 00000001005C: BF840002
  label_4018:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000010060: 87FE0E10
  s_branch      label_4010                              // 000000010064: BF82FFF6
  label_401A:
  s_mov_b64     exec, s[12:13]                          // 000000010068: BEFE040C
  v_cndmask_b32  v32, 0, v32, s[8:9]                    // 00000001006C: D2000020 00224080
  v_add_i32     v37, vcc, 36, v5                        // 000000010074: 4A4A0AA4
  v_and_b32     v37, 63, v37                            // 000000010078: 364A4ABF
  v_add_i32     v38, vcc, 20, v5                        // 00000001007C: 4A4C0A94
  v_and_b32     v38, 63, v38                            // 000000010080: 364C4CBF
  v_lshl_b64    v[39:40], 1, v38                        // 000000010084: D2C20027 00024C81
  v_and_b32     v39, exec_lo, v39                       // 00000001008C: 364E4E7E
  v_and_b32     v40, exec_hi, v40                       // 000000010090: 3650507F
  v_cmp_ne_u64  s[8:9], 0, v[39:40]                     // 000000010094: D1CA0008 00024E80
  s_mov_b64     s[12:13], exec                          // 00000001009C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000100A0: BE8E047E
  s_nop         0x0000                                  // 0000000100A4: BF800000
  s_nop         0x0000                                  // 0000000100A8: BF800000
  s_nop         0x0000                                  // 0000000100AC: BF800000
  s_nop         0x0000                                  // 0000000100B0: BF800000
  s_nop         0x0000                                  // 0000000100B4: BF800000
  s_nop         0x0000                                  // 0000000100B8: BF800000
  s_nop         0x0000                                  // 0000000100BC: BF800000
  label_4030:
  v_readfirstlane_b32  s1, v38                          // 0000000100C0: 7E020526
  v_cmp_eq_u32  vcc, s1, v38                            // 0000000100C4: 7D844C01
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000100C8: BE90246A
  s_cbranch_execz  label_4038                           // 0000000100CC: BF880004
  v_readlane_b32  s1, v3, s1                            // 0000000100D0: 02020303
  v_mov_b32     v39, s1                                 // 0000000100D4: 7E4E0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000100D8: 8A8E7E0E
  s_cbranch_scc0  label_403A                            // 0000000100DC: BF840002
  label_4038:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000100E0: 87FE0E10
  s_branch      label_4030                              // 0000000100E4: BF82FFF6
  label_403A:
  s_mov_b64     exec, s[12:13]                          // 0000000100E8: BEFE040C
  v_cndmask_b32  v39, 0, v39, s[8:9]                    // 0000000100EC: D2000027 00224E80
  v_lshl_b64    v[40:41], 1, v38                        // 0000000100F4: D2C20028 00024C81
  v_and_b32     v40, exec_lo, v40                       // 0000000100FC: 3650507E
  v_and_b32     v41, exec_hi, v41                       // 000000010100: 3652527F
  v_cmp_ne_u64  s[8:9], 0, v[40:41]                     // 000000010104: D1CA0008 00025080
  s_mov_b64     s[12:13], exec                          // 00000001010C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000010110: BE8E047E
  s_nop         0x0000                                  // 000000010114: BF800000
  s_nop         0x0000                                  // 000000010118: BF800000
  s_nop         0x0000                                  // 00000001011C: BF800000
  label_4048:
  v_readfirstlane_b32  s1, v38                          // 000000010120: 7E020526
  v_cmp_eq_u32  vcc, s1, v38                            // 000000010124: 7D844C01
  s_and_saveexec_b64  s[16:17], vcc                     // 000000010128: BE90246A
  s_cbranch_execz  label_4050                           // 00000001012C: BF880004
  v_readlane_b32  s1, v6, s1                            // 000000010130: 02020306
  v_mov_b32     v38, s1                                 // 000000010134: 7E4C0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000010138: 8A8E7E0E
  s_cbranch_scc0  label_4052                            // 00000001013C: BF840002
  label_4050:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000010140: 87FE0E10
  s_branch      label_4048                              // 000000010144: BF82FFF6
  label_4052:
  s_mov_b64     exec, s[12:13]                          // 000000010148: BEFE040C
  s_add_u32     s12, s10, 24                            // 00000001014C: 800C980A
  s_addc_u32    s13, s11, 0                             // 000000010150: 820D800B
  v_mov_b32     v40, s12                                // 000000010154: 7E50020C
  v_mov_b32     v41, s13                                // 000000010158: 7E52020D
  flat_load_dword  v40, v[40:41]                        // 00000001015C: DC300000 28000028
  v_cndmask_b32  v38, 0, v38, s[8:9]                    // 000000010164: D2000026 00224C80
  v_lshl_b64    v[41:42], 1, v37                        // 00000001016C: D2C20029 00024A81
  v_and_b32     v41, exec_lo, v41                       // 000000010174: 3652527E
  v_and_b32     v42, exec_hi, v42                       // 000000010178: 3654547F
  v_cmp_ne_u64  s[8:9], 0, v[41:42]                     // 00000001017C: D1CA0008 00025280
  s_mov_b64     s[12:13], exec                          // 000000010184: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000010188: BE8E047E
  s_nop         0x0000                                  // 00000001018C: BF800000
  s_nop         0x0000                                  // 000000010190: BF800000
  s_nop         0x0000                                  // 000000010194: BF800000
  s_nop         0x0000                                  // 000000010198: BF800000
  s_nop         0x0000                                  // 00000001019C: BF800000
  label_4068:
  v_readfirstlane_b32  s1, v37                          // 0000000101A0: 7E020525
  v_cmp_eq_u32  vcc, s1, v37                            // 0000000101A4: 7D844A01
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000101A8: BE90246A
  s_cbranch_execz  label_4070                           // 0000000101AC: BF880004
  v_readlane_b32  s1, v6, s1                            // 0000000101B0: 02020306
  v_mov_b32     v41, s1                                 // 0000000101B4: 7E520201
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000101B8: 8A8E7E0E
  s_cbranch_scc0  label_4072                            // 0000000101BC: BF840002
  label_4070:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000101C0: 87FE0E10
  s_branch      label_4068                              // 0000000101C4: BF82FFF6
  label_4072:
  s_mov_b64     exec, s[12:13]                          // 0000000101C8: BEFE040C
  v_cndmask_b32  v41, 0, v41, s[8:9]                    // 0000000101CC: D2000029 00225280
  v_lshl_b64    v[42:43], 1, v37                        // 0000000101D4: D2C2002A 00024A81
  v_and_b32     v42, exec_lo, v42                       // 0000000101DC: 3654547E
  v_and_b32     v43, exec_hi, v43                       // 0000000101E0: 3656567F
  v_cmp_ne_u64  s[8:9], 0, v[42:43]                     // 0000000101E4: D1CA0008 00025480
  s_mov_b64     s[12:13], exec                          // 0000000101EC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000101F0: BE8E047E
  s_nop         0x0000                                  // 0000000101F4: BF800000
  s_nop         0x0000                                  // 0000000101F8: BF800000
  s_nop         0x0000                                  // 0000000101FC: BF800000
  label_4080:
  v_readfirstlane_b32  s1, v37                          // 000000010200: 7E020525
  v_cmp_eq_u32  vcc, s1, v37                            // 000000010204: 7D844A01
  s_and_saveexec_b64  s[16:17], vcc                     // 000000010208: BE90246A
  s_cbranch_execz  label_4088                           // 00000001020C: BF880004
  v_readlane_b32  s1, v4, s1                            // 000000010210: 02020304
  v_mov_b32     v37, s1                                 // 000000010214: 7E4A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000010218: 8A8E7E0E
  s_cbranch_scc0  label_408A                            // 00000001021C: BF840002
  label_4088:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000010220: 87FE0E10
  s_branch      label_4080                              // 000000010224: BF82FFF6
  label_408A:
  s_mov_b64     exec, s[12:13]                          // 000000010228: BEFE040C
  v_cndmask_b32  v37, 0, v37, s[8:9]                    // 00000001022C: D2000025 00224A80
  v_add_i32     v42, vcc, 37, v5                        // 000000010234: 4A540AA5
  v_and_b32     v42, 63, v42                            // 000000010238: 365454BF
  v_add_i32     v43, vcc, 21, v5                        // 00000001023C: 4A560A95
  v_and_b32     v43, 63, v43                            // 000000010240: 365656BF
  v_lshl_b64    v[44:45], 1, v43                        // 000000010244: D2C2002C 00025681
  v_and_b32     v44, exec_lo, v44                       // 00000001024C: 3658587E
  v_and_b32     v45, exec_hi, v45                       // 000000010250: 365A5A7F
  v_cmp_ne_u64  s[8:9], 0, v[44:45]                     // 000000010254: D1CA0008 00025880
  s_mov_b64     s[12:13], exec                          // 00000001025C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000010260: BE8E047E
  s_nop         0x0000                                  // 000000010264: BF800000
  s_nop         0x0000                                  // 000000010268: BF800000
  s_nop         0x0000                                  // 00000001026C: BF800000
  s_nop         0x0000                                  // 000000010270: BF800000
  s_nop         0x0000                                  // 000000010274: BF800000
  s_nop         0x0000                                  // 000000010278: BF800000
  s_nop         0x0000                                  // 00000001027C: BF800000
  label_40A0:
  v_readfirstlane_b32  s1, v43                          // 000000010280: 7E02052B
  v_cmp_eq_u32  vcc, s1, v43                            // 000000010284: 7D845601
  s_and_saveexec_b64  s[16:17], vcc                     // 000000010288: BE90246A
  s_cbranch_execz  label_40A8                           // 00000001028C: BF880004
  v_readlane_b32  s1, v3, s1                            // 000000010290: 02020303
  v_mov_b32     v44, s1                                 // 000000010294: 7E580201
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000010298: 8A8E7E0E
  s_cbranch_scc0  label_40AA                            // 00000001029C: BF840002
  label_40A8:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000102A0: 87FE0E10
  s_branch      label_40A0                              // 0000000102A4: BF82FFF6
  label_40AA:
  s_mov_b64     exec, s[12:13]                          // 0000000102A8: BEFE040C
  v_cndmask_b32  v44, 0, v44, s[8:9]                    // 0000000102AC: D200002C 00225880
  v_lshl_b64    v[45:46], 1, v43                        // 0000000102B4: D2C2002D 00025681
  v_and_b32     v45, exec_lo, v45                       // 0000000102BC: 365A5A7E
  v_and_b32     v46, exec_hi, v46                       // 0000000102C0: 365C5C7F
  v_cmp_ne_u64  s[8:9], 0, v[45:46]                     // 0000000102C4: D1CA0008 00025A80
  s_mov_b64     s[12:13], exec                          // 0000000102CC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000102D0: BE8E047E
  s_nop         0x0000                                  // 0000000102D4: BF800000
  s_nop         0x0000                                  // 0000000102D8: BF800000
  s_nop         0x0000                                  // 0000000102DC: BF800000
  label_40B8:
  v_readfirstlane_b32  s1, v43                          // 0000000102E0: 7E02052B
  v_cmp_eq_u32  vcc, s1, v43                            // 0000000102E4: 7D845601
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000102E8: BE90246A
  s_cbranch_execz  label_40C0                           // 0000000102EC: BF880004
  v_readlane_b32  s1, v6, s1                            // 0000000102F0: 02020306
  v_mov_b32     v43, s1                                 // 0000000102F4: 7E560201
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000102F8: 8A8E7E0E
  s_cbranch_scc0  label_40C2                            // 0000000102FC: BF840002
  label_40C0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000010300: 87FE0E10
  s_branch      label_40B8                              // 000000010304: BF82FFF6
  label_40C2:
  s_mov_b64     exec, s[12:13]                          // 000000010308: BEFE040C
  s_add_u32     s12, s10, 28                            // 00000001030C: 800C9C0A
  s_addc_u32    s13, s11, 0                             // 000000010310: 820D800B
  v_mov_b32     v45, s12                                // 000000010314: 7E5A020C
  v_mov_b32     v46, s13                                // 000000010318: 7E5C020D
  flat_load_dword  v45, v[45:46]                        // 00000001031C: DC300000 2D00002D
  v_cndmask_b32  v43, 0, v43, s[8:9]                    // 000000010324: D200002B 00225680
  v_lshl_b64    v[46:47], 1, v42                        // 00000001032C: D2C2002E 00025481
  v_and_b32     v46, exec_lo, v46                       // 000000010334: 365C5C7E
  v_and_b32     v47, exec_hi, v47                       // 000000010338: 365E5E7F
  v_cmp_ne_u64  s[8:9], 0, v[46:47]                     // 00000001033C: D1CA0008 00025C80
  s_mov_b64     s[12:13], exec                          // 000000010344: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000010348: BE8E047E
  s_nop         0x0000                                  // 00000001034C: BF800000
  s_nop         0x0000                                  // 000000010350: BF800000
  s_nop         0x0000                                  // 000000010354: BF800000
  s_nop         0x0000                                  // 000000010358: BF800000
  s_nop         0x0000                                  // 00000001035C: BF800000
  label_40D8:
  v_readfirstlane_b32  s1, v42                          // 000000010360: 7E02052A
  v_cmp_eq_u32  vcc, s1, v42                            // 000000010364: 7D845401
  s_and_saveexec_b64  s[16:17], vcc                     // 000000010368: BE90246A
  s_cbranch_execz  label_40E0                           // 00000001036C: BF880004
  v_readlane_b32  s1, v6, s1                            // 000000010370: 02020306
  v_mov_b32     v46, s1                                 // 000000010374: 7E5C0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000010378: 8A8E7E0E
  s_cbranch_scc0  label_40E2                            // 00000001037C: BF840002
  label_40E0:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000010380: 87FE0E10
  s_branch      label_40D8                              // 000000010384: BF82FFF6
  label_40E2:
  s_mov_b64     exec, s[12:13]                          // 000000010388: BEFE040C
  v_cndmask_b32  v46, 0, v46, s[8:9]                    // 00000001038C: D200002E 00225C80
  v_lshl_b64    v[47:48], 1, v42                        // 000000010394: D2C2002F 00025481
  v_and_b32     v47, exec_lo, v47                       // 00000001039C: 365E5E7E
  v_and_b32     v48, exec_hi, v48                       // 0000000103A0: 3660607F
  v_cmp_ne_u64  s[8:9], 0, v[47:48]                     // 0000000103A4: D1CA0008 00025E80
  s_mov_b64     s[12:13], exec                          // 0000000103AC: BE8C047E
  s_mov_b64     s[14:15], exec                          // 0000000103B0: BE8E047E
  s_nop         0x0000                                  // 0000000103B4: BF800000
  s_nop         0x0000                                  // 0000000103B8: BF800000
  s_nop         0x0000                                  // 0000000103BC: BF800000
  label_40F0:
  v_readfirstlane_b32  s1, v42                          // 0000000103C0: 7E02052A
  v_cmp_eq_u32  vcc, s1, v42                            // 0000000103C4: 7D845401
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000103C8: BE90246A
  s_cbranch_execz  label_40F8                           // 0000000103CC: BF880004
  v_readlane_b32  s1, v4, s1                            // 0000000103D0: 02020304
  v_mov_b32     v42, s1                                 // 0000000103D4: 7E540201
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000103D8: 8A8E7E0E
  s_cbranch_scc0  label_40FA                            // 0000000103DC: BF840002
  label_40F8:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000103E0: 87FE0E10
  s_branch      label_40F0                              // 0000000103E4: BF82FFF6
  label_40FA:
  s_mov_b64     exec, s[12:13]                          // 0000000103E8: BEFE040C
  v_cndmask_b32  v42, 0, v42, s[8:9]                    // 0000000103EC: D200002A 00225480
  v_add_i32     v47, vcc, 38, v5                        // 0000000103F4: 4A5E0AA6
  v_and_b32     v47, 63, v47                            // 0000000103F8: 365E5EBF
  v_add_i32     v5, vcc, 22, v5                         // 0000000103FC: 4A0A0A96
  v_and_b32     v5, 63, v5                              // 000000010400: 360A0ABF
  v_lshl_b64    v[48:49], 1, v5                         // 000000010404: D2C20030 00020A81
  v_and_b32     v48, exec_lo, v48                       // 00000001040C: 3660607E
  v_and_b32     v49, exec_hi, v49                       // 000000010410: 3662627F
  v_cmp_ne_u64  s[8:9], 0, v[48:49]                     // 000000010414: D1CA0008 00026080
  s_mov_b64     s[12:13], exec                          // 00000001041C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000010420: BE8E047E
  s_nop         0x0000                                  // 000000010424: BF800000
  s_nop         0x0000                                  // 000000010428: BF800000
  s_nop         0x0000                                  // 00000001042C: BF800000
  s_nop         0x0000                                  // 000000010430: BF800000
  s_nop         0x0000                                  // 000000010434: BF800000
  s_nop         0x0000                                  // 000000010438: BF800000
  s_nop         0x0000                                  // 00000001043C: BF800000
  label_4110:
  v_readfirstlane_b32  s1, v5                           // 000000010440: 7E020505
  v_cmp_eq_u32  vcc, s1, v5                             // 000000010444: 7D840A01
  s_and_saveexec_b64  s[16:17], vcc                     // 000000010448: BE90246A
  s_cbranch_execz  label_4118                           // 00000001044C: BF880004
  v_readlane_b32  s1, v3, s1                            // 000000010450: 02020303
  v_mov_b32     v48, s1                                 // 000000010454: 7E600201
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000010458: 8A8E7E0E
  s_cbranch_scc0  label_411A                            // 00000001045C: BF840002
  label_4118:
  s_and_b64     exec, s[16:17], s[14:15]                // 000000010460: 87FE0E10
  s_branch      label_4110                              // 000000010464: BF82FFF6
  label_411A:
  s_mov_b64     exec, s[12:13]                          // 000000010468: BEFE040C
  v_cndmask_b32  v3, 0, v48, s[8:9]                     // 00000001046C: D2000003 00226080
  v_lshl_b64    v[48:49], 1, v5                         // 000000010474: D2C20030 00020A81
  v_and_b32     v48, exec_lo, v48                       // 00000001047C: 3660607E
  v_and_b32     v49, exec_hi, v49                       // 000000010480: 3662627F
  v_cmp_ne_u64  s[8:9], 0, v[48:49]                     // 000000010484: D1CA0008 00026080
  s_mov_b64     s[12:13], exec                          // 00000001048C: BE8C047E
  s_mov_b64     s[14:15], exec                          // 000000010490: BE8E047E
  s_nop         0x0000                                  // 000000010494: BF800000
  s_nop         0x0000                                  // 000000010498: BF800000
  s_nop         0x0000                                  // 00000001049C: BF800000
  label_4128:
  v_readfirstlane_b32  s1, v5                           // 0000000104A0: 7E020505
  v_cmp_eq_u32  vcc, s1, v5                             // 0000000104A4: 7D840A01
  s_and_saveexec_b64  s[16:17], vcc                     // 0000000104A8: BE90246A
  s_cbranch_execz  label_4130                           // 0000000104AC: BF880004
  v_readlane_b32  s1, v6, s1                            // 0000000104B0: 02020306
  v_mov_b32     v5, s1                                  // 0000000104B4: 7E0A0201
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000104B8: 8A8E7E0E
  s_cbranch_scc0  label_4132                            // 0000000104BC: BF840002
  label_4130:
  s_and_b64     exec, s[16:17], s[14:15]                // 0000000104C0: 87FE0E10
  s_branch      label_4128                              // 0000000104C4: BF82FFF6
  label_4132:
  s_mov_b64     exec, s[12:13]                          // 0000000104C8: BEFE040C
  s_add_u32     s10, s10, 32                            // 0000000104CC: 800AA00A
  s_addc_u32    s11, s11, 0                             // 0000000104D0: 820B800B
  v_mov_b32     v48, s10                                // 0000000104D4: 7E60020A
  v_mov_b32     v49, s11                                // 0000000104D8: 7E62020B
  flat_load_dword  v48, v[48:49]                        // 0000000104DC: DC300000 30000030
  v_cndmask_b32  v5, 0, v5, s[8:9]                      // 0000000104E4: D2000005 00220A80
  v_lshl_b64    v[49:50], 1, v47                        // 0000000104EC: D2C20031 00025E81
  v_and_b32     v49, exec_lo, v49                       // 0000000104F4: 3662627E
  v_and_b32     v50, exec_hi, v50                       // 0000000104F8: 3664647F
  v_cmp_ne_u64  s[8:9], 0, v[49:50]                     // 0000000104FC: D1CA0008 00026280
  s_mov_b64     s[10:11], exec                          // 000000010504: BE8A047E
  s_mov_b64     s[12:13], exec                          // 000000010508: BE8C047E
  s_nop         0x0000                                  // 00000001050C: BF800000
  s_nop         0x0000                                  // 000000010510: BF800000
  s_nop         0x0000                                  // 000000010514: BF800000
  s_nop         0x0000                                  // 000000010518: BF800000
  s_nop         0x0000                                  // 00000001051C: BF800000
  label_4148:
  v_readfirstlane_b32  s1, v47                          // 000000010520: 7E02052F
  v_cmp_eq_u32  vcc, s1, v47                            // 000000010524: 7D845E01
  s_and_saveexec_b64  s[14:15], vcc                     // 000000010528: BE8E246A
  s_cbranch_execz  label_4150                           // 00000001052C: BF880004
  v_readlane_b32  s1, v6, s1                            // 000000010530: 02020306
  v_mov_b32     v49, s1                                 // 000000010534: 7E620201
  s_andn2_b64   s[12:13], s[12:13], exec                // 000000010538: 8A8C7E0C
  s_cbranch_scc0  label_4152                            // 00000001053C: BF840002
  label_4150:
  s_and_b64     exec, s[14:15], s[12:13]                // 000000010540: 87FE0C0E
  s_branch      label_4148                              // 000000010544: BF82FFF6
  label_4152:
  s_mov_b64     exec, s[10:11]                          // 000000010548: BEFE040A
  v_cndmask_b32  v6, 0, v49, s[8:9]                     // 00000001054C: D2000006 00226280
  v_lshl_b64    v[49:50], 1, v47                        // 000000010554: D2C20031 00025E81
  v_and_b32     v49, exec_lo, v49                       // 00000001055C: 3662627E
  v_and_b32     v50, exec_hi, v50                       // 000000010560: 3664647F
  v_cmp_ne_u64  s[8:9], 0, v[49:50]                     // 000000010564: D1CA0008 00026280
  s_mov_b64     s[10:11], exec                          // 00000001056C: BE8A047E
  s_mov_b64     s[12:13], exec                          // 000000010570: BE8C047E
  s_nop         0x0000                                  // 000000010574: BF800000
  s_nop         0x0000                                  // 000000010578: BF800000
  s_nop         0x0000                                  // 00000001057C: BF800000
  label_4160:
  v_readfirstlane_b32  s1, v47                          // 000000010580: 7E02052F
  v_cmp_eq_u32  vcc, s1, v47                            // 000000010584: 7D845E01
  s_and_saveexec_b64  s[14:15], vcc                     // 000000010588: BE8E246A
  s_cbranch_execz  label_4168                           // 00000001058C: BF880004
  v_readlane_b32  s1, v4, s1                            // 000000010590: 02020304
  v_mov_b32     v47, s1                                 // 000000010594: 7E5E0201
  s_andn2_b64   s[12:13], s[12:13], exec                // 000000010598: 8A8C7E0C
  s_cbranch_scc0  label_416A                            // 00000001059C: BF840002
  label_4168:
  s_and_b64     exec, s[14:15], s[12:13]                // 0000000105A0: 87FE0C0E
  s_branch      label_4160                              // 0000000105A4: BF82FFF6
  label_416A:
  s_mov_b64     exec, s[10:11]                          // 0000000105A8: BEFE040A
  s_add_u32     s1, s3, s2                              // 0000000105AC: 80010203
  s_add_u32     s0, s0, s2                              // 0000000105B0: 80000200
  v_cmp_lt_i32  s[2:3], v0, s1                          // 0000000105B4: D1020002 00000300
  v_cmp_gt_i32  vcc, s0, v1                             // 0000000105BC: 7D080200
  s_and_b64     vcc, s[2:3], vcc                        // 0000000105C0: 87EA6A02
  v_cndmask_b32  v4, 0, v47, s[8:9]                     // 0000000105C4: D2000004 00225E80
  s_xor_b64     s[8:9], vcc, -1                         // 0000000105CC: 8988C16A
  s_load_dwordx2  s[6:7], s[6:7], 0x04                  // 0000000105D0: C0430704
  s_mov_b64     s[10:11], exec                          // 0000000105D4: BE8A047E
  s_andn2_b64   exec, s[10:11], s[8:9]                  // 0000000105D8: 8AFE080A
  s_waitcnt     vmcnt(8) & lgkmcnt(0)                   // 0000000105DC: BF8C0078
  v_mul_f32     v7, v10, v7                             // 0000000105E0: 100E0F0A
  s_cbranch_execz  label_41C1                           // 0000000105E4: BF880047
  v_mul_f32     v8, v10, v8                             // 0000000105E8: 1010110A
  v_cmp_gt_i32  vcc, 52, v2                             // 0000000105EC: 7D0804B4
  v_cndmask_b32  v7, v7, v8, vcc                        // 0000000105F0: 000E1107
  s_waitcnt     vmcnt(7)                                // 0000000105F4: BF8C0F77
  v_mul_f32     v8, v15, v13                            // 0000000105F8: 10101B0F
  v_mul_f32     v13, v15, v14                           // 0000000105FC: 101A1D0F
  v_cmp_lt_i32  s[8:9], v2, 51                          // 000000010600: D1020008 00016702
  s_waitcnt     vmcnt(6)                                // 000000010608: BF8C0F76
  v_mul_f32     v14, v20, v18                           // 00000001060C: 101C2514
  v_mul_f32     v18, v20, v19                           // 000000010610: 10242714
  v_cmp_gt_i32  vcc, 50, v2                             // 000000010614: 7D0804B2
  v_cndmask_b32  v8, v8, v13, s[8:9]                    // 000000010618: D2000008 00221B08
  v_add_f32     v7, 0, v7                               // 000000010620: 060E0E80
  v_cndmask_b32  v13, v14, v18, vcc                     // 000000010624: 001A250E
  s_waitcnt     vmcnt(5)                                // 000000010628: BF8C0F75
  v_mul_f32     v14, v25, v23                           // 00000001062C: 101C2F19
  v_mul_f32     v18, v25, v24                           // 000000010630: 10243119
  v_cmp_gt_i32  vcc, 44, v2                             // 000000010634: 7D0804AC
  v_add_f32     v7, v7, v8                              // 000000010638: 060E1107
  s_waitcnt     vmcnt(4)                                // 00000001063C: BF8C0F74
  v_mul_f32     v8, v30, v28                            // 000000010640: 1010391E
  v_mul_f32     v19, v30, v29                           // 000000010644: 10263B1E
  v_cmp_lt_i32  s[8:9], v2, 43                          // 000000010648: D1020008 00015702
  v_cndmask_b32  v14, v14, v18, vcc                     // 000000010650: 001C250E
  v_add_f32     v7, v7, v13                             // 000000010654: 060E1B07
  s_waitcnt     vmcnt(3)                                // 000000010658: BF8C0F73
  v_mul_f32     v13, v35, v33                           // 00000001065C: 101A4323
  v_mul_f32     v18, v35, v34                           // 000000010660: 10244523
  v_cmp_lt_i32  s[12:13], v2, 42                        // 000000010664: D102000C 00015502
  v_cndmask_b32  v8, v8, v19, s[8:9]                    // 00000001066C: D2000008 00222708
  v_add_f32     v7, v7, v14                             // 000000010674: 060E1D07
  v_mul_lo_u32  v14, v1, s4                             // 000000010678: D2D2000E 00000901
  s_waitcnt     vmcnt(2)                                // 000000010680: BF8C0F72
  v_mul_f32     v19, v40, v38                           // 000000010684: 10264D28
  v_mul_f32     v23, v40, v39                           // 000000010688: 102E4F28
  v_cmp_lt_i32  s[8:9], v2, 36                          // 00000001068C: D1020008 00014902
  v_cndmask_b32  v13, v13, v18, s[12:13]                // 000000010694: D200000D 0032250D
  v_add_f32     v7, v7, v8                              // 00000001069C: 060E1107
  v_add_i32     v28, vcc, v14, v0                       // 0000000106A0: 4A38010E
  v_cndmask_b32  v14, v19, v23, s[8:9]                  // 0000000106A4: D200000E 00222F13
  s_waitcnt     vmcnt(1)                                // 0000000106AC: BF8C0F71
  v_mul_f32     v18, v45, v43                           // 0000000106B0: 1024572D
  v_mul_f32     v19, v45, v44                           // 0000000106B4: 1026592D
  v_cmp_gt_i32  vcc, 35, v2                             // 0000000106B8: 7D0804A3
  v_add_f32     v7, v7, v13                             // 0000000106BC: 060E1B07
  v_ashrrev_i32  v29, 31, v28                           // 0000000106C0: 303A389F
  v_cndmask_b32  v18, v18, v19, vcc                     // 0000000106C4: 00242712
  s_waitcnt     vmcnt(0)                                // 0000000106C8: BF8C0F70
  v_mul_f32     v5, v48, v5                             // 0000000106CC: 100A0B30
  v_mul_f32     v3, v48, v3                             // 0000000106D0: 10060730
  v_cmp_gt_i32  vcc, 34, v2                             // 0000000106D4: 7D0804A2
  v_add_f32     v7, v7, v14                             // 0000000106D8: 060E1D07
  v_cndmask_b32  v3, v5, v3, vcc                        // 0000000106DC: 00060705
  v_lshl_b64    v[13:14], v[28:29], 2                   // 0000000106E0: D2C2000D 0001051C
  v_add_f32     v5, v7, v18                             // 0000000106E8: 060A2507
  v_add_i32     v7, vcc, s6, v13                        // 0000000106EC: 4A0E1A06
  v_mov_b32     v8, s7                                  // 0000000106F0: 7E100207
  v_addc_u32    v8, vcc, v8, v14, vcc                   // 0000000106F4: 50101D08
  v_add_f32     v3, v5, v3                              // 0000000106F8: 06060705
  flat_store_dword  v[7:8], v3                          // 0000000106FC: DC700000 00000307
  label_41C1:
  s_mov_b64     exec, s[10:11]                          // 000000010704: BEFE040A
  v_add_i32     v1, vcc, 8, v1                          // 000000010708: 4A020288
  v_cmp_gt_i32  vcc, s0, v1                             // 00000001070C: 7D080200
  s_and_b64     s[0:1], s[2:3], vcc                     // 000000010710: 87806A02
  s_and_saveexec_b64  s[0:1], s[0:1]                    // 000000010714: BE802400
  v_mul_f32     v3, v10, v11                            // 000000010718: 1006170A
  s_cbranch_execz  label_4207                           // 00000001071C: BF88003F
  v_mul_f32     v5, v10, v9                             // 000000010720: 100A130A
  v_cmp_gt_i32  vcc, 40, v2                             // 000000010724: 7D0804A8
  s_waitcnt     vmcnt(7)                                // 000000010728: BF8C0F77
  v_mul_f32     v7, v15, v16                            // 00000001072C: 100E210F
  v_mul_f32     v8, v15, v12                            // 000000010730: 1010190F
  v_cndmask_b32  v3, v5, v3, vcc                        // 000000010734: 00060705
  v_cmp_gt_i32  vcc, 39, v2                             // 000000010738: 7D0804A7
  s_waitcnt     vmcnt(6)                                // 00000001073C: BF8C0F76
  v_mul_f32     v5, v20, v21                            // 000000010740: 100A2B14
  v_mul_f32     v9, v20, v17                            // 000000010744: 10122314
  v_cndmask_b32  v7, v8, v7, vcc                        // 000000010748: 000E0F08
  v_cmp_gt_i32  vcc, 38, v2                             // 00000001074C: 7D0804A6
  s_waitcnt     vmcnt(5)                                // 000000010750: BF8C0F75
  v_mul_f32     v8, v25, v22                            // 000000010754: 10102D19
  v_mul_f32     v10, v25, v26                           // 000000010758: 10143519
  v_cndmask_b32  v5, v9, v5, vcc                        // 00000001075C: 000A0B09
  v_cmp_gt_i32  vcc, 32, v2                             // 000000010760: 7D0804A0
  s_waitcnt     vmcnt(4)                                // 000000010764: BF8C0F74
  v_mul_f32     v9, v30, v27                            // 000000010768: 1012371E
  v_mul_f32     v11, v30, v31                           // 00000001076C: 10163F1E
  v_add_f32     v3, 0, v3                               // 000000010770: 06060680
  v_cndmask_b32  v8, v8, v10, vcc                       // 000000010774: 00101508
  v_cmp_gt_i32  vcc, 31, v2                             // 000000010778: 7D08049F
  s_waitcnt     vmcnt(3)                                // 00000001077C: BF8C0F73
  v_mul_f32     v10, v35, v32                           // 000000010780: 10144123
  v_mul_f32     v12, v35, v36                           // 000000010784: 10184923
  v_add_f32     v3, v3, v7                              // 000000010788: 06060F03
  v_cndmask_b32  v7, v9, v11, vcc                       // 00000001078C: 000E1709
  v_cmp_gt_i32  vcc, 30, v2                             // 000000010790: 7D08049E
  s_waitcnt     vmcnt(2)                                // 000000010794: BF8C0F72
  v_mul_f32     v9, v40, v37                            // 000000010798: 10124B28
  v_mul_f32     v11, v40, v41                           // 00000001079C: 10165328
  v_add_f32     v3, v3, v5                              // 0000000107A0: 06060B03
  v_cndmask_b32  v5, v10, v12, vcc                      // 0000000107A4: 000A190A
  v_cmp_gt_i32  vcc, 24, v2                             // 0000000107A8: 7D080498
  s_waitcnt     vmcnt(1)                                // 0000000107AC: BF8C0F71
  v_mul_f32     v10, v45, v42                           // 0000000107B0: 1014552D
  v_mul_f32     v12, v45, v46                           // 0000000107B4: 10185D2D
  v_add_f32     v3, v3, v8                              // 0000000107B8: 06061103
  v_cndmask_b32  v8, v9, v11, vcc                       // 0000000107BC: 00101709
  v_cmp_gt_i32  vcc, 23, v2                             // 0000000107C0: 7D080497
  s_waitcnt     vmcnt(0)                                // 0000000107C4: BF8C0F70
  v_mul_f32     v4, v48, v4                             // 0000000107C8: 10080930
  v_mul_f32     v6, v48, v6                             // 0000000107CC: 100C0D30
  v_add_f32     v3, v3, v7                              // 0000000107D0: 06060F03
  v_cndmask_b32  v7, v10, v12, vcc                      // 0000000107D4: 000E190A
  v_cmp_gt_i32  vcc, 22, v2                             // 0000000107D8: 7D080496
  v_add_f32     v2, v3, v5                              // 0000000107DC: 06040B03
  v_cndmask_b32  v3, v4, v6, vcc                        // 0000000107E0: 00060D04
  v_add_f32     v2, v2, v8                              // 0000000107E4: 06041102
  v_add_f32     v2, v2, v7                              // 0000000107E8: 06040F02
  v_add_f32     v2, v2, v3                              // 0000000107EC: 06040702
  v_mul_lo_u32  v1, v1, s4                              // 0000000107F0: D2D20001 00000901
  v_add_i32     v0, vcc, v1, v0                         // 0000000107F8: 4A000101
  v_ashrrev_i32  v1, 31, v0                             // 0000000107FC: 3002009F
  v_lshl_b64    v[0:1], v[0:1], 2                       // 000000010800: D2C20000 00010500
  v_add_i32     v0, vcc, s6, v0                         // 000000010808: 4A000006
  v_mov_b32     v3, s7                                  // 00000001080C: 7E060207
  v_addc_u32    v1, vcc, v3, v1, vcc                    // 000000010810: 50020303
  flat_store_dword  v[0:1], v2                          // 000000010814: DC700000 00000200
  label_4207:
  s_endpgm                                              // 00000001081C: BF810000
  //
  // padding (000000010820 - 000000010900)
  //
  //
  // amd_kernel_code_t for &ZZ16Stencil_Hcc_ShflRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__219__cxxamp_trampolineEPfiiS4_iiS4_iiiii (000000010900 - 000000010a00)
  //
  //
  // &ZZ16Stencil_Hcc_ShflRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__219__cxxamp_trampolineEPfiiS4_iiS4_iiiii:
  //
  s_load_dword  s0, s[4:5], 0x01                        // 000000010A00: C0000501
  v_mbcnt_lo_u32_b32  v2, -1, 0                         // 000000010A04: D2460002 000100C1
  v_mbcnt_hi_u32_b32  v2, -1, v2                        // 000000010A0C: 480404C1
  s_waitcnt     lgkmcnt(0)                              // 000000010A10: BF8C007F
  s_and_b32     s1, s0, 0x0000ffff                      // 000000010A14: 8701FF00 0000FFFF
  s_bfe_u32     s0, s0, 0x00100010                      // 000000010A1C: 9380FF00 00100010
  s_mul_i32     s1, s1, s8                              // 000000010A24: 93010801
  v_add_i32     v0, vcc, s1, v0                         // 000000010A28: 4A000001
  s_mul_i32     s0, s0, s9                              // 000000010A2C: 93000900
  v_add_i32     v1, vcc, s0, v1                         // 000000010A30: 4A020200
  v_ashrrev_i32  v3, 31, v2                             // 000000010A34: 3006049F
  s_mov_b32     s0, 0x66666667                          // 000000010A38: BE8003FF 66666667
  s_load_dwordx2  s[2:3], s[6:7], 0x0c                  // 000000010A40: C041070C
  v_mul_hi_u32  v4, v2, s0                              // 000000010A44: D2D40004 00000102
  v_mul_lo_u32  v3, v3, s0                              // 000000010A4C: D2D20003 00000103
  v_add_i32     v5, vcc, 4, v2                          // 000000010A54: 4A0A0484
  v_mul_lo_u32  v11, v2, s0                             // 000000010A58: D2D2000B 00000102
  v_add_i32     v12, vcc, v3, v4                        // 000000010A60: 4A180903
  v_ashrrev_i32  v4, 31, v5                             // 000000010A64: 30080A9F
  v_mul_hi_u32  v7, v5, s0                              // 000000010A68: D2D40007 00000105
  v_mul_lo_u32  v4, v4, s0                              // 000000010A70: D2D20004 00000104
  v_lshrrev_b32  v8, 31, v12                            // 000000010A78: 2C10189F
  v_ashr_i64    v[9:10], v[11:12], 34                   // 000000010A7C: D2C60009 0001450B
  v_add_i32     v4, vcc, v4, v7                         // 000000010A84: 4A080F04
  v_add_i32     v3, vcc, 0x9999999c, v11                // 000000010A88: 4A0616FF 9999999C
  v_add_i32     v6, vcc, v9, v8                         // 000000010A90: 4A0C1109
  s_load_dword  s0, s[6:7], 0x0e                        // 000000010A94: C000070E
  s_waitcnt     lgkmcnt(0)                              // 000000010A98: BF8C007F
  s_lshl_b32    s1, s2, 1                               // 000000010A9C: 8F018102
  v_and_b32     v7, -8, v1                              // 000000010AA0: 360E02C8
  v_mul_lo_u32  v8, v6, 10                              // 000000010AA4: D2D20008 00011506
  v_lshrrev_b32  v9, 31, v4                             // 000000010AAC: 2C12089F
  v_ashr_i64    v[3:4], v[3:4], 34                      // 000000010AB0: D2C60003 00014503
  s_add_u32     s4, s1, s3                              // 000000010AB8: 80040301
  v_and_b32     v24, -8, v0                             // 000000010ABC: 363000C8
  v_add_i32     v6, vcc, v6, v7                         // 000000010AC0: 4A0C0F06
  v_sub_i32     v8, vcc, v2, v8                         // 000000010AC4: 4C101102
  s_load_dwordx2  s[8:9], s[6:7], 0x00                  // 000000010AC8: C0440700
  v_add_i32     v3, vcc, v3, v9                         // 000000010ACC: 4A061303
  v_mul_lo_u32  v6, v6, s4                              // 000000010AD0: D2D20006 00000906
  v_add_i32     v8, vcc, v8, v24                        // 000000010AD8: 4A103108
  v_mul_lo_u32  v9, v3, 10                              // 000000010ADC: D2D20009 00011503
  v_add_i32     v8, vcc, v8, v6                         // 000000010AE4: 4A100D08
  v_sub_i32     v5, vcc, v5, v9                         // 000000010AE8: 4C0A1305
  v_or_b32      v7, 6, v7                               // 000000010AEC: 380E0E86
  v_ashrrev_i32  v9, 31, v8                             // 000000010AF0: 3012109F
  s_add_u32     s1, s1, s0                              // 000000010AF4: 80010001
  v_add_i32     v5, vcc, v5, v24                        // 000000010AF8: 4A0A3105
  v_add_i32     v3, vcc, v3, v7                         // 000000010AFC: 4A060F03
  v_cmp_lt_i32  s[10:11], v3, s1                        // 000000010B00: D102000A 00000303
  v_cmp_lt_i32  s[12:13], v5, s4                        // 000000010B08: D102000C 00000905
  v_lshl_b64    v[6:7], v[8:9], 2                       // 000000010B10: D2C20006 00010508
  s_waitcnt     lgkmcnt(0)                              // 000000010B18: BF8C007F
  v_add_i32     v6, vcc, s8, v6                         // 000000010B1C: 4A0C0C08
  v_mov_b32     v8, s9                                  // 000000010B20: 7E100209
  v_addc_u32    v7, vcc, v8, v7, vcc                    // 000000010B24: 500E0F08
  s_and_b64     s[10:11], s[12:13], s[10:11]            // 000000010B28: 878A0A0C
  flat_load_dword  v6, v[6:7]                           // 000000010B2C: DC300000 06000006
  v_add_i32     v1, vcc, s2, v1                         // 000000010B34: 4A020202
  v_add_i32     v0, vcc, s2, v0                         // 000000010B38: 4A000002
  s_and_saveexec_b64  s[10:11], s[10:11]                // 000000010B3C: BE8A240A
  v_mul_lo_u32  v3, v3, s4                              // 000000010B40: D2D20003 00000903
  s_cbranch_execz  label_42DC                           // 000000010B48: BF880009
  v_add_i32     v3, vcc, v3, v5                         // 000000010B4C: 4A060B03
  v_ashrrev_i32  v4, 31, v3                             // 000000010B50: 3008069F
  v_lshl_b64    v[3:4], v[3:4], 2                       // 000000010B54: D2C20003 00010503
  v_add_i32     v3, vcc, s8, v3                         // 000000010B5C: 4A060608
  v_mov_b32     v5, s9                                  // 000000010B60: 7E0A0209
  v_addc_u32    v4, vcc, v5, v4, vcc                    // 000000010B64: 50080905
  flat_load_dword  v24, v[3:4]                          // 000000010B68: DC300000 18000003
  label_42DC:
  s_mov_b64     exec, s[10:11]                          // 000000010B70: BEFE040A
  s_add_u32     s0, s0, s2                              // 000000010B74: 80000200
  s_add_u32     s1, s3, s2                              // 000000010B78: 80010203
  v_cmp_lt_i32  s[2:3], v0, s1                          // 000000010B7C: D1020002 00000300
  v_cmp_lt_i32  s[0:1], v1, s0                          // 000000010B84: D1020000 00000101
  v_ashrrev_i32  v4, 3, v2                              // 000000010B8C: 30080483
  v_lshlrev_b32  v4, 1, v4                              // 000000010B90: 34080881
  v_add_i32     v4, vcc, v4, v2                         // 000000010B94: 4A080504
  v_and_b32     v5, 63, v4                              // 000000010B98: 360A08BF
  s_and_b64     s[0:1], s[0:1], s[2:3]                  // 000000010B9C: 87800200
  v_lshl_b64    v[7:8], 1, v5                           // 000000010BA0: D2C20007 00020A81
  v_and_b32     v7, exec_lo, v7                         // 000000010BA8: 360E0E7E
  v_and_b32     v8, exec_hi, v8                         // 000000010BAC: 3610107F
  v_cmp_ne_u64  s[2:3], 0, v[7:8]                       // 000000010BB0: D1CA0002 00020E80
  s_mov_b64     s[8:9], exec                            // 000000010BB8: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000010BBC: BE8A047E
  label_42F0:
  v_readfirstlane_b32  s5, v5                           // 000000010BC0: 7E0A0505
  v_cmp_eq_u32  vcc, s5, v5                             // 000000010BC4: 7D840A05
  s_and_saveexec_b64  s[12:13], vcc                     // 000000010BC8: BE8C246A
  s_cbranch_execz  label_42F9                           // 000000010BCC: BF880005
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000010BD0: BF8C0070
  v_readlane_b32  s5, v6, s5                            // 000000010BD4: 020A0B06
  v_mov_b32     v7, s5                                  // 000000010BD8: 7E0E0205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000010BDC: 8A8A7E0A
  s_cbranch_scc0  label_42FB                            // 000000010BE0: BF840002
  label_42F9:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000010BE4: 87FE0A0C
  s_branch      label_42F0                              // 000000010BE8: BF82FFF5
  label_42FB:
  s_mov_b64     exec, s[8:9]                            // 000000010BEC: BEFE0408
  v_cndmask_b32  v7, 0, v7, s[2:3]                      // 000000010BF0: D2000007 000A0E80
  v_add_i32     v8, vcc, 2, v4                          // 000000010BF8: 4A100882
  v_lshl_b64    v[9:10], 1, v5                          // 000000010BFC: D2C20009 00020A81
  v_and_b32     v9, exec_lo, v9                         // 000000010C04: 3612127E
  v_and_b32     v10, exec_hi, v10                       // 000000010C08: 3614147F
  v_cmp_ne_u64  s[2:3], 0, v[9:10]                      // 000000010C0C: D1CA0002 00021280
  s_mov_b64     s[8:9], exec                            // 000000010C14: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000010C18: BE8A047E
  s_nop         0x0000                                  // 000000010C1C: BF800000
  label_4308:
  v_readfirstlane_b32  s5, v5                           // 000000010C20: 7E0A0505
  v_cmp_eq_u32  vcc, s5, v5                             // 000000010C24: 7D840A05
  s_and_saveexec_b64  s[12:13], vcc                     // 000000010C28: BE8C246A
  s_cbranch_execz  label_4310                           // 000000010C2C: BF880004
  v_readlane_b32  s5, v24, s5                           // 000000010C30: 020A0B18
  v_mov_b32     v5, s5                                  // 000000010C34: 7E0A0205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000010C38: 8A8A7E0A
  s_cbranch_scc0  label_4312                            // 000000010C3C: BF840002
  label_4310:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000010C40: 87FE0A0C
  s_branch      label_4308                              // 000000010C44: BF82FFF6
  label_4312:
  s_mov_b64     exec, s[8:9]                            // 000000010C48: BEFE0408
  v_cndmask_b32  v5, 0, v5, s[2:3]                      // 000000010C4C: D2000005 000A0A80
  v_add_i32     v9, vcc, 1, v4                          // 000000010C54: 4A120881
  v_add_i32     v10, vcc, 10, v4                        // 000000010C58: 4A14088A
  v_and_b32     v8, 63, v8                              // 000000010C5C: 361010BF
  v_and_b32     v9, 63, v9                              // 000000010C60: 361212BF
  v_add_i32     v11, vcc, 22, v4                        // 000000010C64: 4A160896
  v_add_i32     v12, vcc, 21, v4                        // 000000010C68: 4A180895
  v_add_i32     v13, vcc, 20, v4                        // 000000010C6C: 4A1A0894
  v_add_i32     v14, vcc, 12, v4                        // 000000010C70: 4A1C088C
  v_add_i32     v4, vcc, 11, v4                         // 000000010C74: 4A08088B
  v_and_b32     v10, 63, v10                            // 000000010C78: 361414BF
  v_and_b32     v4, 63, v4                              // 000000010C7C: 360808BF
  v_and_b32     v14, 63, v14                            // 000000010C80: 361C1CBF
  v_and_b32     v13, 63, v13                            // 000000010C84: 361A1ABF
  v_and_b32     v12, 63, v12                            // 000000010C88: 361818BF
  v_and_b32     v11, 63, v11                            // 000000010C8C: 361616BF
  s_xor_b64     s[0:1], s[0:1], -1                      // 000000010C90: 8980C100
  v_lshl_b64    v[15:16], 1, v9                         // 000000010C94: D2C2000F 00021281
  v_and_b32     v15, exec_lo, v15                       // 000000010C9C: 361E1E7E
  v_and_b32     v16, exec_hi, v16                       // 000000010CA0: 3620207F
  v_cmp_ne_u64  s[2:3], 0, v[15:16]                     // 000000010CA4: D1CA0002 00021E80
  s_mov_b64     s[8:9], exec                            // 000000010CAC: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000010CB0: BE8A047E
  s_nop         0x0000                                  // 000000010CB4: BF800000
  s_nop         0x0000                                  // 000000010CB8: BF800000
  s_nop         0x0000                                  // 000000010CBC: BF800000
  label_4330:
  v_readfirstlane_b32  s5, v9                           // 000000010CC0: 7E0A0509
  v_cmp_eq_u32  vcc, s5, v9                             // 000000010CC4: 7D841205
  s_and_saveexec_b64  s[12:13], vcc                     // 000000010CC8: BE8C246A
  s_cbranch_execz  label_4338                           // 000000010CCC: BF880004
  v_readlane_b32  s5, v6, s5                            // 000000010CD0: 020A0B06
  v_mov_b32     v15, s5                                 // 000000010CD4: 7E1E0205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000010CD8: 8A8A7E0A
  s_cbranch_scc0  label_433A                            // 000000010CDC: BF840002
  label_4338:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000010CE0: 87FE0A0C
  s_branch      label_4330                              // 000000010CE4: BF82FFF6
  label_433A:
  s_mov_b64     exec, s[8:9]                            // 000000010CE8: BEFE0408
  v_cndmask_b32  v15, 0, v15, s[2:3]                    // 000000010CEC: D200000F 000A1E80
  v_lshl_b64    v[16:17], 1, v9                         // 000000010CF4: D2C20010 00021281
  v_and_b32     v16, exec_lo, v16                       // 000000010CFC: 3620207E
  v_and_b32     v17, exec_hi, v17                       // 000000010D00: 3622227F
  v_cmp_ne_u64  s[2:3], 0, v[16:17]                     // 000000010D04: D1CA0002 00022080
  s_mov_b64     s[8:9], exec                            // 000000010D0C: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000010D10: BE8A047E
  s_nop         0x0000                                  // 000000010D14: BF800000
  s_nop         0x0000                                  // 000000010D18: BF800000
  s_nop         0x0000                                  // 000000010D1C: BF800000
  label_4348:
  v_readfirstlane_b32  s5, v9                           // 000000010D20: 7E0A0509
  v_cmp_eq_u32  vcc, s5, v9                             // 000000010D24: 7D841205
  s_and_saveexec_b64  s[12:13], vcc                     // 000000010D28: BE8C246A
  s_cbranch_execz  label_4350                           // 000000010D2C: BF880004
  v_readlane_b32  s5, v24, s5                           // 000000010D30: 020A0B18
  v_mov_b32     v9, s5                                  // 000000010D34: 7E120205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000010D38: 8A8A7E0A
  s_cbranch_scc0  label_4352                            // 000000010D3C: BF840002
  label_4350:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000010D40: 87FE0A0C
  s_branch      label_4348                              // 000000010D44: BF82FFF6
  label_4352:
  s_mov_b64     exec, s[8:9]                            // 000000010D48: BEFE0408
  v_cndmask_b32  v9, 0, v9, s[2:3]                      // 000000010D4C: D2000009 000A1280
  v_lshl_b64    v[16:17], 1, v8                         // 000000010D54: D2C20010 00021081
  v_and_b32     v16, exec_lo, v16                       // 000000010D5C: 3620207E
  v_and_b32     v17, exec_hi, v17                       // 000000010D60: 3622227F
  v_cmp_ne_u64  s[2:3], 0, v[16:17]                     // 000000010D64: D1CA0002 00022080
  s_mov_b64     s[8:9], exec                            // 000000010D6C: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000010D70: BE8A047E
  s_nop         0x0000                                  // 000000010D74: BF800000
  s_nop         0x0000                                  // 000000010D78: BF800000
  s_nop         0x0000                                  // 000000010D7C: BF800000
  label_4360:
  v_readfirstlane_b32  s5, v8                           // 000000010D80: 7E0A0508
  v_cmp_eq_u32  vcc, s5, v8                             // 000000010D84: 7D841005
  s_and_saveexec_b64  s[12:13], vcc                     // 000000010D88: BE8C246A
  s_cbranch_execz  label_4368                           // 000000010D8C: BF880004
  v_readlane_b32  s5, v6, s5                            // 000000010D90: 020A0B06
  v_mov_b32     v16, s5                                 // 000000010D94: 7E200205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000010D98: 8A8A7E0A
  s_cbranch_scc0  label_436A                            // 000000010D9C: BF840002
  label_4368:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000010DA0: 87FE0A0C
  s_branch      label_4360                              // 000000010DA4: BF82FFF6
  label_436A:
  s_mov_b64     exec, s[8:9]                            // 000000010DA8: BEFE0408
  v_cndmask_b32  v16, 0, v16, s[2:3]                    // 000000010DAC: D2000010 000A2080
  v_lshl_b64    v[17:18], 1, v8                         // 000000010DB4: D2C20011 00021081
  v_and_b32     v17, exec_lo, v17                       // 000000010DBC: 3622227E
  v_and_b32     v18, exec_hi, v18                       // 000000010DC0: 3624247F
  v_cmp_ne_u64  s[2:3], 0, v[17:18]                     // 000000010DC4: D1CA0002 00022280
  s_mov_b64     s[8:9], exec                            // 000000010DCC: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000010DD0: BE8A047E
  s_nop         0x0000                                  // 000000010DD4: BF800000
  s_nop         0x0000                                  // 000000010DD8: BF800000
  s_nop         0x0000                                  // 000000010DDC: BF800000
  label_4378:
  v_readfirstlane_b32  s5, v8                           // 000000010DE0: 7E0A0508
  v_cmp_eq_u32  vcc, s5, v8                             // 000000010DE4: 7D841005
  s_and_saveexec_b64  s[12:13], vcc                     // 000000010DE8: BE8C246A
  s_cbranch_execz  label_4380                           // 000000010DEC: BF880004
  v_readlane_b32  s5, v24, s5                           // 000000010DF0: 020A0B18
  v_mov_b32     v8, s5                                  // 000000010DF4: 7E100205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000010DF8: 8A8A7E0A
  s_cbranch_scc0  label_4382                            // 000000010DFC: BF840002
  label_4380:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000010E00: 87FE0A0C
  s_branch      label_4378                              // 000000010E04: BF82FFF6
  label_4382:
  s_mov_b64     exec, s[8:9]                            // 000000010E08: BEFE0408
  v_cndmask_b32  v8, 0, v8, s[2:3]                      // 000000010E0C: D2000008 000A1080
  v_lshl_b64    v[17:18], 1, v10                        // 000000010E14: D2C20011 00021481
  v_and_b32     v17, exec_lo, v17                       // 000000010E1C: 3622227E
  v_and_b32     v18, exec_hi, v18                       // 000000010E20: 3624247F
  v_cmp_ne_u64  s[2:3], 0, v[17:18]                     // 000000010E24: D1CA0002 00022280
  s_mov_b64     s[8:9], exec                            // 000000010E2C: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000010E30: BE8A047E
  s_nop         0x0000                                  // 000000010E34: BF800000
  s_nop         0x0000                                  // 000000010E38: BF800000
  s_nop         0x0000                                  // 000000010E3C: BF800000
  label_4390:
  v_readfirstlane_b32  s5, v10                          // 000000010E40: 7E0A050A
  v_cmp_eq_u32  vcc, s5, v10                            // 000000010E44: 7D841405
  s_and_saveexec_b64  s[12:13], vcc                     // 000000010E48: BE8C246A
  s_cbranch_execz  label_4398                           // 000000010E4C: BF880004
  v_readlane_b32  s5, v6, s5                            // 000000010E50: 020A0B06
  v_mov_b32     v17, s5                                 // 000000010E54: 7E220205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000010E58: 8A8A7E0A
  s_cbranch_scc0  label_439A                            // 000000010E5C: BF840002
  label_4398:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000010E60: 87FE0A0C
  s_branch      label_4390                              // 000000010E64: BF82FFF6
  label_439A:
  s_mov_b64     exec, s[8:9]                            // 000000010E68: BEFE0408
  v_cndmask_b32  v17, 0, v17, s[2:3]                    // 000000010E6C: D2000011 000A2280
  v_lshl_b64    v[18:19], 1, v10                        // 000000010E74: D2C20012 00021481
  v_and_b32     v18, exec_lo, v18                       // 000000010E7C: 3624247E
  v_and_b32     v19, exec_hi, v19                       // 000000010E80: 3626267F
  v_cmp_ne_u64  s[2:3], 0, v[18:19]                     // 000000010E84: D1CA0002 00022480
  s_mov_b64     s[8:9], exec                            // 000000010E8C: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000010E90: BE8A047E
  s_nop         0x0000                                  // 000000010E94: BF800000
  s_nop         0x0000                                  // 000000010E98: BF800000
  s_nop         0x0000                                  // 000000010E9C: BF800000
  label_43A8:
  v_readfirstlane_b32  s5, v10                          // 000000010EA0: 7E0A050A
  v_cmp_eq_u32  vcc, s5, v10                            // 000000010EA4: 7D841405
  s_and_saveexec_b64  s[12:13], vcc                     // 000000010EA8: BE8C246A
  s_cbranch_execz  label_43B0                           // 000000010EAC: BF880004
  v_readlane_b32  s5, v24, s5                           // 000000010EB0: 020A0B18
  v_mov_b32     v10, s5                                 // 000000010EB4: 7E140205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000010EB8: 8A8A7E0A
  s_cbranch_scc0  label_43B2                            // 000000010EBC: BF840002
  label_43B0:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000010EC0: 87FE0A0C
  s_branch      label_43A8                              // 000000010EC4: BF82FFF6
  label_43B2:
  s_mov_b64     exec, s[8:9]                            // 000000010EC8: BEFE0408
  v_cndmask_b32  v10, 0, v10, s[2:3]                    // 000000010ECC: D200000A 000A1480
  v_lshl_b64    v[18:19], 1, v4                         // 000000010ED4: D2C20012 00020881
  v_and_b32     v18, exec_lo, v18                       // 000000010EDC: 3624247E
  v_and_b32     v19, exec_hi, v19                       // 000000010EE0: 3626267F
  v_cmp_ne_u64  s[2:3], 0, v[18:19]                     // 000000010EE4: D1CA0002 00022480
  s_mov_b64     s[8:9], exec                            // 000000010EEC: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000010EF0: BE8A047E
  s_nop         0x0000                                  // 000000010EF4: BF800000
  s_nop         0x0000                                  // 000000010EF8: BF800000
  s_nop         0x0000                                  // 000000010EFC: BF800000
  label_43C0:
  v_readfirstlane_b32  s5, v4                           // 000000010F00: 7E0A0504
  v_cmp_eq_u32  vcc, s5, v4                             // 000000010F04: 7D840805
  s_and_saveexec_b64  s[12:13], vcc                     // 000000010F08: BE8C246A
  s_cbranch_execz  label_43C8                           // 000000010F0C: BF880004
  v_readlane_b32  s5, v6, s5                            // 000000010F10: 020A0B06
  v_mov_b32     v18, s5                                 // 000000010F14: 7E240205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000010F18: 8A8A7E0A
  s_cbranch_scc0  label_43CA                            // 000000010F1C: BF840002
  label_43C8:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000010F20: 87FE0A0C
  s_branch      label_43C0                              // 000000010F24: BF82FFF6
  label_43CA:
  s_mov_b64     exec, s[8:9]                            // 000000010F28: BEFE0408
  v_cndmask_b32  v18, 0, v18, s[2:3]                    // 000000010F2C: D2000012 000A2480
  v_lshl_b64    v[19:20], 1, v4                         // 000000010F34: D2C20013 00020881
  v_and_b32     v19, exec_lo, v19                       // 000000010F3C: 3626267E
  v_and_b32     v20, exec_hi, v20                       // 000000010F40: 3628287F
  v_cmp_ne_u64  s[2:3], 0, v[19:20]                     // 000000010F44: D1CA0002 00022680
  s_mov_b64     s[8:9], exec                            // 000000010F4C: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000010F50: BE8A047E
  s_nop         0x0000                                  // 000000010F54: BF800000
  s_nop         0x0000                                  // 000000010F58: BF800000
  s_nop         0x0000                                  // 000000010F5C: BF800000
  label_43D8:
  v_readfirstlane_b32  s5, v4                           // 000000010F60: 7E0A0504
  v_cmp_eq_u32  vcc, s5, v4                             // 000000010F64: 7D840805
  s_and_saveexec_b64  s[12:13], vcc                     // 000000010F68: BE8C246A
  s_cbranch_execz  label_43E0                           // 000000010F6C: BF880004
  v_readlane_b32  s5, v24, s5                           // 000000010F70: 020A0B18
  v_mov_b32     v4, s5                                  // 000000010F74: 7E080205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000010F78: 8A8A7E0A
  s_cbranch_scc0  label_43E2                            // 000000010F7C: BF840002
  label_43E0:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000010F80: 87FE0A0C
  s_branch      label_43D8                              // 000000010F84: BF82FFF6
  label_43E2:
  s_mov_b64     exec, s[8:9]                            // 000000010F88: BEFE0408
  v_cndmask_b32  v4, 0, v4, s[2:3]                      // 000000010F8C: D2000004 000A0880
  v_lshl_b64    v[19:20], 1, v14                        // 000000010F94: D2C20013 00021C81
  v_and_b32     v19, exec_lo, v19                       // 000000010F9C: 3626267E
  v_and_b32     v20, exec_hi, v20                       // 000000010FA0: 3628287F
  v_cmp_ne_u64  s[2:3], 0, v[19:20]                     // 000000010FA4: D1CA0002 00022680
  s_mov_b64     s[8:9], exec                            // 000000010FAC: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000010FB0: BE8A047E
  s_nop         0x0000                                  // 000000010FB4: BF800000
  s_nop         0x0000                                  // 000000010FB8: BF800000
  s_nop         0x0000                                  // 000000010FBC: BF800000
  label_43F0:
  v_readfirstlane_b32  s5, v14                          // 000000010FC0: 7E0A050E
  v_cmp_eq_u32  vcc, s5, v14                            // 000000010FC4: 7D841C05
  s_and_saveexec_b64  s[12:13], vcc                     // 000000010FC8: BE8C246A
  s_cbranch_execz  label_43F8                           // 000000010FCC: BF880004
  v_readlane_b32  s5, v6, s5                            // 000000010FD0: 020A0B06
  v_mov_b32     v19, s5                                 // 000000010FD4: 7E260205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000010FD8: 8A8A7E0A
  s_cbranch_scc0  label_43FA                            // 000000010FDC: BF840002
  label_43F8:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000010FE0: 87FE0A0C
  s_branch      label_43F0                              // 000000010FE4: BF82FFF6
  label_43FA:
  s_mov_b64     exec, s[8:9]                            // 000000010FE8: BEFE0408
  v_cndmask_b32  v19, 0, v19, s[2:3]                    // 000000010FEC: D2000013 000A2680
  v_lshl_b64    v[20:21], 1, v14                        // 000000010FF4: D2C20014 00021C81
  v_and_b32     v20, exec_lo, v20                       // 000000010FFC: 3628287E
  v_and_b32     v21, exec_hi, v21                       // 000000011000: 362A2A7F
  v_cmp_ne_u64  s[2:3], 0, v[20:21]                     // 000000011004: D1CA0002 00022880
  s_mov_b64     s[8:9], exec                            // 00000001100C: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000011010: BE8A047E
  s_nop         0x0000                                  // 000000011014: BF800000
  s_nop         0x0000                                  // 000000011018: BF800000
  s_nop         0x0000                                  // 00000001101C: BF800000
  label_4408:
  v_readfirstlane_b32  s5, v14                          // 000000011020: 7E0A050E
  v_cmp_eq_u32  vcc, s5, v14                            // 000000011024: 7D841C05
  s_and_saveexec_b64  s[12:13], vcc                     // 000000011028: BE8C246A
  s_cbranch_execz  label_4410                           // 00000001102C: BF880004
  v_readlane_b32  s5, v24, s5                           // 000000011030: 020A0B18
  v_mov_b32     v14, s5                                 // 000000011034: 7E1C0205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000011038: 8A8A7E0A
  s_cbranch_scc0  label_4412                            // 00000001103C: BF840002
  label_4410:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000011040: 87FE0A0C
  s_branch      label_4408                              // 000000011044: BF82FFF6
  label_4412:
  s_mov_b64     exec, s[8:9]                            // 000000011048: BEFE0408
  v_cndmask_b32  v14, 0, v14, s[2:3]                    // 00000001104C: D200000E 000A1C80
  v_lshl_b64    v[20:21], 1, v13                        // 000000011054: D2C20014 00021A81
  v_and_b32     v20, exec_lo, v20                       // 00000001105C: 3628287E
  v_and_b32     v21, exec_hi, v21                       // 000000011060: 362A2A7F
  v_cmp_ne_u64  s[2:3], 0, v[20:21]                     // 000000011064: D1CA0002 00022880
  s_mov_b64     s[8:9], exec                            // 00000001106C: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000011070: BE8A047E
  s_nop         0x0000                                  // 000000011074: BF800000
  s_nop         0x0000                                  // 000000011078: BF800000
  s_nop         0x0000                                  // 00000001107C: BF800000
  label_4420:
  v_readfirstlane_b32  s5, v13                          // 000000011080: 7E0A050D
  v_cmp_eq_u32  vcc, s5, v13                            // 000000011084: 7D841A05
  s_and_saveexec_b64  s[12:13], vcc                     // 000000011088: BE8C246A
  s_cbranch_execz  label_4428                           // 00000001108C: BF880004
  v_readlane_b32  s5, v6, s5                            // 000000011090: 020A0B06
  v_mov_b32     v20, s5                                 // 000000011094: 7E280205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000011098: 8A8A7E0A
  s_cbranch_scc0  label_442A                            // 00000001109C: BF840002
  label_4428:
  s_and_b64     exec, s[12:13], s[10:11]                // 0000000110A0: 87FE0A0C
  s_branch      label_4420                              // 0000000110A4: BF82FFF6
  label_442A:
  s_mov_b64     exec, s[8:9]                            // 0000000110A8: BEFE0408
  v_cndmask_b32  v20, 0, v20, s[2:3]                    // 0000000110AC: D2000014 000A2880
  v_lshl_b64    v[21:22], 1, v13                        // 0000000110B4: D2C20015 00021A81
  v_and_b32     v21, exec_lo, v21                       // 0000000110BC: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 0000000110C0: 362C2C7F
  v_cmp_ne_u64  s[2:3], 0, v[21:22]                     // 0000000110C4: D1CA0002 00022A80
  s_mov_b64     s[8:9], exec                            // 0000000110CC: BE88047E
  s_mov_b64     s[10:11], exec                          // 0000000110D0: BE8A047E
  s_nop         0x0000                                  // 0000000110D4: BF800000
  s_nop         0x0000                                  // 0000000110D8: BF800000
  s_nop         0x0000                                  // 0000000110DC: BF800000
  label_4438:
  v_readfirstlane_b32  s5, v13                          // 0000000110E0: 7E0A050D
  v_cmp_eq_u32  vcc, s5, v13                            // 0000000110E4: 7D841A05
  s_and_saveexec_b64  s[12:13], vcc                     // 0000000110E8: BE8C246A
  s_cbranch_execz  label_4440                           // 0000000110EC: BF880004
  v_readlane_b32  s5, v24, s5                           // 0000000110F0: 020A0B18
  v_mov_b32     v13, s5                                 // 0000000110F4: 7E1A0205
  s_andn2_b64   s[10:11], s[10:11], exec                // 0000000110F8: 8A8A7E0A
  s_cbranch_scc0  label_4442                            // 0000000110FC: BF840002
  label_4440:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000011100: 87FE0A0C
  s_branch      label_4438                              // 000000011104: BF82FFF6
  label_4442:
  s_mov_b64     exec, s[8:9]                            // 000000011108: BEFE0408
  v_cndmask_b32  v13, 0, v13, s[2:3]                    // 00000001110C: D200000D 000A1A80
  v_lshl_b64    v[21:22], 1, v12                        // 000000011114: D2C20015 00021881
  v_and_b32     v21, exec_lo, v21                       // 00000001111C: 362A2A7E
  v_and_b32     v22, exec_hi, v22                       // 000000011120: 362C2C7F
  v_cmp_ne_u64  s[2:3], 0, v[21:22]                     // 000000011124: D1CA0002 00022A80
  s_mov_b64     s[8:9], exec                            // 00000001112C: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000011130: BE8A047E
  s_nop         0x0000                                  // 000000011134: BF800000
  s_nop         0x0000                                  // 000000011138: BF800000
  s_nop         0x0000                                  // 00000001113C: BF800000
  label_4450:
  v_readfirstlane_b32  s5, v12                          // 000000011140: 7E0A050C
  v_cmp_eq_u32  vcc, s5, v12                            // 000000011144: 7D841805
  s_and_saveexec_b64  s[12:13], vcc                     // 000000011148: BE8C246A
  s_cbranch_execz  label_4458                           // 00000001114C: BF880004
  v_readlane_b32  s5, v6, s5                            // 000000011150: 020A0B06
  v_mov_b32     v21, s5                                 // 000000011154: 7E2A0205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000011158: 8A8A7E0A
  s_cbranch_scc0  label_445A                            // 00000001115C: BF840002
  label_4458:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000011160: 87FE0A0C
  s_branch      label_4450                              // 000000011164: BF82FFF6
  label_445A:
  s_mov_b64     exec, s[8:9]                            // 000000011168: BEFE0408
  v_cndmask_b32  v21, 0, v21, s[2:3]                    // 00000001116C: D2000015 000A2A80
  v_lshl_b64    v[22:23], 1, v12                        // 000000011174: D2C20016 00021881
  v_and_b32     v22, exec_lo, v22                       // 00000001117C: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 000000011180: 362E2E7F
  v_cmp_ne_u64  s[2:3], 0, v[22:23]                     // 000000011184: D1CA0002 00022C80
  s_mov_b64     s[8:9], exec                            // 00000001118C: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000011190: BE8A047E
  s_nop         0x0000                                  // 000000011194: BF800000
  s_nop         0x0000                                  // 000000011198: BF800000
  s_nop         0x0000                                  // 00000001119C: BF800000
  label_4468:
  v_readfirstlane_b32  s5, v12                          // 0000000111A0: 7E0A050C
  v_cmp_eq_u32  vcc, s5, v12                            // 0000000111A4: 7D841805
  s_and_saveexec_b64  s[12:13], vcc                     // 0000000111A8: BE8C246A
  s_cbranch_execz  label_4470                           // 0000000111AC: BF880004
  v_readlane_b32  s5, v24, s5                           // 0000000111B0: 020A0B18
  v_mov_b32     v12, s5                                 // 0000000111B4: 7E180205
  s_andn2_b64   s[10:11], s[10:11], exec                // 0000000111B8: 8A8A7E0A
  s_cbranch_scc0  label_4472                            // 0000000111BC: BF840002
  label_4470:
  s_and_b64     exec, s[12:13], s[10:11]                // 0000000111C0: 87FE0A0C
  s_branch      label_4468                              // 0000000111C4: BF82FFF6
  label_4472:
  s_mov_b64     exec, s[8:9]                            // 0000000111C8: BEFE0408
  v_cndmask_b32  v12, 0, v12, s[2:3]                    // 0000000111CC: D200000C 000A1880
  v_lshl_b64    v[22:23], 1, v11                        // 0000000111D4: D2C20016 00021681
  v_and_b32     v22, exec_lo, v22                       // 0000000111DC: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 0000000111E0: 362E2E7F
  v_cmp_ne_u64  s[2:3], 0, v[22:23]                     // 0000000111E4: D1CA0002 00022C80
  s_mov_b64     s[8:9], exec                            // 0000000111EC: BE88047E
  s_mov_b64     s[10:11], exec                          // 0000000111F0: BE8A047E
  s_nop         0x0000                                  // 0000000111F4: BF800000
  s_nop         0x0000                                  // 0000000111F8: BF800000
  s_nop         0x0000                                  // 0000000111FC: BF800000
  label_4480:
  v_readfirstlane_b32  s5, v11                          // 000000011200: 7E0A050B
  v_cmp_eq_u32  vcc, s5, v11                            // 000000011204: 7D841605
  s_and_saveexec_b64  s[12:13], vcc                     // 000000011208: BE8C246A
  s_cbranch_execz  label_4488                           // 00000001120C: BF880004
  v_readlane_b32  s5, v6, s5                            // 000000011210: 020A0B06
  v_mov_b32     v22, s5                                 // 000000011214: 7E2C0205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000011218: 8A8A7E0A
  s_cbranch_scc0  label_448A                            // 00000001121C: BF840002
  label_4488:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000011220: 87FE0A0C
  s_branch      label_4480                              // 000000011224: BF82FFF6
  label_448A:
  s_mov_b64     exec, s[8:9]                            // 000000011228: BEFE0408
  v_cndmask_b32  v6, 0, v22, s[2:3]                     // 00000001122C: D2000006 000A2C80
  v_lshl_b64    v[22:23], 1, v11                        // 000000011234: D2C20016 00021681
  v_and_b32     v22, exec_lo, v22                       // 00000001123C: 362C2C7E
  v_and_b32     v23, exec_hi, v23                       // 000000011240: 362E2E7F
  v_cmp_ne_u64  s[2:3], 0, v[22:23]                     // 000000011244: D1CA0002 00022C80
  s_mov_b64     s[8:9], exec                            // 00000001124C: BE88047E
  s_mov_b64     s[10:11], exec                          // 000000011250: BE8A047E
  s_nop         0x0000                                  // 000000011254: BF800000
  s_nop         0x0000                                  // 000000011258: BF800000
  s_nop         0x0000                                  // 00000001125C: BF800000
  label_4498:
  v_readfirstlane_b32  s5, v11                          // 000000011260: 7E0A050B
  v_cmp_eq_u32  vcc, s5, v11                            // 000000011264: 7D841605
  s_and_saveexec_b64  s[12:13], vcc                     // 000000011268: BE8C246A
  s_cbranch_execz  label_44A0                           // 00000001126C: BF880004
  v_readlane_b32  s5, v24, s5                           // 000000011270: 020A0B18
  v_mov_b32     v11, s5                                 // 000000011274: 7E160205
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000011278: 8A8A7E0A
  s_cbranch_scc0  label_44A2                            // 00000001127C: BF840002
  label_44A0:
  s_and_b64     exec, s[12:13], s[10:11]                // 000000011280: 87FE0A0C
  s_branch      label_4498                              // 000000011284: BF82FFF6
  label_44A2:
  s_mov_b64     exec, s[8:9]                            // 000000011288: BEFE0408
  v_cndmask_b32  v3, 0, v11, s[2:3]                     // 00000001128C: D2000003 000A1680
  s_mov_b64     s[2:3], exec                            // 000000011294: BE82047E
  s_andn2_b64   exec, s[2:3], s[0:1]                    // 000000011298: 8AFE0002
  s_cbranch_execz  label_4528                           // 00000001129C: BF880080
  s_load_dwordx2  s[0:1], s[6:7], 0x08                  // 0000000112A0: C0400708
  s_waitcnt     lgkmcnt(0)                              // 0000000112A4: BF8C007F
  v_mov_b32     v27, s0                                 // 0000000112A8: 7E360200
  v_mov_b32     v28, s1                                 // 0000000112AC: 7E380201
  s_add_u32     s8, s0, 4                               // 0000000112B0: 80088400
  s_addc_u32    s9, s1, 0                               // 0000000112B4: 82098001
  v_mov_b32     v23, s8                                 // 0000000112B8: 7E2E0208
  v_mov_b32     v24, s9                                 // 0000000112BC: 7E300209
  s_add_u32     s8, s0, 8                               // 0000000112C0: 80088800
  s_addc_u32    s9, s1, 0                               // 0000000112C4: 82098001
  v_mov_b32     v25, s8                                 // 0000000112C8: 7E320208
  v_mov_b32     v26, s9                                 // 0000000112CC: 7E340209
  s_add_u32     s8, s0, 12                              // 0000000112D0: 80088C00
  s_addc_u32    s9, s1, 0                               // 0000000112D4: 82098001
  flat_load_dword  v11, v[27:28]                        // 0000000112D8: DC300000 0B00001B
  v_mov_b32     v30, s8                                 // 0000000112E0: 7E3C0208
  v_mov_b32     v31, s9                                 // 0000000112E4: 7E3E0209
  s_add_u32     s8, s0, 16                              // 0000000112E8: 80089000
  s_addc_u32    s9, s1, 0                               // 0000000112EC: 82098001
  flat_load_dword  v23, v[23:24]                        // 0000000112F0: DC300000 17000017
  v_mov_b32     v32, s8                                 // 0000000112F8: 7E400208
  v_mov_b32     v33, s9                                 // 0000000112FC: 7E420209
  s_add_u32     s8, s0, 20                              // 000000011300: 80089400
  s_addc_u32    s9, s1, 0                               // 000000011304: 82098001
  flat_load_dword  v25, v[25:26]                        // 000000011308: DC300000 19000019
  v_mov_b32     v34, s8                                 // 000000011310: 7E440208
  v_mov_b32     v35, s9                                 // 000000011314: 7E460209
  s_add_u32     s8, s0, 24                              // 000000011318: 80089800
  s_addc_u32    s9, s1, 0                               // 00000001131C: 82098001
  flat_load_dword  v22, v[30:31]                        // 000000011320: DC300000 1600001E
  v_mov_b32     v36, s8                                 // 000000011328: 7E480208
  v_mov_b32     v37, s9                                 // 00000001132C: 7E4A0209
  s_add_u32     s8, s0, 28                              // 000000011330: 80089C00
  s_addc_u32    s9, s1, 0                               // 000000011334: 82098001
  flat_load_dword  v24, v[32:33]                        // 000000011338: DC300000 18000020
  v_mov_b32     v30, s8                                 // 000000011340: 7E3C0208
  v_mov_b32     v31, s9                                 // 000000011344: 7E3E0209
  s_add_u32     s0, s0, 32                              // 000000011348: 8000A000
  s_addc_u32    s1, s1, 0                               // 00000001134C: 82018001
  flat_load_dword  v26, v[34:35]                        // 000000011350: DC300000 1A000022
  v_mov_b32     v32, s0                                 // 000000011358: 7E400200
  v_mov_b32     v33, s1                                 // 00000001135C: 7E420201
  flat_load_dword  v27, v[36:37]                        // 000000011360: DC300000 1B000024
  flat_load_dword  v28, v[30:31]                        // 000000011368: DC300000 1C00001E
  flat_load_dword  v29, v[32:33]                        // 000000011370: DC300000 1D000020
  s_waitcnt     vmcnt(8) & lgkmcnt(8)                   // 000000011378: BF8C0878
  v_mul_f32     v5, v11, v5                             // 00000001137C: 100A0B0B
  v_mul_f32     v7, v11, v7                             // 000000011380: 100E0F0B
  v_cmp_gt_i32  vcc, 52, v2                             // 000000011384: 7D0804B4
  v_cndmask_b32  v5, v5, v7, vcc                        // 000000011388: 000A0F05
  s_waitcnt     vmcnt(7) & lgkmcnt(7)                   // 00000001138C: BF8C0777
  v_mul_f32     v7, v23, v9                             // 000000011390: 100E1317
  v_mul_f32     v9, v23, v15                            // 000000011394: 10121F17
  v_cmp_lt_i32  s[0:1], v2, 51                          // 000000011398: D1020000 00016702
  s_waitcnt     vmcnt(6) & lgkmcnt(6)                   // 0000000113A0: BF8C0676
  v_mul_f32     v8, v25, v8                             // 0000000113A4: 10101119
  v_mul_f32     v11, v25, v16                           // 0000000113A8: 10162119
  v_cmp_gt_i32  vcc, 50, v2                             // 0000000113AC: 7D0804B2
  v_cndmask_b32  v7, v7, v9, s[0:1]                     // 0000000113B0: D2000007 00021307
  v_add_f32     v5, 0, v5                               // 0000000113B8: 060A0A80
  v_cndmask_b32  v8, v8, v11, vcc                       // 0000000113BC: 00101708
  s_waitcnt     vmcnt(5) & lgkmcnt(5)                   // 0000000113C0: BF8C0575
  v_mul_f32     v9, v22, v10                            // 0000000113C4: 10121516
  v_mul_f32     v10, v22, v17                           // 0000000113C8: 10142316
  v_cmp_gt_i32  vcc, 44, v2                             // 0000000113CC: 7D0804AC
  v_add_f32     v5, v5, v7                              // 0000000113D0: 060A0F05
  s_waitcnt     vmcnt(4) & lgkmcnt(4)                   // 0000000113D4: BF8C0474
  v_mul_f32     v4, v24, v4                             // 0000000113D8: 10080918
  v_mul_f32     v7, v24, v18                            // 0000000113DC: 100E2518
  v_cmp_lt_i32  s[0:1], v2, 43                          // 0000000113E0: D1020000 00015702
  v_cndmask_b32  v9, v9, v10, vcc                       // 0000000113E8: 00121509
  v_add_f32     v5, v5, v8                              // 0000000113EC: 060A1105
  s_load_dwordx2  s[6:7], s[6:7], 0x04                  // 0000000113F0: C0430704
  s_waitcnt     vmcnt(3) & lgkmcnt(0)                   // 0000000113F4: BF8C0073
  v_mul_f32     v8, v26, v14                            // 0000000113F8: 10101D1A
  v_mul_f32     v10, v26, v19                           // 0000000113FC: 1014271A
  v_cmp_lt_i32  s[8:9], v2, 42                          // 000000011400: D1020008 00015502
  v_cndmask_b32  v4, v4, v7, s[0:1]                     // 000000011408: D2000004 00020F04
  v_add_f32     v5, v5, v9                              // 000000011410: 060A1305
  v_mul_lo_u32  v1, v1, s4                              // 000000011414: D2D20001 00000901
  s_waitcnt     vmcnt(2)                                // 00000001141C: BF8C0F72
  v_mul_f32     v7, v27, v13                            // 000000011420: 100E1B1B
  v_mul_f32     v9, v27, v20                            // 000000011424: 1012291B
  v_cmp_lt_i32  s[0:1], v2, 36                          // 000000011428: D1020000 00014902
  v_cndmask_b32  v8, v8, v10, s[8:9]                    // 000000011430: D2000008 00221508
  v_add_f32     v4, v5, v4                              // 000000011438: 06080905
  v_add_i32     v10, vcc, v1, v0                        // 00000001143C: 4A140101
  v_cndmask_b32  v1, v7, v9, s[0:1]                     // 000000011440: D2000001 00021307
  s_waitcnt     vmcnt(1)                                // 000000011448: BF8C0F71
  v_mul_f32     v5, v28, v12                            // 00000001144C: 100A191C
  v_mul_f32     v7, v28, v21                            // 000000011450: 100E2B1C
  v_cmp_gt_i32  vcc, 35, v2                             // 000000011454: 7D0804A3
  v_add_f32     v4, v4, v8                              // 000000011458: 06081104
  v_ashrrev_i32  v11, 31, v10                           // 00000001145C: 3016149F
  v_cndmask_b32  v5, v5, v7, vcc                        // 000000011460: 000A0F05
  s_waitcnt     vmcnt(0)                                // 000000011464: BF8C0F70
  v_mul_f32     v3, v29, v3                             // 000000011468: 1006071D
  v_mul_f32     v6, v29, v6                             // 00000001146C: 100C0D1D
  v_cmp_gt_i32  vcc, 34, v2                             // 000000011470: 7D0804A2
  v_add_f32     v1, v4, v1                              // 000000011474: 06020304
  v_cndmask_b32  v2, v3, v6, vcc                        // 000000011478: 00040D03
  v_lshl_b64    v[3:4], v[10:11], 2                     // 00000001147C: D2C20003 0001050A
  v_add_f32     v0, v1, v5                              // 000000011484: 06000B01
  v_add_i32     v5, vcc, s6, v3                         // 000000011488: 4A0A0606
  v_mov_b32     v3, s7                                  // 00000001148C: 7E060207
  v_addc_u32    v6, vcc, v3, v4, vcc                    // 000000011490: 500C0903
  v_add_f32     v0, v0, v2                              // 000000011494: 06000500
  flat_store_dword  v[5:6], v0                          // 000000011498: DC700000 00000005
  label_4528:
  s_endpgm                                              // 0000000114A0: BF810000
  //
  // padding (0000000114a4 - 000000011500)
  //
  //
  // amd_kernel_code_t for &ZZ14Stencil_Hcc_SmRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__119__cxxamp_trampolineEPfiiS4_iiS4_iiiii (000000011500 - 000000011600)
  //
  //
  // &ZZ14Stencil_Hcc_SmRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__119__cxxamp_trampolineEPfiiS4_iiS4_iiiii:
  //
  s_load_dword  s0, s[4:5], 0x01                        // 000000011600: C0000501
  s_mov_b32     m0, 0x00010000                          // 000000011604: BEFC03FF 00010000
  s_waitcnt     lgkmcnt(0)                              // 00000001160C: BF8C007F
  s_and_b32     s1, s0, 0x0000ffff                      // 000000011610: 8701FF00 0000FFFF
  s_bfe_u32     s0, s0, 0x00100010                      // 000000011618: 9380FF00 00100010
  s_mul_i32     s1, s1, s8                              // 000000011620: 93010801
  s_mul_i32     s0, s0, s9                              // 000000011624: 93000900
  s_load_dwordx2  s[2:3], s[6:7], 0x0c                  // 000000011628: C041070C
  s_waitcnt     lgkmcnt(0)                              // 00000001162C: BF8C007F
  s_add_u32     s0, s0, s2                              // 000000011630: 80000200
  s_lshl_b32    s4, s2, 1                               // 000000011634: 8F048102
  v_add_i32     v2, vcc, s0, v1                         // 000000011638: 4A040200
  s_add_u32     s0, s4, s3                              // 00000001163C: 80000304
  s_add_u32     s1, s1, s2                              // 000000011640: 80010201
  s_load_dwordx2  s[8:9], s[6:7], 0x00                  // 000000011644: C0440700
  v_mul_lo_u32  v3, v2, s0                              // 000000011648: D2D20003 00000102
  v_add_i32     v4, vcc, s1, v0                         // 000000011650: 4A080001
  v_add_i32     v14, vcc, v3, v4                        // 000000011654: 4A1C0903
  v_ashrrev_i32  v15, 31, v14                           // 000000011658: 301E1C9F
  v_lshl_b64    v[5:6], v[14:15], 2                     // 00000001165C: D2C20005 0001050E
  s_waitcnt     lgkmcnt(0)                              // 000000011664: BF8C007F
  v_add_i32     v7, vcc, s8, v5                         // 000000011668: 4A0E0A08
  v_mov_b32     v8, s9                                  // 00000001166C: 7E100209
  v_addc_u32    v8, vcc, v8, v6, vcc                    // 000000011670: 50100D08
  flat_load_dword  v7, v[7:8]                           // 000000011674: DC300000 07000007
  v_add_i32     v8, vcc, s2, v1                         // 00000001167C: 4A100202
  s_add_u32     s1, s4, 16                              // 000000011680: 80019004
  v_add_i32     v9, vcc, s2, v0                         // 000000011684: 4A120002
  v_mul_lo_u32  v10, v8, s1                             // 000000011688: D2D2000A 00000308
  v_add_i32     v11, vcc, v10, v9                       // 000000011690: 4A16130A
  v_lshlrev_b32  v11, 2, v11                            // 000000011694: 34161682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000011698: BF8C0070
  ds_write_b32  v11, v7                                 // 00000001169C: D8340000 0000070B
  v_cmp_eq_i32  vcc, 0, v0                              // 0000000116A4: 7D040080
  s_and_saveexec_b64  s[10:11], vcc                     // 0000000116A8: BE8A246A
  v_add_i32     v12, vcc, -1, v14                       // 0000000116AC: 4A181CC1
  s_cbranch_execz  label_45BB                           // 0000000116B0: BF88000E
  v_ashrrev_i32  v13, 31, v12                           // 0000000116B4: 301A189F
  v_lshl_b64    v[12:13], v[12:13], 2                   // 0000000116B8: D2C2000C 0001050C
  v_add_i32     v15, vcc, s8, v12                       // 0000000116C0: 4A1E1808
  v_mov_b32     v12, s9                                 // 0000000116C4: 7E180209
  v_addc_u32    v16, vcc, v12, v13, vcc                 // 0000000116C8: 50201B0C
  flat_load_dword  v7, v[15:16]                         // 0000000116CC: DC300000 0700000F
  v_add_i32     v12, vcc, s2, v10                       // 0000000116D4: 4A181402
  v_lshlrev_b32  v12, 2, v12                            // 0000000116D8: 34181882
  v_add_i32     v12, vcc, -4, v12                       // 0000000116DC: 4A1818C4
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000116E0: BF8C0070
  ds_write_b32  v12, v7                                 // 0000000116E4: D8340000 0000070C
  label_45BB:
  s_mov_b64     exec, s[10:11]                          // 0000000116EC: BEFE040A
  v_cmp_eq_i32  vcc, 16, v9                             // 0000000116F0: 7D041290
  s_and_b64     exec, s[10:11], vcc                     // 0000000116F4: 87FE6A0A
  v_add_i32     v12, vcc, 1, v14                        // 0000000116F8: 4A181C81
  s_cbranch_execz  label_45CC                           // 0000000116FC: BF88000C
  v_ashrrev_i32  v13, 31, v12                           // 000000011700: 301A189F
  v_lshl_b64    v[12:13], v[12:13], 2                   // 000000011704: D2C2000C 0001050C
  v_add_i32     v12, vcc, s8, v12                       // 00000001170C: 4A181808
  v_mov_b32     v7, s9                                  // 000000011710: 7E0E0209
  v_addc_u32    v13, vcc, v7, v13, vcc                  // 000000011714: 501A1B07
  flat_load_dword  v3, v[12:13]                         // 000000011718: DC300000 0300000C
  v_lshlrev_b32  v7, 2, v10                             // 000000011720: 340E1482
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000011724: BF8C0070
  ds_write_b32  v7, v3 offset:68                        // 000000011728: D8340044 00000307
  label_45CC:
  s_mov_b64     exec, s[10:11]                          // 000000011730: BEFE040A
  v_cmp_eq_i32  vcc, 0, v1                              // 000000011734: 7D040280
  s_and_b64     exec, s[10:11], vcc                     // 000000011738: 87FE6A0A
  v_add_i32     v3, vcc, -1, v2                         // 00000001173C: 4A0604C1
  s_cbranch_execz  label_45E3                           // 000000011740: BF880012
  v_mul_lo_u32  v3, v3, s0                              // 000000011744: D2D20003 00000103
  v_add_i32     v12, vcc, v3, v4                        // 00000001174C: 4A180903
  v_ashrrev_i32  v13, 31, v12                           // 000000011750: 301A189F
  v_lshl_b64    v[12:13], v[12:13], 2                   // 000000011754: D2C2000C 0001050C
  v_add_i32     v12, vcc, s8, v12                       // 00000001175C: 4A181808
  v_mov_b32     v7, s9                                  // 000000011760: 7E0E0209
  v_addc_u32    v13, vcc, v7, v13, vcc                  // 000000011764: 501A1B07
  flat_load_dword  v3, v[12:13]                         // 000000011768: DC300000 0300000C
  s_add_u32     s5, s2, -1                              // 000000011770: 8005C102
  s_mul_i32     s5, s1, s5                              // 000000011774: 93050501
  v_add_i32     v7, vcc, s5, v9                         // 000000011778: 4A0E1205
  v_lshlrev_b32  v7, 2, v7                              // 00000001177C: 340E0E82
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000011780: BF8C0070
  ds_write_b32  v7, v3                                  // 000000011784: D8340000 00000307
  label_45E3:
  s_mov_b64     exec, s[10:11]                          // 00000001178C: BEFE040A
  v_cmp_eq_i32  vcc, 16, v8                             // 000000011790: 7D041090
  s_and_b64     exec, s[10:11], vcc                     // 000000011794: 87FE6A0A
  v_add_i32     v3, vcc, 1, v2                          // 000000011798: 4A060481
  s_cbranch_execz  label_45F9                           // 00000001179C: BF880011
  v_mul_lo_u32  v3, v3, s0                              // 0000000117A0: D2D20003 00000103
  v_add_i32     v12, vcc, v3, v4                        // 0000000117A8: 4A180903
  v_ashrrev_i32  v13, 31, v12                           // 0000000117AC: 301A189F
  v_lshl_b64    v[12:13], v[12:13], 2                   // 0000000117B0: D2C2000C 0001050C
  v_add_i32     v12, vcc, s8, v12                       // 0000000117B8: 4A181808
  v_mov_b32     v7, s9                                  // 0000000117BC: 7E0E0209
  v_addc_u32    v13, vcc, v7, v13, vcc                  // 0000000117C0: 501A1B07
  flat_load_dword  v3, v[12:13]                         // 0000000117C4: DC300000 0300000C
  s_mul_i32     s5, s4, 17                              // 0000000117CC: 93059104
  v_add_i32     v7, vcc, s5, v9                         // 0000000117D0: 4A0E1205
  v_lshlrev_b32  v7, 2, v7                              // 0000000117D4: 340E0E82
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000117D8: BF8C0070
  ds_write_b32  v7, v3 offset:1088                      // 0000000117DC: D8340440 00000307
  label_45F9:
  s_mov_b64     exec, s[10:11]                          // 0000000117E4: BEFE040A
  v_cmp_eq_i32  s[12:13], v0, 0                         // 0000000117E8: D104000C 00010100
  v_cmp_eq_i32  s[14:15], v8, 16                        // 0000000117F0: D104000E 00012108
  v_or_b32      v0, v0, v1                              // 0000000117F8: 38000300
  v_cmp_eq_i32  vcc, 0, v0                              // 0000000117FC: 7D040080
  s_and_b64     exec, s[10:11], vcc                     // 000000011800: 87FE6A0A
  v_add_i32     v0, vcc, -1, v2                         // 000000011804: 4A0004C1
  s_cbranch_execz  label_4617                           // 000000011808: BF880014
  v_mul_lo_u32  v0, v0, s0                              // 00000001180C: D2D20000 00000100
  v_add_i32     v0, vcc, v4, v0                         // 000000011814: 4A000104
  v_add_i32     v12, vcc, -1, v0                        // 000000011818: 4A1800C1
  v_ashrrev_i32  v13, 31, v12                           // 00000001181C: 301A189F
  v_lshl_b64    v[12:13], v[12:13], 2                   // 000000011820: D2C2000C 0001050C
  v_add_i32     v12, vcc, s8, v12                       // 000000011828: 4A181808
  v_mov_b32     v3, s9                                  // 00000001182C: 7E060209
  v_addc_u32    v13, vcc, v3, v13, vcc                  // 000000011830: 501A1B03
  flat_load_dword  v0, v[12:13]                         // 000000011834: DC300000 0000000C
  s_add_u32     s5, s2, -1                              // 00000001183C: 8005C102
  s_mul_i32     s16, s1, s5                             // 000000011840: 93100501
  s_add_u32     s5, s16, s5                             // 000000011844: 80050510
  s_lshl_b32    s5, s5, 2                               // 000000011848: 8F058205
  v_mov_b32     v3, s5                                  // 00000001184C: 7E060205
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000011850: BF8C0070
  ds_write_b32  v3, v0                                  // 000000011854: D8340000 00000003
  label_4617:
  s_mov_b64     exec, s[10:11]                          // 00000001185C: BEFE040A
  v_cmp_eq_i32  s[10:11], v9, 16                        // 000000011860: D104000A 00012109
  s_and_b64     s[12:13], s[12:13], s[14:15]            // 000000011868: 878C0E0C
  s_and_saveexec_b64  s[12:13], s[12:13]                // 00000001186C: BE8C240C
  v_add_i32     v0, vcc, 1, v2                          // 000000011870: 4A000481
  s_cbranch_execz  label_4631                           // 000000011874: BF880013
  v_mul_lo_u32  v0, v0, s0                              // 000000011878: D2D20000 00000100
  v_add_i32     v0, vcc, v4, v0                         // 000000011880: 4A000104
  v_add_i32     v12, vcc, -1, v0                        // 000000011884: 4A1800C1
  v_ashrrev_i32  v13, 31, v12                           // 000000011888: 301A189F
  v_lshl_b64    v[12:13], v[12:13], 2                   // 00000001188C: D2C2000C 0001050C
  v_add_i32     v12, vcc, s8, v12                       // 000000011894: 4A181808
  v_mov_b32     v3, s9                                  // 000000011898: 7E060209
  v_addc_u32    v13, vcc, v3, v13, vcc                  // 00000001189C: 501A1B03
  flat_load_dword  v0, v[12:13]                         // 0000000118A0: DC300000 0000000C
  s_mul_i32     s5, s4, 17                              // 0000000118A8: 93059104
  s_add_u32     s5, s5, s2                              // 0000000118AC: 80050205
  s_lshl_b32    s5, s5, 2                               // 0000000118B0: 8F058205
  v_mov_b32     v3, s5                                  // 0000000118B4: 7E060205
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000118B8: BF8C0070
  ds_write_b32  v3, v0 offset:1084                      // 0000000118BC: D834043C 00000003
  label_4631:
  s_mov_b64     exec, s[12:13]                          // 0000000118C4: BEFE040C
  s_and_saveexec_b64  s[10:11], s[10:11]                // 0000000118C8: BE8A240A
  s_cbranch_execz  label_4661                           // 0000000118CC: BF88002D
  v_cmp_eq_i32  s[12:13], v1, 0                         // 0000000118D0: D104000C 00010101
  s_and_saveexec_b64  s[12:13], s[12:13]                // 0000000118D8: BE8C240C
  v_add_i32     v0, vcc, -1, v2                         // 0000000118DC: 4A0004C1
  s_cbranch_execz  label_464C                           // 0000000118E0: BF880013
  v_mul_lo_u32  v0, v0, s0                              // 0000000118E4: D2D20000 00000100
  v_add_i32     v0, vcc, v4, v0                         // 0000000118EC: 4A000104
  v_add_i32     v0, vcc, 1, v0                          // 0000000118F0: 4A000081
  v_ashrrev_i32  v1, 31, v0                             // 0000000118F4: 3002009F
  v_lshl_b64    v[0:1], v[0:1], 2                       // 0000000118F8: D2C20000 00010500
  v_add_i32     v0, vcc, s8, v0                         // 000000011900: 4A000008
  v_mov_b32     v3, s9                                  // 000000011904: 7E060209
  v_addc_u32    v1, vcc, v3, v1, vcc                    // 000000011908: 50020303
  flat_load_dword  v0, v[0:1]                           // 00000001190C: DC300000 00000000
  s_add_u32     s5, s2, -1                              // 000000011914: 8005C102
  s_mul_i32     s5, s1, s5                              // 000000011918: 93050501
  s_lshl_b32    s5, s5, 2                               // 00000001191C: 8F058205
  v_mov_b32     v1, s5                                  // 000000011920: 7E020205
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000011924: BF8C0070
  ds_write_b32  v1, v0 offset:68                        // 000000011928: D8340044 00000001
  label_464C:
  s_mov_b64     exec, s[12:13]                          // 000000011930: BEFE040C
  s_and_saveexec_b64  s[12:13], s[14:15]                // 000000011934: BE8C240E
  v_add_i32     v0, vcc, 1, v2                          // 000000011938: 4A000481
  s_cbranch_execz  label_4661                           // 00000001193C: BF880011
  v_mul_lo_u32  v0, v0, s0                              // 000000011940: D2D20000 00000100
  v_add_i32     v0, vcc, v4, v0                         // 000000011948: 4A000104
  v_add_i32     v0, vcc, 1, v0                          // 00000001194C: 4A000081
  v_ashrrev_i32  v1, 31, v0                             // 000000011950: 3002009F
  v_lshl_b64    v[0:1], v[0:1], 2                       // 000000011954: D2C20000 00010500
  v_add_i32     v0, vcc, s8, v0                         // 00000001195C: 4A000008
  v_mov_b32     v3, s9                                  // 000000011960: 7E060209
  v_addc_u32    v1, vcc, v3, v1, vcc                    // 000000011964: 50020303
  flat_load_dword  v0, v[0:1]                           // 000000011968: DC300000 00000000
  s_mulk_i32    s4, 0x0044                              // 000000011970: B8040044
  v_mov_b32     v1, s4                                  // 000000011974: 7E020204
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000011978: BF8C0070
  ds_write_b32  v1, v0 offset:1156                      // 00000001197C: D8340484 00000001
  label_4661:
  s_mov_b64     exec, s[10:11]                          // 000000011984: BEFE040A
  s_load_dword  s0, s[6:7], 0x0e                        // 000000011988: C000070E
  s_waitcnt     lgkmcnt(0)                              // 00000001198C: BF8C007F
  s_add_u32     s0, s0, s2                              // 000000011990: 80000200
  s_add_u32     s2, s3, s2                              // 000000011994: 80020203
  v_cmp_lt_i32  s[2:3], v4, s2                          // 000000011998: D1020002 00000504
  v_cmp_gt_i32  vcc, s0, v2                             // 0000000119A0: 7D080400
  s_and_b64     vcc, vcc, s[2:3]                        // 0000000119A4: 87EA026A
  s_xor_b64     vcc, vcc, -1                            // 0000000119A8: 89EAC16A
  s_barrier                                             // 0000000119AC: BF8A0000
  s_mov_b64     s[2:3], exec                            // 0000000119B0: BE82047E
  s_andn2_b64   exec, s[2:3], vcc                       // 0000000119B4: 8AFE6A02
  s_cbranch_execz  label_46D6                           // 0000000119B8: BF880067
  s_load_dwordx2  s[4:5], s[6:7], 0x08                  // 0000000119BC: C0420708
  s_waitcnt     lgkmcnt(0)                              // 0000000119C0: BF8C007F
  s_add_u32     s8, s4, 4                               // 0000000119C4: 80088404
  s_addc_u32    s9, s5, 0                               // 0000000119C8: 82098005
  v_mov_b32     v0, s8                                  // 0000000119CC: 7E000208
  v_mov_b32     v1, s9                                  // 0000000119D0: 7E020209
  v_mov_b32     v2, s4                                  // 0000000119D4: 7E040204
  v_mov_b32     v3, s5                                  // 0000000119D8: 7E060205
  s_add_u32     s8, s4, 8                               // 0000000119DC: 80088804
  s_addc_u32    s9, s5, 0                               // 0000000119E0: 82098005
  s_add_u32     s10, s4, 12                             // 0000000119E4: 800A8C04
  s_addc_u32    s11, s5, 0                              // 0000000119E8: 820B8005
  v_mov_b32     v13, s8                                 // 0000000119EC: 7E1A0208
  v_mov_b32     v14, s9                                 // 0000000119F0: 7E1C0209
  flat_load_dword  v0, v[0:1]                           // 0000000119F4: DC300000 00000000
  s_add_u32     s8, s4, 16                              // 0000000119FC: 80089004
  s_addc_u32    s9, s5, 0                               // 000000011A00: 82098005
  v_mov_b32     v15, s10                                // 000000011A04: 7E1E020A
  v_mov_b32     v16, s11                                // 000000011A08: 7E20020B
  flat_load_dword  v2, v[2:3]                           // 000000011A0C: DC300000 02000002
  v_mov_b32     v17, s8                                 // 000000011A14: 7E220208
  v_mov_b32     v18, s9                                 // 000000011A18: 7E240209
  s_add_u32     s8, s4, 20                              // 000000011A1C: 80089404
  s_addc_u32    s9, s5, 0                               // 000000011A20: 82098005
  flat_load_dword  v4, v[13:14]                         // 000000011A24: DC300000 0400000D
  s_add_u32     s10, s4, 24                             // 000000011A2C: 800A9804
  s_addc_u32    s11, s5, 0                              // 000000011A30: 820B8005
  v_mov_b32     v19, s8                                 // 000000011A34: 7E260208
  v_mov_b32     v20, s9                                 // 000000011A38: 7E280209
  flat_load_dword  v1, v[15:16]                         // 000000011A3C: DC300000 0100000F
  v_mov_b32     v21, s10                                // 000000011A44: 7E2A020A
  v_mov_b32     v22, s11                                // 000000011A48: 7E2C020B
  s_add_u32     s8, s4, 28                              // 000000011A4C: 80089C04
  s_addc_u32    s9, s5, 0                               // 000000011A50: 82098005
  flat_load_dword  v3, v[17:18]                         // 000000011A54: DC300000 03000011
  s_add_u32     s4, s4, 32                              // 000000011A5C: 8004A004
  s_addc_u32    s5, s5, 0                               // 000000011A60: 82058005
  v_mov_b32     v14, s8                                 // 000000011A64: 7E1C0208
  v_mov_b32     v15, s9                                 // 000000011A68: 7E1E0209
  flat_load_dword  v7, v[19:20]                         // 000000011A6C: DC300000 07000013
  v_mov_b32     v16, s4                                 // 000000011A74: 7E200204
  v_mov_b32     v17, s5                                 // 000000011A78: 7E220205
  flat_load_dword  v10, v[21:22]                        // 000000011A7C: DC300000 0A000015
  flat_load_dword  v12, v[14:15]                        // 000000011A84: DC300000 0C00000E
  flat_load_dword  v13, v[16:17]                        // 000000011A8C: DC300000 0D000010
  v_add_i32     v14, vcc, -1, v8                        // 000000011A94: 4A1C10C1
  v_add_i32     v8, vcc, 1, v8                          // 000000011A98: 4A101081
  v_mul_lo_u32  v14, v14, s1                            // 000000011A9C: D2D2000E 0000030E
  v_mul_lo_u32  v8, v8, s1                              // 000000011AA4: D2D20008 00000308
  v_add_i32     v14, vcc, v14, v9                       // 000000011AAC: 4A1C130E
  v_lshlrev_b32  v14, 2, v14                            // 000000011AB0: 341C1C82
  v_add_i32     v8, vcc, v9, v8                         // 000000011AB4: 4A101109
  v_add_i32     v9, vcc, -4, v11                        // 000000011AB8: 4A1216C4
  v_add_i32     v15, vcc, -4, v14                       // 000000011ABC: 4A1E1CC4
  v_lshlrev_b32  v8, 2, v8                              // 000000011AC0: 34101082
  ds_read_b32   v9, v9                                  // 000000011AC4: D8D80000 09000009
  v_add_i32     v16, vcc, -4, v8                        // 000000011ACC: 4A2010C4
  ds_read_b32   v15, v15                                // 000000011AD0: D8D80000 0F00000F
  ds_read_b32   v16, v16                                // 000000011AD8: D8D80000 10000010
  ds_read2_b32  v[17:18], v14 offset1:1                 // 000000011AE0: D8DC0100 1100000E
  ds_read2_b32  v[19:20], v11 offset1:1                 // 000000011AE8: D8DC0100 1300000B
  ds_read2_b32  v[21:22], v8 offset0:1                  // 000000011AF0: D8DC0001 15000008
  s_waitcnt     vmcnt(8) & lgkmcnt(5)                   // 000000011AF8: BF8C0578
  v_mul_f32     v0, v0, v9                              // 000000011AFC: 10001300
  s_waitcnt     vmcnt(7) & lgkmcnt(4)                   // 000000011B00: BF8C0477
  v_mac_f32     v0, v2, v15                             // 000000011B04: 3E001F02
  s_waitcnt     vmcnt(6) & lgkmcnt(3)                   // 000000011B08: BF8C0376
  v_mac_f32     v0, v4, v16                             // 000000011B0C: 3E002104
  s_load_dwordx2  s[0:1], s[6:7], 0x04                  // 000000011B10: C0400704
  s_waitcnt     vmcnt(5) & lgkmcnt(0)                   // 000000011B14: BF8C0075
  v_mac_f32     v0, v1, v17                             // 000000011B18: 3E002301
  s_waitcnt     vmcnt(4)                                // 000000011B1C: BF8C0F74
  v_mac_f32     v0, v3, v19                             // 000000011B20: 3E002703
  s_waitcnt     vmcnt(3)                                // 000000011B24: BF8C0F73
  v_mac_f32     v0, v7, v22                             // 000000011B28: 3E002D07
  s_waitcnt     vmcnt(2)                                // 000000011B2C: BF8C0F72
  v_mac_f32     v0, v10, v18                            // 000000011B30: 3E00250A
  s_waitcnt     vmcnt(1)                                // 000000011B34: BF8C0F71
  v_mac_f32     v0, v12, v20                            // 000000011B38: 3E00290C
  v_add_i32     v1, vcc, s0, v5                         // 000000011B3C: 4A020A00
  v_mov_b32     v2, s1                                  // 000000011B40: 7E040201
  v_addc_u32    v2, vcc, v2, v6, vcc                    // 000000011B44: 50040D02
  s_waitcnt     vmcnt(0)                                // 000000011B48: BF8C0F70
  v_mac_f32     v0, v13, v21                            // 000000011B4C: 3E002B0D
  flat_store_dword  v[1:2], v0                          // 000000011B50: DC700000 00000001
  label_46D6:
  s_endpgm                                              // 000000011B58: BF810000
  //
  // padding (000000011b5c - 000000011c00)
  //
  //
  // amd_kernel_code_t for &ZZ11Stencil_HccRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__019__cxxamp_trampolineEPfiiS4_iiS4_iiiii (000000011c00 - 000000011d00)
  //
  //
  // &ZZ11Stencil_HccRN2hc5arrayIfLi1EEES2_S2_iiiEN3_EC__019__cxxamp_trampolineEPfiiS4_iiS4_iiiii:
  //
  s_load_dword  s0, s[4:5], 0x01                        // 000000011D00: C0000501
  s_waitcnt     lgkmcnt(0)                              // 000000011D04: BF8C007F
  s_and_b32     s1, s0, 0x0000ffff                      // 000000011D08: 8701FF00 0000FFFF
  s_bfe_u32     s0, s0, 0x00100010                      // 000000011D10: 9380FF00 00100010
  s_mul_i32     s1, s1, s8                              // 000000011D18: 93010801
  s_mul_i32     s0, s0, s9                              // 000000011D1C: 93000900
  s_load_dwordx2  s[2:3], s[6:7], 0x0c                  // 000000011D20: C041070C
  s_load_dword  s4, s[6:7], 0x0e                        // 000000011D24: C002070E
  s_waitcnt     lgkmcnt(0)                              // 000000011D28: BF8C007F
  s_add_u32     s0, s0, s2                              // 000000011D2C: 80000200
  s_add_u32     s1, s1, s2                              // 000000011D30: 80010201
  s_add_u32     s3, s3, s2                              // 000000011D34: 80030203
  v_add_i32     v1, vcc, s0, v1                         // 000000011D38: 4A020200
  s_add_u32     s0, s4, s2                              // 000000011D3C: 80000204
  v_add_i32     v0, vcc, s1, v0                         // 000000011D40: 4A000001
  v_cmp_lt_i32  s[0:1], v0, s0                          // 000000011D44: D1020000 00000100
  v_cmp_gt_i32  vcc, s3, v1                             // 000000011D4C: 7D080203
  s_and_b64     s[0:1], vcc, s[0:1]                     // 000000011D50: 8780006A
  s_and_saveexec_b64  s[0:1], s[0:1]                    // 000000011D54: BE802400
  s_cbranch_execz  label_47F8                           // 000000011D58: BF8800A1
  s_lshl_b32    s2, s2, 1                               // 000000011D5C: 8F028102
  s_add_u32     s2, s2, s4                              // 000000011D60: 80020402
  v_mul_lo_u32  v2, v1, s2                              // 000000011D64: D2D20002 00000501
  v_add_i32     v3, vcc, -1, v1                         // 000000011D6C: 4A0602C1
  s_load_dwordx2  s[4:5], s[6:7], 0x00                  // 000000011D70: C0420700
  s_load_dwordx2  s[8:9], s[6:7], 0x08                  // 000000011D74: C0440708
  v_add_i32     v1, vcc, 1, v1                          // 000000011D78: 4A020281
  v_add_i32     v22, vcc, v2, v0                        // 000000011D7C: 4A2C0102
  v_mul_lo_u32  v3, v3, s2                              // 000000011D80: D2D20003 00000503
  v_mul_lo_u32  v1, v1, s2                              // 000000011D88: D2D20001 00000501
  v_add_i32     v8, vcc, -1, v22                        // 000000011D90: 4A102CC1
  v_add_i32     v19, vcc, v3, v0                        // 000000011D94: 4A260103
  v_add_i32     v0, vcc, v0, v1                         // 000000011D98: 4A000300
  v_ashrrev_i32  v9, 31, v8                             // 000000011D9C: 3012109F
  v_add_i32     v5, vcc, -1, v19                        // 000000011DA0: 4A0A26C1
  v_ashrrev_i32  v6, 31, v5                             // 000000011DA4: 300C0A9F
  v_add_i32     v14, vcc, -1, v0                        // 000000011DA8: 4A1C00C1
  v_lshl_b64    v[8:9], v[8:9], 2                       // 000000011DAC: D2C20008 00010508
  v_ashrrev_i32  v15, 31, v14                           // 000000011DB4: 301E1C9F
  s_waitcnt     lgkmcnt(0)                              // 000000011DB8: BF8C007F
  v_add_i32     v24, vcc, s4, v8                        // 000000011DBC: 4A301004
  v_mov_b32     v8, s5                                  // 000000011DC0: 7E100205
  v_addc_u32    v25, vcc, v8, v9, vcc                   // 000000011DC4: 50321308
  s_add_u32     s2, s8, 4                               // 000000011DC8: 80028408
  s_addc_u32    s3, s9, 0                               // 000000011DCC: 82038009
  v_lshl_b64    v[5:6], v[5:6], 2                       // 000000011DD0: D2C20005 00010505
  v_ashrrev_i32  v20, 31, v19                           // 000000011DD8: 3028269F
  v_ashrrev_i32  v23, 31, v22                           // 000000011DDC: 302E2C9F
  v_mov_b32     v12, s2                                 // 000000011DE0: 7E180202
  v_mov_b32     v13, s3                                 // 000000011DE4: 7E1A0203
  v_add_i32     v5, vcc, s4, v5                         // 000000011DE8: 4A0A0A04
  v_addc_u32    v6, vcc, v8, v6, vcc                    // 000000011DEC: 500C0D08
  v_lshl_b64    v[14:15], v[14:15], 2                   // 000000011DF0: D2C2000E 0001050E
  v_ashrrev_i32  v1, 31, v0                             // 000000011DF8: 3002009F
  v_mov_b32     v26, s8                                 // 000000011DFC: 7E340208
  v_mov_b32     v27, s9                                 // 000000011E00: 7E360209
  s_add_u32     s2, s8, 8                               // 000000011E04: 80028808
  s_addc_u32    s3, s9, 0                               // 000000011E08: 82038009
  v_add_i32     v14, vcc, s4, v14                       // 000000011E0C: 4A1C1C04
  v_addc_u32    v15, vcc, v8, v15, vcc                  // 000000011E10: 501E1F08
  v_lshl_b64    v[17:18], v[19:20], 2                   // 000000011E14: D2C20011 00010513
  v_add_i32     v28, vcc, 1, v19                        // 000000011E1C: 4A382681
  v_lshl_b64    v[10:11], v[22:23], 2                   // 000000011E20: D2C2000A 00010516
  s_add_u32     s10, s8, 12                             // 000000011E28: 800A8C08
  s_addc_u32    s11, s9, 0                              // 000000011E2C: 820B8009
  v_mov_b32     v19, s2                                 // 000000011E30: 7E260202
  v_mov_b32     v20, s3                                 // 000000011E34: 7E280203
  v_add_i32     v17, vcc, s4, v17                       // 000000011E38: 4A222204
  v_addc_u32    v18, vcc, v8, v18, vcc                  // 000000011E3C: 50242508
  v_ashrrev_i32  v29, 31, v28                           // 000000011E40: 303A389F
  v_add_i32     v30, vcc, 1, v22                        // 000000011E44: 4A3C2C81
  flat_load_dword  v12, v[12:13]                        // 000000011E48: DC300000 0C00000C
  flat_load_dword  v4, v[24:25]                         // 000000011E50: DC300000 04000018
  v_add_i32     v34, vcc, 1, v0                         // 000000011E58: 4A440081
  v_lshl_b64    v[0:1], v[0:1], 2                       // 000000011E5C: D2C20000 00010500
  s_add_u32     s2, s8, 16                              // 000000011E64: 80029008
  s_addc_u32    s3, s9, 0                               // 000000011E68: 82038009
  v_mov_b32     v32, s10                                // 000000011E6C: 7E40020A
  v_mov_b32     v33, s11                                // 000000011E70: 7E42020B
  v_add_i32     v23, vcc, s4, v10                       // 000000011E74: 4A2E1404
  v_addc_u32    v24, vcc, v8, v11, vcc                  // 000000011E78: 50301708
  v_ashrrev_i32  v31, 31, v30                           // 000000011E7C: 303E3C9F
  flat_load_dword  v7, v[26:27]                         // 000000011E80: DC300000 0700001A
  flat_load_dword  v5, v[5:6]                           // 000000011E88: DC300000 05000005
  v_ashrrev_i32  v35, 31, v34                           // 000000011E90: 3046449F
  s_add_u32     s10, s8, 20                             // 000000011E94: 800A9408
  s_addc_u32    s11, s9, 0                              // 000000011E98: 820B8009
  v_mov_b32     v36, s2                                 // 000000011E9C: 7E480202
  v_mov_b32     v37, s3                                 // 000000011EA0: 7E4A0203
  v_add_i32     v0, vcc, s4, v0                         // 000000011EA4: 4A000004
  v_addc_u32    v1, vcc, v8, v1, vcc                    // 000000011EA8: 50020308
  v_lshl_b64    v[27:28], v[28:29], 2                   // 000000011EAC: D2C2001B 0001051C
  flat_load_dword  v3, v[19:20]                         // 000000011EB4: DC300000 03000013
  flat_load_dword  v14, v[14:15]                        // 000000011EBC: DC300000 0E00000E
  v_mov_b32     v38, s10                                // 000000011EC4: 7E4C020A
  v_mov_b32     v39, s11                                // 000000011EC8: 7E4E020B
  s_add_u32     s2, s8, 24                              // 000000011ECC: 80029808
  s_addc_u32    s3, s9, 0                               // 000000011ED0: 82038009
  v_add_i32     v20, vcc, s4, v27                       // 000000011ED4: 4A283604
  v_addc_u32    v21, vcc, v8, v28, vcc                  // 000000011ED8: 502A3908
  v_lshl_b64    v[27:28], v[30:31], 2                   // 000000011EDC: D2C2001B 0001051E
  flat_load_dword  v2, v[32:33]                         // 000000011EE4: DC300000 02000020
  flat_load_dword  v13, v[17:18]                        // 000000011EEC: DC300000 0D000011
  v_lshl_b64    v[17:18], v[34:35], 2                   // 000000011EF4: D2C20011 00010522
  v_mov_b32     v29, s2                                 // 000000011EFC: 7E3A0202
  v_mov_b32     v30, s3                                 // 000000011F00: 7E3C0203
  s_add_u32     s2, s8, 28                              // 000000011F04: 80029C08
  s_addc_u32    s3, s9, 0                               // 000000011F08: 82038009
  v_add_i32     v31, vcc, s4, v27                       // 000000011F0C: 4A3E3604
  v_addc_u32    v32, vcc, v8, v28, vcc                  // 000000011F10: 50403908
  flat_load_dword  v16, v[36:37]                        // 000000011F14: DC300000 10000024
  flat_load_dword  v23, v[23:24]                        // 000000011F1C: DC300000 17000017
  v_add_i32     v33, vcc, s4, v17                       // 000000011F24: 4A422204
  v_addc_u32    v34, vcc, v8, v18, vcc                  // 000000011F28: 50442508
  v_mov_b32     v26, s2                                 // 000000011F2C: 7E340202
  v_mov_b32     v27, s3                                 // 000000011F30: 7E360203
  s_add_u32     s2, s8, 32                              // 000000011F34: 8002A008
  s_addc_u32    s3, s9, 0                               // 000000011F38: 82038009
  flat_load_dword  v15, v[38:39]                        // 000000011F3C: DC300000 0F000026
  flat_load_dword  v0, v[0:1]                           // 000000011F44: DC300000 00000000
  v_mov_b32     v24, s2                                 // 000000011F4C: 7E300202
  v_mov_b32     v25, s3                                 // 000000011F50: 7E320203
  flat_load_dword  v6, v[29:30]                         // 000000011F54: DC300000 0600001D
  flat_load_dword  v9, v[20:21]                         // 000000011F5C: DC300000 09000014
  flat_load_dword  v18, v[26:27]                        // 000000011F64: DC300000 1200001A
  flat_load_dword  v20, v[31:32]                        // 000000011F6C: DC300000 1400001F
  flat_load_dword  v1, v[24:25]                         // 000000011F74: DC300000 01000018
  flat_load_dword  v8, v[33:34]                         // 000000011F7C: DC300000 08000021
  v_mul_f32     v4, v12, v4                             // 000000011F84: 1008090C
  s_waitcnt     vmcnt(14) & lgkmcnt(14)                 // 000000011F88: BF8C0E7E
  v_mac_f32     v4, v7, v5                              // 000000011F8C: 3E080B07
  s_waitcnt     vmcnt(12) & lgkmcnt(12)                 // 000000011F90: BF8C0C7C
  v_mac_f32     v4, v3, v14                             // 000000011F94: 3E081D03
  s_load_dwordx2  s[2:3], s[6:7], 0x04                  // 000000011F98: C0410704
  s_waitcnt     vmcnt(10) & lgkmcnt(0)                  // 000000011F9C: BF8C007A
  v_mac_f32     v4, v2, v13                             // 000000011FA0: 3E081B02
  s_waitcnt     vmcnt(8)                                // 000000011FA4: BF8C0F78
  v_mac_f32     v4, v16, v23                            // 000000011FA8: 3E082F10
  s_waitcnt     vmcnt(6)                                // 000000011FAC: BF8C0F76
  v_mac_f32     v4, v15, v0                             // 000000011FB0: 3E08010F
  s_waitcnt     vmcnt(4)                                // 000000011FB4: BF8C0F74
  v_mac_f32     v4, v6, v9                              // 000000011FB8: 3E081306
  s_waitcnt     vmcnt(2)                                // 000000011FBC: BF8C0F72
  v_mac_f32     v4, v18, v20                            // 000000011FC0: 3E082912
  v_add_i32     v5, vcc, s2, v10                        // 000000011FC4: 4A0A1402
  v_mov_b32     v2, s3                                  // 000000011FC8: 7E040203
  v_addc_u32    v6, vcc, v2, v11, vcc                   // 000000011FCC: 500C1702
  s_waitcnt     vmcnt(0)                                // 000000011FD0: BF8C0F70
  v_mac_f32     v4, v1, v8                              // 000000011FD4: 3E081101
  flat_store_dword  v[5:6], v4                          // 000000011FD8: DC700000 00000405
  label_47F8:
  s_endpgm                                              // 000000011FE0: BF810000
end

AMD HSA Code Object End
